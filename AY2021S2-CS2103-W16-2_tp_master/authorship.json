[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-W16-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-W16-2/tp/actions)","lastModifiedDate":"2021-02-23"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103-W16-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103-W16-2/tp)","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"# Cheese Inventory Management (CHIM)","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"**Cheese Inventory Management (CHIM)** is a desktop CLI app for managing the inventory of a cheese making business. It comes with features to manage data such as:","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"1) order details","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"1) cheese details","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"1) customer details","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"For the detailed documentation of this project, see the **[CHIM Product Website](https://ay2021s2-cs2103-w16-2.github.io/tp)**.","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"## Acknowledgements","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"This is an extension from the **AddressBook Level 3** project for Software Engineering (SE) students.","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"The project is a **part of the se-education.org** initiative. If you would like to contribute code to the project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"-":2,"aaronsms":16}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"mainClassName \u003d \u0027chim.Main\u0027","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"    archiveName \u003d \u0027chim.jar\u0027","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"run {","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"weixue123"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"weixue123":6,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-02-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"### Aaron Saw Min Sern","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"\u003cimg src\u003d\"images/aaronsms.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"[[github](https://github.com/aaronsms)]","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"[[portfolio](team/aaronsms.md)]","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"* Role: Developer","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"* Responsibilities: Software Testing","lastModifiedDate":"2021-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"### Daniel Lau Yew En","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"\u003cimg src\u003d\"images/daniellau88.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"[[github](http://github.com/daniellau88)]","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"[[portfolio](team/daniellau88.md)]","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"* Role: Developer","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"* Responsibilities: DevOps (CI)","lastModifiedDate":"2021-02-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"### Lauren Lee Hui Ying","lastModifiedDate":"2021-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"\u003cimg src\u003d\"images/laurenlhy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"[[github](http://github.com/laurenlhy)]","lastModifiedDate":"2021-02-21"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"[[portfolio](team/laurenlhy.md)]","lastModifiedDate":"2021-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"### Lim Li Quan","lastModifiedDate":"2021-02-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"\u003cimg src\u003d\"images/ahquanz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"[[github](http://github.com/ahquanz)]","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"[[portfolio](team/ahquanz.md)]","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-27"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"* Responsibilities: Software Testing","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"### Ng Wei Xue","lastModifiedDate":"2021-02-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"\u003cimg src\u003d\"images/weixue123.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"[[github](http://github.com/weixue123)]","lastModifiedDate":"2021-02-23"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"[[portfolio](team/weixue123.md)]","lastModifiedDate":"2021-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-23"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"* Responsibilities: UI Designer","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"AhQuanz":3,"laurenlhy":3,"daniellau88":13,"weixue123":3,"-":31,"aaronsms":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"\u003cimg src\u003d\"images/Architecture.png\" width\u003d\"500px\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"The **Architecture Diagram** given above explains the high-level design of the","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"App. Given below is a quick overview of each component.","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"`Main` has two classes called `Main` and `MainApp`. It is responsible for:","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"`Commons` represents a collection of classes used by multiple other components.","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"The rest of the App consists of four components:","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"* `UI`: The UI of the App.","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"* `Logic`: The command executor.","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"* `Model`: Holds the data of the App in memory.","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"* `Storage`: Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"* defines its API in an `interface` with the same name as the Component.","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"For example, the `Logic` component defines its API in `Logic.java` and exposes","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"its functionality using `LogicManager.java` which implements the `Logic` interface.","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"Similarly, we have `Model` interface and `ModelManager` class that implements","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"`Model`.","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"The Sequence Diagram below shows how the components interact with each other","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"\u003cimg src\u003d\"images/ArchitectureSequence.png\" width\u003d\"550px\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"**API**: [`Ui.java`](https://github.com/AY2021S2-CS2103-W16-2/tp/blob/master/src/main/java/chim/ui/Ui.java)","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StatusBarFooter` etc. All","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"The `UI` component uses the JavaFX UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"are in the `src/main/resources/view` folder. For example, the layout of the `MainWindow` is specified in","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"`MainWindow.fxml`.","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"The `UI` component:","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"* Executes users\u0027 commands using the `Logic` component.","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"* Any changes in `Model` data, i.e. customers, cheeses or orders data, are reflected through the `Panels` and `Cards`","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"weixue123"},"content":"  sub-components.","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"weixue123"},"content":"The class diagram below shows in more detail the compositions of the `Panels` and `Cards` components as well as their","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"weixue123"},"content":"relationships with other classes.","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"weixue123"},"content":"![Structure of the Panels \u0026 Cards Component](images/UiPanelsCardsClassDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"laurenlhy"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram_CHIM.png\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"weixue123"},"content":"**API**: [`Logic.java`](https://github.com/AY2021S2-CS2103-W16-2/tp/blob/master/src/main/java/chim/logic/Logic.java)","lastModifiedDate":"2021-04-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"weixue123"},"content":"1. `Logic` uses the `ChimParser` class to parse the user command.","lastModifiedDate":"2021-04-08"},{"lineNumber":89,"author":{"gitId":"laurenlhy"},"content":"2. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"laurenlhy"},"content":"3. The command execution can affect the `Model` (e.g. by adding customers, orders or cheeses).","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"laurenlhy"},"content":"4. The result of the command execution is encapsulated as a `CommandResult`","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"laurenlhy"},"content":"object which is passed back to the `Ui`.","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"laurenlhy"},"content":"5. In addition, the `CommandResult` object can also instruct the `Ui` to perform","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"laurenlhy"},"content":"certain actions, such as displaying help to the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"laurenlhy"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"laurenlhy"},"content":"for the `execute(\"deletecheese 1\")` API call.","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"laurenlhy"},"content":"\u003cimg src\u003d\"images/DeleteCheeseSeqDiagram_CHIM.png\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"AhQuanz"},"content":"![Structure of the Customer Component](images/CustomerClassDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"AhQuanz"},"content":"![Structure of the Cheese Component](images/CheeseClassDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"AhQuanz"},"content":"![Structure of the Order Component](images/OrderClassDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"weixue123"},"content":"**API** : [`Model.java`](https://github.com/AY2021S2-CS2103-W16-2/tp/blob/master/src/main/java/chim/model/Model.java)","lastModifiedDate":"2021-04-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"AhQuanz"},"content":"The `Model`,","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"AhQuanz"},"content":"* stores a `UserPref` object that represents the user`s preferences.","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"weixue123"},"content":"* stores Cheese Inventory Management\u0027s customers, orders, and cheeses data.","lastModifiedDate":"2021-04-09"},{"lineNumber":116,"author":{"gitId":"AhQuanz"},"content":"* exposes an unmodifiable `ObservableList\u003cCustomer\u003e`, `ObservableList\u003cOrder\u003e`,`ObservableList\u003cCheese\u003e` that can be \u0027observed\u0027.","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"AhQuanz"},"content":"e.g. the Ui can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"AhQuanz"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"weixue123"},"content":"**API** : [`Storage.java`](https://github.com/AY2021S2-CS2103-W16-2/tp/blob/master/src/main/java/chim/storage/Storage.java)","lastModifiedDate":"2021-04-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"weixue123"},"content":"* can save CHIM\u0027s data in json format and read it back.","lastModifiedDate":"2021-04-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"weixue123"},"content":"Classes used by multiple components are in the `chim.commons` package.","lastModifiedDate":"2021-04-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"laurenlhy"},"content":"### Delete Feature","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"laurenlhy"},"content":"#### Implementation","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"laurenlhy"},"content":"Deleting customers, orders and cheeses are implemented in `DeleteCustomerCommand`,","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"laurenlhy"},"content":"`DeleteOrderCommand` and `DeleteCheeseCommand` respectively. These commands extend","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"laurenlhy"},"content":"abstract class `DeleteCommand`, and they all implement the operations `execute()` and `equals()`.","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"laurenlhy"},"content":"Cascading of Delete commands has been implemented such that if a customer is deleted,","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"laurenlhy"},"content":"any orders they have placed are also deleted. Similarly, when an order is deleted,","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"laurenlhy"},"content":"any cheeses assigned to it are deleted.","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"laurenlhy"},"content":"An example usage scenario representing the cascading of delete commands is given below.","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"laurenlhy"},"content":"Step 1. The user launches CHIM which has been initialised with customers,","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"laurenlhy"},"content":"orders (both complete and incomplete), and cheeses.","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"laurenlhy"},"content":"Step 2. The user executes `deletecustomer p/87438807` to delete the customer with the","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"laurenlhy"},"content":"phone number `87438807`. The command calls `DeleteCustomerCommand.execute()`","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"laurenlhy"},"content":"which calls on `ModelManager.deleteCustomer()`.","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"weixue123"},"content":"Step 3. The `ModelManager` calls `Chim.deleteCustomer()` where CHIM will delete","lastModifiedDate":"2021-04-09"},{"lineNumber":162,"author":{"gitId":"laurenlhy"},"content":"the customer and iterate through the orders list to find any orders placed by this customer.","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"weixue123"},"content":"These orders are deleted by calling `Chim.deleteOrder()`.","lastModifiedDate":"2021-04-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"weixue123"},"content":"Step 4. `Chim.deleteOrder()` will delete the order. If the order was completed,","lastModifiedDate":"2021-04-09"},{"lineNumber":166,"author":{"gitId":"laurenlhy"},"content":"it will iterate through the cheeses list to find any cheeses assigned to this order.","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"weixue123"},"content":"These cheeses are deleted by calling `Chim.deleteCheese()`.","lastModifiedDate":"2021-04-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"weixue123"},"content":"Step 5. `Chim.deleteCheese()` will delete the cheese.","lastModifiedDate":"2021-04-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"laurenlhy"},"content":"The following sequence diagram shows how the operation `deletecustomer p/87438807`","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"laurenlhy"},"content":"is carried out as detailed above.","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"laurenlhy"},"content":"\u003cimg src\u003d\"images/DeleteCustomerSeqDiagram_CHIM.png\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"laurenlhy"},"content":"#### Design consideration","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"laurenlhy"},"content":"* Cascading of Delete commands has been implemented with the assumption that when a customer","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"laurenlhy"},"content":"or order is deleted, all information related to that customer or order must also be removed from CHIM.","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"laurenlhy"},"content":"* The cascading of Delete commands is implemented only in one direction (Customer to Order to Cheese).","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"laurenlhy"},"content":"Deleting an order will not delete the customer who placed the order.","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"laurenlhy"},"content":"Furthermore, deleting a cheese which has been assigned to an order is not allowed.","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"laurenlhy"},"content":"This is to prevent any extra erroneous deletions.","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"laurenlhy"},"content":"* All `execute()` calls by `DeleteCustomerCommand`, `DeleteOrderCommand` and `DeleteCheeseCommand`","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"weixue123"},"content":"will call on `Model.Chim` which will handle the cascading of delete commands in one place.","lastModifiedDate":"2021-04-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"weixue123"},"content":"### Automatic Toggling of UI List Panels","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"weixue123"},"content":"#### Implementation","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"weixue123"},"content":"The application\u0027s user-interface shows, at any one time, **only one** of the following three lists:","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"weixue123"},"content":"1. Customer List","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"weixue123"},"content":"2. Cheese List","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"weixue123"},"content":"3. Order List","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"weixue123"},"content":"The UI automatically toggles between the three lists with respect to the user\u0027s latest command. For example:","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"weixue123"},"content":"- After running the `ListCheeseCommand`, the UI switches to showing the cheese list.","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"weixue123"},"content":"- After running the `AddCustomerCommand`, the UI switches to showing the customer list.","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"weixue123"},"content":"- After running the `FindOrderCommand`, the UI switches to showing the order list.","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"weixue123"},"content":"To enable the toggling, `GuiSettings` (of the `commons` package) stores an enumerable property to control which list to","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"weixue123"},"content":"show.","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"weixue123"},"content":"When the user keys in a valid input:","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"weixue123"},"content":"1. The `Command` object corresponding to the input, when executed, updates the enum in `GuiSettings`; the enum records","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"weixue123"},"content":"   which list is to be shown. This is done through the `ModelManager`.","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"weixue123"},"content":"2. The `UI` component then checks the `GuiSettings` and renders the desired list.","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"weixue123"},"content":"To better illustrate the idea - take, for instance, when the user inputs `listcheeses` which executes the","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"weixue123"},"content":"`ListCheesesCommand`:","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":216,"author":{"gitId":"weixue123"},"content":"![ListPanelTogglingSequenceDiagram](images/ListPanelTogglingSequenceDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":219,"author":{"gitId":"daniellau88"},"content":"### Find Command","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"daniellau88"},"content":"#### Implementation","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":223,"author":{"gitId":"daniellau88"},"content":"The find command is used by the users to search for a `Cheese`, `Order` or `Customer`","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"daniellau88"},"content":"based on the given parameters. For example, a user can search for a `Customer` with","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"daniellau88"},"content":"the surname `Lee` in their database using the command. The command is facilitated","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"daniellau88"},"content":"by the `FindXCommandParser`, where `X` depends on the model that is concerned.","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":228,"author":{"gitId":"daniellau88"},"content":"Each `FindXCommandParser` creates a `FindXCommand` object which contains details on","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"daniellau88"},"content":"how the data should be filtered, sorted and displayed to the user.","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"daniellau88"},"content":"The `FindXCommand` contains a `FieldPredicate`, which defines how the model should be","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"daniellau88"},"content":"filtered and sorted. In the case of `Customer`s, which can be filtered by `Name`,","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"daniellau88"},"content":"`Phone` or `Email`, a `FieldPredicate` was defined for each of the specified field.","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"daniellau88"},"content":"Each `FieldPredicate` outlines how the filtering should be handled, for example,","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"daniellau88"},"content":"`Name`s should be filtered by partial keyword match (using prefix).","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"daniellau88"},"content":"The second part of the `FieldPredicate` is the `Comparator` that it implements.","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"daniellau88"},"content":"The comparator outlines the order of the results, to ensure that the most relevant","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"daniellau88"},"content":"results are displayed to the users at a higher priority. In the case of `Name`, the","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"daniellau88"},"content":"keyword \"David\" should rank the name \"David\" above the name \"Davida\", as a complete","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"daniellau88"},"content":"match is more relevant for users compared to a partial match.","lastModifiedDate":"2021-03-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":243,"author":{"gitId":"daniellau88"},"content":"To facilitate filtering of the models by multiple fields, `CompositeFieldPredicate`","lastModifiedDate":"2021-03-31"},{"lineNumber":244,"author":{"gitId":"daniellau88"},"content":"takes in multiple `FieldPredicate`s and composes them. Each object in the list will","lastModifiedDate":"2021-03-31"},{"lineNumber":245,"author":{"gitId":"daniellau88"},"content":"be compared using all the predicates defined, and the results will be ranked by the","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"daniellau88"},"content":"sum of the relevance of each predicate.","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":248,"author":{"gitId":"daniellau88"},"content":"The following shows the structure of the `FieldPredicate` classes which will be used to","lastModifiedDate":"2021-03-31"},{"lineNumber":249,"author":{"gitId":"daniellau88"},"content":"filter and sort the different lists.","lastModifiedDate":"2021-03-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":251,"author":{"gitId":"daniellau88"},"content":"![Architecture of the Find Command](images/find/FindPredicateClassDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"daniellau88"},"content":"The diagram below shows how the `FindCommand`, specifically the `FindCheeseCommand` works:","lastModifiedDate":"2021-03-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":255,"author":{"gitId":"daniellau88"},"content":"![Sequence of Find Command](images/find/FindCheeseCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"aaronsms"},"content":"### Edit Command","lastModifiedDate":"2021-03-28"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":259,"author":{"gitId":"aaronsms"},"content":"Currently we support editing of the three models: `Cheese`, `Customer` and `Order`,","lastModifiedDate":"2021-03-28"},{"lineNumber":260,"author":{"gitId":"aaronsms"},"content":"but only under certain preconditions to reflect the real life domains.","lastModifiedDate":"2021-03-28"},{"lineNumber":261,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":262,"author":{"gitId":"aaronsms"},"content":"The Sequence Diagram below shows how an `EditOrderCommand` is executed.","lastModifiedDate":"2021-03-31"},{"lineNumber":263,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":264,"author":{"gitId":"aaronsms"},"content":"\u003cimg src\u003d\"images/EditCommandSequenceDiagram.png\" width\u003d\"750px\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":265,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":266,"author":{"gitId":"aaronsms"},"content":"#### Editing a Customer","lastModifiedDate":"2021-03-28"},{"lineNumber":267,"author":{"gitId":"aaronsms"},"content":"We always allow editing of all fields of any `Customer` instances. This is possible","lastModifiedDate":"2021-03-28"},{"lineNumber":268,"author":{"gitId":"aaronsms"},"content":"since the `Order` class only maintain a reference to `Customer` with a `CustomerId`.","lastModifiedDate":"2021-03-28"},{"lineNumber":269,"author":{"gitId":"aaronsms"},"content":"This design approach allows us to only require to update a `Customer` object only","lastModifiedDate":"2021-03-28"},{"lineNumber":270,"author":{"gitId":"aaronsms"},"content":"at a particular location. This is important as the `Customer` class has a one-to-many","lastModifiedDate":"2021-03-28"},{"lineNumber":271,"author":{"gitId":"aaronsms"},"content":"relationship with `Order`.","lastModifiedDate":"2021-03-28"},{"lineNumber":272,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":273,"author":{"gitId":"aaronsms"},"content":"#### Editing a Cheese","lastModifiedDate":"2021-03-28"},{"lineNumber":274,"author":{"gitId":"aaronsms"},"content":"We allow editing of all fields of any `Cheese` instances only when the instances","lastModifiedDate":"2021-03-28"},{"lineNumber":275,"author":{"gitId":"aaronsms"},"content":"are not marked as assigned (to an `Order`). This is essentially to maintain the","lastModifiedDate":"2021-03-28"},{"lineNumber":276,"author":{"gitId":"aaronsms"},"content":"consistency of contract between the `Cheese` and `Order` class, namely `Cheese`","lastModifiedDate":"2021-03-28"},{"lineNumber":277,"author":{"gitId":"aaronsms"},"content":"instances that are used to fulfil an `Order` require to have the same","lastModifiedDate":"2021-03-28"},{"lineNumber":278,"author":{"gitId":"aaronsms"},"content":"`CheeseType` as the `Order`. This is consistent with the domain design as once","lastModifiedDate":"2021-03-28"},{"lineNumber":279,"author":{"gitId":"aaronsms"},"content":"an order is marked as complete, the order and cheeses involved are only kept","lastModifiedDate":"2021-03-28"},{"lineNumber":280,"author":{"gitId":"aaronsms"},"content":"as view-only  archives.","lastModifiedDate":"2021-03-28"},{"lineNumber":281,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":282,"author":{"gitId":"aaronsms"},"content":"#### Editing an Order","lastModifiedDate":"2021-03-28"},{"lineNumber":283,"author":{"gitId":"aaronsms"},"content":"Similarly, we only allow editing of any `Order` instances only when the instances","lastModifiedDate":"2021-03-28"},{"lineNumber":284,"author":{"gitId":"aaronsms"},"content":"are not marked as completed (with a list of assigned `CheeseID`s). An completed","lastModifiedDate":"2021-03-28"},{"lineNumber":285,"author":{"gitId":"aaronsms"},"content":"`Order` is only kept as a view-only archieve. Furthermore, since the `Order` class","lastModifiedDate":"2021-03-28"},{"lineNumber":286,"author":{"gitId":"aaronsms"},"content":"contains dependencies to `Customer` class, if the `Phone` parameter is provided,","lastModifiedDate":"2021-03-28"},{"lineNumber":287,"author":{"gitId":"aaronsms"},"content":"we are required to check that the customer phone exists and a different customer","lastModifiedDate":"2021-03-28"},{"lineNumber":288,"author":{"gitId":"aaronsms"},"content":"is being referenced.","lastModifiedDate":"2021-03-28"},{"lineNumber":289,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":290,"author":{"gitId":"aaronsms"},"content":"#### Alternative Designs","lastModifiedDate":"2021-03-28"},{"lineNumber":291,"author":{"gitId":"aaronsms"},"content":"An alternative approach to store a `Customer` instance in every `Order` objects","lastModifiedDate":"2021-03-28"},{"lineNumber":292,"author":{"gitId":"aaronsms"},"content":"is clearly undesirable, as that would require us to update at multiple locations","lastModifiedDate":"2021-03-28"},{"lineNumber":293,"author":{"gitId":"aaronsms"},"content":"that may cost more time and risk more bugs. Alternatively, we could choose to","lastModifiedDate":"2021-03-28"},{"lineNumber":294,"author":{"gitId":"aaronsms"},"content":"model `Customer` and `Order` via composition, where we have the `Customer` class","lastModifiedDate":"2021-03-28"},{"lineNumber":295,"author":{"gitId":"aaronsms"},"content":"maintain a list of `Order` as a field. Then, modifying customer details would be","lastModifiedDate":"2021-03-28"},{"lineNumber":296,"author":{"gitId":"aaronsms"},"content":"intuitive. However, we believe having the `Order` class being able to navigate","lastModifiedDate":"2021-03-28"},{"lineNumber":297,"author":{"gitId":"aaronsms"},"content":"to `Customer` and not the other way around is a better way to represent the real","lastModifiedDate":"2021-03-28"},{"lineNumber":298,"author":{"gitId":"aaronsms"},"content":"life applications because we require the `Order` to keep track of the `Customer`,","lastModifiedDate":"2021-03-28"},{"lineNumber":299,"author":{"gitId":"aaronsms"},"content":"but not necessarily the other way around.","lastModifiedDate":"2021-03-28"},{"lineNumber":300,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":301,"author":{"gitId":"aaronsms"},"content":"An alternative approach to handle the contract between `Cheese` and `Order` is","lastModifiedDate":"2021-03-28"},{"lineNumber":302,"author":{"gitId":"aaronsms"},"content":"to warn the users about modifying the sensitive fields of linked instances, and","lastModifiedDate":"2021-03-28"},{"lineNumber":303,"author":{"gitId":"aaronsms"},"content":"mark the `Order` instance as incomplete and unassign the corresponding `Cheese`","lastModifiedDate":"2021-03-28"},{"lineNumber":304,"author":{"gitId":"aaronsms"},"content":"instances to accommodate the changes. We do not choose this design as it is very","lastModifiedDate":"2021-03-28"},{"lineNumber":305,"author":{"gitId":"aaronsms"},"content":"unlikely a user would want to modify a completed `Order`, and the user can always","lastModifiedDate":"2021-03-28"},{"lineNumber":306,"author":{"gitId":"aaronsms"},"content":"add a new `Order` instance in the worst case.","lastModifiedDate":"2021-03-28"},{"lineNumber":307,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":308,"author":{"gitId":"AhQuanz"},"content":"### Mark an order as complete feature","lastModifiedDate":"2021-03-31"},{"lineNumber":309,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":310,"author":{"gitId":"AhQuanz"},"content":"#### implementation","lastModifiedDate":"2021-03-31"},{"lineNumber":311,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":312,"author":{"gitId":"weixue123"},"content":"Marking an order as completed is implemented in [`DoneCommand.java`](https://github.com/AY2021S2-CS2103-W16-2/tp/blob/master/src/main/java/chim/logic/commands/DoneCommand.java).","lastModifiedDate":"2021-04-09"},{"lineNumber":313,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":314,"author":{"gitId":"AhQuanz"},"content":"`DoneCommand` extends from `command` and overwrites the operations `execute()` and `equals()`.","lastModifiedDate":"2021-03-31"},{"lineNumber":315,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":316,"author":{"gitId":"AhQuanz"},"content":"Given below is an example usage scenario and how the feature of marking an order as complete feature behaves at each step.","lastModifiedDate":"2021-03-31"},{"lineNumber":317,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":318,"author":{"gitId":"AhQuanz"},"content":"Step 1. The user launches CHIM which will restore archived customers , orders and cheeses.","lastModifiedDate":"2021-03-31"},{"lineNumber":319,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":320,"author":{"gitId":"AhQuanz"},"content":"Step 2. The user issues the command `done 1` to mark the first order shown in the `listorders` as completed.","lastModifiedDate":"2021-03-31"},{"lineNumber":321,"author":{"gitId":"AhQuanz"},"content":"The `done` command calls `DoneCommand.execute()` which will check the index given is valid and order selected is not completed yet.","lastModifiedDate":"2021-03-31"},{"lineNumber":322,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":323,"author":{"gitId":"AhQuanz"},"content":"Step 3. After initial checks are completed, `DoneCommand.execute()` will call on `ModelManager.getUnassignedCheeses()`","lastModifiedDate":"2021-03-31"},{"lineNumber":324,"author":{"gitId":"AhQuanz"},"content":"to retrieve unAssigned Cheese(s) required for the order.","lastModifiedDate":"2021-03-31"},{"lineNumber":325,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":326,"author":{"gitId":"AhQuanz"},"content":"Step 4. `DoneCommand.execute()` will call `DoneCommand.createDoneOrder()` to create a new `order`","lastModifiedDate":"2021-03-31"},{"lineNumber":327,"author":{"gitId":"AhQuanz"},"content":"if there is enough unassigned Cheese(s) from `ModelManager.getUnassignedCheeses()`.","lastModifiedDate":"2021-03-31"},{"lineNumber":328,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":329,"author":{"gitId":"AhQuanz"},"content":"Step 5. `DoneCommand.execute()` will call `ModelManager.setOrder()`","lastModifiedDate":"2021-03-31"},{"lineNumber":330,"author":{"gitId":"AhQuanz"},"content":"to replace the original order with the new order created from `DoneCommand.createDoneOrder()`","lastModifiedDate":"2021-03-31"},{"lineNumber":331,"author":{"gitId":"AhQuanz"},"content":"and calls `ModelManager.updateCheesesStatus()` to update all cheese(s)\u0027s assign status used for this order.","lastModifiedDate":"2021-03-31"},{"lineNumber":332,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":333,"author":{"gitId":"AhQuanz"},"content":"The following sequence diagram shows how the operation `done 1` is carried out as detailed above.","lastModifiedDate":"2021-03-31"},{"lineNumber":334,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":335,"author":{"gitId":"AhQuanz"},"content":"![Sequence Diagram of the Done Command](images/DoneCommandSeqDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":336,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":337,"author":{"gitId":"AhQuanz"},"content":"#### Design consideration","lastModifiedDate":"2021-03-31"},{"lineNumber":338,"author":{"gitId":"AhQuanz"},"content":"* Aspect : Searching for available cheese(s) for the order.","lastModifiedDate":"2021-03-31"},{"lineNumber":339,"author":{"gitId":"weixue123"},"content":"    * Current choice : Searching for unassigned cheeses for the order is implemented in the `Model.Chim`.","lastModifiedDate":"2021-04-09"},{"lineNumber":340,"author":{"gitId":"AhQuanz"},"content":"        * Pros: no dependency between `Done` command and `Cheese`.","lastModifiedDate":"2021-03-31"},{"lineNumber":341,"author":{"gitId":"AhQuanz"},"content":"        * Cons: performance issues due to multiple functions calls.","lastModifiedDate":"2021-03-31"},{"lineNumber":342,"author":{"gitId":"AhQuanz"},"content":"    * Alternative 1 : `Done` command will search for unassigned cheeses.","lastModifiedDate":"2021-03-31"},{"lineNumber":343,"author":{"gitId":"AhQuanz"},"content":"        * Pros: better in terms of performance as there are lesser functions to be called.","lastModifiedDate":"2021-03-31"},{"lineNumber":344,"author":{"gitId":"AhQuanz"},"content":"        * Cons: This introduces another reason for \u0027DoneCommand.execute()\u0027 to change in the future.","lastModifiedDate":"2021-03-31"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":346,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2021-04-10"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":348,"author":{"gitId":"aaronsms"},"content":"* [Documentation guide](Documentation.html)","lastModifiedDate":"2021-04-10"},{"lineNumber":349,"author":{"gitId":"aaronsms"},"content":"* [Testing guide](Testing.html)","lastModifiedDate":"2021-04-10"},{"lineNumber":350,"author":{"gitId":"aaronsms"},"content":"* [Logging guide](Logging.html)","lastModifiedDate":"2021-04-10"},{"lineNumber":351,"author":{"gitId":"aaronsms"},"content":"* [Configuration guide](Configuration.html)","lastModifiedDate":"2021-04-10"},{"lineNumber":352,"author":{"gitId":"aaronsms"},"content":"* [DevOps guide](DevOps.html)","lastModifiedDate":"2021-04-10"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":354,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"laurenlhy"},"content":"* Freelance cheesemaker","lastModifiedDate":"2021-02-21"},{"lineNumber":362,"author":{"gitId":"laurenlhy"},"content":"* Runs home-based business","lastModifiedDate":"2021-02-21"},{"lineNumber":363,"author":{"gitId":"laurenlhy"},"content":"* Prefers desktop apps over other types","lastModifiedDate":"2021-02-21"},{"lineNumber":364,"author":{"gitId":"laurenlhy"},"content":"* Can type fast","lastModifiedDate":"2021-02-21"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"laurenlhy"},"content":"**Value proposition**:","lastModifiedDate":"2021-02-21"},{"lineNumber":367,"author":{"gitId":"laurenlhy"},"content":"1. Specific properties of each cheese","lastModifiedDate":"2021-02-21"},{"lineNumber":368,"author":{"gitId":"weixue123"},"content":"2. Track order status of each cheese (either by batches or individually)","lastModifiedDate":"2021-02-24"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"| Priority | As a …​                      | I want to …​                     | So that I can …​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"laurenlhy"},"content":"| -------- | ----------------------------| ------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-02-21"},{"lineNumber":377,"author":{"gitId":"laurenlhy"},"content":"| `* * *`  | New user                    | Input a new order |  |","lastModifiedDate":"2021-02-21"},{"lineNumber":378,"author":{"gitId":"laurenlhy"},"content":"| `* * *`  | New user                    | Delete an existing order |  |","lastModifiedDate":"2021-03-14"},{"lineNumber":379,"author":{"gitId":"laurenlhy"},"content":"| `* * *`  | New user                    | Add cheese entries |  |","lastModifiedDate":"2021-02-21"},{"lineNumber":380,"author":{"gitId":"laurenlhy"},"content":"| `* * *`  | New user                    | Mark a sample order as delivered |  |","lastModifiedDate":"2021-02-21"},{"lineNumber":381,"author":{"gitId":"laurenlhy"},"content":"| `* * *`  | New user                    | Search for a customer | Find the customer’s contact information |","lastModifiedDate":"2021-02-21"},{"lineNumber":382,"author":{"gitId":"laurenlhy"},"content":"| `* *`    | New user                    | Save the data input | Retrieve the same information later |","lastModifiedDate":"2021-02-21"},{"lineNumber":383,"author":{"gitId":"laurenlhy"},"content":"| `* *`    | User with some familiarity  | View a summary of my inventory | See if there is a need to increase production |","lastModifiedDate":"2021-02-21"},{"lineNumber":384,"author":{"gitId":"laurenlhy"},"content":"| `* *`    | User                        | See the introduction message |  |","lastModifiedDate":"2021-02-21"},{"lineNumber":385,"author":{"gitId":"laurenlhy"},"content":"| `*`      | User with some familiarity  | Search up orders of a specific customer | Efficiently find the order status |","lastModifiedDate":"2021-02-21"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"daniellau88"},"content":"(For all use cases below, the **System** is the `CHIM` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-20"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"weixue123"},"content":"#### Use case: Input a new order","lastModifiedDate":"2021-02-24"},{"lineNumber":393,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":394,"author":{"gitId":"weixue123"},"content":"**MSS**","lastModifiedDate":"2021-02-24"},{"lineNumber":395,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":396,"author":{"gitId":"aaronsms"},"content":"1. User adds an order by specifying the cheese type and quantity of the order, and the phone number of the customer, with optional field order date.","lastModifiedDate":"2021-03-29"},{"lineNumber":397,"author":{"gitId":"aaronsms"},"content":"2. CHIM creates the order and shows the details of the new order.","lastModifiedDate":"2021-03-29"},{"lineNumber":398,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":399,"author":{"gitId":"weixue123"},"content":"   Use case ends.","lastModifiedDate":"2021-02-24"},{"lineNumber":400,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":401,"author":{"gitId":"weixue123"},"content":"**Extensions**","lastModifiedDate":"2021-02-24"},{"lineNumber":402,"author":{"gitId":"laurenlhy"},"content":"* 1a. The given cheese quantity is invalid.","lastModifiedDate":"2021-04-12"},{"lineNumber":403,"author":{"gitId":"weixue123"},"content":"  * 1a1. CHIM shows an error message.","lastModifiedDate":"2021-02-24"},{"lineNumber":404,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":405,"author":{"gitId":"weixue123"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-24"},{"lineNumber":406,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":407,"author":{"gitId":"laurenlhy"},"content":"* 1b. The customer with the given phone number cannot be found.","lastModifiedDate":"2021-04-12"},{"lineNumber":408,"author":{"gitId":"weixue123"},"content":"  * 1b1. CHIM shows an error message.","lastModifiedDate":"2021-02-24"},{"lineNumber":409,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":410,"author":{"gitId":"weixue123"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-24"},{"lineNumber":411,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":412,"author":{"gitId":"weixue123"},"content":"#### Use case: Input a cheese","lastModifiedDate":"2021-02-24"},{"lineNumber":413,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":414,"author":{"gitId":"weixue123"},"content":"**MSS**","lastModifiedDate":"2021-02-24"},{"lineNumber":415,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":416,"author":{"gitId":"weixue123"},"content":"1. User adds a cheese to the inventory by specifying its type and quantity.","lastModifiedDate":"2021-02-24"},{"lineNumber":417,"author":{"gitId":"weixue123"},"content":"2. CHIM shows a confirmation message that the cheese has been added.","lastModifiedDate":"2021-02-24"},{"lineNumber":418,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":419,"author":{"gitId":"weixue123"},"content":"   Use case ends.","lastModifiedDate":"2021-02-24"},{"lineNumber":420,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":421,"author":{"gitId":"weixue123"},"content":"**Extensions**","lastModifiedDate":"2021-02-24"},{"lineNumber":422,"author":{"gitId":"laurenlhy"},"content":"* 1a. The given cheese quantity is invalid.","lastModifiedDate":"2021-04-12"},{"lineNumber":423,"author":{"gitId":"weixue123"},"content":"  * 1a1. CHIM shows an error message.","lastModifiedDate":"2021-02-24"},{"lineNumber":424,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":425,"author":{"gitId":"laurenlhy"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-04-12"},{"lineNumber":426,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":427,"author":{"gitId":"laurenlhy"},"content":"#### Use case: Input a Customer","lastModifiedDate":"2021-02-21"},{"lineNumber":428,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":429,"author":{"gitId":"laurenlhy"},"content":"**MSS**","lastModifiedDate":"2021-02-21"},{"lineNumber":430,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":431,"author":{"gitId":"laurenlhy"},"content":"1. User adds a customer by specifying name, phone number and address.","lastModifiedDate":"2021-02-21"},{"lineNumber":432,"author":{"gitId":"laurenlhy"},"content":"2. CHIM creates the new customer and shows details of the new customer.","lastModifiedDate":"2021-02-21"},{"lineNumber":433,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":434,"author":{"gitId":"laurenlhy"},"content":"   Use case ends.","lastModifiedDate":"2021-02-21"},{"lineNumber":435,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":436,"author":{"gitId":"laurenlhy"},"content":"**Extensions**","lastModifiedDate":"2021-02-21"},{"lineNumber":437,"author":{"gitId":"laurenlhy"},"content":"* 1a. The given phone number is invalid.","lastModifiedDate":"2021-02-21"},{"lineNumber":438,"author":{"gitId":"laurenlhy"},"content":"  * 1a1. CHIM displays an error message.","lastModifiedDate":"2021-02-21"},{"lineNumber":439,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":440,"author":{"gitId":"laurenlhy"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-21"},{"lineNumber":441,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":442,"author":{"gitId":"laurenlhy"},"content":"* 1b. The given phone number is a duplicated customer.","lastModifiedDate":"2021-02-21"},{"lineNumber":443,"author":{"gitId":"laurenlhy"},"content":"  * 1b1. CHIM displays an error message.","lastModifiedDate":"2021-02-21"},{"lineNumber":444,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":445,"author":{"gitId":"laurenlhy"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-21"},{"lineNumber":446,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":447,"author":{"gitId":"aaronsms"},"content":"#### Use case: Edit an Order","lastModifiedDate":"2021-03-29"},{"lineNumber":448,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":449,"author":{"gitId":"aaronsms"},"content":"**MSS**","lastModifiedDate":"2021-03-29"},{"lineNumber":450,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":451,"author":{"gitId":"aaronsms"},"content":"1. User enters an order number to edit with at least 1 field: cheese type, quantity, phone number and order date.","lastModifiedDate":"2021-03-29"},{"lineNumber":452,"author":{"gitId":"aaronsms"},"content":"2. CHIM edits the order and shows details of the new order.","lastModifiedDate":"2021-03-29"},{"lineNumber":453,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":454,"author":{"gitId":"aaronsms"},"content":"   Use case ends.","lastModifiedDate":"2021-03-29"},{"lineNumber":455,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":456,"author":{"gitId":"aaronsms"},"content":"**Extensions**","lastModifiedDate":"2021-03-29"},{"lineNumber":457,"author":{"gitId":"aaronsms"},"content":"* 1a. The supplied fields are all the same.","lastModifiedDate":"2021-03-29"},{"lineNumber":458,"author":{"gitId":"aaronsms"},"content":"  * 1a1. CHIM displays an error message.","lastModifiedDate":"2021-03-29"},{"lineNumber":459,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":460,"author":{"gitId":"aaronsms"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-03-29"},{"lineNumber":461,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":462,"author":{"gitId":"aaronsms"},"content":"* 1b. The order is marked as completed.","lastModifiedDate":"2021-03-29"},{"lineNumber":463,"author":{"gitId":"aaronsms"},"content":"  * 1b1. CHIM shows an error message.","lastModifiedDate":"2021-03-29"},{"lineNumber":464,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":465,"author":{"gitId":"aaronsms"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-03-29"},{"lineNumber":466,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":467,"author":{"gitId":"aaronsms"},"content":"* 1c. The given cheese quantity is invalid.","lastModifiedDate":"2021-03-29"},{"lineNumber":468,"author":{"gitId":"aaronsms"},"content":"  * 1c1. CHIM shows an error message.","lastModifiedDate":"2021-03-29"},{"lineNumber":469,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":470,"author":{"gitId":"aaronsms"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-03-29"},{"lineNumber":471,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":472,"author":{"gitId":"aaronsms"},"content":"* 1d. The customer with the given phone number cannot be found.","lastModifiedDate":"2021-03-29"},{"lineNumber":473,"author":{"gitId":"aaronsms"},"content":"  * 1d1. CHIM shows an error message.","lastModifiedDate":"2021-03-29"},{"lineNumber":474,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":475,"author":{"gitId":"aaronsms"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-03-29"},{"lineNumber":476,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":477,"author":{"gitId":"weixue123"},"content":"#### Use case: Edit a Cheese","lastModifiedDate":"2021-04-09"},{"lineNumber":478,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":479,"author":{"gitId":"aaronsms"},"content":"**MSS**","lastModifiedDate":"2021-03-29"},{"lineNumber":480,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":481,"author":{"gitId":"daniellau88"},"content":"1. User enters a cheese number to edit with at least 1 field: cheese type, manufacture date and expiry date.","lastModifiedDate":"2021-04-05"},{"lineNumber":482,"author":{"gitId":"aaronsms"},"content":"2. CHIM edits the cheese and shows details of the new cheese.","lastModifiedDate":"2021-03-29"},{"lineNumber":483,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":484,"author":{"gitId":"aaronsms"},"content":"   Use case ends.","lastModifiedDate":"2021-03-29"},{"lineNumber":485,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":486,"author":{"gitId":"aaronsms"},"content":"**Extensions**","lastModifiedDate":"2021-03-29"},{"lineNumber":487,"author":{"gitId":"aaronsms"},"content":"* 1a. The supplied fields are all the same.","lastModifiedDate":"2021-03-29"},{"lineNumber":488,"author":{"gitId":"aaronsms"},"content":"  * 1a1. CHIM displays an error message.","lastModifiedDate":"2021-03-29"},{"lineNumber":489,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":490,"author":{"gitId":"aaronsms"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-03-29"},{"lineNumber":491,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":492,"author":{"gitId":"aaronsms"},"content":"* 1b. The given cheese is marked as assigned.","lastModifiedDate":"2021-03-29"},{"lineNumber":493,"author":{"gitId":"aaronsms"},"content":"  * 1b1. CHIM shows an error message.","lastModifiedDate":"2021-03-29"},{"lineNumber":494,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":495,"author":{"gitId":"aaronsms"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-03-29"},{"lineNumber":496,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":497,"author":{"gitId":"aaronsms"},"content":"#### Use case: Edit a Customer","lastModifiedDate":"2021-03-29"},{"lineNumber":498,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":499,"author":{"gitId":"aaronsms"},"content":"**MSS**","lastModifiedDate":"2021-03-29"},{"lineNumber":500,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":501,"author":{"gitId":"aaronsms"},"content":"1. User enters a customer number to edit with at least 1 field: name, phone number, email and address.","lastModifiedDate":"2021-03-29"},{"lineNumber":502,"author":{"gitId":"aaronsms"},"content":"2. CHIM edits the customer and shows details of the new customer.","lastModifiedDate":"2021-03-29"},{"lineNumber":503,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":504,"author":{"gitId":"aaronsms"},"content":"   Use case ends.","lastModifiedDate":"2021-03-29"},{"lineNumber":505,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":506,"author":{"gitId":"aaronsms"},"content":"**Extensions**","lastModifiedDate":"2021-03-29"},{"lineNumber":507,"author":{"gitId":"aaronsms"},"content":"* 1a. The supplied fields are all the same.","lastModifiedDate":"2021-03-29"},{"lineNumber":508,"author":{"gitId":"aaronsms"},"content":"  * 1a1. CHIM displays an error message.","lastModifiedDate":"2021-03-29"},{"lineNumber":509,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":510,"author":{"gitId":"aaronsms"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-03-29"},{"lineNumber":511,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":512,"author":{"gitId":"aaronsms"},"content":"* 1b. The given phone number is invalid.","lastModifiedDate":"2021-03-29"},{"lineNumber":513,"author":{"gitId":"aaronsms"},"content":"  * 1b1. CHIM displays an error message.","lastModifiedDate":"2021-03-29"},{"lineNumber":514,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":515,"author":{"gitId":"aaronsms"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-03-29"},{"lineNumber":516,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":517,"author":{"gitId":"aaronsms"},"content":"* 1c. The given phone number is a duplicated customer.","lastModifiedDate":"2021-03-29"},{"lineNumber":518,"author":{"gitId":"aaronsms"},"content":"  * 1c1. CHIM displays an error message.","lastModifiedDate":"2021-03-29"},{"lineNumber":519,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":520,"author":{"gitId":"aaronsms"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-03-29"},{"lineNumber":521,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":522,"author":{"gitId":"laurenlhy"},"content":"#### Use case: Delete an Order","lastModifiedDate":"2021-03-14"},{"lineNumber":523,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":524,"author":{"gitId":"laurenlhy"},"content":"**MSS**","lastModifiedDate":"2021-02-21"},{"lineNumber":525,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":526,"author":{"gitId":"laurenlhy"},"content":"1. User enters an order number to delete.","lastModifiedDate":"2021-03-14"},{"lineNumber":527,"author":{"gitId":"laurenlhy"},"content":"2. CHIM deletes the order from the list of orders.","lastModifiedDate":"2021-03-14"},{"lineNumber":528,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":529,"author":{"gitId":"laurenlhy"},"content":"   Use case ends.","lastModifiedDate":"2021-02-21"},{"lineNumber":530,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":531,"author":{"gitId":"laurenlhy"},"content":"**Extensions**","lastModifiedDate":"2021-02-21"},{"lineNumber":532,"author":{"gitId":"laurenlhy"},"content":"* 1a. No such order with the specified order number exists.","lastModifiedDate":"2021-02-21"},{"lineNumber":533,"author":{"gitId":"laurenlhy"},"content":"  * 1a1. CHIM displays an error message.","lastModifiedDate":"2021-02-21"},{"lineNumber":534,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":535,"author":{"gitId":"laurenlhy"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-21"},{"lineNumber":536,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":537,"author":{"gitId":"laurenlhy"},"content":"#### Use case: Delete a cheese","lastModifiedDate":"2021-03-14"},{"lineNumber":538,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":539,"author":{"gitId":"AhQuanz"},"content":"**MSS**","lastModifiedDate":"2021-02-27"},{"lineNumber":540,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":541,"author":{"gitId":"laurenlhy"},"content":"1. User enters the index of cheese to be deleted.","lastModifiedDate":"2021-03-14"},{"lineNumber":542,"author":{"gitId":"laurenlhy"},"content":"2. CHIM deletes the cheese from the list of cheese.","lastModifiedDate":"2021-03-14"},{"lineNumber":543,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":544,"author":{"gitId":"AhQuanz"},"content":"   Use case ends.","lastModifiedDate":"2021-02-27"},{"lineNumber":545,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":546,"author":{"gitId":"AhQuanz"},"content":"**Extensions**","lastModifiedDate":"2021-02-27"},{"lineNumber":547,"author":{"gitId":"AhQuanz"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-02-27"},{"lineNumber":548,"author":{"gitId":"AhQuanz"},"content":"    * 1a1. CHIM responds that there are no existing customers.","lastModifiedDate":"2021-02-27"},{"lineNumber":549,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":550,"author":{"gitId":"AhQuanz"},"content":"        Use case ends.","lastModifiedDate":"2021-02-27"},{"lineNumber":551,"author":{"gitId":"AhQuanz"},"content":"* 1b. No such cheese with the specified cheese number.","lastModifiedDate":"2021-02-27"},{"lineNumber":552,"author":{"gitId":"AhQuanz"},"content":"    * 1b1. CHIM shows an error message.","lastModifiedDate":"2021-02-27"},{"lineNumber":553,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":554,"author":{"gitId":"AhQuanz"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2021-02-27"},{"lineNumber":555,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":556,"author":{"gitId":"laurenlhy"},"content":"#### Use case: Delete a customer","lastModifiedDate":"2021-03-14"},{"lineNumber":557,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":558,"author":{"gitId":"AhQuanz"},"content":"**MSS**","lastModifiedDate":"2021-02-27"},{"lineNumber":559,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":560,"author":{"gitId":"laurenlhy"},"content":"1. User enters the index of the customer to be deleted.","lastModifiedDate":"2021-03-14"},{"lineNumber":561,"author":{"gitId":"AhQuanz"},"content":"2. CHIM deletes the customer.","lastModifiedDate":"2021-02-27"},{"lineNumber":562,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":563,"author":{"gitId":"AhQuanz"},"content":"   Use case ends.","lastModifiedDate":"2021-02-27"},{"lineNumber":564,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":565,"author":{"gitId":"AhQuanz"},"content":"**Extensions**","lastModifiedDate":"2021-02-27"},{"lineNumber":566,"author":{"gitId":"AhQuanz"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-02-27"},{"lineNumber":567,"author":{"gitId":"AhQuanz"},"content":"    * 1a1. CHIM responds that there are no existing customers.","lastModifiedDate":"2021-02-27"},{"lineNumber":568,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":569,"author":{"gitId":"AhQuanz"},"content":"        Use case ends.","lastModifiedDate":"2021-02-27"},{"lineNumber":570,"author":{"gitId":"AhQuanz"},"content":"* 1b. The given index is invalid.","lastModifiedDate":"2021-02-27"},{"lineNumber":571,"author":{"gitId":"AhQuanz"},"content":"    * 1b1. CHIM shows an error message.","lastModifiedDate":"2021-02-27"},{"lineNumber":572,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":573,"author":{"gitId":"AhQuanz"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2021-02-27"},{"lineNumber":574,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":575,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":576,"author":{"gitId":"aaronsms"},"content":"#### Use case: List orders","lastModifiedDate":"2021-02-23"},{"lineNumber":577,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":578,"author":{"gitId":"aaronsms"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":579,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":580,"author":{"gitId":"aaronsms"},"content":"1. User enters the command to list all the orders recorded in CHIM.","lastModifiedDate":"2021-02-23"},{"lineNumber":581,"author":{"gitId":"aaronsms"},"content":"2. CHIM displays a list with the customers’ summary details.","lastModifiedDate":"2021-02-23"},{"lineNumber":582,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":583,"author":{"gitId":"aaronsms"},"content":"   Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":584,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":585,"author":{"gitId":"aaronsms"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":586,"author":{"gitId":"aaronsms"},"content":"* 1a. CHIM does not have any orders added.","lastModifiedDate":"2021-02-23"},{"lineNumber":587,"author":{"gitId":"aaronsms"},"content":"  * 1a1. CHIM informs the user that there are no orders recorded in the application.","lastModifiedDate":"2021-02-23"},{"lineNumber":588,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":589,"author":{"gitId":"aaronsms"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-23"},{"lineNumber":590,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":591,"author":{"gitId":"weixue123"},"content":"#### Use case: List cheeses","lastModifiedDate":"2021-03-14"},{"lineNumber":592,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":593,"author":{"gitId":"aaronsms"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":594,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":595,"author":{"gitId":"aaronsms"},"content":"1. User enters the command to list all the cheeses recorded in CHIM.","lastModifiedDate":"2021-02-23"},{"lineNumber":596,"author":{"gitId":"aaronsms"},"content":"2. CHIM displays all the cheeses in CHIM.","lastModifiedDate":"2021-02-23"},{"lineNumber":597,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":598,"author":{"gitId":"aaronsms"},"content":"   Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":599,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":600,"author":{"gitId":"aaronsms"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":601,"author":{"gitId":"aaronsms"},"content":"* 1a. CHIM does not have any cheese added.","lastModifiedDate":"2021-02-23"},{"lineNumber":602,"author":{"gitId":"aaronsms"},"content":"  * 1a1. CHIM informs the user that there is no cheese recorded in the application.","lastModifiedDate":"2021-02-23"},{"lineNumber":603,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":604,"author":{"gitId":"aaronsms"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-23"},{"lineNumber":605,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":606,"author":{"gitId":"aaronsms"},"content":"* 1b. User provides an optional parameter, CHEESE_TYPE.","lastModifiedDate":"2021-02-23"},{"lineNumber":607,"author":{"gitId":"aaronsms"},"content":"  * 1b1. User enters a valid CHEESE_TYPE.","lastModifiedDate":"2021-02-23"},{"lineNumber":608,"author":{"gitId":"aaronsms"},"content":"    * 1b1a1. CHIM displays the current inventory count for the specific cheese_TYPE.","lastModifiedDate":"2021-02-23"},{"lineNumber":609,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":610,"author":{"gitId":"aaronsms"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-02-23"},{"lineNumber":611,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":612,"author":{"gitId":"aaronsms"},"content":"  * 1b1. User enters a invalid CHEESE_TYPE.","lastModifiedDate":"2021-02-23"},{"lineNumber":613,"author":{"gitId":"aaronsms"},"content":"    * 1b1b1. CHIM displays an error message.","lastModifiedDate":"2021-02-23"},{"lineNumber":614,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":615,"author":{"gitId":"aaronsms"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-02-23"},{"lineNumber":616,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":617,"author":{"gitId":"daniellau88"},"content":"#### Use case: List customers","lastModifiedDate":"2021-02-20"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":621,"author":{"gitId":"daniellau88"},"content":"1. User enters the command to list all the customers recorded in CHIM.","lastModifiedDate":"2021-02-20"},{"lineNumber":622,"author":{"gitId":"daniellau88"},"content":"1. CHIM displays a list with the customers’ summary details.","lastModifiedDate":"2021-02-20"},{"lineNumber":623,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":624,"author":{"gitId":"daniellau88"},"content":"   Use case ends.","lastModifiedDate":"2021-02-20"},{"lineNumber":625,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":626,"author":{"gitId":"daniellau88"},"content":"**Extensions**","lastModifiedDate":"2021-02-20"},{"lineNumber":627,"author":{"gitId":"daniellau88"},"content":"* 1a. CHIM does not have any customers added.","lastModifiedDate":"2021-02-20"},{"lineNumber":628,"author":{"gitId":"daniellau88"},"content":"  * 1a1. CHIM informs the user that there are no customers recorded in the application.","lastModifiedDate":"2021-02-20"},{"lineNumber":629,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":630,"author":{"gitId":"daniellau88"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-20"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":632,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":633,"author":{"gitId":"daniellau88"},"content":"#### Use case: Marks order as complete","lastModifiedDate":"2021-02-20"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":635,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-02-20"},{"lineNumber":636,"author":{"gitId":"daniellau88"},"content":"1. User enters the index of the order to be marked as complete.","lastModifiedDate":"2021-02-20"},{"lineNumber":637,"author":{"gitId":"AhQuanz"},"content":"1. CHIM assigns available cheeses to the order and marks the order as complete.","lastModifiedDate":"2021-03-31"},{"lineNumber":638,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":639,"author":{"gitId":"aaronsms"},"content":"   Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":640,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":641,"author":{"gitId":"daniellau88"},"content":"**Extensions**","lastModifiedDate":"2021-02-20"},{"lineNumber":642,"author":{"gitId":"daniellau88"},"content":"* 1a. User provides an index which does not exist.","lastModifiedDate":"2021-02-20"},{"lineNumber":643,"author":{"gitId":"daniellau88"},"content":"  * 1a1. CHIM displays an error message.","lastModifiedDate":"2021-02-20"},{"lineNumber":644,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":645,"author":{"gitId":"daniellau88"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-20"},{"lineNumber":646,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":647,"author":{"gitId":"AhQuanz"},"content":"* 1b. User provides an index in which order is already completed.","lastModifiedDate":"2021-03-30"},{"lineNumber":648,"author":{"gitId":"AhQuanz"},"content":"  * 1b1. CHIM responds that the order is already completed.","lastModifiedDate":"2021-03-30"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":650,"author":{"gitId":"AhQuanz"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-03-30"},{"lineNumber":651,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":652,"author":{"gitId":"AhQuanz"},"content":"* 1c. User provides an index of an order that cannot be completed due to lack of cheeses in inventory.","lastModifiedDate":"2021-03-30"},{"lineNumber":653,"author":{"gitId":"AhQuanz"},"content":"  * 1c1. CHIM responds that there are insufficient cheeses to complete the order.","lastModifiedDate":"2021-03-30"},{"lineNumber":654,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":655,"author":{"gitId":"AhQuanz"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-03-30"},{"lineNumber":656,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":657,"author":{"gitId":"daniellau88"},"content":"#### Use case: Search for a customer","lastModifiedDate":"2021-02-20"},{"lineNumber":658,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":659,"author":{"gitId":"daniellau88"},"content":"**MSS**","lastModifiedDate":"2021-02-20"},{"lineNumber":660,"author":{"gitId":"daniellau88"},"content":"1. User enters a request to search for a customer by a particular name.","lastModifiedDate":"2021-02-20"},{"lineNumber":661,"author":{"gitId":"daniellau88"},"content":"1. CHIM shows the customer’s details.","lastModifiedDate":"2021-02-20"},{"lineNumber":662,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":663,"author":{"gitId":"daniellau88"},"content":"   Use case ends.","lastModifiedDate":"2021-02-20"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"daniellau88"},"content":"* 1a. More than one customer has the input name.","lastModifiedDate":"2021-02-20"},{"lineNumber":667,"author":{"gitId":"daniellau88"},"content":"  * 1a1. CHIM shows a list of customers with the matching name.","lastModifiedDate":"2021-02-20"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-02-20"},{"lineNumber":670,"author":{"gitId":"daniellau88"},"content":"* 1b. There are no existing customers with the input name.","lastModifiedDate":"2021-02-20"},{"lineNumber":671,"author":{"gitId":"daniellau88"},"content":"  * 1b1. CHIM responds that there are no existing customers with the input name.","lastModifiedDate":"2021-02-20"},{"lineNumber":672,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":673,"author":{"gitId":"daniellau88"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-20"},{"lineNumber":674,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":675,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":676,"author":{"gitId":"weixue123"},"content":"#### Use case: Search for particular cheeses","lastModifiedDate":"2021-03-23"},{"lineNumber":677,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":678,"author":{"gitId":"weixue123"},"content":"**MSS**","lastModifiedDate":"2021-03-23"},{"lineNumber":679,"author":{"gitId":"weixue123"},"content":"1. User enters a request to search for cheeses matching certain cheese types or assignment status.","lastModifiedDate":"2021-03-23"},{"lineNumber":680,"author":{"gitId":"weixue123"},"content":"2. CHIM shows the matching cheeses.","lastModifiedDate":"2021-03-23"},{"lineNumber":681,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":682,"author":{"gitId":"weixue123"},"content":"   Use case ends.","lastModifiedDate":"2021-03-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-03-28"},{"lineNumber":685,"author":{"gitId":"weixue123"},"content":"* 1a. No cheeses match the input given by the user.","lastModifiedDate":"2021-03-23"},{"lineNumber":686,"author":{"gitId":"weixue123"},"content":"  * 1a1. CHIM shows an empty list.","lastModifiedDate":"2021-03-23"},{"lineNumber":687,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":688,"author":{"gitId":"weixue123"},"content":"   Use case ends.","lastModifiedDate":"2021-03-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":690,"author":{"gitId":"weixue123"},"content":"* 1b. User input is invalid.","lastModifiedDate":"2021-03-23"},{"lineNumber":691,"author":{"gitId":"weixue123"},"content":"  * 1b1. CHIM shows an error message.","lastModifiedDate":"2021-03-23"},{"lineNumber":692,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":693,"author":{"gitId":"weixue123"},"content":"   Use case ends.","lastModifiedDate":"2021-03-23"},{"lineNumber":694,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":695,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":696,"author":{"gitId":"weixue123"},"content":"#### Use case: Search for particular orders","lastModifiedDate":"2021-03-24"},{"lineNumber":697,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":698,"author":{"gitId":"weixue123"},"content":"**MSS**","lastModifiedDate":"2021-03-24"},{"lineNumber":699,"author":{"gitId":"weixue123"},"content":"1. User enters a request to search for orders matching certain cheese types, customer names, phone number or completion status.","lastModifiedDate":"2021-03-24"},{"lineNumber":700,"author":{"gitId":"weixue123"},"content":"2. CHIM shows the matching orders.","lastModifiedDate":"2021-03-24"},{"lineNumber":701,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":702,"author":{"gitId":"weixue123"},"content":"   Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":703,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":704,"author":{"gitId":"laurenlhy"},"content":"**Extensions**","lastModifiedDate":"2021-03-30"},{"lineNumber":705,"author":{"gitId":"weixue123"},"content":"* 1a. No orders match the input given by the user.","lastModifiedDate":"2021-03-24"},{"lineNumber":706,"author":{"gitId":"weixue123"},"content":"    * 1a1. CHIM shows an empty list.","lastModifiedDate":"2021-03-24"},{"lineNumber":707,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":708,"author":{"gitId":"weixue123"},"content":"  Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":709,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":710,"author":{"gitId":"weixue123"},"content":"* 1b. User input is invalid.","lastModifiedDate":"2021-03-24"},{"lineNumber":711,"author":{"gitId":"weixue123"},"content":"    * 1b1. CHIM shows an error message.","lastModifiedDate":"2021-03-24"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":713,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":716,"author":{"gitId":"AhQuanz"},"content":"#### Use case: Clear all data","lastModifiedDate":"2021-03-31"},{"lineNumber":717,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":718,"author":{"gitId":"AhQuanz"},"content":"**MSS**","lastModifiedDate":"2021-03-31"},{"lineNumber":719,"author":{"gitId":"AhQuanz"},"content":"1. User enters the command to clear all data.","lastModifiedDate":"2021-03-31"},{"lineNumber":720,"author":{"gitId":"AhQuanz"},"content":"2. CHIM clears customer , orders and cheese data and informs the user.","lastModifiedDate":"2021-03-31"},{"lineNumber":721,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":722,"author":{"gitId":"AhQuanz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-31"},{"lineNumber":723,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":724,"author":{"gitId":"daniellau88"},"content":"#### Use case: Exit the application","lastModifiedDate":"2021-02-20"},{"lineNumber":725,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":726,"author":{"gitId":"daniellau88"},"content":"**MSS**","lastModifiedDate":"2021-02-20"},{"lineNumber":727,"author":{"gitId":"daniellau88"},"content":"1. User enters the command to exit the application.","lastModifiedDate":"2021-02-20"},{"lineNumber":728,"author":{"gitId":"weixue123"},"content":"2. CHIM saves customers, orders and cheese data into data files.","lastModifiedDate":"2021-03-24"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":730,"author":{"gitId":"daniellau88"},"content":"   Use case ends.","lastModifiedDate":"2021-02-20"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":733,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"daniellau88"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2021-04-10"},{"lineNumber":736,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":737,"author":{"gitId":"daniellau88"},"content":"1. Should be able to recover latest state of CHIM (before the command that causes the crash was executed) if the application crashes.","lastModifiedDate":"2021-04-10"},{"lineNumber":738,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":739,"author":{"gitId":"daniellau88"},"content":"1. Should be able to hold up to 1000 customers, cheeses and orders without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-04-11"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":741,"author":{"gitId":"daniellau88"},"content":"1. General queries (especially filter queries) should be completed within 5 seconds.","lastModifiedDate":"2021-04-10"},{"lineNumber":742,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":743,"author":{"gitId":"daniellau88"},"content":"1. Should be able to handle string data (e.g. name, addresses) with length less than 1000 without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-04-11"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":745,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-03-31"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2021-04-09"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2021-04-09"},{"lineNumber":756,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2021-04-09"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":758,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2021-04-09"},{"lineNumber":761,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2021-04-09"},{"lineNumber":762,"author":{"gitId":"AhQuanz"},"content":"    1. Download the latest release jar file from [here](https://github.com/AY2021S2-CS2103-W16-2/tp/releases).","lastModifiedDate":"2021-04-09"},{"lineNumber":763,"author":{"gitId":"AhQuanz"},"content":"    2. Copy the downloaded jar file into an empty folder.","lastModifiedDate":"2021-04-09"},{"lineNumber":764,"author":{"gitId":"AhQuanz"},"content":"    3. Navigate your command prompt to the folder containing the downloaded jar file and run the command `java -jar chim.jar`.","lastModifiedDate":"2021-04-10"},{"lineNumber":765,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":766,"author":{"gitId":"AhQuanz"},"content":"        Launch the application by double-clicking only as a last resort if the command does not work.","lastModifiedDate":"2021-04-10"},{"lineNumber":767,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":768,"author":{"gitId":"AhQuanz"},"content":"2. Saving window size and location preferences.","lastModifiedDate":"2021-04-10"},{"lineNumber":769,"author":{"gitId":"AhQuanz"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2021-04-09"},{"lineNumber":770,"author":{"gitId":"AhQuanz"},"content":"    2. Re-launch the application by following either the command or by double-clicking.","lastModifiedDate":"2021-04-09"},{"lineNumber":771,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":772,"author":{"gitId":"AhQuanz"},"content":"        Expected: The most recent window size and location is retained.","lastModifiedDate":"2021-04-09"},{"lineNumber":773,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":774,"author":{"gitId":"AhQuanz"},"content":"3. Saving application launch display list.","lastModifiedDate":"2021-04-10"},{"lineNumber":775,"author":{"gitId":"AhQuanz"},"content":"    1. Launch the application and run either `listorders` , `listcustomers` or `listcheeses`. Close the window.","lastModifiedDate":"2021-04-10"},{"lineNumber":776,"author":{"gitId":"AhQuanz"},"content":"    2. Re-launch the application by following either the command or by double-clicking.","lastModifiedDate":"2021-04-09"},{"lineNumber":777,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":778,"author":{"gitId":"AhQuanz"},"content":"        Expected: The most recent list depending on last `list` command will be displayed.","lastModifiedDate":"2021-04-09"},{"lineNumber":779,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":780,"author":{"gitId":"AhQuanz"},"content":"### Adding a customer","lastModifiedDate":"2021-04-09"},{"lineNumber":781,"author":{"gitId":"AhQuanz"},"content":"1. Adding a customer into CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":782,"author":{"gitId":"AhQuanz"},"content":"    1. Prerequisites:","lastModifiedDate":"2021-04-10"},{"lineNumber":783,"author":{"gitId":"AhQuanz"},"content":"       - Arguments are valid and compulsory parameters are provided. No duplicated phone number exist in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":784,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":785,"author":{"gitId":"AhQuanz"},"content":"    2. Test case: `addcustomer n/Tim p/96284715 e/tim@example.com a/Blk 55 Woodlands Street 99, #99-23`.","lastModifiedDate":"2021-04-10"},{"lineNumber":786,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":787,"author":{"gitId":"AhQuanz"},"content":"        Expected: Customer is added into CHIM. The new customer appears at the bottom.","lastModifiedDate":"2021-04-10"},{"lineNumber":788,"author":{"gitId":"AhQuanz"},"content":"        Details of the new customer is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":789,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":790,"author":{"gitId":"AhQuanz"},"content":"    3. Test case: `addcustomer n/Jerry p/841264562 e/jerry@example.com a/Blk 381 Yishun Ave 23, #55-25`.","lastModifiedDate":"2021-04-10"},{"lineNumber":791,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":792,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to above test case.","lastModifiedDate":"2021-04-10"},{"lineNumber":793,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":794,"author":{"gitId":"AhQuanz"},"content":"    4. Test case: `addcustomer n/Mary p/841264562 e/mary@example.com a/Blk 654 Jurong East Street 21, #54-84`.","lastModifiedDate":"2021-04-10"},{"lineNumber":795,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":796,"author":{"gitId":"AhQuanz"},"content":"        Expected: No customer is added , Error message stating that an customer with supplied phone number exist in CHIM.","lastModifiedDate":"2021-04-09"},{"lineNumber":797,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":798,"author":{"gitId":"AhQuanz"},"content":"    5. Test case: \u0027addcustomer\u0027.","lastModifiedDate":"2021-04-10"},{"lineNumber":799,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":800,"author":{"gitId":"AhQuanz"},"content":"        Expected: No customer is added , Error message with command requirements is shown in status message.","lastModifiedDate":"2021-04-09"},{"lineNumber":801,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":802,"author":{"gitId":"AhQuanz"},"content":"    6. Other incorrect / missing compulsory fields.","lastModifiedDate":"2021-04-10"},{"lineNumber":803,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":804,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to previous.","lastModifiedDate":"2021-04-10"},{"lineNumber":805,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":806,"author":{"gitId":"AhQuanz"},"content":"### Editing a customer","lastModifiedDate":"2021-04-09"},{"lineNumber":807,"author":{"gitId":"AhQuanz"},"content":"1. Editing a customer in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":808,"author":{"gitId":"AhQuanz"},"content":"    1. Prerequisites:","lastModifiedDate":"2021-04-10"},{"lineNumber":809,"author":{"gitId":"AhQuanz"},"content":"       - There are some customer in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":810,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":811,"author":{"gitId":"AhQuanz"},"content":"    2. Test case: `editcustomer 1 n/Berry`.","lastModifiedDate":"2021-04-10"},{"lineNumber":812,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":813,"author":{"gitId":"AhQuanz"},"content":"        Expected: The name of the first customer in `listcustomers` is updated to Berry.","lastModifiedDate":"2021-04-10"},{"lineNumber":814,"author":{"gitId":"AhQuanz"},"content":"        Details of the customer is as shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":815,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":816,"author":{"gitId":"AhQuanz"},"content":"    3. Test case: `editcustomer 1 p/x` (where x is another customer\u0027s phone number).","lastModifiedDate":"2021-04-10"},{"lineNumber":817,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":818,"author":{"gitId":"AhQuanz"},"content":"        Expected: No customer is edited, Error message is shown in status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":819,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":820,"author":{"gitId":"AhQuanz"},"content":"    4. Test case: `editcustomer`.","lastModifiedDate":"2021-04-10"},{"lineNumber":821,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":822,"author":{"gitId":"AhQuanz"},"content":"        Expected: No customer is edited, Error message with command requirements is shown in the status message.","lastModifiedDate":"2021-04-09"},{"lineNumber":823,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":824,"author":{"gitId":"AhQuanz"},"content":"    5. Test case: `editcustomer 0 n/Sally`.","lastModifiedDate":"2021-04-10"},{"lineNumber":825,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":826,"author":{"gitId":"AhQuanz"},"content":"        Expected: Similar to previous.","lastModifiedDate":"2021-04-10"},{"lineNumber":827,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":828,"author":{"gitId":"AhQuanz"},"content":"    6. Other incorrect `editcustomer` to try: `editcustomer x` (where x is an index larger than the list size).","lastModifiedDate":"2021-04-10"},{"lineNumber":829,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":830,"author":{"gitId":"AhQuanz"},"content":"        Expected: Similar to previous.","lastModifiedDate":"2021-04-10"},{"lineNumber":831,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":832,"author":{"gitId":"AhQuanz"},"content":"### Deleting a customer","lastModifiedDate":"2021-04-09"},{"lineNumber":833,"author":{"gitId":"AhQuanz"},"content":"1. Deleting a customer in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":834,"author":{"gitId":"AhQuanz"},"content":"    1. Prerequisites:","lastModifiedDate":"2021-04-10"},{"lineNumber":835,"author":{"gitId":"AhQuanz"},"content":"       - There are some customer in CHIM, customer with phone number provided exist in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":836,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":837,"author":{"gitId":"AhQuanz"},"content":"    2. Test case: `deletecustomer p/87438807`.","lastModifiedDate":"2021-04-10"},{"lineNumber":838,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":839,"author":{"gitId":"AhQuanz"},"content":"        Expected: The customer with phone number of 87438807 is deleted. Details of the deleted customer is as shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":840,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":841,"author":{"gitId":"AhQuanz"},"content":"    3. Test case: `deletecustomer`.","lastModifiedDate":"2021-04-10"},{"lineNumber":842,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":843,"author":{"gitId":"AhQuanz"},"content":"        Expected: No customer is deleted, Error messsage with command requirements is shown in the status message.","lastModifiedDate":"2021-04-09"},{"lineNumber":844,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":845,"author":{"gitId":"AhQuanz"},"content":"    4. Other incorrect `deletecustomer` to try: `deletecustomer p/x`(where x is a phone number does not exist in CHIM).","lastModifiedDate":"2021-04-10"},{"lineNumber":846,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":847,"author":{"gitId":"AhQuanz"},"content":"### Finding customers","lastModifiedDate":"2021-04-09"},{"lineNumber":848,"author":{"gitId":"AhQuanz"},"content":"1. Finding a customer in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":849,"author":{"gitId":"AhQuanz"},"content":"    1. Prerequisites:","lastModifiedDate":"2021-04-10"},{"lineNumber":850,"author":{"gitId":"AhQuanz"},"content":"       - There are some customer in CHIM, at least 1 optional field is provided.","lastModifiedDate":"2021-04-10"},{"lineNumber":851,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":852,"author":{"gitId":"AhQuanz"},"content":"    2. Test case: `findcustomer n/A B C`.","lastModifiedDate":"2021-04-10"},{"lineNumber":853,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":854,"author":{"gitId":"AhQuanz"},"content":"        Expected: Customers with name containing prefix of either `A` , `B` or `C` will be displayed.","lastModifiedDate":"2021-04-10"},{"lineNumber":855,"author":{"gitId":"AhQuanz"},"content":"        i.e `A` will match alice , Alice and Marry anderson.","lastModifiedDate":"2021-04-10"},{"lineNumber":856,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":857,"author":{"gitId":"AhQuanz"},"content":"    3. Test case: `findcustomer n/A B C p/9 8`.","lastModifiedDate":"2021-04-10"},{"lineNumber":858,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":859,"author":{"gitId":"AhQuanz"},"content":"        Expected: Customers with name containing prefix of either `A` , `B` or `C` and phone number of prefix `9` or `8`","lastModifiedDate":"2021-04-10"},{"lineNumber":860,"author":{"gitId":"AhQuanz"},"content":"        will be displayed.","lastModifiedDate":"2021-04-10"},{"lineNumber":861,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":862,"author":{"gitId":"AhQuanz"},"content":"   4. Test case : `findcustomer`.","lastModifiedDate":"2021-04-10"},{"lineNumber":863,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":864,"author":{"gitId":"AhQuanz"},"content":"        Expected: Error message with command requirements is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":865,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":866,"author":{"gitId":"AhQuanz"},"content":"    5. Other incorrect `findcustomer` to try: include any invalid keyword prefix like `findcustomer n/A B C u/TEST`.","lastModifiedDate":"2021-04-10"},{"lineNumber":867,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":868,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to previous.","lastModifiedDate":"2021-04-10"},{"lineNumber":869,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":870,"author":{"gitId":"AhQuanz"},"content":"### Listing Customers","lastModifiedDate":"2021-04-09"},{"lineNumber":871,"author":{"gitId":"AhQuanz"},"content":"1. Listing all customers in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":872,"author":{"gitId":"AhQuanz"},"content":"    1. Test case: `listcustomers`.","lastModifiedDate":"2021-04-10"},{"lineNumber":873,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":874,"author":{"gitId":"AhQuanz"},"content":"        Expected: all customers are listed.","lastModifiedDate":"2021-04-10"},{"lineNumber":875,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":876,"author":{"gitId":"AhQuanz"},"content":"### Adding an Order","lastModifiedDate":"2021-04-10"},{"lineNumber":877,"author":{"gitId":"AhQuanz"},"content":"1. Adding an Order into CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":878,"author":{"gitId":"AhQuanz"},"content":"    1. Prerequisites:","lastModifiedDate":"2021-04-10"},{"lineNumber":879,"author":{"gitId":"AhQuanz"},"content":"       - Arguments are valid and compulsory parameters are provided.","lastModifiedDate":"2021-04-10"},{"lineNumber":880,"author":{"gitId":"AhQuanz"},"content":"       - There are some customer in CHIM, customer with phone number provided exist in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":881,"author":{"gitId":"AhQuanz"},"content":"       - `ORDER_DATE` must be any date up to current date , and not in the future.","lastModifiedDate":"2021-04-10"},{"lineNumber":882,"author":{"gitId":"AhQuanz"},"content":"       - If `ORDER_DATE` is not specified, it will be defaulted to current date.","lastModifiedDate":"2021-04-10"},{"lineNumber":883,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":884,"author":{"gitId":"AhQuanz"},"content":"    2. Test case: `addorder t/Mascarpone q/50 p/99272758`.","lastModifiedDate":"2021-04-10"},{"lineNumber":885,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":886,"author":{"gitId":"AhQuanz"},"content":"        Expected: A new order is added in CHIM , the new order will appear at the bottom of the list.","lastModifiedDate":"2021-04-10"},{"lineNumber":887,"author":{"gitId":"AhQuanz"},"content":"        The details of the order will be shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":888,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":889,"author":{"gitId":"AhQuanz"},"content":"    3. Test case: `addorder t/Mascarpone q/50 p/99272758 d/9/4/2021`","lastModifiedDate":"2021-04-10"},{"lineNumber":890,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":891,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to previous.","lastModifiedDate":"2021-04-10"},{"lineNumber":892,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":893,"author":{"gitId":"AhQuanz"},"content":"    4. Test case: `addorder`.","lastModifiedDate":"2021-04-10"},{"lineNumber":894,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":895,"author":{"gitId":"AhQuanz"},"content":"        Expected: No new orders are added, Error message with command requirements is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":896,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":897,"author":{"gitId":"AhQuanz"},"content":"    5. Other incorrect / missing parameters to try: `addorder t/Mascarpone`, `addorder u/Test` and more.","lastModifiedDate":"2021-04-10"},{"lineNumber":898,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":899,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to previous.","lastModifiedDate":"2021-04-10"},{"lineNumber":900,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":901,"author":{"gitId":"AhQuanz"},"content":"### Editing an Order","lastModifiedDate":"2021-04-10"},{"lineNumber":902,"author":{"gitId":"AhQuanz"},"content":"1. Editing an order in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":903,"author":{"gitId":"AhQuanz"},"content":"    1. Prerequisites:","lastModifiedDate":"2021-04-10"},{"lineNumber":904,"author":{"gitId":"AhQuanz"},"content":"        - Arguments are valid and at least 1 optional fields must be provided.","lastModifiedDate":"2021-04-10"},{"lineNumber":905,"author":{"gitId":"AhQuanz"},"content":"        - There are some customer in CHIM, customer with phone number provided exist in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":906,"author":{"gitId":"AhQuanz"},"content":"        - `ORDER_DATE` must be any date up to current date , and not in the future.","lastModifiedDate":"2021-04-10"},{"lineNumber":907,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":908,"author":{"gitId":"AhQuanz"},"content":"    2. Test case: `editorder 1 t/Gruyere`.","lastModifiedDate":"2021-04-10"},{"lineNumber":909,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":910,"author":{"gitId":"AhQuanz"},"content":"        Expected: The cheese type of the first order in `listorders` will be edited to `Gruyere`.","lastModifiedDate":"2021-04-10"},{"lineNumber":911,"author":{"gitId":"AhQuanz"},"content":"        The order details will be shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":912,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":913,"author":{"gitId":"AhQuanz"},"content":"    3. Test case: `editorder 1 q/10 d/9/4/2021`.","lastModifiedDate":"2021-04-10"},{"lineNumber":914,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":915,"author":{"gitId":"AhQuanz"},"content":"        Expected: The quantity of the first order in `listorders` will be edited to `10` and order date will be updated to `9/4/2021`.","lastModifiedDate":"2021-04-10"},{"lineNumber":916,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":917,"author":{"gitId":"AhQuanz"},"content":"    4. Test case: `editorder 0`.","lastModifiedDate":"2021-04-10"},{"lineNumber":918,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":919,"author":{"gitId":"AhQuanz"},"content":"        Expected: No order is edited, Error message with command requires is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":920,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":921,"author":{"gitId":"AhQuanz"},"content":"    5. Test case: `editorder 1 d/31/12/9999`.","lastModifiedDate":"2021-04-10"},{"lineNumber":922,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":923,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to previous.","lastModifiedDate":"2021-04-10"},{"lineNumber":924,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":925,"author":{"gitId":"AhQuanz"},"content":"    6. Other incorrect / extra parameters.","lastModifiedDate":"2021-04-10"},{"lineNumber":926,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":927,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to previous.","lastModifiedDate":"2021-04-10"},{"lineNumber":928,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":929,"author":{"gitId":"AhQuanz"},"content":"### Deleting an Order","lastModifiedDate":"2021-04-10"},{"lineNumber":930,"author":{"gitId":"AhQuanz"},"content":"1. Deleting an order in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":931,"author":{"gitId":"AhQuanz"},"content":"    1. Prerequisites:","lastModifiedDate":"2021-04-10"},{"lineNumber":932,"author":{"gitId":"AhQuanz"},"content":"        - There are some orders in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":933,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":934,"author":{"gitId":"AhQuanz"},"content":"    2. Test case: `deleteorder 1`.","lastModifiedDate":"2021-04-10"},{"lineNumber":935,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":936,"author":{"gitId":"AhQuanz"},"content":"        Expected: Order is deleted , order details is shown in status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":937,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":938,"author":{"gitId":"AhQuanz"},"content":"    3. Test case: `deleteorder 0`.","lastModifiedDate":"2021-04-10"},{"lineNumber":939,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":940,"author":{"gitId":"AhQuanz"},"content":"        Expected: No order is deleted, Error message is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":941,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":942,"author":{"gitId":"AhQuanz"},"content":"    4. Other incorrect commands to try: `deleteorder x` (where x is a negative index or index outside of the number of orders).","lastModifiedDate":"2021-04-10"},{"lineNumber":943,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":944,"author":{"gitId":"AhQuanz"},"content":"### Finding Orders","lastModifiedDate":"2021-04-10"},{"lineNumber":945,"author":{"gitId":"AhQuanz"},"content":"1. Finding orders in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":946,"author":{"gitId":"AhQuanz"},"content":"    1. Prerequisites:","lastModifiedDate":"2021-04-10"},{"lineNumber":947,"author":{"gitId":"AhQuanz"},"content":"        - There are some orders in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":948,"author":{"gitId":"AhQuanz"},"content":"        - Arguments are valid and at least 1 optional fields must be provided.","lastModifiedDate":"2021-04-10"},{"lineNumber":949,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":950,"author":{"gitId":"AhQuanz"},"content":"    2. Test case: `findorder t/Brie Cam`.","lastModifiedDate":"2021-04-10"},{"lineNumber":951,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":952,"author":{"gitId":"AhQuanz"},"content":"        Expected: Orders with cheese type containing of `Brie` or `Cam` will be displayed.","lastModifiedDate":"2021-04-10"},{"lineNumber":953,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":954,"author":{"gitId":"AhQuanz"},"content":"    3. Test case: `findorder t/Brie Cam p/9 8`","lastModifiedDate":"2021-04-10"},{"lineNumber":955,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":956,"author":{"gitId":"AhQuanz"},"content":"        Expected: Orders with cheese type containing of `Brie` or `Cam`","lastModifiedDate":"2021-04-10"},{"lineNumber":957,"author":{"gitId":"AhQuanz"},"content":"        and Customer phone number containing prefix of `9` or `8` will be displayed.","lastModifiedDate":"2021-04-10"},{"lineNumber":958,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":959,"author":{"gitId":"AhQuanz"},"content":"    4. Test case: `findorder`","lastModifiedDate":"2021-04-10"},{"lineNumber":960,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":961,"author":{"gitId":"AhQuanz"},"content":"        Expected: Error message with command requires is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":962,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":963,"author":{"gitId":"AhQuanz"},"content":"    5. Any extra parameters","lastModifiedDate":"2021-04-10"},{"lineNumber":964,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":965,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to previous","lastModifiedDate":"2021-04-10"},{"lineNumber":966,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":967,"author":{"gitId":"AhQuanz"},"content":"### Listing Orders","lastModifiedDate":"2021-04-10"},{"lineNumber":968,"author":{"gitId":"AhQuanz"},"content":"1. Listing all orders in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":969,"author":{"gitId":"AhQuanz"},"content":"    1. Test case: `listorders`.","lastModifiedDate":"2021-04-10"},{"lineNumber":970,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":971,"author":{"gitId":"AhQuanz"},"content":"       Expected: all orders in CHIM are listed.","lastModifiedDate":"2021-04-10"},{"lineNumber":972,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":973,"author":{"gitId":"AhQuanz"},"content":"### Add a Cheese","lastModifiedDate":"2021-04-09"},{"lineNumber":974,"author":{"gitId":"AhQuanz"},"content":"1. Adding a cheese into CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":975,"author":{"gitId":"AhQuanz"},"content":"    1. Prerequisites:","lastModifiedDate":"2021-04-10"},{"lineNumber":976,"author":{"gitId":"AhQuanz"},"content":"        - Arguments are valid and compulsory parameters are provided.","lastModifiedDate":"2021-04-10"},{"lineNumber":977,"author":{"gitId":"AhQuanz"},"content":"        - If `MANUFACTURE_DATE` is given , it must be any date up to current date , not in the future.","lastModifiedDate":"2021-04-10"},{"lineNumber":978,"author":{"gitId":"AhQuanz"},"content":"        - If `MANUFACTURE_DATE` is not given, it defaults to current date.","lastModifiedDate":"2021-04-10"},{"lineNumber":979,"author":{"gitId":"AhQuanz"},"content":"        - `EXPIRY_DATE` if given must occur after `MANUFACTURE_DATE`.","lastModifiedDate":"2021-04-10"},{"lineNumber":980,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":981,"author":{"gitId":"AhQuanz"},"content":"    2. Test case: `addcheese t/Gruyere q/4`.","lastModifiedDate":"2021-04-10"},{"lineNumber":982,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":983,"author":{"gitId":"AhQuanz"},"content":"        Expected: New cheese is added , The list will increase by 4 cheese with type `Gruyere`.","lastModifiedDate":"2021-04-10"},{"lineNumber":984,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":985,"author":{"gitId":"AhQuanz"},"content":"    3. Test case: `addcheese t/Gruyere q/10 d/9/4/2021 e/20/4/2021`.","lastModifiedDate":"2021-04-10"},{"lineNumber":986,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":987,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to previous.","lastModifiedDate":"2021-04-10"},{"lineNumber":988,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":989,"author":{"gitId":"AhQuanz"},"content":"    4. Test case: `addcheese t/Gruyere q/10 e/9/4/2021`.","lastModifiedDate":"2021-04-10"},{"lineNumber":990,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":991,"author":{"gitId":"AhQuanz"},"content":"        Expected: Error message will be displayed in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":992,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":993,"author":{"gitId":"AhQuanz"},"content":"    5. Test case: `addcheese t/Gruyere q/10 d/31/12/9999`.","lastModifiedDate":"2021-04-10"},{"lineNumber":994,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":995,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to previous.","lastModifiedDate":"2021-04-10"},{"lineNumber":996,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":997,"author":{"gitId":"AhQuanz"},"content":"    6. Any extra parameters or invalid parameters","lastModifiedDate":"2021-04-10"},{"lineNumber":998,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":999,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to previous.","lastModifiedDate":"2021-04-10"},{"lineNumber":1000,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1001,"author":{"gitId":"AhQuanz"},"content":"### Edit a Cheese","lastModifiedDate":"2021-04-09"},{"lineNumber":1002,"author":{"gitId":"AhQuanz"},"content":"1. Edit a cheese in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":1003,"author":{"gitId":"AhQuanz"},"content":"    1. Prerequisites:","lastModifiedDate":"2021-04-10"},{"lineNumber":1004,"author":{"gitId":"AhQuanz"},"content":"        - There are some cheeses in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":1005,"author":{"gitId":"AhQuanz"},"content":"        - Arguments are valid and at least 1 optional fields must be provided.","lastModifiedDate":"2021-04-10"},{"lineNumber":1006,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1007,"author":{"gitId":"AhQuanz"},"content":"    2. Test case: `editcheese x t/Parmesan` (where x is the index of the cheese that is not assigned)","lastModifiedDate":"2021-04-10"},{"lineNumber":1008,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1009,"author":{"gitId":"AhQuanz"},"content":"       Expected: The cheese type of the x cheese in `listcheeses` will be edited to `Parmesan`.","lastModifiedDate":"2021-04-10"},{"lineNumber":1010,"author":{"gitId":"AhQuanz"},"content":"       The cheese details will be shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":1011,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1012,"author":{"gitId":"AhQuanz"},"content":"    3. Test case: `editcheese y t/Parmesan` (where y is the index of a cheese that is assigned)","lastModifiedDate":"2021-04-10"},{"lineNumber":1013,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1014,"author":{"gitId":"AhQuanz"},"content":"        Expected: No cheese is edited , Error message will be displayed in the status message","lastModifiedDate":"2021-04-10"},{"lineNumber":1015,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1016,"author":{"gitId":"AhQuanz"},"content":"    4. Test case: `editcheese x d/31/12/9999` (where x is the index of the cheese that is not assigned)","lastModifiedDate":"2021-04-10"},{"lineNumber":1017,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1018,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to previous","lastModifiedDate":"2021-04-10"},{"lineNumber":1019,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1020,"author":{"gitId":"AhQuanz"},"content":"    5. Test case: `editcheese x e/DATE` (where DATE occurs before `MANUFACTURE_DATE`)","lastModifiedDate":"2021-04-10"},{"lineNumber":1021,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1022,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to previous","lastModifiedDate":"2021-04-10"},{"lineNumber":1023,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1024,"author":{"gitId":"AhQuanz"},"content":"   6. Any extra parameters or invalid parameters","lastModifiedDate":"2021-04-10"},{"lineNumber":1025,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1026,"author":{"gitId":"AhQuanz"},"content":"      Expected: similar to previous.","lastModifiedDate":"2021-04-10"},{"lineNumber":1027,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1028,"author":{"gitId":"AhQuanz"},"content":"### Delete a Cheese","lastModifiedDate":"2021-04-09"},{"lineNumber":1029,"author":{"gitId":"AhQuanz"},"content":"1. Deleting a cheese in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":1030,"author":{"gitId":"AhQuanz"},"content":"    1. Prerequisites:","lastModifiedDate":"2021-04-10"},{"lineNumber":1031,"author":{"gitId":"AhQuanz"},"content":"        - There are some cheese in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":1032,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1033,"author":{"gitId":"AhQuanz"},"content":"    2. Test case: `deletecheese x` (where x is the index of a cheese that is not assigned).","lastModifiedDate":"2021-04-10"},{"lineNumber":1034,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1035,"author":{"gitId":"AhQuanz"},"content":"       Expected: cheese is deleted , order details is shown in status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":1036,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1037,"author":{"gitId":"AhQuanz"},"content":"    3. Test case: `deletecheese y` (where y is the index of a cheese that is assigned).","lastModifiedDate":"2021-04-10"},{"lineNumber":1038,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1039,"author":{"gitId":"AhQuanz"},"content":"        Expected: no cheese is deleted, Error message is shown in status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":1040,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1041,"author":{"gitId":"AhQuanz"},"content":"    4. Test case: `deletecheese 0`.","lastModifiedDate":"2021-04-10"},{"lineNumber":1042,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1043,"author":{"gitId":"AhQuanz"},"content":"       Expected: No cheese is deleted, Error message is shown in the status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":1044,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1045,"author":{"gitId":"AhQuanz"},"content":"    5. Other incorrect commands to try: `deleteorder x` (where x is a negative index or index outside of the number of cheese).","lastModifiedDate":"2021-04-10"},{"lineNumber":1046,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1047,"author":{"gitId":"AhQuanz"},"content":"### Finding Cheeses","lastModifiedDate":"2021-04-10"},{"lineNumber":1048,"author":{"gitId":"AhQuanz"},"content":"1. Finding cheeses in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":1049,"author":{"gitId":"AhQuanz"},"content":"    1. Prerequisites:","lastModifiedDate":"2021-04-10"},{"lineNumber":1050,"author":{"gitId":"AhQuanz"},"content":"        - There are some cheeses in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":1051,"author":{"gitId":"AhQuanz"},"content":"        - Arguments are valid and at least 1 optional fields must be provided.","lastModifiedDate":"2021-04-10"},{"lineNumber":1052,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1053,"author":{"gitId":"AhQuanz"},"content":"    2. Test case: `findcheese t/Cam Brie`","lastModifiedDate":"2021-04-10"},{"lineNumber":1054,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1055,"author":{"gitId":"AhQuanz"},"content":"        Expected: Cheese with cheese type that contains the prefix of `Cam` or `Brie` will be shown","lastModifiedDate":"2021-04-10"},{"lineNumber":1056,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1057,"author":{"gitId":"AhQuanz"},"content":"    3. Test case: `findcheese t/Cam Brie s/assigned`","lastModifiedDate":"2021-04-10"},{"lineNumber":1058,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1059,"author":{"gitId":"AhQuanz"},"content":"       Expected: Cheese with cheese type that contains the prefix of `Cam` or `Brie`","lastModifiedDate":"2021-04-10"},{"lineNumber":1060,"author":{"gitId":"AhQuanz"},"content":"            and assignment status of `assigned` will be shown.","lastModifiedDate":"2021-04-10"},{"lineNumber":1061,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1062,"author":{"gitId":"AhQuanz"},"content":"    4. Test case: `findcheese s/TEST`","lastModifiedDate":"2021-04-10"},{"lineNumber":1063,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1064,"author":{"gitId":"AhQuanz"},"content":"        Expected: Error message will be shown in the status message","lastModifiedDate":"2021-04-10"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1066,"author":{"gitId":"AhQuanz"},"content":"    5. Test case: `findcheese`","lastModifiedDate":"2021-04-10"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1068,"author":{"gitId":"AhQuanz"},"content":"        Expected: Error message with command requirements is shown in status message.","lastModifiedDate":"2021-04-10"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1070,"author":{"gitId":"AhQuanz"},"content":"    6. Any extra parameters","lastModifiedDate":"2021-04-10"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1072,"author":{"gitId":"AhQuanz"},"content":"        Expected: similar to previous","lastModifiedDate":"2021-04-10"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1074,"author":{"gitId":"AhQuanz"},"content":"### Listing Cheeses","lastModifiedDate":"2021-04-10"},{"lineNumber":1075,"author":{"gitId":"AhQuanz"},"content":"1. Listing all cheeses in CHIM.","lastModifiedDate":"2021-04-10"},{"lineNumber":1076,"author":{"gitId":"AhQuanz"},"content":"    1. Test case: `listcheeses`.","lastModifiedDate":"2021-04-10"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1078,"author":{"gitId":"AhQuanz"},"content":"       Expected: all cheeses in CHIM are listed","lastModifiedDate":"2021-04-10"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":1081,"author":{"gitId":"AhQuanz"},"content":"### Clear data","lastModifiedDate":"2021-04-09"},{"lineNumber":1082,"author":{"gitId":"AhQuanz"},"content":"1. Clearing all data in the inventory","lastModifiedDate":"2021-04-09"},{"lineNumber":1083,"author":{"gitId":"AhQuanz"},"content":"    1. Test case: `clear`","lastModifiedDate":"2021-04-09"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1085,"author":{"gitId":"AhQuanz"},"content":"        Expected: All customers , orders and cheeses are cleared in CHIM","lastModifiedDate":"2021-04-09"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":1087,"author":{"gitId":"daniellau88"},"content":"## **Appendix: Efforts**","lastModifiedDate":"2021-04-11"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":1089,"author":{"gitId":"daniellau88"},"content":"Difficulty Level: 4 / 5","lastModifiedDate":"2021-04-11"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":1091,"author":{"gitId":"daniellau88"},"content":"Challenges Faced:","lastModifiedDate":"2021-04-11"},{"lineNumber":1092,"author":{"gitId":"daniellau88"},"content":"* Restructuring of models in `AB3` to fit the functional requirements of `CHIM` (Effort Required: 4 / 5)","lastModifiedDate":"2021-04-12"},{"lineNumber":1093,"author":{"gitId":"daniellau88"},"content":"  * Implementation of a normalized class structure","lastModifiedDate":"2021-04-11"},{"lineNumber":1094,"author":{"gitId":"daniellau88"},"content":"    * To properly manage the different types of dependencies between the 3 different entities in CHIM,","lastModifiedDate":"2021-04-11"},{"lineNumber":1095,"author":{"gitId":"daniellau88"},"content":"      we decided to implement a normalized class structure, where each entity is stored in a separate list,","lastModifiedDate":"2021-04-11"},{"lineNumber":1096,"author":{"gitId":"daniellau88"},"content":"      and the relationship between them are specified using IDs.","lastModifiedDate":"2021-04-11"},{"lineNumber":1097,"author":{"gitId":"daniellau88"},"content":"    * For example, in CHIM, a `Cheese` assigned to an `Order` would have the `Order`\u0027s ID while unassigned","lastModifiedDate":"2021-04-11"},{"lineNumber":1098,"author":{"gitId":"daniellau88"},"content":"      `Cheese`s will not contain any `Order`\u0027s ID.","lastModifiedDate":"2021-04-11"},{"lineNumber":1099,"author":{"gitId":"daniellau88"},"content":"  * Additional features implemented along with the architecture such as Delete Cascading, Unique ID","lastModifiedDate":"2021-04-11"},{"lineNumber":1100,"author":{"gitId":"daniellau88"},"content":"    Generation and Two-way Storage Fields","lastModifiedDate":"2021-04-11"},{"lineNumber":1101,"author":{"gitId":"daniellau88"},"content":"    * For example, each object needs to have a unique ID, to ensure that the relationship between 2 objects","lastModifiedDate":"2021-04-11"},{"lineNumber":1102,"author":{"gitId":"daniellau88"},"content":"      will not collide with one other.","lastModifiedDate":"2021-04-11"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":1104,"author":{"gitId":"daniellau88"},"content":"* Modifying `AB3`\u0027s display to be able to switch between the 3 different lists (`Cheese`, `Order`","lastModifiedDate":"2021-04-12"},{"lineNumber":1105,"author":{"gitId":"daniellau88"},"content":"  and `Customer`) (Effort Required: 4 / 5)","lastModifiedDate":"2021-04-11"},{"lineNumber":1106,"author":{"gitId":"daniellau88"},"content":"  * The existing panels in `AB3` was modified to allow display of `Cheese` and `Order` list, which contains different","lastModifiedDate":"2021-04-12"},{"lineNumber":1107,"author":{"gitId":"daniellau88"},"content":"    types of fields.","lastModifiedDate":"2021-04-11"},{"lineNumber":1108,"author":{"gitId":"daniellau88"},"content":"  * The UI also needs to be capable of switching between the different displays upon calling certain commands.","lastModifiedDate":"2021-04-11"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":1110,"author":{"gitId":"daniellau88"},"content":"    For example, the `listcheeses` command should be able to change the display to show the list of cheeses","lastModifiedDate":"2021-04-11"},{"lineNumber":1111,"author":{"gitId":"daniellau88"},"content":"    even if previously it was displaying a different list such as the `Customer` list.","lastModifiedDate":"2021-04-11"},{"lineNumber":1112,"author":{"gitId":"daniellau88"},"content":"* Implementation of the `add`, `delete`, `edit` and `find` command for `Order` and `Cheese` (Effort Required: 4 / 5)","lastModifiedDate":"2021-04-11"},{"lineNumber":1113,"author":{"gitId":"daniellau88"},"content":"  * The methods above (implemented in AB3 for the `Person`\u0027s class) were implemented for the new models","lastModifiedDate":"2021-04-11"},{"lineNumber":1114,"author":{"gitId":"daniellau88"},"content":"    `Order` and `Cheese`.","lastModifiedDate":"2021-04-11"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":1116,"author":{"gitId":"daniellau88"},"content":"    There were many considerations:","lastModifiedDate":"2021-04-11"},{"lineNumber":1117,"author":{"gitId":"daniellau88"},"content":"    * New types of fields (such as `Date`) needs to be able to be correctly parsed.","lastModifiedDate":"2021-04-11"},{"lineNumber":1118,"author":{"gitId":"daniellau88"},"content":"    * Invalid creation of entities need to be forbidden by doing extensive checking on the values given.","lastModifiedDate":"2021-04-11"},{"lineNumber":1119,"author":{"gitId":"daniellau88"},"content":"  * Extensive testing for the new commands, to ensure that they work as intended.","lastModifiedDate":"2021-04-11"},{"lineNumber":1120,"author":{"gitId":"daniellau88"},"content":"* Addition of limitations and validations for `AB3`\u0027s original operations (Effort required: 3 / 5)","lastModifiedDate":"2021-04-12"},{"lineNumber":1121,"author":{"gitId":"daniellau88"},"content":"  * To prevent incorrect edits to the data in CHIM, additional validations and limitations were added to it.","lastModifiedDate":"2021-04-11"},{"lineNumber":1122,"author":{"gitId":"daniellau88"},"content":"    These limitations came as a result of our rigorous testing of the system, to ensure that every operation performed","lastModifiedDate":"2021-04-11"},{"lineNumber":1123,"author":{"gitId":"daniellau88"},"content":"    in `CHIM` will lead to a valid final state.","lastModifiedDate":"2021-04-11"},{"lineNumber":1124,"author":{"gitId":"daniellau88"},"content":"  * Some limitations are:","lastModifiedDate":"2021-04-11"},{"lineNumber":1125,"author":{"gitId":"laurenlhy"},"content":"    * Disallowing edits on assigned `Order`s and `Cheese`s, to prevent unexpected changes.","lastModifiedDate":"2021-04-12"},{"lineNumber":1126,"author":{"gitId":"daniellau88"},"content":"    * Ensuring that the `ExpiryDate` of a `Cheese` is always after its `ManufactureDate`.","lastModifiedDate":"2021-04-11"},{"lineNumber":1127,"author":{"gitId":"daniellau88"},"content":"    * Restrict creation of dates to the time now to restrict completion of future orders.","lastModifiedDate":"2021-04-11"},{"lineNumber":1128,"author":{"gitId":"daniellau88"},"content":"* Addition of new commands to `CHIM` (e.g. `done`) (Effort Required: 5 / 5)","lastModifiedDate":"2021-04-11"},{"lineNumber":1129,"author":{"gitId":"daniellau88"},"content":"  * The `done` command was an entirely new command that needs to be implemented (where `Cheese`s are assigned to","lastModifiedDate":"2021-04-11"},{"lineNumber":1130,"author":{"gitId":"daniellau88"},"content":"    incomplete `Order`s to fulfil them). Since it involves interaction between the `Order` and `Cheese` class,","lastModifiedDate":"2021-04-11"},{"lineNumber":1131,"author":{"gitId":"daniellau88"},"content":"    the design of the logic needs to be precise, to ensure both entities are updated correctly.","lastModifiedDate":"2021-04-11"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":1133,"author":{"gitId":"daniellau88"},"content":"    For example, completed `Order`s need to have a `CompletedDate`, while all the `Cheese` in the `Order` needs","lastModifiedDate":"2021-04-11"},{"lineNumber":1134,"author":{"gitId":"daniellau88"},"content":"    to be marked `Assigned`.","lastModifiedDate":"2021-04-11"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":1136,"author":{"gitId":"daniellau88"},"content":"Achievements:","lastModifiedDate":"2021-04-11"},{"lineNumber":1137,"author":{"gitId":"daniellau88"},"content":"* Extensive testing for all `add` and `edit` commands to minimize bugs in the system.","lastModifiedDate":"2021-04-11"},{"lineNumber":1138,"author":{"gitId":"daniellau88"},"content":"* Toggling of displays for the different entities.","lastModifiedDate":"2021-04-11"},{"lineNumber":1139,"author":{"gitId":"daniellau88"},"content":"* Extensive checking to ensure accuracy of `CHIM`\u0027s state at any point in time.","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"AhQuanz":409,"laurenlhy":100,"weixue123":112,"daniellau88":125,"-":203,"aaronsms":190}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Documentation guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* The `docs/` folder is used for documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2020-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2020-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"* See the [_[official draw.io guide] **Using draw.io**_](https://drawio-app.com/tutorials)","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2020-06-07"}],"authorContributionMap":{"-":25,"aaronsms":1}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"   1. Run the `chim.Main` and try a few commands.","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [CHIM’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"weixue123":2,"-":53}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"   e.g. `chim.commons.StringUtilTest`","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"   e.g. `chim.storage.StorageManagerTest`","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"   e.g. `chim.logic.LogicManagerTest`","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"weixue123":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-02-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":"Cheese Inventory Management (CHIM) is a desktop app for managing the contacts, inventory, and orders of a home-based","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"cheese making business.","lastModifiedDate":"2021-02-26"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"The app is optimized for use via a Command Line Interface (CLI) while still having the","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"benefits of a Graphical User Interface (GUI). If you can type fast, CHIM can get your management tasks done","lastModifiedDate":"2021-02-26"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"faster than traditional GUI apps.","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"1. Ensure you have Java `11` or above installed in your computer. This check can be done with the command:","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"\u003e java --version","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"2. Download the latest release from the [GitHub repository](https://github.com/AY2021S2-CS2103-W16-2/tp/releases).","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"3. Navigate to the folder that contains the downloaded .jar file and run the application. For example,","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"\u003e ### Unix","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"\u003e cd ~/Downloads","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"\u003e java -jar chim.jar","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"\u003e ### Windows","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"\u003e cd C:\\Downloads","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"\u003e java -jar chim.jar","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"  e.g. in `addcustomer n/CUSTOMER_NAME`, `CUSTOMER_NAME` is a parameter that is to be used","lastModifiedDate":"2021-02-23"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"  as `addcustomer n/John Doe`.","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"  e.g. `addcheese t/CHEESE_TYPE q/QUANTITY [d/MANUFACTURE_DATE] [e/EXPIRY_DATE]` can be used as `addcheese t/Brie q/3 d/2021-01-12` or as `addcheese t/Brie q/3`.","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"laurenlhy"},"content":"* Parameters with trailing dots allows for inputting of multiple items.\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":"  e.g. `[t/TAG…]` means multiple tags can be specified.","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"  e.g. if the command specifies `n/CUSTOMER_NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/CUSTOMER_NAME` is also acceptable.","lastModifiedDate":"2021-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2021-02-23"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"laurenlhy"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `listcustomers`) will be","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"  e.g. if the command specifies `listcustomers 123`, it will be interpreted as `listcustomers`.","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"laurenlhy"},"content":"* Parameters expecting dates must be given in these formats: `DD/MM/YYYY` or `YYYY-MM-DD` or `MMM DD YYYY`,\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"  e.g. `31/03/2021` or `2021-03-31` or `Mar 31 2021` where `Mar` is case-sensitive.","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"* Parameters for dates will accept any day given in the range [1..31].","lastModifiedDate":"2021-04-09"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"  If the day is invalid for the month you have chosen, it will be trimmed to the latest valid day,\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"  e.g. `31/02/2021` will be edited to `28/02/2021` by CHIM.","lastModifiedDate":"2021-04-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-04-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":78,"author":{"gitId":"laurenlhy"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":80,"author":{"gitId":"laurenlhy"},"content":"![help message](images/helpMessage_CHIM.png)","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2021-04-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":85,"author":{"gitId":"laurenlhy"},"content":"### Features for Customers","lastModifiedDate":"2021-04-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":87,"author":{"gitId":"laurenlhy"},"content":"#### Listing customers: `listcustomers`","lastModifiedDate":"2021-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":89,"author":{"gitId":"laurenlhy"},"content":"Displays the customers in CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":91,"author":{"gitId":"laurenlhy"},"content":"Format: `listcustomers`","lastModifiedDate":"2021-04-07"},{"lineNumber":92,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":93,"author":{"gitId":"weixue123"},"content":"Example:","lastModifiedDate":"2021-04-09"},{"lineNumber":94,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":95,"author":{"gitId":"weixue123"},"content":"![list_customers](images/ug_examples/ListCustomers.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":96,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":97,"author":{"gitId":"laurenlhy"},"content":"#### Adding a customer: `addcustomer`","lastModifiedDate":"2021-04-07"},{"lineNumber":98,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":99,"author":{"gitId":"weixue123"},"content":"Adds a customer to CHIM.","lastModifiedDate":"2021-02-23"},{"lineNumber":100,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":101,"author":{"gitId":"laurenlhy"},"content":"Format: `addcustomer n/CUSTOMER_NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG…]​`","lastModifiedDate":"2021-04-07"},{"lineNumber":102,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":103,"author":{"gitId":"laurenlhy"},"content":"Example: `addcustomer n/John Doe p/61234567 e/johndoe@gmail.com a/Blk 436 Serangoon Gardens St 26 #01-01`","lastModifiedDate":"2021-04-07"},{"lineNumber":104,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"weixue123"},"content":"![add_customer_after](images/ug_examples/AddCustomerAfter.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":106,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":107,"author":{"gitId":"laurenlhy"},"content":"#### Editing a customer: `editcustomer`","lastModifiedDate":"2021-04-07"},{"lineNumber":108,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"laurenlhy"},"content":"Edits an existing customer in CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":110,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"laurenlhy"},"content":"Format: `editcustomer INDEX [n/CUSTOMER_NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG…]`","lastModifiedDate":"2021-04-07"},{"lineNumber":112,"author":{"gitId":"laurenlhy"},"content":"* At least one of the optional fields must be provided to edit the customer.","lastModifiedDate":"2021-04-07"},{"lineNumber":113,"author":{"gitId":"AhQuanz"},"content":"* The `INDEX` refers to the index number of the customer shown in `listcustomers`.","lastModifiedDate":"2021-04-10"},{"lineNumber":114,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"laurenlhy"},"content":"Example: `editcustomer 4 n/Jane Lim p/65558888`","lastModifiedDate":"2021-04-07"},{"lineNumber":116,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"weixue123"},"content":"Before: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":118,"author":{"gitId":"weixue123"},"content":"![edit_customer_before](images/ug_examples/EditCustomerBefore.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":119,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":120,"author":{"gitId":"weixue123"},"content":"After: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":121,"author":{"gitId":"weixue123"},"content":"![edit_customer_after](images/ug_examples/EditCustomerAfter.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":122,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":123,"author":{"gitId":"laurenlhy"},"content":"#### Deleting a customer: `deletecustomer`","lastModifiedDate":"2021-04-07"},{"lineNumber":124,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"laurenlhy"},"content":"Deletes a customer from the list of customers, using their phone number as an identifier.","lastModifiedDate":"2021-04-07"},{"lineNumber":126,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"weixue123"},"content":"If the customer has orders, their orders will be deleted by CHIM. Any cheeses assigned to those orders will also be deleted.","lastModifiedDate":"2021-04-09"},{"lineNumber":128,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"laurenlhy"},"content":"Format: `deletecustomer p/PHONE_NUMBER`","lastModifiedDate":"2021-04-07"},{"lineNumber":130,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"laurenlhy"},"content":"Example: `deletecustomer p/61234567`","lastModifiedDate":"2021-04-07"},{"lineNumber":132,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"weixue123"},"content":"Before: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":134,"author":{"gitId":"weixue123"},"content":"![delete_customer_before](images/ug_examples/DeleteCustomerBefore.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":135,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":136,"author":{"gitId":"weixue123"},"content":"After: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":137,"author":{"gitId":"weixue123"},"content":"![delete_customer_after](images/ug_examples/DeleteCustomerAfter.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":138,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":139,"author":{"gitId":"laurenlhy"},"content":"#### Finding customers: `findcustomer`","lastModifiedDate":"2021-04-07"},{"lineNumber":140,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"laurenlhy"},"content":"Searches for a customer in CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":142,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"laurenlhy"},"content":"Format: `findcustomer [n/NAME_KEYWORDS…] [p/PHONE_KEYWORDS…] [e/EMAIL_KEYWORDS…] [a/ADDRESS_KEYWORDS…] `","lastModifiedDate":"2021-04-07"},{"lineNumber":144,"author":{"gitId":"laurenlhy"},"content":"* At least one of the optional fields must be provided to find a customer.","lastModifiedDate":"2021-04-07"},{"lineNumber":145,"author":{"gitId":"laurenlhy"},"content":"* Search is case-insensitive, e.g. Betty will match betty.","lastModifiedDate":"2021-04-07"},{"lineNumber":146,"author":{"gitId":"AhQuanz"},"content":"* Search will search by given keywords as prefix, e.g. Bet will match Betty as well as Amy Beth.","lastModifiedDate":"2021-04-10"},{"lineNumber":147,"author":{"gitId":"weixue123"},"content":"* Search will find any customers which match **all** of the given fields,","lastModifiedDate":"2021-04-09"},{"lineNumber":148,"author":{"gitId":"AhQuanz"},"content":"e.g. `findcustomer n/Betty Yu p/9123 81` will find customers with name that contains a prefix of `Betty` or `Yu` **and** a phone number with prefix `9123` or `81`.","lastModifiedDate":"2021-04-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-04-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":152,"author":{"gitId":"laurenlhy"},"content":"* `findcustomer n/char p/9321`","lastModifiedDate":"2021-04-07"},{"lineNumber":153,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":154,"author":{"gitId":"weixue123"},"content":"![find_customer_1](images/ug_examples/FindCustomer1.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":155,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":156,"author":{"gitId":"laurenlhy"},"content":"* `findcustomer a/Geylang Serangoon`","lastModifiedDate":"2021-04-07"},{"lineNumber":157,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":158,"author":{"gitId":"weixue123"},"content":"![find_customer_2](images/ug_examples/FindCustomer2.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":159,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":160,"author":{"gitId":"laurenlhy"},"content":"### Features for Cheeses","lastModifiedDate":"2021-04-07"},{"lineNumber":161,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"laurenlhy"},"content":"#### Listing cheese: `listcheeses`","lastModifiedDate":"2021-04-07"},{"lineNumber":163,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":164,"author":{"gitId":"laurenlhy"},"content":"Displays all cheeses in CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":166,"author":{"gitId":"laurenlhy"},"content":"Format: `listcheeses`","lastModifiedDate":"2021-04-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":168,"author":{"gitId":"weixue123"},"content":"Example:","lastModifiedDate":"2021-04-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":170,"author":{"gitId":"weixue123"},"content":"![list_cheeses](images/ug_examples/ListCheeses.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":172,"author":{"gitId":"laurenlhy"},"content":"#### Adding a cheese: `addcheese`","lastModifiedDate":"2021-04-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":174,"author":{"gitId":"laurenlhy"},"content":"Adds a cheese to CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":176,"author":{"gitId":"laurenlhy"},"content":"Format: `addcheese t/CHEESE_TYPE q/QUANTITY [d/MANUFACTURE_DATE] [e/EXPIRY_DATE]`","lastModifiedDate":"2021-04-07"},{"lineNumber":177,"author":{"gitId":"daniellau88"},"content":"* The specified `QUANTITY` must be a positive integer and less than or equals to 1000.","lastModifiedDate":"2021-04-11"},{"lineNumber":178,"author":{"gitId":"laurenlhy"},"content":"* All dates must be given in these formats: `DD/MM/YYYY` or `YYYY-MM-DD` or `MMM DD YYYY`.","lastModifiedDate":"2021-04-07"},{"lineNumber":179,"author":{"gitId":"laurenlhy"},"content":"* The specified `MANUFACTURE_DATE` must be any date up to the current date, and not in the future.","lastModifiedDate":"2021-04-07"},{"lineNumber":180,"author":{"gitId":"laurenlhy"},"content":"If `MANUFACTURE_DATE` is not specified, it will default to the current date.","lastModifiedDate":"2021-04-07"},{"lineNumber":181,"author":{"gitId":"laurenlhy"},"content":"* The `EXPIRY_DATE` specified must occur after the `MANUFACTURE_DATE`.","lastModifiedDate":"2021-04-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-04-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":185,"author":{"gitId":"laurenlhy"},"content":"* `addcheese t/Gouda q/3`","lastModifiedDate":"2021-04-07"},{"lineNumber":186,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":187,"author":{"gitId":"weixue123"},"content":"![add_cheese_after_1](images/ug_examples/AddCheeseAfter1.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":188,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":189,"author":{"gitId":"laurenlhy"},"content":"* `addcheese t/Parmesan q/2 d/2021-03-12 e/2021-05-12`","lastModifiedDate":"2021-04-07"},{"lineNumber":190,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":191,"author":{"gitId":"weixue123"},"content":"![add_cheese_after_2](images/ug_examples/AddCheeseAfter2.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":192,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":193,"author":{"gitId":"laurenlhy"},"content":"#### Editing a cheese: `editcheese`","lastModifiedDate":"2021-04-07"},{"lineNumber":194,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":195,"author":{"gitId":"laurenlhy"},"content":"Edits an existing unassigned cheese in CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":196,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":197,"author":{"gitId":"weixue123"},"content":"Format: `editcheese INDEX [t/CHEESE_TYPE] [d/MANUFACTURE_DATE] [e/EXPIRY_DATE]`","lastModifiedDate":"2021-04-09"},{"lineNumber":198,"author":{"gitId":"laurenlhy"},"content":"* At least one of the optional fields must be provided to edit a cheese.","lastModifiedDate":"2021-04-07"},{"lineNumber":199,"author":{"gitId":"laurenlhy"},"content":"* The specified `INDEX` must be a positive integer.","lastModifiedDate":"2021-04-07"},{"lineNumber":200,"author":{"gitId":"AhQuanz"},"content":"* The `INDEX` refers to the index number of the cheese shown in `listcheeses`.","lastModifiedDate":"2021-04-10"},{"lineNumber":201,"author":{"gitId":"laurenlhy"},"content":"* All dates must be given in these formats: `DD/MM/YYYY` or `YYYY-MM-DD` or `MMM DD YYYY`.","lastModifiedDate":"2021-04-07"},{"lineNumber":202,"author":{"gitId":"weixue123"},"content":"* The specified `MANUFACTURE_DATE` must be any date up to the current date, and not in the future.","lastModifiedDate":"2021-04-09"},{"lineNumber":203,"author":{"gitId":"weixue123"},"content":"* The specified `EXPIRY_DATE` must occur after the `MANUFACTURE_DATE`.","lastModifiedDate":"2021-04-09"},{"lineNumber":204,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":205,"author":{"gitId":"laurenlhy"},"content":"Example: `editcheese 1 t/Parmesan d/2021-03-12`","lastModifiedDate":"2021-04-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":207,"author":{"gitId":"weixue123"},"content":"Before: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":209,"author":{"gitId":"weixue123"},"content":"![edit_cheese_before](images/ug_examples/EditCheeseBefore.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":211,"author":{"gitId":"weixue123"},"content":"After: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":212,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":213,"author":{"gitId":"weixue123"},"content":"![edit_cheese_after](images/ug_examples/EditCheeseAfter.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":214,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":215,"author":{"gitId":"laurenlhy"},"content":"#### Deleting a cheese from inventory: `deletecheese`","lastModifiedDate":"2021-04-07"},{"lineNumber":216,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":217,"author":{"gitId":"laurenlhy"},"content":"Deletes a specified unassigned cheese from the inventory, identified by its index.","lastModifiedDate":"2021-04-07"},{"lineNumber":218,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":219,"author":{"gitId":"laurenlhy"},"content":"Format: `deletecheese CHEESE_INDEX`","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"laurenlhy"},"content":"* The `CHEESE_INDEX` must be a positive integer.","lastModifiedDate":"2021-04-07"},{"lineNumber":221,"author":{"gitId":"AhQuanz"},"content":"* The `CHEESE_INDEX` refers to the index number of the cheese shown in `listcheeses`.","lastModifiedDate":"2021-04-10"},{"lineNumber":222,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":223,"author":{"gitId":"laurenlhy"},"content":"Example: `deletecheese 2`","lastModifiedDate":"2021-03-14"},{"lineNumber":224,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":225,"author":{"gitId":"weixue123"},"content":"Before: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":226,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":227,"author":{"gitId":"weixue123"},"content":"![delete_cheese_before](images/ug_examples/DeleteCheeseBefore.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":228,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":229,"author":{"gitId":"weixue123"},"content":"After: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":230,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":231,"author":{"gitId":"weixue123"},"content":"![delete_cheese_after](images/ug_examples/DeleteCheeseAfter.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":232,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":233,"author":{"gitId":"laurenlhy"},"content":"#### Finding cheeses: `findcheese`","lastModifiedDate":"2021-04-07"},{"lineNumber":234,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":235,"author":{"gitId":"laurenlhy"},"content":"Searches for particular cheeses in CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":236,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":237,"author":{"gitId":"laurenlhy"},"content":"Format: `findcheese [t/CHEESE_TYPE_KEYWORDS…] [s/ASSIGNMENT_STATUS]`","lastModifiedDate":"2021-04-07"},{"lineNumber":238,"author":{"gitId":"laurenlhy"},"content":"* At least one of the optional fields must be provided to find a cheese.","lastModifiedDate":"2021-04-07"},{"lineNumber":239,"author":{"gitId":"AhQuanz"},"content":"* Search is case-insensitive, e.g. Brie will match brie and Blue Brie.","lastModifiedDate":"2021-04-10"},{"lineNumber":240,"author":{"gitId":"laurenlhy"},"content":"* Assignment status parameter must be either `assigned` or `unassigned`.","lastModifiedDate":"2021-04-07"},{"lineNumber":241,"author":{"gitId":"weixue123"},"content":"* Search will find any cheeses which match **all** of the given fields,","lastModifiedDate":"2021-04-09"},{"lineNumber":242,"author":{"gitId":"AhQuanz"},"content":"e.g. `findcheese t/Gouda Cam s/assigned` will find a cheese with type containing prefix of `Gouda` or `Cam` **and** an `assigned` status.","lastModifiedDate":"2021-04-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-04-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":246,"author":{"gitId":"laurenlhy"},"content":"* `findcheese t/Brie Feta`","lastModifiedDate":"2021-04-07"},{"lineNumber":247,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":248,"author":{"gitId":"weixue123"},"content":"![find_cheese_1](images/ug_examples/FindCheese1.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":249,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":250,"author":{"gitId":"laurenlhy"},"content":"* `findcheese s/unassigned`","lastModifiedDate":"2021-04-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"weixue123"},"content":"![find_cheese_2](images/ug_examples/FindCheese2.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":254,"author":{"gitId":"weixue123"},"content":"* `findcheese t/Gouda s/unassigned`","lastModifiedDate":"2021-04-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":256,"author":{"gitId":"weixue123"},"content":"![find_cheese_3](images/ug_examples/FindCheese3.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":257,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":258,"author":{"gitId":"laurenlhy"},"content":"### Features for Orders","lastModifiedDate":"2021-04-07"},{"lineNumber":259,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":260,"author":{"gitId":"laurenlhy"},"content":"#### Listing orders: `listorders`","lastModifiedDate":"2021-04-07"},{"lineNumber":261,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":262,"author":{"gitId":"AhQuanz"},"content":"Displays all orders in CHIM.","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":264,"author":{"gitId":"weixue123"},"content":"Format: `listorders`","lastModifiedDate":"2021-03-14"},{"lineNumber":265,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":266,"author":{"gitId":"weixue123"},"content":"![list_orders](images/ug_examples/ListOrders.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":267,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":268,"author":{"gitId":"laurenlhy"},"content":"#### Adding an order: `addorder`","lastModifiedDate":"2021-04-07"},{"lineNumber":269,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":270,"author":{"gitId":"laurenlhy"},"content":"Adds an order to CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":271,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":272,"author":{"gitId":"laurenlhy"},"content":"Format: `addorder t/CHEESE_TYPE q/QUANTITY p/PHONE_NUMBER [d/ORDER_DATE]`","lastModifiedDate":"2021-04-07"},{"lineNumber":273,"author":{"gitId":"laurenlhy"},"content":"* The specified `CHEESE_TYPE` need not belong to an existing cheese in CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":274,"author":{"gitId":"laurenlhy"},"content":"* The specified `QUANTITY` must be a positive integer.","lastModifiedDate":"2021-04-07"},{"lineNumber":275,"author":{"gitId":"laurenlhy"},"content":"* The specified `PHONE_NUMBER` must belong to an existing user.","lastModifiedDate":"2021-04-07"},{"lineNumber":276,"author":{"gitId":"laurenlhy"},"content":"* The specified `ORDER_DATE` must be given in these formats: `DD/MM/YYYY` or `YYYY-MM-DD` or `MMM DD YYYY`.","lastModifiedDate":"2021-04-07"},{"lineNumber":277,"author":{"gitId":"laurenlhy"},"content":"* The specified `ORDER_DATE` must be any date up to the current date, and not in the future.","lastModifiedDate":"2021-04-07"},{"lineNumber":278,"author":{"gitId":"laurenlhy"},"content":"If an `ORDER_DATE` is not specified, it will default to the current date.","lastModifiedDate":"2021-04-07"},{"lineNumber":279,"author":{"gitId":"laurenlhy"},"content":"* Duplicate orders can be created as the user may want to fulfil similar orders separately.","lastModifiedDate":"2021-04-07"},{"lineNumber":280,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":281,"author":{"gitId":"laurenlhy"},"content":"Examples:","lastModifiedDate":"2021-04-07"},{"lineNumber":282,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":283,"author":{"gitId":"weixue123"},"content":"* `addorder t/Parmesan q/2 p/99272758`","lastModifiedDate":"2021-04-09"},{"lineNumber":284,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":285,"author":{"gitId":"weixue123"},"content":"![add_order_after_1](images/ug_examples/AddOrderAfter1.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":286,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":287,"author":{"gitId":"laurenlhy"},"content":"* `addorder t/Feta q/3 p/87438807 d/2021-01-15`","lastModifiedDate":"2021-04-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"weixue123"},"content":"![add_order_after_2](images/ug_examples/AddOrderAfter2.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":290,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":291,"author":{"gitId":"laurenlhy"},"content":"#### Editing an order: `editorder`","lastModifiedDate":"2021-04-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"laurenlhy"},"content":"Edits an existing uncompleted order in CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":294,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":295,"author":{"gitId":"laurenlhy"},"content":"Format: `editorder INDEX [t/CHEESE_TYPE] [q/QUANTITY] [p/PHONE_NUMBER] [d/ORDER_DATE]`","lastModifiedDate":"2021-04-07"},{"lineNumber":296,"author":{"gitId":"laurenlhy"},"content":"* At least one of the optional fields must be provided to edit an order.","lastModifiedDate":"2021-04-07"},{"lineNumber":297,"author":{"gitId":"laurenlhy"},"content":"* The specified `INDEX` and `QUANTITY` must be a positive integer.","lastModifiedDate":"2021-04-07"},{"lineNumber":298,"author":{"gitId":"AhQuanz"},"content":"* The `INDEX` refers to the index number of the order shown in `listorders`.","lastModifiedDate":"2021-04-10"},{"lineNumber":299,"author":{"gitId":"laurenlhy"},"content":"* The specified `CHEESE_TYPE` need not belong to an existing cheese type in CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":300,"author":{"gitId":"laurenlhy"},"content":"* The specified `PHONE_NUMBER` must belong to an existing user.","lastModifiedDate":"2021-04-07"},{"lineNumber":301,"author":{"gitId":"laurenlhy"},"content":"* The specified `ORDER_DATE` must be given in these formats: `DD/MM/YYYY` or `YYYY-MM-DD` or `MMM DD YYYY`.","lastModifiedDate":"2021-04-07"},{"lineNumber":302,"author":{"gitId":"weixue123"},"content":"* The specified `ORDER_DATE` must be any date up to the current date, and not in the future.","lastModifiedDate":"2021-04-09"},{"lineNumber":303,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":304,"author":{"gitId":"laurenlhy"},"content":"Example: `editorder 2 t/Parmesan q/2 p/61234567`","lastModifiedDate":"2021-04-07"},{"lineNumber":305,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":306,"author":{"gitId":"weixue123"},"content":"Before: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":307,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":308,"author":{"gitId":"weixue123"},"content":"![edit_order_before](images/ug_examples/EditOrderBefore.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":309,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":310,"author":{"gitId":"weixue123"},"content":"After: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":311,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":312,"author":{"gitId":"weixue123"},"content":"![edit_order_after](images/ug_examples/EditOrderAfter.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":313,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":314,"author":{"gitId":"laurenlhy"},"content":"#### Marking an order as complete: `done`","lastModifiedDate":"2021-04-07"},{"lineNumber":315,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":316,"author":{"gitId":"laurenlhy"},"content":"Marks an incomplete order as complete from CHIM, identified by its index.","lastModifiedDate":"2021-04-07"},{"lineNumber":317,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":318,"author":{"gitId":"laurenlhy"},"content":"This assigns cheeses to the order.","lastModifiedDate":"2021-04-07"},{"lineNumber":319,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":320,"author":{"gitId":"laurenlhy"},"content":"Format: `done ORDER_INDEX`","lastModifiedDate":"2021-04-07"},{"lineNumber":321,"author":{"gitId":"laurenlhy"},"content":"* The `ORDER_INDEX` provided must be a positive integer.","lastModifiedDate":"2021-04-07"},{"lineNumber":322,"author":{"gitId":"AhQuanz"},"content":"* The `ORDER_INDEX` refers to the index number of the order shown in `listorders`.","lastModifiedDate":"2021-04-10"},{"lineNumber":323,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":324,"author":{"gitId":"weixue123"},"content":"Example: `done 2` - marks the second order in the list of orders as complete.","lastModifiedDate":"2021-04-09"},{"lineNumber":325,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":326,"author":{"gitId":"weixue123"},"content":"Before: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":327,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":328,"author":{"gitId":"weixue123"},"content":"![done_before](images/ug_examples/DoneBefore.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":329,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":330,"author":{"gitId":"weixue123"},"content":"After: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":331,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":332,"author":{"gitId":"weixue123"},"content":"![done_before](images/ug_examples/DoneAfter.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"laurenlhy"},"content":"#### Deleting an order: `deleteorder`","lastModifiedDate":"2021-04-07"},{"lineNumber":335,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":336,"author":{"gitId":"laurenlhy"},"content":"Deletes a specific order from CHIM, identified by its index.","lastModifiedDate":"2021-04-07"},{"lineNumber":337,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":338,"author":{"gitId":"laurenlhy"},"content":"If the order is marked as complete and has cheeses assigned to it, those cheeses will be deleted by CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":339,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":340,"author":{"gitId":"laurenlhy"},"content":"Format: `deleteorder ORDER_INDEX`","lastModifiedDate":"2021-04-07"},{"lineNumber":341,"author":{"gitId":"laurenlhy"},"content":"* The `ORDER_INDEX` provided must be a positive integer.","lastModifiedDate":"2021-04-07"},{"lineNumber":342,"author":{"gitId":"AhQuanz"},"content":"* The `ORDER_INDEX` refers to the index number of the order shown in `listorders`.","lastModifiedDate":"2021-04-10"},{"lineNumber":343,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":344,"author":{"gitId":"laurenlhy"},"content":"Example: `deleteorder 2`","lastModifiedDate":"2021-04-07"},{"lineNumber":345,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":346,"author":{"gitId":"weixue123"},"content":"Before: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":347,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":348,"author":{"gitId":"weixue123"},"content":"![delete_order_before](images/ug_examples/DeleteOrderBefore.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":349,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":350,"author":{"gitId":"weixue123"},"content":"After: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":351,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":352,"author":{"gitId":"weixue123"},"content":"![delete_order_after](images/ug_examples/DeleteOrderAfter.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":353,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":354,"author":{"gitId":"laurenlhy"},"content":"#### Finding orders: `findorder`","lastModifiedDate":"2021-04-07"},{"lineNumber":355,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":356,"author":{"gitId":"weixue123"},"content":"Searches for particular orders in CHIM.","lastModifiedDate":"2021-03-24"},{"lineNumber":357,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":358,"author":{"gitId":"laurenlhy"},"content":"Format: `findorder [t/CHEESE_TYPE_KEYWORDS…] [n/CUSTOMER_NAME_KEYWORDS…] [p/CUSTOMER_PHONE_KEYWORDS…] [s/COMPLETION_STATUS]`","lastModifiedDate":"2021-04-07"},{"lineNumber":359,"author":{"gitId":"laurenlhy"},"content":"* At least one of the optional fields must be provided to find an order.","lastModifiedDate":"2021-04-07"},{"lineNumber":360,"author":{"gitId":"weixue123"},"content":"* Search is case-insensitive, e.g. Brie will match brie.","lastModifiedDate":"2021-03-24"},{"lineNumber":361,"author":{"gitId":"laurenlhy"},"content":"* Assignment status parameter must be either `complete` or `incomplete`.","lastModifiedDate":"2021-04-07"},{"lineNumber":362,"author":{"gitId":"weixue123"},"content":"* Search will find an order which matches **all** of the given fields,","lastModifiedDate":"2021-04-09"},{"lineNumber":363,"author":{"gitId":"laurenlhy"},"content":"e.g. `findorder t/Brie s/incomplete` will find an order with cheese type Brie and is incomplete.","lastModifiedDate":"2021-04-07"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":365,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":367,"author":{"gitId":"weixue123"},"content":"* `findorder t/Brie Feta s/incomplete`","lastModifiedDate":"2021-03-24"},{"lineNumber":368,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":369,"author":{"gitId":"weixue123"},"content":"![find_order_1](images/ug_examples/FindOrder1.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":371,"author":{"gitId":"weixue123"},"content":"* `findorder n/bernice s/incomplete`","lastModifiedDate":"2021-04-09"},{"lineNumber":372,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":373,"author":{"gitId":"weixue123"},"content":"![find_order_2](images/ug_examples/FindOrder2.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":374,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":375,"author":{"gitId":"weixue123"},"content":"* `findorder p/93210283`","lastModifiedDate":"2021-04-09"},{"lineNumber":376,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":377,"author":{"gitId":"weixue123"},"content":"![find_order_3](images/ug_examples/FindOrder3.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":378,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":379,"author":{"gitId":"AhQuanz"},"content":"### Clearing all data in CHIM: `clear`","lastModifiedDate":"2021-03-31"},{"lineNumber":380,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":381,"author":{"gitId":"laurenlhy"},"content":"Clears all data in CHIM and save files.","lastModifiedDate":"2021-04-07"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-03-31"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":385,"author":{"gitId":"weixue123"},"content":"Before: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":386,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":387,"author":{"gitId":"weixue123"},"content":"![clear_before](images/ug_examples/ClearBefore.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":388,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":389,"author":{"gitId":"weixue123"},"content":"After: \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":390,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":391,"author":{"gitId":"weixue123"},"content":"![clear_after](images/ug_examples/ClearAfter.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":392,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":393,"author":{"gitId":"daniellau88"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2021-02-20"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-02-20"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":397,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-02-20"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2021-04-07"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":402,"author":{"gitId":"laurenlhy"},"content":"CHIM data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-04-07"},{"lineNumber":403,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-04-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":407,"author":{"gitId":"laurenlhy"},"content":"CHIM data are saved as a JSON file `[JAR file location]/data/chim.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-04-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":409,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-04-07"},{"lineNumber":410,"author":{"gitId":"laurenlhy"},"content":"If your changes to the data file makes its format invalid, CHIM will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-04-07"},{"lineNumber":411,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"laurenlhy"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CHIM home folder.","lastModifiedDate":"2021-03-14"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"daniellau88"},"content":"**Q**: My result display turns white if the text is too long, how do I resolve it?\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":422,"author":{"gitId":"daniellau88"},"content":"**A**: You may scroll down to view the content of the text. If it still does not appear correctly, you may consider using a shorter string.","lastModifiedDate":"2021-04-10"},{"lineNumber":423,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":424,"author":{"gitId":"daniellau88"},"content":"**Q**: Will my app work properly if it changes a timezone?\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":425,"author":{"gitId":"daniellau88"},"content":"**A**: The app may not work as intended if the timezone changes. For example, cheeses may be allowed to be created at a future date when the timezone changes.","lastModifiedDate":"2021-04-10"},{"lineNumber":426,"author":{"gitId":"daniellau88"},"content":"       Hence, do ensure that the time on your computer running the application is consistent and does not change suddenly.","lastModifiedDate":"2021-04-10"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":428,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"laurenlhy"},"content":"**List Customers** | `listcustomers`","lastModifiedDate":"2021-04-07"},{"lineNumber":435,"author":{"gitId":"laurenlhy"},"content":"**Add Customer** | `addcustomer n/CUSTOMER_NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG…]` \u003cbr\u003e e.g. `addcustomer n/John Doe p/61234567 e/johndoe@gmail.com a/Blk 436 Serangoon Gardens St 26 #01-01`","lastModifiedDate":"2021-04-07"},{"lineNumber":436,"author":{"gitId":"laurenlhy"},"content":"**Edit Customer** | `editcustomer INDEX [n/CUSTOMER_NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…` \u003cbr\u003e e.g. `editcustomer 4 n/Jane Lim p/65558888`","lastModifiedDate":"2021-04-07"},{"lineNumber":437,"author":{"gitId":"laurenlhy"},"content":"**Delete Customer**| `deletecustomer p/PHONE_NUMBER` \u003cbr\u003e e.g. `deletecustomer p/61234567`","lastModifiedDate":"2021-04-07"},{"lineNumber":438,"author":{"gitId":"laurenlhy"},"content":"**Find Customer** | `findcustomer [n/NAME_KEYWORDS…] [p/PHONE_KEYWORDS…] [e/EMAIL_KEYWORDS…] [a/ADDRESS_KEYWORDS…]` \u003cbr\u003e e.g. `findcustomer n/char p/9321`","lastModifiedDate":"2021-04-07"},{"lineNumber":439,"author":{"gitId":"laurenlhy"},"content":"**List Cheeses** | `listcheeses`","lastModifiedDate":"2021-04-07"},{"lineNumber":440,"author":{"gitId":"weixue123"},"content":"**Add Cheese** | `addcheese t/CHEESE_TYPE q/QUANTITY [d/MANUFACTURE_DATE] [e/EXPIRY_DATE]` \u003cbr\u003e e.g. `addcheese t/gouda q/1 d/2021-05-01 e/2025-12-31`","lastModifiedDate":"2021-04-09"},{"lineNumber":441,"author":{"gitId":"weixue123"},"content":"**Edit Cheese** | `editcheese INDEX [t/CHEESE_TYPE] [d/MANUFACTURE_DATE] [e/EXPIRY_DATE]` \u003cbr\u003e e.g. `editcheese 1 t/Parmesan d/2021-03-12`","lastModifiedDate":"2021-04-09"},{"lineNumber":442,"author":{"gitId":"weixue123"},"content":"**Delete Cheese** | `deletecheese CHEESE_INDEX` \u003cbr\u003e e.g. `deletecheese 5`","lastModifiedDate":"2021-04-01"},{"lineNumber":443,"author":{"gitId":"laurenlhy"},"content":"**Find Cheese** | `findcheese [t/CHEESE_TYPE_KEYWORDS…] [s/ASSIGNMENT_STATUS]` \u003cbr\u003e e.g. `findcheese t/Brie Feta s/unassigned`","lastModifiedDate":"2021-04-07"},{"lineNumber":444,"author":{"gitId":"weixue123"},"content":"**List Orders** | `listorders`","lastModifiedDate":"2021-04-01"},{"lineNumber":445,"author":{"gitId":"laurenlhy"},"content":"**Add Order** | `addorder t/CHEESE_TYPE q/QUANTITY p/PHONE_NUMBER` \u003cbr\u003e e.g. `addorder t/Parmesan q/2 p/61234567`","lastModifiedDate":"2021-04-07"},{"lineNumber":446,"author":{"gitId":"laurenlhy"},"content":"**Edit Order** | `editorder INDEX [t/CHEESE_TYPE] [q/QUANTITY] [p/PHONE_NUMBER] [d/ORDER_DATE]` \u003cbr\u003e e.g. `editorder 2 t/Parmesan q/2 p/61234567`","lastModifiedDate":"2021-04-07"},{"lineNumber":447,"author":{"gitId":"laurenlhy"},"content":"**Mark Order As Done** | `done INDEX` \u003cbr\u003e e.g. `done 2`","lastModifiedDate":"2021-04-07"},{"lineNumber":448,"author":{"gitId":"laurenlhy"},"content":"**Delete Order** | `deleteorder ORDER_INDEX` \u003cbr\u003e e.g. `deleteorder 2`","lastModifiedDate":"2021-04-07"},{"lineNumber":449,"author":{"gitId":"laurenlhy"},"content":"**Find Order** | `findorder [t/CHEESE_TYPE_KEYWORDS…] [n/CUSTOMER_NAME_KEYWORDS…] [p/CUSTOMER_PHONE_KEYWORDS…] [s/COMPLETION_STATUS]`  \u003cbr\u003e e.g. `findorder t/gouda s/complete`","lastModifiedDate":"2021-04-07"},{"lineNumber":450,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-03-31"},{"lineNumber":451,"author":{"gitId":"daniellau88"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-02-20"}],"authorContributionMap":{"AhQuanz":20,"laurenlhy":136,"weixue123":137,"daniellau88":17,"-":111,"aaronsms":30}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"weixue123"},"content":"    content: \"Cheese Inventory Management\";","lastModifiedDate":"2021-04-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"weixue123":1,"-":294}},{"path":"docs/diagrams/ListPanelTogglingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"!include style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"participant \":ListCheesesCommand\" as ListCheesesCommand LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"box Commons #777777","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"participant \":GuiSettings\" as GuiSettings #111111","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"[-\u003e MainWindow : executeCommand(\"listcheeses\")","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"activate MainWindow","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"MainWindow -\u003e LogicManager : execute(\"listcheeses\")","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"activate LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"LogicManager -\u003e ListCheesesCommand : execute()","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"activate ListCheesesCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"ListCheesesCommand -\u003e ModelManager : setPanelToCheeseList()","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"activate ModelManager","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"ModelManager -\u003e GuiSettings : setPanelToCheeseList()","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"activate GuiSettings","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"GuiSettings --\u003e ModelManager","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"deactivate GuiSettings","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"ModelManager --\u003e ListCheesesCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"deactivate ModelManager","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"ListCheesesCommand --\u003e LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"deactivate ListCheesesCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"LogicManager --\u003e MainWindow","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"MainWindow -\u003e MainWindow : setPanel()","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"activate MainWindow","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"MainWindow -\u003e LogicManager : getGuiSettings()","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"activate LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"LogicManager -\u003e ModelManager : getGuiSettings()","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"activate ModelManager","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"ModelManager -\u003e GuiSettings : getPanel()","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"activate GuiSettings","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"GuiSettings --\u003e ModelManager","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"deactivate GuiSettings","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"ModelManager --\u003e LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"deactivate ModelManager","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"LogicManager --\u003e MainWindow","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"MainWindow --\u003e MainWindow","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"deactivate MainWindow","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"[\u003c--MainWindow","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"deactivate MainWindow","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"weixue123":74}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"package Cards {}","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"package Panels {}","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"MainWindow *-down-\u003e Panels","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"Panels -down-\u003e Cards","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"Panels --|\u003e UiPart","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"Cards --|\u003e UiPart","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"Cards ..\u003e Model","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"Panels -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"weixue123":8,"-":52}},{"path":"docs/diagrams/UiPanelsCardsClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"!include style.puml","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"Class HiddenInside #FFFFFF","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"Class MainWindow","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"package Cards {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"Class CustomerCard","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"Class CheeseCard","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"Class OrderCard","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"package Panels {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"Class CustomerListPanel","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"Class CheeseListPanel","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"Class OrderListPanel","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"HiddenInside --\u003e MainWindow","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"MainWindow *-down-\u003e CustomerListPanel","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"MainWindow *-down-\u003e CheeseListPanel","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"MainWindow *-down-\u003e OrderListPanel","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"CustomerListPanel --\u003e CustomerCard","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"CheeseListPanel --\u003e CheeseCard","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"OrderListPanel --\u003e OrderCard","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"MainWindow --|\u003e UiPart","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"Panels --|\u003e UiPart","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"Cards --|\u003e UiPart","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"CustomerCard ..\u003e Model","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"CheeseCard ..\u003e Model","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"OrderCard ..\u003e Model","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"MainWindow -right-\u003e Logic","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"weixue123":51}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"ecp -\u003e ec ++: index, editCustomerDescriptor","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"laurenlhy":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":"title: Cheese Inventory Management (CHIM)","lastModifiedDate":"2021-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-W16-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-W16-2/tp/actions)","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103-W16-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103-W16-2/tp)","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"**Cheese Inventory Management (CHIM)** is a desktop CLI app for managing the inventory of a cheese making business.","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"* If you are interested in using CHIM, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"* If you are interested about developing CHIM, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"daniellau88":2,"-":13,"aaronsms":4}},{"path":"docs/team/aaronsms.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"---","lastModifiedDate":"2021-02-23"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"layout: page","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":"title: Aaron Saw\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-23"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"---","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"## Project: Cheese Inventory Management (CHIM)","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"Cheese Inventory Management (CHIM) is a desktop app for managing the contacts, inventory, and orders of a home-based","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"cheese making business. It is an extension from the AddressBook Level 3 project for Software Engineering (SE) students.","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"* **New Feature**: Add customers, orders and cheeses from the CHIM app.","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"  * What it does: Customers, orders and cheeses can be added into the app.","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"Customers added into the system are identified by their phone number. Checks are done to ensure that no two customers","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"can share the same phone numbers. Invalid inputs by users are carefully handled accordingly. For example, the manufacture","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"date of a cheese should be valid and be earlier than its maturity date.","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"  * Justification: Adding customers, orders and cheeses is a core feature for the user to manage their contacts, inventory and orders.","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"Phone number is used as the primary key constraint instead of the name because we believe the business owner would want to account for","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"cases where two customers share the same name. Out of all other fields, phone number is the next best choice as we assume different","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"customers should own different phone numbers.","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"  * Highlights: The implementation was challenging and required changes to existing code for","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"deleting a contact by phone number instead of by list index. New classes and testcases were also added for the commands","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"to delete cheeses and orders.","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"* **New Feature**: Edit customers, orders and cheeses from the CHIM app.","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"  * What it does: Existing customers, orders and cheeses can be edited.","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"Edit commands were implemented to respect the exiting constraints exiting in the app. For example, no two customers","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"can share the same phone numbers. Orders that are already marked as completed are protected from modifications.","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"Cheeses that are already assigned to certain orders are kept as archieve only and are not modifiable.","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"  * Justification: Editing customers, orders and cheeses is an essential feature to improve the user experience of using the app.","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"Edit commands help the users to rectify and make changes to the existing data. Otherwise, the users would have to do separate","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"delete and add commands in order to fix errors.","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"  * Highlights: The implementation was challenging and required changes to existing code for","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"editing a contact to conform to the phone number constraint rather than the name field.","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"New classes and testcases were also added for the commands to edit cheeses and orders.","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"More work has done to ensure the validity of relationship between the cheeses and orders.","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"* **Enhancements to project**: Wrote extensive test cases for Add commands and EditCustomer command.","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"  * User Guide:","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"    * Added documentation for Add commands (`addcustomer`, `addcheese`, `addorder`).","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"    * Added documentation for Edit commands (`editcustomer`, `editcheese`, `editorder`).","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"  * Developer Guide:","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"    * Added documentation for architectural design, with an updated Architecture Diagram.","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"    * Added documentation for implementation of Edit commands, including Sequence Diagram for `editorder`.","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003daaronsms\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dundefined\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003daaronsms\u0026tabRepo\u003dAY2021S2-CS2103-W16-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"aaronsms":49}},{"path":"docs/team/ahquanz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"layout: page","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"title: Li Quan\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"## Project: Cheese Inventory Management (CHIM)","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"Cheese Inventory Management (CHIM) is a desktop app for managing the contacts, inventory, and orders of a home-based","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"cheese making business. It is an extension from the AddressBook Level 3 project for Software Engineering (SE) students.","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"* **New Feature**: Design and implementation of the initial model classes to be used for the project in v1.1.","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"    * What it does: Provides models for team members to use during their implementation of the different features.","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"    * Justification: This feature helps in the future development process since basic classes are provided and","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"      the architecture of the project has already been discussed and decided.","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"    * Highlights: The designing of the initial model classes was slightly challenging because we are starting from scratch,","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"      team members had different ideas of how the model classes should be designed and implemented.","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"* **New Feature**: Marking an order as complete in the CHIM app.","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"    * What it does: It allows the user of the CHIM app to mark an order as complete by a command.","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"      The CHIM app will update completed date for the order and assign available cheeses to the order","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"      to provide an indication of what available cheeses the user needs to use to fulfill the order.","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"    * Justification: Marking an order as complete is an essential feature for the user would have to fulfill","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"      the order made by his/her customer.","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"    * Highlights: The implementation was challenging as there was a variety of ideas proposed by team members","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"      regarding the representation of cheeses as this feature requires the assigning of cheeses to an order for the order to be completed.","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"      New testcases and modification to existing codes was required during the implementing of this feature.","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"* **Enhancements to project** : Modified the summary messages for `findcustomer` , `findorder`, `findcheese` , `listcustomers`,","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"  `listorders`, `listcheeses` to provide more useful insight of the result of the command executed.","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"* **Enhancements to project** : Wrote additional test cases for Edit order command.","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"* **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dAhQuanz\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-02-19)","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"  * User Guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"    * Added documentation for features (`done` , `clear`)","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"  * Developer Guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"    * Added documentation for Model class, including Model , Customer , Cheese , Order class diagram.","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"    * Added documentation for the implementation of `done` command , including sequence diagram for `done` command.","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"    * Added documentation for Appendix section.","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"* **Community**:","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"  * PRs reviewed: [\\#18](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/18)","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"    , [\\#26](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/26)","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"    , [\\#38](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/38)","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"    , [\\#121](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/121)","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"    , [\\#124](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/124)","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"AhQuanz":45,"daniellau88":5}},{"path":"docs/team/daniellau88.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daniellau88"},"content":"---","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"layout: page","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"title: Daniel Lau\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"---","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"## Project: Cheese Inventory Management (CHIM)","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"Cheese Inventory Management (CHIM) is a desktop app for managing the contacts, inventory, and orders of a home-based","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"cheese making business. It is an extension from the AddressBook Level 3 project for Software Engineering (SE) students.","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"* **Changes from existing code**: Update to New Model Diagram","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"    * What was done: Restructure the models to incorporate both `Cheese` and `Order` classes.","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    * Justification: Ensures that CHIM will be able to store `Cheese` and `Order` objects.","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    * Highlights: The enhancement required a lot of consideration on the model architecture, for example","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"      whether the data should be normalized (by using IDs) when storing relations.","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"* **Changes from existing code**: Update to `find` Command","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    * What was done: Find commands was modified to include filtering by more parameters.","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    * Justification: Ensures that CHIM will be able to handle more robust queries to the database of objects.","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    * Highlights:","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"      * The functionality to make general queries were added into the system, which allows for","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"        future extension of the `find` command for different types of objects such as `Cheese`.","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"      * Improved the `find` command to rank all results based on its relevance to the queries made.","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"    * Added model validation to ensure all objects in CHIM are in a valid state. [\\#39](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/39)","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    * Ensures that all errors that occur are displayed to user.","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    * User Guide:","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"      * Added documentation for the features `list`, `find` and `exit`. [\\#4](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/4)","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    * Developer Guide:","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"      * Added implementation details of the `find` command feature. [\\#51](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/51)","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"      * Updated models documentation for `Storage` classes.","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"* **Community**:","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#20](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/20)","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"    , [\\#28](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/28)","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"    , [\\#30](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/30)","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"    , [\\#41](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/41)","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"    , [\\#50](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/50)","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dw16-2\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003ddaniellau88\u0026tabRepo\u003dAY2021S2-CS2103-W16-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"daniellau88":46}},{"path":"docs/team/laurenlhy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"laurenlhy"},"content":"---","lastModifiedDate":"2021-02-21"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"layout: page","lastModifiedDate":"2021-02-21"},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"title: Lauren Lee\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-21"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":"---","lastModifiedDate":"2021-02-21"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":"## Project: Cheese Inventory Management (CHIM)","lastModifiedDate":"2021-02-21"},{"lineNumber":7,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"Cheese Inventory Management (CHIM) is a desktop app for managing the contacts, inventory, and orders of a home-based","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":"cheese making business. It is an extension from the AddressBook Level 3 project for Software Engineering (SE) students.","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"* **Changes to existing code**: Update existing code from AB3 to be more relevant to CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"  * Updated all mentions of \"Person\" to \"Customer\" within the code and test cases.","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"  * Justification: The CHIM app is created for maintaining customers of a business. The code would also","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"align with the commands we used, e.g. \"addcustomer\".","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":"  * Highlights: Implementation was slightly challenging as it required changes to a significant amount of existing code.","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"* **New Feature**: Delete customers, orders and cheeses from the CHIM app.","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"  * What it does: Customers, orders and cheeses can be deleted individually.","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":"Delete cascading was implemented such that deleting a customer will delete any orders they have","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"and deleting any orders will delete any cheeses assigned to them.","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"  * Justification: Deleting customers, orders and cheeses is an essential feature for the user to manage their contacts, inventory and orders.","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"Delete cascading helps the user delete related information easily. For instance, once a customer is deleted,","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"all orders and cheeses related to that customer is deleted as well.","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"  * Highlights: The implementation was challenging and required changes to existing code for","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"deleting a contact by phone number instead of by list index. New classes and testcases were also added for the commands","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"to delete cheeses and orders.","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"* **Enhancements to project**:","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"  * Wrote additional test cases for Edit Cheese Commands.","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"  * User Guide:","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"    * Added documentation for Delete commands (`deletecustomer`, `deletecheese`, `deleteorder`).","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"    * Reorganised user guide to group commands together by Customer, Cheese and Order, instead of their command words.","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"    * Added more specific format requirements for the commands.","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"  * Developer Guide:","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"    * Added documentation for Logic class, including Logic class diagram and sequence diagram for `deletecheese`.","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"    * Added documentation for implementation of Delete commands, including sequence diagram for `deletecustomer`.","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"* **Community**:","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#125](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/125), [\\#127](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/127)","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"laurenlhy"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dlaurenlhy\u0026tabRepo\u003dAY2021S2-CS2103-W16-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"laurenlhy":45}},{"path":"docs/team/weixue123.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"---","lastModifiedDate":"2021-02-23"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"layout: page","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"title: Wei Xue Ng\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-23"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"---","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"## Project: Cheese Inventory Management (CHIM)","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"Cheese Inventory Management (CHIM) is a desktop app for managing the contacts, inventory, and orders of a home-based","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"cheese making business. It is an extension from the AddressBook Level 3 project for Software Engineering (SE) students.","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"Given below are my contributions to the project","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"* **New Feature**: Added the functionality (the `listcheeses` command) for users to list all the cheeses in CHIM.","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"    * What it does: Shows on the user-interface an indexed list of all the cheeses, along with their properties, in","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"      CHIM.","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"    * Justification: The indexes shown on the UI allow the users to refer to specific cheeses when executing","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"      the `editcheese` and `deletecheese` commands.","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"* **New Feature**: Added the functionality (the `listorders` command) for users to list all the orders in CHIM.","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    * What it does: Shows on the user-interface an indexed list of all the orders, along with their properties, in CHIM.","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    * Justification: The indexes shown on the UI allow the users to refer to specific orders when executing","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"      the `editorder` and `deleteorder` commands.","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"* **New Feature**: Added the functionality (the `findcheese` command) for users to search for specific cheeses in CHIM.","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"    * What it does: Lets users filter the cheeses list so that only cheeses with certain specified attributes are shown","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"      on the UI. For example, a user can run the search command so that only Brie cheeses remain on the UI.","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"    * Justification: With this feature, users can quickly \u0026 conveniently look up what cheeses the inventory holds.","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"* **New Feature**: Added the functionality (the `findorder` command) for users to search for specific orders in CHIM.","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"    * What it does: Lets users filter the orders list so that only orders with certain specified attributes are shown on","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"      the UI. For example, a user can run the search command so that only orders by customers named Bob remain on the","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"      UI.","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"    * Justification: With this feature, users can quickly \u0026 conveniently look up what completed or outstanding orders he","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"      or she has.","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"* **New Feature**: Automatic toggling of list panel on the user-interface.","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    * What it does: Whenever a command is executed, the UI\u0027s list panel automatically switches between showing the","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"      customers list, the orders list, and the cheeses list - the list shown depends on the command ran. If the command","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"      executed was a customer-related command, e.g. `editcustomer`, then the UI switches to showing the customers list.","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"    * Justification: Without the need to manually toggle between the different views, CHIM becomes more convenient to","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"      use. We also want to emphasize that the automatic switching was made to be as intuitive as possible. With that","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"      said, this feature ultimately aims at improving user-experience.","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"* **Code","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"  contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dweixue123\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dweixue123\u0026tabRepo\u003dAY2021S2-CS2103-W16-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"* **Project management**:","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"    * Managed releases `v1.1` - `v1.4` (3 releases) on GitHub","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"    * Improved parsing of emails (Pull request [\\#116](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/116))","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"    * User Guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"        * Added documentation for the features `listcheeses`, `listorders`, `findcheeses`, `findorders`.","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"    * Developer Guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"        * Updated the documentation to reflect the new design of the `Ui` component.","lastModifiedDate":"2021-04-09"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"        * Added implementation details for the automatic toggling of UI\u0027s list panels.","lastModifiedDate":"2021-04-09"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"* **Community**:","lastModifiedDate":"2021-04-09"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"    * PRs reviewed: [\\#14](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/14)","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"      , [\\#31](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/31)","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"      , [\\#37](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/37)","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"      , [\\#39](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/39)","lastModifiedDate":"2021-04-09"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"      , [\\#43](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/43)","lastModifiedDate":"2021-04-09"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"      , [\\#49](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/49)","lastModifiedDate":"2021-04-09"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"      , [\\#51](https://github.com/AY2021S2-CS2103-W16-2/tp/pull/51)","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"weixue123":67}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":" * Changes the remark of an existing customer in the address book.","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"laurenlhy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the customer identified \"","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"            + \"by the index number used in the last customer listing. \"","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"laurenlhy"},"content":"     * @param index of the customer in the filtered customer list to edit the remark","lastModifiedDate":"2021-03-07"},{"lineNumber":103,"author":{"gitId":"laurenlhy"},"content":"     * @param remark of the customer to be updated to","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"laurenlhy"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of customer data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the customer’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a customer.","lastModifiedDate":"2021-03-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"laurenlhy"},"content":"Create a new `Remark` in `seedu.address.model.customer`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-03-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"laurenlhy"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each customer.","lastModifiedDate":"2021-03-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"laurenlhy"},"content":"public PersonCard(Person customer, int displayedIndex) {","lastModifiedDate":"2021-03-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"laurenlhy"},"content":"    remark.setText(customer.getRemark().value);","lastModifiedDate":"2021-03-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"laurenlhy"},"content":"        Person customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":344,"author":{"gitId":"laurenlhy"},"content":"        Person editedCustomer \u003d new Person(customerToEdit.getName(), customerToEdit.getPhone(), customerToEdit.getEmail(),","lastModifiedDate":"2021-03-07"},{"lineNumber":345,"author":{"gitId":"laurenlhy"},"content":"                customerToEdit.getAddress(), remark, customerToEdit.getTags());","lastModifiedDate":"2021-03-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"laurenlhy"},"content":"        model.setPerson(customerToEdit, editedCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"laurenlhy"},"content":"        return new CommandResult(generateSuccessMessage(editedCustomer));","lastModifiedDate":"2021-03-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"laurenlhy"},"content":"     * {@code customerToEdit}.","lastModifiedDate":"2021-03-07"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"laurenlhy"},"content":"    private String generateSuccessMessage(Person customerToEdit) {","lastModifiedDate":"2021-03-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"laurenlhy"},"content":"        return String.format(message, customerToEdit);","lastModifiedDate":"2021-03-07"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"laurenlhy":18,"-":376}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.customer.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"laurenlhy"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"laurenlhy":2,"-":101}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.address.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"laurenlhy"},"content":"       Person customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":156,"author":{"gitId":"laurenlhy"},"content":"       Person editedCustomer \u003d createEditedPerson(customerToEdit, editCustomerDescriptor);","lastModifiedDate":"2021-03-07"},{"lineNumber":157,"author":{"gitId":"laurenlhy"},"content":"       if (!customerToEdit.isSamePerson(editedCustomer) \u0026\u0026 model.hasPerson(editedCustomer)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"laurenlhy"},"content":"       model.setPerson(customerToEdit, editedCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"laurenlhy"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer));","lastModifiedDate":"2021-03-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"laurenlhy"},"content":"       customers.addAll(","lastModifiedDate":"2021-03-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"laurenlhy":6,"-":244}},{"path":"src/main/java/chim/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.LogsCenter;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.FileUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"weixue123":3,"-":61}},{"path":"src/main/java/chim/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"weixue123":1,"-":24}},{"path":"src/main/java/chim/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Config;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.LogsCenter;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Version;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.ConfigUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.StringUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.logic.Logic;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.logic.LogicManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.util.SampleDataUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.storage.ChimStorage;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.storage.JsonChimStorage;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.storage.Storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.storage.StorageManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.storage.UserPrefsStorage;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import chim.ui.Ui;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"import chim.ui.UiManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2017-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Cheese Inventory Management ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"        ChimStorage chimStorage \u003d new JsonChimStorage(userPrefs.getChimFilePath());","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"        storage \u003d new StorageManager(chimStorage, userPrefsStorage);","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s Chim and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"     * The data from the sample Chim will be used instead if {@code storage}\u0027s Chim is not found,","lastModifiedDate":"2021-04-08"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"     * or an empty Chim will be used instead if errors occur when reading {@code storage}\u0027s Chim.","lastModifiedDate":"2021-04-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"weixue123"},"content":"        Optional\u003cReadOnlyChim\u003e chimOptional;","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"weixue123"},"content":"        ReadOnlyChim initialData;","lastModifiedDate":"2021-04-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"weixue123"},"content":"            chimOptional \u003d storage.readChim();","lastModifiedDate":"2021-04-08"},{"lineNumber":81,"author":{"gitId":"weixue123"},"content":"            if (!chimOptional.isPresent()) {","lastModifiedDate":"2021-04-08"},{"lineNumber":82,"author":{"gitId":"weixue123"},"content":"                logger.info(\"Data file not found. Will be starting with sample data.\");","lastModifiedDate":"2021-04-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"weixue123"},"content":"            initialData \u003d chimOptional.orElseGet(SampleDataUtil::getSampleChim);","lastModifiedDate":"2021-04-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"weixue123"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with no loaded data.\");","lastModifiedDate":"2021-04-07"},{"lineNumber":87,"author":{"gitId":"weixue123"},"content":"            initialData \u003d new Chim();","lastModifiedDate":"2021-04-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"weixue123"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with no loaded data.\");","lastModifiedDate":"2021-04-07"},{"lineNumber":90,"author":{"gitId":"weixue123"},"content":"            initialData \u003d new Chim();","lastModifiedDate":"2021-04-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"weixue123"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with no loaded data.\");","lastModifiedDate":"2021-04-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"weixue123"},"content":"        logger.info(\"Starting Cheese Inventory Management \" + MainApp.VERSION);","lastModifiedDate":"2021-04-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"weixue123"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Cheese Inventory Management ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-04-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":43,"-":140}},{"path":"src/main/java/chim/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.core;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":1,"-":62}},{"path":"src/main/java/chim/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.core;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"    public enum PanelToShow {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"        CUSTOMER_LIST,","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"        CHEESE_LIST,","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"        ORDER_LIST","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"    private static final PanelToShow DEFAULT_PANEL \u003d PanelToShow.CUSTOMER_LIST;","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"    private PanelToShow panel;","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"     * Constructs a {@code GuiSettings} with the default UI panel, height, width and position.","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"        panel \u003d DEFAULT_PANEL;","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"     * Constructs a {@code GuiSettings} with the specified UI panel, height, width and position.","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"    public GuiSettings(PanelToShow panel, double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"        this.panel \u003d panel;","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"    public void setPanelToCustomerList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"        panel \u003d PanelToShow.CUSTOMER_LIST;","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"    public void setPanelToCheeseList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"        panel \u003d PanelToShow.CHEESE_LIST;","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"    public void setPanelToOrderList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"        panel \u003d PanelToShow.ORDER_LIST;","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"    public PanelToShow getPanel() {","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"        return panel;","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"weixue123"},"content":"        return panel \u003d\u003d o.panel","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"weixue123"},"content":"        return Objects.hash(panel, windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2021-03-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"        sb.append(\"Panel: \" + panel + \"\\n\");","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":34,"-":72}},{"path":"src/main/java/chim/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.core;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    private static final String LOG_FILE \u003d \"chim.log\";","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":2,"-":110}},{"path":"src/main/java/chim/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.core;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_INVALID_CHEESE_DISPLAYED_INDEX \u003d \"The cheese index provided is invalid.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX \u003d \"The customer index provided is invalid.\";","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"    public static final String MESSAGE_INVALID_CUSTOMER_DISPLAYED_PHONE \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"            \"The customer phone number provided is invalid.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_INVALID_ORDER_DISPLAYED_INDEX \u003d \"The order index provided is invalid.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_INVALID_ORDER_COMPLETE \u003d \"The order index provided is already completed.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"    public static final String MESSAGE_ORDERS_FOUND_OVERVIEW \u003d \"%1$d orders with parameters of %2$s \"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"            + \"has been found!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"    public static final String MESSAGE_ORDERS_NOT_FOUND_OVERVIEW \u003d \"No orders with parameters of %1$s \"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"            + \"has been found!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"    public static final String MESSAGE_CUSTOMERS_FOUND_OVERVIEW \u003d \"%1$d customers with parameters of %2$s \"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"            + \"has been found!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"    public static final String MESSAGE_CUSTOMERS_NOT_FOUND_OVERVIEW \u003d \"No customers with parameters of %1$s \"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"            + \"has been found!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"    public static final String MESSAGE_CHEESES_FOUND_OVERVIEW \u003d \"%1$d cheeses with parameters of %2$s has been found\";","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"    public static final String MESSAGE_CHEESES_NOT_FOUND_OVERVIEW \u003d \"No cheeses with parameters of %1$s has been found\";","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"    public static final String MESSAGE_INSUFFICIENT_CHEESES_FOR_ORDER \u003d \"There is insufficient cheese \"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"            + \"to complete the order.\\nMake sure that the cheeses have not expired.\";","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_INVALID_CHEESE_ASSIGNED_TO_COMPLETED_ORDER \u003d \"The cheese is assigned to \"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"            + \"a completed order and cannot be deleted.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_INVALID_ORDER_CUSTOMER_ID \u003d \"Order %1$d\u0027s customer ID does not exist.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_INVALID_ORDER_CHEESE_ID \u003d \"Order %1$d\u0027s cheese ID does not exist.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_INVALID_CHEESE_MULTIPLE_ORDER \u003d \"Order %1$d\u0027s Cheese %2$d has been \"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"            + \"assigned to another order.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_INVALID_CHEESE_NOT_ASSIGNED \u003d \"Cheese %2$d in Order %1$d has not been \"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"            + \"marked assigned.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_INVALID_ORDER_CHEESE_CHEESE_TYPE \u003d \"Cheese %1$d\u0027s cheese type does not \"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"            + \"match Order %2$d\u0027s cheese type.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_INVALID_ASSIGNED_CHEESE \u003d \"Cheese %1$d is marked assigned but not \"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"            + \"assigned to any order.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_INVALID_MANUFACTURE_DATE_COMPLETED_DATE \u003d \"Cheese %2$d\u0027s manufacture date must \"","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"            + \"be before order %1$d completed date.\";","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_INVALID_EXPIRY_DATE_COMPLETED_DATE \u003d \"Cheese %2$d\u0027s expiry date must be after \"","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"            + \"Order %1$d\u0027s completed date.\";","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_CHEESE_QUANTITY_EXCEED \u003d \"The specified cheese quantity has exceeded the allowed\"","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"            + \" upper limit of 1000. You may add more cheeses using multiple transactions.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AhQuanz":11,"laurenlhy":1,"weixue123":1,"daniellau88":25,"-":8,"aaronsms":1}},{"path":"src/main/java/chim/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.core;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":1,"-":115}},{"path":"src/main/java/chim/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.core.index;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"weixue123":1,"-":53}},{"path":"src/main/java/chim/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.exceptions;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":1,"-":10}},{"path":"src/main/java/chim/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.exceptions;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weixue123":1,"-":20}},{"path":"src/main/java/chim/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.MainApp;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"weixue123":2,"-":40}},{"path":"src/main/java/chim/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weixue123":1,"-":34}},{"path":"src/main/java/chim/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Config;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"weixue123":3,"-":20}},{"path":"src/main/java/chim/commons/util/DateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.AbstractDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"public class DateUtil {","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"     * Checks whether the given date is before or is today","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"    public static boolean isBeforeToday(AbstractDate date) {","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"        return !date.value.isAfter(LocalDate.now().atTime(LocalTime.MAX));","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"weixue123":2,"daniellau88":13}},{"path":"src/main/java/chim/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":1,"-":82}},{"path":"src/main/java/chim/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.LogsCenter;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":3,"-":139}},{"path":"src/main/java/chim/commons/util/ListUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"public class ListUtil {","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"     * Compares two list and returns true if both lists have the same elements (regardless of order)","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"    public static \u003cU\u003e boolean compareListWithoutOrder(List\u003cU\u003e list, List\u003cU\u003e otherList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"        return list.containsAll(otherList) \u0026\u0026 otherList.containsAll(list);","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"weixue123":2,"daniellau88":12}},{"path":"src/main/java/chim/commons/util/PredicateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.AbstractId;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"public class PredicateUtil {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"     * Returns true if the input string matches any of the given keywords (even as a prefix).","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"     * Uses {@code String.containsPrefixWordIgnoreCase}.","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    public static boolean containsPrefixWordIgnoreCase(String string, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"        requireAllNonNull(string, keywords);","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"            .anyMatch(keyword -\u003e StringUtil.containsPrefixWordIgnoreCase(string, keyword));","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"     * Returns the similarity score of input string.","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"     * Strings that matches the given keywords better will have a higher score.","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    public static double getWordSimilarityScoreIgnoreCase(String string, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"        requireAllNonNull(string, keywords);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"                .mapToDouble(keyword -\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"                    if (StringUtil.containsWordIgnoreCase(string, keyword)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"                        return keyword.length() * keyword.length();","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"                    } else if (StringUtil.containsPrefixWordIgnoreCase(string, keyword)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"                        return keyword.length();","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"                    } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"                        return 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"                    }","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"                }).sum();","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"     * Returns whether the keywords list contains the given id.","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"    public static boolean matchIntegerId(AbstractId id, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"        requireAllNonNull(id, keywords);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"            .mapToInt(x -\u003e StringUtil.isNonZeroUnsignedInteger(x) ? Integer.parseInt(x) : -1)","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"            .anyMatch(keyword -\u003e keyword \u003d\u003d id.value);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"weixue123":7,"daniellau88":42}},{"path":"src/main/java/chim/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"     * Returns true if the {@code sentence} contains the prefix {@code word}.","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"     * Ignores case.","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"     *       containsPrefixWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"     *       containsPrefixWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"     *       containsPrefixWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"     *       containsPrefixWordIgnoreCase(\"CAB def\", \"AB\") \u003d\u003d false","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"    public static boolean containsPrefixWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(word);","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"        return sentence.toLowerCase().matches(\".*\\\\b\" + preppedWord + \".*\");","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"weixue123"},"content":"     * Splits an input keywords string by empty spaces into a list of tokens. \u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"weixue123"},"content":"     * Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"weixue123"},"content":"     *      splitToKeywordsList(\"gouda\") \u003d\u003d [\"gouda\"]","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"weixue123"},"content":"     *      splitToKeywordsList(\"gouda brie\") \u003d\u003d [\"gouda\", \"brie\"]","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"weixue123"},"content":"     *      splitToKeywordsList(\"\") \u003d\u003d []","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"weixue123"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"    public static List\u003cString\u003e splitToKeywordsList(String keywords) {","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"weixue123"},"content":"        return keywords.isEmpty() ? Collections.emptyList() : Arrays.asList(keywords.trim().split(\"\\\\s+\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"     * Replaces all special characters in emails with empty spaces.","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"     * Used in find methods to extract essential keywords from emails (separated by empty space).","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"daniellau88"},"content":"    public static String replaceEmailSpecialCharacters(String email) {","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(email);","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"daniellau88"},"content":"        return email.replaceAll(\"[@\\\\.]+\", \" \").trim();","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"weixue123"},"content":"     * Converts a string to title case. \u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"weixue123"},"content":"     * Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"weixue123"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"weixue123"},"content":"     *      convertToTitleCase(\"BRIE\") \u003d\u003d \"Brie\"","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"weixue123"},"content":"     *      convertToTitleCase(\"gouda\") \u003d\u003d \"Gouda\"","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"weixue123"},"content":"     *      convertToTitleCase(\"blue cheese\") \u003d\u003d \"Blue Cheese\"","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"weixue123"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"weixue123"},"content":"    public static String convertToTitleCase(String s) {","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"weixue123"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"weixue123"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e wordsList \u003d splitToKeywordsList(s);","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"weixue123"},"content":"        for (String str : wordsList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"weixue123"},"content":"            for (int i \u003d 0; i \u003c str.length(); i++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"weixue123"},"content":"                result.append(i \u003d\u003d 0 ? Character.toUpperCase(str.charAt(i)) : Character.toLowerCase(str.charAt(i)));","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"weixue123"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"weixue123"},"content":"            result.append(\" \");","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"weixue123"},"content":"        return result.toString().trim();","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":41,"daniellau88":37,"-":66}},{"path":"src/main/java/chim/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.CommandResult;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"     * Returns the Chim object.","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"     * @see chim.model.Model#getChim()","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"    ReadOnlyChim getChim();","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"     * Returns an unmodifiable view of the filtered list of customers.","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"     * Returns an unmodifiable view of the filtered list of cheeses.","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"    ObservableList\u003cCheese\u003e getFilteredCheeseList();","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"     * Returns an unmodifiable view of the filtered list of orders.","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"     * Returns a complete/unfiltered list of customers.","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"    ObservableList\u003cCustomer\u003e getCompleteCustomerList();","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"     * Returns the user prefs\u0027 CHIM file path.","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"    Path getChimFilePath();","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"laurenlhy":1,"weixue123":33,"-":36}},{"path":"src/main/java/chim/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.LogsCenter;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.Command;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.CommandResult;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.ChimParser;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.storage.Storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    private final ChimParser chimParser;","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"        chimParser \u003d new ChimParser(model);","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"        Command command \u003d chimParser.parseCommand(commandText);","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"            storage.saveChim(model.getChim());","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"    public ReadOnlyChim getChim() {","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"        return model.getChim();","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"laurenlhy"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"laurenlhy"},"content":"        return model.getFilteredCustomerList();","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"    public ObservableList\u003cCheese\u003e getFilteredCheeseList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"        return model.getFilteredCheeseList();","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"weixue123"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"        return model.getFilteredOrderList();","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"weixue123"},"content":"    public ObservableList\u003cCustomer\u003e getCompleteCustomerList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"weixue123"},"content":"        return model.getCompleteCustomerList();","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"weixue123"},"content":"    public Path getChimFilePath() {","lastModifiedDate":"2021-04-08"},{"lineNumber":86,"author":{"gitId":"weixue123"},"content":"        return model.getChimFilePath();","lastModifiedDate":"2021-04-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"laurenlhy":2,"weixue123":36,"-":60}},{"path":"src/main/java/chim/logic/commands/AddCheeseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_MANUFACTURE_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":" * Adds a cheese to CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"public class AddCheeseCommand extends AddCommand {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"    public static final String COMMAND_WORD \u003d \"addcheese\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a cheese to CHIM.\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_CHEESE_TYPE + \"CHEESE TYPE \"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_QUANTITY + \"QUANTITY \"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"            + \"[\" + PREFIX_MANUFACTURE_DATE + \"MANUFACTURE_DATE] \"","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"            + \"[\" + PREFIX_EXPIRY_DATE + \"EXPIRY_DATE]\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_CHEESE_TYPE + \"Parmesan \"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_QUANTITY + \"5 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_MANUFACTURE_DATE + \"2020-12-30 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_EXPIRY_DATE + \"2021-02-30\";","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New cheeses added: \";","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"    private final Cheese[] toAddCheeses;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"     * Creates an AddOrderCommand to add the specified {@code Order}","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"    public AddCheeseCommand(Cheese[] cheeses) {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(cheeses);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"        toAddCheeses \u003d cheeses;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"        for (Cheese toAddCheese : toAddCheeses) {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"            model.addCheese(toAddCheese);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"        model.setPanelToCheeseList();","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"        StringBuilder sb \u003d new StringBuilder(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"        for (Cheese toAddCheese : toAddCheeses) {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"            sb.append(toAddCheese);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"        return new CommandResult(sb.toString());","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"                || (other instanceof AddCheeseCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"                \u0026\u0026 Arrays.equals(toAddCheeses, ((AddCheeseCommand) other).toAddCheeses));","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"weixue123":10,"aaronsms":60}},{"path":"src/main/java/chim/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":" * Adds a customer, an order, or cheeses to CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"weixue123":4,"aaronsms":12}},{"path":"src/main/java/chim/logic/commands/AddCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":" * Adds a customer to CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"public class AddCustomerCommand extends AddCommand {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"    public static final String COMMAND_WORD \u003d \"addcustomer\";","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a customer to CHIM.\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New customer added: %1$s\";","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"Customer with that phone number already exists in CHIM.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"    private final Customer toAdd;","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"     * Creates an AddCommand to add the specified {@code Customer}","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"    public AddCustomerCommand(Customer customer) {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"laurenlhy"},"content":"        requireNonNull(customer);","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"        toAdd \u003d customer;","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"laurenlhy"},"content":"        if (model.hasCustomer(toAdd)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"        model.addCustomer(toAdd);","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"        model.setPanelToCustomerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"    public Customer getToAdd() {","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"        return toAdd;","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"                || (other instanceof AddCustomerCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"                \u0026\u0026 toAdd.equals(((AddCustomerCommand) other).toAdd));","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"laurenlhy":8,"weixue123":14,"daniellau88":4,"-":42,"aaronsms":5}},{"path":"src/main/java/chim/logic/commands/AddOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ORDER_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":" * Adds an order to CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"public class AddOrderCommand extends AddCommand {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"    public static final String COMMAND_WORD \u003d \"addorder\";","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an order to CHIM.\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_CHEESE_TYPE + \"CHEESE TYPE \"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_QUANTITY + \"QUANTITY \"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"            + \"[\" + PREFIX_ORDER_DATE + \"ORDER DATE]\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_CHEESE_TYPE + \"Parmesan \"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_QUANTITY + \"2 \"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_PHONE + \"65555555 \"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_ORDER_DATE + \"2020-12-30\";","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New order added: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_NO_CUSTOMERS_FOUND \u003d \"No customer in CHIM owns the phone number.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"    private final CheeseType toAddCheeseType;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"    private final Phone customerPhone;","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"    private final Quantity toAddQuantity;","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"    private final OrderDate toAddOrderDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"     * Creates an AddOrderCommand to add the specified {@code Order}","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"    public AddOrderCommand(CheeseType cheeseType, Phone phone, Quantity quantity, OrderDate orderDate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"        requireAllNonNull(cheeseType, phone, quantity, orderDate);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"        toAddCheeseType \u003d cheeseType;","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"        customerPhone \u003d phone;","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"        toAddQuantity \u003d quantity;","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"        toAddOrderDate \u003d orderDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"        if (!model.hasCustomerWithPhone(customerPhone)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"            throw new CommandException(MESSAGE_NO_CUSTOMERS_FOUND);","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"        Customer customer \u003d model.getCustomerWithPhone(customerPhone);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"        Order toAdd;","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"        try {","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"            toAdd \u003d new Order(toAddCheeseType, toAddQuantity, toAddOrderDate, null, customer.getId());","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"            model.addOrder(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2021-04-06"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"        model.setPanelToOrderList();","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"                || (other instanceof AddOrderCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"                \u0026\u0026 toAddQuantity.equals(((AddOrderCommand) other).toAddQuantity)","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 toAddOrderDate.equals(((AddOrderCommand) other).toAddOrderDate));","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"weixue123":17,"daniellau88":8,"aaronsms":62}},{"path":"src/main/java/chim/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":" * Clears CHIM and all saved data.","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All data in saved file and CHIM has been cleared!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"        model.setChim(new Chim());","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AhQuanz":1,"weixue123":5,"-":17}},{"path":"src/main/java/chim/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weixue123":3,"-":17}},{"path":"src/main/java/chim/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weixue123":1,"-":70}},{"path":"src/main/java/chim/logic/commands/DeleteCheeseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":" * Deletes a cheese identified using its displayed index from the cheese list.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"public class DeleteCheeseCommand extends DeleteCommand {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"    public static final String COMMAND_WORD \u003d \"deletecheese\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":"            + \": Deletes the cheese identified by the index number used in the displayed cheese list.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"    public static final String MESSAGE_DELETE_CHEESE_SUCCESS \u003d \"Deleted Cheese: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"    public DeleteCheeseCommand(Index targetIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"        List\u003cCheese\u003e lastShownList \u003d model.getFilteredCheeseList();","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CHEESE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"        Cheese cheeseToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"        if (cheeseToDelete.isCheeseAssigned()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CHEESE_ASSIGNED_TO_COMPLETED_ORDER);","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"        model.deleteCheese(cheeseToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"laurenlhy"},"content":"        model.setPanelToCheeseList(); // Display cheese list","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"laurenlhy"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CHEESE_SUCCESS, cheeseToDelete));","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"laurenlhy"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"laurenlhy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"                || (other instanceof DeleteCheeseCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCheeseCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"laurenlhy":48,"weixue123":6,"daniellau88":5}},{"path":"src/main/java/chim/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":" * Deletes a customer, an order, or a cheese from CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":"public abstract class DeleteCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"laurenlhy":3,"weixue123":4,"-":9}},{"path":"src/main/java/chim/logic/commands/DeleteCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":" * Deletes a customer identified using it\u0027s displayed index from the customer list.","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"public class DeleteCustomerCommand extends DeleteCommand {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":"    public static final String COMMAND_WORD \u003d \"deletecustomer\";","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"            + \": Deletes the customer identified by the phone used in the displayed customer list.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":"            + \"Parameters: \" + PREFIX_PHONE + \"PHONE (must be a valid phone number)\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_PHONE + \"61234567\";","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"    public static final String MESSAGE_DELETE_CUSTOMER_SUCCESS \u003d \"Deleted Customer: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"    private final Phone targetPhone;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"    public DeleteCustomerCommand(Phone targetPhone) {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"        this.targetPhone \u003d targetPhone;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"        Customer customerToDelete \u003d model.getCustomerWithPhone(targetPhone);","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"        if (customerToDelete \u003d\u003d null) {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_PHONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"        model.deleteCustomer(customerToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"        model.setPanelToCustomerList(); // Display customer list","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete));","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"laurenlhy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"laurenlhy"},"content":"                || (other instanceof DeleteCustomerCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"                \u0026\u0026 targetPhone.equals(((DeleteCustomerCommand) other).targetPhone)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"laurenlhy"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"laurenlhy":43,"weixue123":10}},{"path":"src/main/java/chim/logic/commands/DeleteOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Name;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":" * Deletes an order identified using its displayed index from the order list.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":"public class DeleteOrderCommand extends DeleteCommand {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"    public static final String COMMAND_WORD \u003d \"deleteorder\";","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"            + \": Deletes the order identified by the index number used in the displayed order list.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"    public static final String MESSAGE_DELETE_ORDER_SUCCESS \u003d \"Deleted Order: %1$s ; Customer Name: %2$s\";","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"    public DeleteOrderCommand(Index targetIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"        Order orderToDelete \u003d getOrderToDelete(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"        model.deleteOrder(orderToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"        model.setPanelToOrderList(); // Display order list","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"        Name name \u003d model.getCustomerWithId(orderToDelete.getCustomerId()).getName();","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete, name));","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"     * Obtains the {@code Order} to delete using the target index.","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"    private Order getOrderToDelete(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"        return lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"laurenlhy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"                || (other instanceof DeleteOrderCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"laurenlhy"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteOrderCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"laurenlhy"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"AhQuanz":3,"laurenlhy":40,"weixue123":19}},{"path":"src/main/java/chim/logic/commands/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.model.AbstractDate.TO_JSON_STRING_FORMATTER;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.order.CompletedDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks order as complete\"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"            + \"by the index number used in the displayed order list. \"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"            + \"Parameters : INDEX (must be a positive integer) \";","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"    public static final String MESSAGE_MARK_ORDER_DONE_SUCCESS \u003d \"ORDER : %1$s completed\";","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"    public DoneCommand(Index targetIndex) {","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"        Order orderToUpdate \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"        if (orderToUpdate.isComplete()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_COMPLETE);","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"        Set\u003cCheeseId\u003e unassignedCheeses \u003d model.getUnassignedCheeses(orderToUpdate.getCheeseType(),","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"            orderToUpdate.getQuantity());","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"        Quantity expectedQuantity \u003d orderToUpdate.getQuantity();","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"        if (!expectedQuantity.isSameQuantity(unassignedCheeses.size())) {","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"            throw new CommandException(Messages.MESSAGE_INSUFFICIENT_CHEESES_FOR_ORDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"        Order updatedOrder \u003d createDoneOrder(orderToUpdate, unassignedCheeses, model);","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"        model.setOrder(orderToUpdate, updatedOrder);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"        model.updateCheesesStatus(updatedOrder.getCheeses());","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"        model.setPanelToOrderList();","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_ORDER_DONE_SUCCESS, updatedOrder));","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"     * Creates and returns a {@code order} with the details of {@code orderToUpdate}","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":"     * Only the CompletedDate is updated to current time","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"    public static Order createDoneOrder(Order orderToUpdate, Set\u003cCheeseId\u003e unassignedCheeses, Model model)","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"        throws CommandException {","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":"        CompletedDate completedDate \u003d new CompletedDate(LocalDateTime.now().format(TO_JSON_STRING_FORMATTER));","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"        Order retOrder;","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"        try {","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"            retOrder \u003d new Order(orderToUpdate, completedDate, unassignedCheeses);","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"        return retOrder;","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"AhQuanz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"AhQuanz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"AhQuanz"},"content":"                || (other instanceof DoneCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"AhQuanz"},"content":"                \u0026\u0026 targetIndex.equals(((DoneCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"AhQuanz"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"AhQuanz":62,"weixue123":11,"daniellau88":17}},{"path":"src/main/java/chim/logic/commands/EditCheeseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_MANUFACTURE_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.model.Model.PREDICATE_SHOW_ALL_CHEESES;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.CollectionUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ExpiryDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ManufactureDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":" * Edits the details of an existing cheese in CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"public class EditCheeseCommand extends EditCommand {","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"    public static final String COMMAND_WORD \u003d \"editcheese\";","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the cheese identified \"","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"            + \"by the index number used in the displayed cheese list. \"","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"            + \"[\" + PREFIX_CHEESE_TYPE + \"CHEESE TYPE] \"","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"            + \"[\" + PREFIX_MANUFACTURE_DATE + \"MANUFACTURE_DATE] \"","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"            + \"[\" + PREFIX_EXPIRY_DATE + \"EXPIRY_DATE]\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_CHEESE_TYPE + \"Parmesan \"","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_MANUFACTURE_DATE + \"2020-12-30 \"","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_EXPIRY_DATE + \"2021-02-30\";","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_EDIT_CHEESE_SUCCESS \u003d \"Edited Cheese: %1$s\";","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_CHEESE_IS_ASSIGNED \u003d \"Not allowed to change the fields of an assigned cheese.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"    protected final Index index;","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"    protected final EditCheeseDescriptor editCheeseDescriptor;","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"     * Creates an EditCheeseCommand to edit the specified cheese at {@code index}","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"    public EditCheeseCommand(Index index, EditCheeseDescriptor editCheeseDescriptor) {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(editCheeseDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"        this.editCheeseDescriptor \u003d new EditCheeseDescriptor(editCheeseDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"        List\u003cCheese\u003e lastShownList \u003d model.getFilteredCheeseList();","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CHEESE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"        Cheese cheeseToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"        if (cheeseToEdit.isCheeseAssigned()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"            throw new CommandException(MESSAGE_CHEESE_IS_ASSIGNED);","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"        Cheese editedCheese \u003d createEditedCheese(cheeseToEdit, editCheeseDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"        model.setCheese(cheeseToEdit, editedCheese);","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"        model.updateFilteredCheeseList(PREDICATE_SHOW_ALL_CHEESES);","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"        model.setPanelToCheeseList();","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CHEESE_SUCCESS, editedCheese));","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"     * Creates and returns a {@code Cheese} with the details of {@code cheeseToEdit}","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"     * edited with {@code editCheeseDescriptor}.","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"    private static Cheese createEditedCheese(Cheese cheeseToEdit,","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"                                                 EditCheeseDescriptor editCheeseDescriptor) throws CommandException {","lastModifiedDate":"2021-04-06"},{"lineNumber":88,"author":{"gitId":"aaronsms"},"content":"        assert cheeseToEdit !\u003d null;","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"aaronsms"},"content":"        CheeseType updatedCheeseType \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"aaronsms"},"content":"            editCheeseDescriptor.getCheeseType().orElse(cheeseToEdit.getCheeseType());","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"aaronsms"},"content":"        ManufactureDate updatedManufactureDate \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"aaronsms"},"content":"            editCheeseDescriptor.getManufactureDate().orElse(cheeseToEdit.getManufactureDate());","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"aaronsms"},"content":"        ExpiryDate updatedExpiryDate \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"aaronsms"},"content":"            editCheeseDescriptor.getExpiryDate().orElse(cheeseToEdit.getExpiryDate().orElse(null));","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"aaronsms"},"content":"        CheeseId id \u003d cheeseToEdit.getCheeseId();","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"aaronsms"},"content":"        boolean isAssigned \u003d cheeseToEdit.isCheeseAssigned();","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"        Cheese retCheese;","lastModifiedDate":"2021-04-06"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"        try {","lastModifiedDate":"2021-04-06"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"            retCheese \u003d new Cheese(updatedCheeseType, updatedManufactureDate, updatedExpiryDate, id, isAssigned);","lastModifiedDate":"2021-04-06"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-04-06"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2021-04-06"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"        return retCheese;","lastModifiedDate":"2021-04-06"},{"lineNumber":107,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":108,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"aaronsms"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"aaronsms"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":112,"author":{"gitId":"aaronsms"},"content":"                || (other instanceof EditCheeseCommand // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"aaronsms"},"content":"                \u0026\u0026 index.equals(((EditCheeseCommand) other).index)","lastModifiedDate":"2021-03-26"},{"lineNumber":114,"author":{"gitId":"aaronsms"},"content":"                \u0026\u0026 editCheeseDescriptor.equals(((EditCheeseCommand) other).editCheeseDescriptor));","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"aaronsms"},"content":"     * Stores the details to edit the cheese with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"aaronsms"},"content":"     * corresponding field value of the cheese.","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"aaronsms"},"content":"    public static class EditCheeseDescriptor {","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"aaronsms"},"content":"        private CheeseType cheeseType;","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"aaronsms"},"content":"        private ManufactureDate manufactureDate;","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"aaronsms"},"content":"        private ExpiryDate expiryDate;","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"aaronsms"},"content":"        public EditCheeseDescriptor() {}","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"aaronsms"},"content":"        /**","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"aaronsms"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"aaronsms"},"content":"         */","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"aaronsms"},"content":"        public EditCheeseDescriptor(EditCheeseDescriptor toCopy) {","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"aaronsms"},"content":"            setCheeseType(toCopy.cheeseType);","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"aaronsms"},"content":"            setManufactureDate(toCopy.manufactureDate);","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"aaronsms"},"content":"            setExpiryDate(toCopy.expiryDate);","lastModifiedDate":"2021-03-26"},{"lineNumber":135,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"aaronsms"},"content":"        /**","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"aaronsms"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"aaronsms"},"content":"         */","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"aaronsms"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"daniellau88"},"content":"            return CollectionUtil.isAnyNonNull(cheeseType, manufactureDate, expiryDate);","lastModifiedDate":"2021-04-05"},{"lineNumber":142,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"aaronsms"},"content":"        public void setCheeseType(CheeseType cheeseType) {","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"aaronsms"},"content":"            this.cheeseType \u003d cheeseType;","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"aaronsms"},"content":"        public Optional\u003cCheeseType\u003e getCheeseType() {","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"aaronsms"},"content":"            return Optional.ofNullable(cheeseType);","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"aaronsms"},"content":"        public void setManufactureDate(ManufactureDate manufactureDate) {","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"aaronsms"},"content":"            this.manufactureDate \u003d manufactureDate;","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"aaronsms"},"content":"        public Optional\u003cManufactureDate\u003e getManufactureDate() {","lastModifiedDate":"2021-03-26"},{"lineNumber":157,"author":{"gitId":"aaronsms"},"content":"            return Optional.ofNullable(manufactureDate);","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"aaronsms"},"content":"        public void setExpiryDate(ExpiryDate expiryDate) {","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"aaronsms"},"content":"            this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":164,"author":{"gitId":"aaronsms"},"content":"        public Optional\u003cExpiryDate\u003e getExpiryDate() {","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"aaronsms"},"content":"            return Optional.ofNullable(expiryDate);","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":167,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":168,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":169,"author":{"gitId":"aaronsms"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"aaronsms"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":171,"author":{"gitId":"aaronsms"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"aaronsms"},"content":"                return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":173,"author":{"gitId":"aaronsms"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":174,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":175,"author":{"gitId":"aaronsms"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"aaronsms"},"content":"            if (!(other instanceof EditCheeseDescriptor)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"aaronsms"},"content":"                return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"aaronsms"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":179,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":180,"author":{"gitId":"aaronsms"},"content":"            // state check","lastModifiedDate":"2021-03-26"},{"lineNumber":181,"author":{"gitId":"aaronsms"},"content":"            EditCheeseDescriptor e \u003d (EditCheeseDescriptor) other;","lastModifiedDate":"2021-03-26"},{"lineNumber":182,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":183,"author":{"gitId":"aaronsms"},"content":"            return getCheeseType().equals(e.getCheeseType())","lastModifiedDate":"2021-03-26"},{"lineNumber":184,"author":{"gitId":"aaronsms"},"content":"                    \u0026\u0026 getManufactureDate().equals(e.getManufactureDate())","lastModifiedDate":"2021-03-26"},{"lineNumber":185,"author":{"gitId":"aaronsms"},"content":"                    \u0026\u0026 getExpiryDate().equals(e.getExpiryDate());","lastModifiedDate":"2021-03-26"},{"lineNumber":186,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":187,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":188,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"weixue123":16,"daniellau88":10,"aaronsms":162}},{"path":"src/main/java/chim/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":" * Edits the details of a customer, an order, or a cheese in CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"public abstract class EditCommand extends Command {","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"weixue123":4,"-":9,"aaronsms":3}},{"path":"src/main/java/chim/logic/commands/EditCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.CollectionUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Address;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Email;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Name;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":" * Edits the details of an existing customer in CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"public class EditCustomerCommand extends EditCommand {","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"    public static final String COMMAND_WORD \u003d \"editcustomer\";","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the customer identified \"","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"            + \"by the index number used in the displayed customer list. \"","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_EDIT_CUSTOMER_SUCCESS \u003d \"Edited Customer: %1$s\";","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"Customer with that phone number already exists in CHIM.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"    protected final Index index;","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"    protected final EditCustomerDescriptor editCustomerDescriptor;","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"     * @param index of the customer in the filtered customer list to edit","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"     * @param editCustomerDescriptor details to edit the customer with","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"    public EditCustomerCommand(Index index, EditCustomerDescriptor editCustomerDescriptor) {","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(editCustomerDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"        this.editCustomerDescriptor \u003d new EditCustomerDescriptor(editCustomerDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"        Customer customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"        Customer editedCustomer \u003d createEditedCustomer(customerToEdit, editCustomerDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"        if (!customerToEdit.isSameCustomer(editedCustomer) \u0026\u0026 model.hasCustomer(editedCustomer)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"        model.setCustomer(customerToEdit, editedCustomer);","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"        model.setPanelToCustomerList();","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"aaronsms"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer));","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"aaronsms"},"content":"     * Creates and returns a {@code Customer} with the details of {@code customerToEdit}","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"aaronsms"},"content":"     * edited with {@code editCustomerDescriptor}.","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"aaronsms"},"content":"    private static Customer createEditedCustomer(Customer customerToEdit,","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"daniellau88"},"content":"                                                 EditCustomerDescriptor editCustomerDescriptor)","lastModifiedDate":"2021-04-06"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"        throws CommandException {","lastModifiedDate":"2021-04-06"},{"lineNumber":99,"author":{"gitId":"aaronsms"},"content":"        assert customerToEdit !\u003d null;","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"aaronsms"},"content":"        Name updatedName \u003d editCustomerDescriptor.getName().orElse(customerToEdit.getName());","lastModifiedDate":"2021-03-26"},{"lineNumber":102,"author":{"gitId":"aaronsms"},"content":"        Phone updatedPhone \u003d editCustomerDescriptor.getPhone().orElse(customerToEdit.getPhone());","lastModifiedDate":"2021-03-26"},{"lineNumber":103,"author":{"gitId":"aaronsms"},"content":"        Email updatedEmail \u003d editCustomerDescriptor.getEmail().orElse(customerToEdit.getEmail());","lastModifiedDate":"2021-03-26"},{"lineNumber":104,"author":{"gitId":"aaronsms"},"content":"        Address updatedAddress \u003d editCustomerDescriptor.getAddress().orElse(customerToEdit.getAddress());","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"aaronsms"},"content":"        Set\u003cTag\u003e updatedTags \u003d editCustomerDescriptor.getTags().orElse(customerToEdit.getTags());","lastModifiedDate":"2021-03-26"},{"lineNumber":106,"author":{"gitId":"aaronsms"},"content":"        CustomerId id \u003d customerToEdit.getId();","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"        return new Customer(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, id);","lastModifiedDate":"2021-04-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-26"},{"lineNumber":119,"author":{"gitId":"aaronsms"},"content":"        if (!(other instanceof EditCustomerCommand)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand e \u003d (EditCustomerCommand) other;","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"aaronsms"},"content":"                \u0026\u0026 editCustomerDescriptor.equals(e.editCustomerDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"aaronsms"},"content":"     * Stores the details to edit the customer with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"aaronsms"},"content":"     * corresponding field value of the customer.","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"aaronsms"},"content":"    public static class EditCustomerDescriptor {","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2021-03-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"aaronsms"},"content":"        public EditCustomerDescriptor() {}","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"aaronsms"},"content":"        public EditCustomerDescriptor(EditCustomerDescriptor toCopy) {","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-03-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-03-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2021-03-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-03-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-03-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2021-03-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-03-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-03-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-03-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-03-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-03-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-03-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-03-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-03-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-26"},{"lineNumber":218,"author":{"gitId":"aaronsms"},"content":"            if (!(other instanceof EditCustomerDescriptor)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2021-03-26"},{"lineNumber":223,"author":{"gitId":"aaronsms"},"content":"            EditCustomerDescriptor e \u003d (EditCustomerDescriptor) other;","lastModifiedDate":"2021-03-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2021-03-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2021-03-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2021-03-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-03-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"weixue123":21,"daniellau88":3,"-":162,"aaronsms":46}},{"path":"src/main/java/chim/logic/commands/EditOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ORDER_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.CollectionUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.order.CompletedDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderId;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":" * Edits the details of an existing order in CHIM.","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"public class EditOrderCommand extends EditCommand {","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"    public static final String COMMAND_WORD \u003d \"editorder\";","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the order identified \"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"            + \"by the index number used in the displayed order list. \"","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"            + \"[\" + PREFIX_CHEESE_TYPE + \"CHEESE TYPE] \"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"            + \"[\" + PREFIX_QUANTITY + \"QUANTITY] \"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"            + \"[\" + PREFIX_ORDER_DATE + \"ORDER DATE]\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_CHEESE_TYPE + \"Parmesan \"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_QUANTITY + \"4 \"","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_PHONE + \"65558888 \"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"            + PREFIX_ORDER_DATE + \"2020-12-30\";","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_EDIT_ORDER_SUCCESS \u003d \"Edited Order: %1$s\";","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_NO_CUSTOMERS_FOUND \u003d \"No customer in CHIM owns that phone number.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_SAME_CUSTOMER_PHONE \u003d \"Customer phone number provided is the same.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_COMPLETED_ORDER_ERROR \u003d \"Not allowed to change the fields of a completed order.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"    protected final Index index;","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"    protected final EditOrderDescriptor editOrderDescriptor;","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"     * Creates an AddOrderCommand to add the specified order at index {@code index}","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"    public EditOrderCommand(Index index, EditOrderDescriptor editOrderDescriptor) {","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(editOrderDescriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"        this.editOrderDescriptor \u003d new EditOrderDescriptor(editOrderDescriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"AhQuanz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-08"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"        if (orderToEdit.isComplete()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"            throw new CommandException(MESSAGE_COMPLETED_ORDER_ERROR);","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"        if (editOrderDescriptor.getPhone().isPresent()","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"                \u0026\u0026 !model.hasCustomerWithPhone(editOrderDescriptor.getPhone().get())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"            throw new CommandException(MESSAGE_NO_CUSTOMERS_FOUND);","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"aaronsms"},"content":"        Order editedOrder \u003d createEditedOrder(orderToEdit, editOrderDescriptor, model);","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"aaronsms"},"content":"        model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"aaronsms"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"aaronsms"},"content":"        model.setPanelToOrderList();","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"aaronsms"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_ORDER_SUCCESS, editedOrder));","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"aaronsms"},"content":"     * Creates and returns an {@code Order} with the details of {@code orderToEdit}","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"aaronsms"},"content":"     * edited with {@code editOrderDescriptor}.","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"aaronsms"},"content":"    private static Order createEditedOrder(Order orderToEdit, EditOrderDescriptor editOrderDescriptor, Model model)","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"aaronsms"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"aaronsms"},"content":"        assert orderToEdit !\u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"aaronsms"},"content":"        CheeseType updatedCheeseType \u003d editOrderDescriptor.getCheeseType().orElse(orderToEdit.getCheeseType());","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"aaronsms"},"content":"        Quantity updatedQuantity \u003d editOrderDescriptor.getQuantity().orElse(orderToEdit.getQuantity());","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"aaronsms"},"content":"        Optional\u003cCustomerId\u003e customerId \u003d editOrderDescriptor.getPhone()","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"aaronsms"},"content":"                .map(model::getCustomerWithPhone).map(Customer::getId);","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"aaronsms"},"content":"        if (customerId.isPresent() \u0026\u0026 customerId.get().equals(orderToEdit.getCustomerId())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"aaronsms"},"content":"            throw new CommandException(MESSAGE_SAME_CUSTOMER_PHONE);","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"aaronsms"},"content":"        CustomerId updatedCustomerId \u003d customerId.orElse(orderToEdit.getCustomerId());","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"aaronsms"},"content":"        OrderDate updatedOrderDate \u003d editOrderDescriptor.getOrderDate().orElse(orderToEdit.getOrderDate());","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"aaronsms"},"content":"        CompletedDate completedDate \u003d orderToEdit.getCompletedDate().orElse(null);","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"aaronsms"},"content":"        OrderId orderId \u003d orderToEdit.getOrderId();","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"daniellau88"},"content":"        Order retOrder;","lastModifiedDate":"2021-04-06"},{"lineNumber":120,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":121,"author":{"gitId":"daniellau88"},"content":"        try {","lastModifiedDate":"2021-04-06"},{"lineNumber":122,"author":{"gitId":"daniellau88"},"content":"            retOrder \u003d new Order(updatedCheeseType, updatedQuantity, updatedOrderDate,","lastModifiedDate":"2021-04-06"},{"lineNumber":123,"author":{"gitId":"aaronsms"},"content":"                completedDate, orderId, updatedCustomerId);","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"daniellau88"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-04-06"},{"lineNumber":125,"author":{"gitId":"daniellau88"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2021-04-06"},{"lineNumber":126,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":127,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":128,"author":{"gitId":"daniellau88"},"content":"        return retOrder;","lastModifiedDate":"2021-04-06"},{"lineNumber":129,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"aaronsms"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"aaronsms"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"aaronsms"},"content":"                || (other instanceof EditOrderCommand // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"aaronsms"},"content":"                \u0026\u0026 index.equals(((EditOrderCommand) other).index)","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"aaronsms"},"content":"                \u0026\u0026 editOrderDescriptor.equals(((EditOrderCommand) other).editOrderDescriptor));","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"aaronsms"},"content":"     * Stores the details to edit the order with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"aaronsms"},"content":"     * corresponding field value of the order.","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"aaronsms"},"content":"    public static class EditOrderDescriptor {","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"aaronsms"},"content":"        private CheeseType cheeseType;","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"aaronsms"},"content":"        private Quantity quantity;","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"aaronsms"},"content":"        private Phone phone;","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"aaronsms"},"content":"        private OrderDate orderDate;","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"aaronsms"},"content":"        public EditOrderDescriptor() {}","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"aaronsms"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"aaronsms"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"aaronsms"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"aaronsms"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"aaronsms"},"content":"        public EditOrderDescriptor(EditOrderDescriptor toCopy) {","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"aaronsms"},"content":"            setCheeseType(toCopy.cheeseType);","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"aaronsms"},"content":"            setQuantity(toCopy.quantity);","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"aaronsms"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"aaronsms"},"content":"            setOrderDate(toCopy.orderDate);","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"aaronsms"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"aaronsms"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"aaronsms"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"aaronsms"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"aaronsms"},"content":"            return CollectionUtil.isAnyNonNull(cheeseType, quantity, phone, orderDate);","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"aaronsms"},"content":"        public void setCheeseType(CheeseType cheeseType) {","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"aaronsms"},"content":"            this.cheeseType \u003d cheeseType;","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"aaronsms"},"content":"        public Optional\u003cCheeseType\u003e getCheeseType() {","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"aaronsms"},"content":"            return Optional.ofNullable(cheeseType);","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"aaronsms"},"content":"        public void setQuantity(Quantity quantity) {","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"aaronsms"},"content":"            this.quantity \u003d quantity;","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"aaronsms"},"content":"        public Optional\u003cQuantity\u003e getQuantity() {","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"aaronsms"},"content":"            return Optional.ofNullable(quantity);","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"aaronsms"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"aaronsms"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"aaronsms"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"aaronsms"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"aaronsms"},"content":"        public void setOrderDate(OrderDate orderDate) {","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"aaronsms"},"content":"            this.orderDate \u003d orderDate;","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"aaronsms"},"content":"        public Optional\u003cOrderDate\u003e getOrderDate() {","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"aaronsms"},"content":"            return Optional.ofNullable(orderDate);","lastModifiedDate":"2021-03-27"},{"lineNumber":199,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"aaronsms"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"aaronsms"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":204,"author":{"gitId":"aaronsms"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-27"},{"lineNumber":205,"author":{"gitId":"aaronsms"},"content":"                return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":206,"author":{"gitId":"aaronsms"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":207,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":208,"author":{"gitId":"aaronsms"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":209,"author":{"gitId":"aaronsms"},"content":"            if (!(other instanceof EditOrderDescriptor)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":210,"author":{"gitId":"aaronsms"},"content":"                return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":211,"author":{"gitId":"aaronsms"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":212,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":213,"author":{"gitId":"aaronsms"},"content":"            // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":214,"author":{"gitId":"aaronsms"},"content":"            EditOrderDescriptor e \u003d (EditOrderDescriptor) other;","lastModifiedDate":"2021-03-27"},{"lineNumber":215,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":216,"author":{"gitId":"aaronsms"},"content":"            return getOrderDate().equals(e.getOrderDate())","lastModifiedDate":"2021-03-27"},{"lineNumber":217,"author":{"gitId":"aaronsms"},"content":"                    \u0026\u0026 getCheeseType().equals(e.getCheeseType())","lastModifiedDate":"2021-03-27"},{"lineNumber":218,"author":{"gitId":"AhQuanz"},"content":"                    \u0026\u0026 getQuantity().equals(e.getQuantity())","lastModifiedDate":"2021-04-08"},{"lineNumber":219,"author":{"gitId":"aaronsms"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone());","lastModifiedDate":"2021-03-27"},{"lineNumber":220,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":221,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":222,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":223,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"AhQuanz":2,"weixue123":23,"daniellau88":9,"aaronsms":189}},{"path":"src/main/java/chim/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Cheese Inventory Management as requested ...\";","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"weixue123":3,"-":16}},{"path":"src/main/java/chim/logic/commands/FindCheeseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_ASSIGNMENT_STATUS;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":" * Finds the cheeses in CHIM matching the input keywords; keyword matching is case insensitive.","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":" * Lists the matching cheeses to the user.","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"public class FindCheeseCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"    public static final String COMMAND_WORD \u003d \"findcheese\";","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"            + \": Find cheeses matching input assignment status and cheese type(s).\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"            + \"[\" + PREFIX_CHEESE_ASSIGNMENT_STATUS + \"ASSIGNMENT STATUS] \"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"            + \"[\" + PREFIX_CHEESE_TYPE + \"CHEESE TYPE] \\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"            + \"Example: \"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"            + PREFIX_CHEESE_ASSIGNMENT_STATUS + \"assigned \"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"            + PREFIX_CHEESE_TYPE + \"brie feta\";","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"    public final FieldPredicate\u003cCheese\u003e predicate;","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"     * Creates a new {@code FindCheeseCommand}","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"     * @param predicate Predicate for filtering the cheeses list.","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    public FindCheeseCommand(FieldPredicate\u003cCheese\u003e predicate) {","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"        model.updateFilteredCheeseList(predicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"        model.setPanelToCheeseList();","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"        String message \u003d String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"                Messages.MESSAGE_CHEESES_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"                model.getFilteredCheeseList().size(),","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"                predicate","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"        if (model.getFilteredCheeseList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"            message \u003d String.format(Messages.MESSAGE_CHEESES_NOT_FOUND_OVERVIEW, predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"                || (other instanceof FindCheeseCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 predicate.equals(((FindCheeseCommand) other).predicate));","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"AhQuanz":11,"weixue123":55}},{"path":"src/main/java/chim/logic/commands/FindCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":" * Finds the customers in CHIM whose details matches the input keywords; keyword matching is case insensitive.","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":" * Lists the matching customers to the user.","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"public class FindCustomerCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    public static final String COMMAND_WORD \u003d \"findcustomer\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all customer given by any of the arguments \"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"            + \"(e.g. names) which contains any of the specified keywords (case-insensitive) and displays them as \"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"            + \"a list with index numbers.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"            + \"[\" + PREFIX_NAME + \"NAME_KEYWORDS...] \"","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE_KEYWORDS...] \"","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL_KEYWORDS...] \"","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS_KEYWORDS...]\"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"            + \"\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \" alice bob charlie\";","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"    private final FieldPredicate\u003cCustomer\u003e predicate;","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"     * Creates a new find command","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"     * @param predicate predicate of find command","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"    public FindCustomerCommand(FieldPredicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"        model.updateFilteredCustomerList(predicate);","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"        model.setPanelToCustomerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"        String message \u003d String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"                Messages.MESSAGE_CUSTOMERS_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"                model.getFilteredCustomerList().size(),","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"                predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"        if (model.getFilteredCustomerList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"            message \u003d String.format(Messages.MESSAGE_CUSTOMERS_NOT_FOUND_OVERVIEW, predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"                || (other instanceof FindCustomerCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 predicate.equals(((FindCustomerCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"AhQuanz":11,"laurenlhy":1,"weixue123":14,"daniellau88":19,"-":23}},{"path":"src/main/java/chim/logic/commands/FindOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ORDER_COMPLETION_STATUS;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":" * Finds the orders in CHIM matching the input keywords; keyword matching is case insensitive.","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":" * Lists the matching orders to the user.","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"public class FindOrderCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    public static final String COMMAND_WORD \u003d \"findorder\";","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"            + \": Find orders matching input completion status and cheese type(s).\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"            + \"[\" + PREFIX_ORDER_COMPLETION_STATUS + \"ORDER COMPLETION STATUS] \"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"            + \"[\" + PREFIX_CHEESE_TYPE + \"CHEESE TYPE] \"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"            + \"[\" + PREFIX_NAME + \"CUSTOMER NAME] \"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"            + \"[\" + PREFIX_PHONE + \"CUSTOMER PHONE] \\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"            + \"Example: \"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"            + PREFIX_ORDER_COMPLETION_STATUS + \"complete \"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"            + PREFIX_CHEESE_TYPE + \"gouda \"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"            + PREFIX_NAME + \"alice \"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"            + PREFIX_PHONE + \"92280919\";","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"    public final FieldPredicate\u003cOrder\u003e predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"     * Creates a new {@code FindOrderCommand}.","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"     * @param predicate Predicate for filtering the order list.","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"    public FindOrderCommand(FieldPredicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"        model.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"        model.setPanelToOrderList();","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"        String message \u003d String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"                Messages.MESSAGE_ORDERS_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"                model.getFilteredOrderList().size(),","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"                predicate","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"        if (model.getFilteredOrderList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"            message \u003d String.format(Messages.MESSAGE_ORDERS_NOT_FOUND_OVERVIEW, predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"                || (other instanceof FindOrderCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 predicate.equals(((FindOrderCommand) other).predicate));","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"AhQuanz":11,"weixue123":61}},{"path":"src/main/java/chim/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weixue123":2,"-":19}},{"path":"src/main/java/chim/logic/commands/ListCheesesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.model.Model.PREDICATE_SHOW_ALL_CHEESES;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":" * Lists all cheeses in the CHIM to the user.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"public class ListCheesesCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"    public static final String COMMAND_WORD \u003d \"listcheeses\";","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all cheeses\";","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"    public static final String SUMMARY_MESSAGE \u003d \"Listed %d cheeses (%d assigned , %d unassigned)\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"        model.updateFilteredCheeseList(PREDICATE_SHOW_ALL_CHEESES);","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"        model.setPanelToCheeseList();","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"        int unassignedCount \u003d model.getFilteredCheeseListUnassignedCount();","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"        int totalCheese \u003d model.getFilteredCheeseList().size();","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"                String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"                        SUMMARY_MESSAGE,","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"                        totalCheese,","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"                        totalCheese - unassignedCount,","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"                        unassignedCount","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"                )","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"        );","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"AhQuanz":11,"weixue123":22}},{"path":"src/main/java/chim/logic/commands/ListCustomersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":" * Lists all customers in CHIM to the user.","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"public class ListCustomersCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"    public static final String COMMAND_WORD \u003d \"listcustomers\";","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all customers\";","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"    public static final String SUMMARY_MESSAGE \u003d \"Listed %d customers\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"        model.setPanelToCustomerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"                String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"                        SUMMARY_MESSAGE,","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"                        model.getFilteredCustomerList().size()","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"                )","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"        );","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AhQuanz":7,"laurenlhy":1,"weixue123":8,"-":13}},{"path":"src/main/java/chim/logic/commands/ListOrdersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":" * Lists all orders in CHIM to the user.","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"public class ListOrdersCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"    public static final String COMMAND_WORD \u003d \"listorders\";","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all orders\";","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"    public static final String SUMMARY_MESSAGE \u003d \"Listed %d orders (%d completed, %d incomplete)\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"        model.setPanelToOrderList();","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"        int incompleteCount \u003d model.getFilteredOrderListIncompleteCount();","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"        int totalOrder \u003d model.getFilteredOrderList().size();","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"                String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"                        SUMMARY_MESSAGE,","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"                        model.getFilteredOrderList().size(),","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"                        totalOrder - incompleteCount,","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"                        incompleteCount)","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"        );","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"AhQuanz":10,"weixue123":22}},{"path":"src/main/java/chim/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands.exceptions;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"weixue123":1,"-":16}},{"path":"src/main/java/chim/logic/parser/AddCheeseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import static chim.commons.core.Messages.MESSAGE_CHEESE_QUANTITY_EXCEED;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_MANUFACTURE_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ExpiryDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ManufactureDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":" * Parses input arguments and creates a new AddCustomerCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"public class AddCheeseCommandParser implements Parser\u003cAddCheeseCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"    public static final int UPPER_BOUND_LIMIT \u003d 1000;","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCustomerCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"     * and returns an AddCustomerCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"    public AddCheeseCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CHEESE_TYPE, PREFIX_QUANTITY, PREFIX_MANUFACTURE_DATE,","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"                        PREFIX_EXPIRY_DATE);","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CHEESE_TYPE, PREFIX_QUANTITY)","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCheeseCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"        CheeseType cheeseType \u003d ParserUtil.parseCheeseType(argMultimap.getValue(PREFIX_CHEESE_TYPE).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"        int quantity \u003d ParserUtil.parseInteger(argMultimap.getValue(PREFIX_QUANTITY).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"        if (quantity \u003e UPPER_BOUND_LIMIT) {","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"            throw new ParseException(MESSAGE_CHEESE_QUANTITY_EXCEED);","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"        ManufactureDate manufactureDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"        if (argMultimap.getValue(PREFIX_MANUFACTURE_DATE).isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"            manufactureDate \u003d ParserUtil.parseManufactureDate(argMultimap.getValue(PREFIX_MANUFACTURE_DATE).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"            manufactureDate \u003d ManufactureDate.now();","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"        ExpiryDate expiryDate \u003d null;","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"        if (argMultimap.getValue(PREFIX_EXPIRY_DATE).isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"            expiryDate \u003d ParserUtil.parseExpiryDate(argMultimap.getValue(PREFIX_EXPIRY_DATE).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"        Cheese[] cheeses \u003d new Cheese[quantity];","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"        try {","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"            for (int i \u003d 0; i \u003c quantity; i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"                cheeses[i] \u003d new Cheese(cheeseType, manufactureDate, expiryDate);","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"        return new AddCheeseCommand(cheeses);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"weixue123":13,"daniellau88":14,"aaronsms":55}},{"path":"src/main/java/chim/logic/parser/AddCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Address;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Email;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Name;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":" * Parses input arguments and creates a new AddCustomerCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"public class AddCustomerCommandParser implements Parser\u003cAddCustomerCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCustomerCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"     * and returns an AddCustomerCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"    public AddCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"        Customer customer \u003d new Customer(name, phone, email, address, tagList);","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"        return new AddCustomerCommand(customer);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"laurenlhy":1,"weixue123":15,"-":37,"aaronsms":7}},{"path":"src/main/java/chim/logic/parser/AddOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ORDER_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":" * Parses input arguments and creates a new AddOrderCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"public class AddOrderCommandParser implements Parser\u003cAddOrderCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"     * Parses the given {@code String} of arguments in the context of the AddOrderCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"     * and returns an AddOrderCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"    public AddOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CHEESE_TYPE, PREFIX_PHONE, PREFIX_QUANTITY, PREFIX_ORDER_DATE);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CHEESE_TYPE, PREFIX_PHONE, PREFIX_QUANTITY)","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"        CheeseType cheeseType \u003d ParserUtil.parseCheeseType(argMultimap.getValue(PREFIX_CHEESE_TYPE).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"        Quantity quantity \u003d ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_QUANTITY).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"        OrderDate orderDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"        if (argMultimap.getValue(PREFIX_ORDER_DATE).isPresent()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"            orderDate \u003d ParserUtil.parseOrderDate(argMultimap.getValue(PREFIX_ORDER_DATE).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"            orderDate \u003d OrderDate.now();","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"        return new AddOrderCommand(cheeseType, phone, quantity, orderDate);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"weixue123":13,"aaronsms":47}},{"path":"src/main/java/chim/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"weixue123":1,"-":59}},{"path":"src/main/java/chim/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"weixue123":1,"-":147}},{"path":"src/main/java/chim/logic/parser/ChimParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ClearCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.Command;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DeleteCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DeleteOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DoneCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ExitCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.FindCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.FindCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.FindOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.HelpCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ListCheesesCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ListCustomersCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ListOrdersCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"public class ChimParser {","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"    private final Model model;","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"    public ChimParser(Model model) {","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"        case AddCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"            return new AddCustomerCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"        case AddOrderCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"            return new AddOrderCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"        case AddCheeseCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"            return new AddCheeseCommandParser().parse(arguments);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"        case EditCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"            return new EditCustomerCommandParser().parse(arguments);","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"        case EditCheeseCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"            return new EditCheeseCommandParser().parse(arguments);","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"        case EditOrderCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"            return new EditOrderCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"laurenlhy"},"content":"        case DeleteCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"laurenlhy"},"content":"            return new DeleteCustomerCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"laurenlhy"},"content":"        case DeleteCheeseCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"laurenlhy"},"content":"            return new DeleteCheeseCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"laurenlhy"},"content":"        case DeleteOrderCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"laurenlhy"},"content":"            return new DeleteOrderCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"daniellau88"},"content":"        case FindCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"            return new FindCustomerCommandParser().parse(arguments);","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"weixue123"},"content":"        case FindCheeseCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"weixue123"},"content":"            return new FindCheeseCommandParser().parse(arguments);","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"weixue123"},"content":"        case FindOrderCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"weixue123"},"content":"            return new FindOrderCommandParser(model.getCompleteCustomerList()).parse(arguments);","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"weixue123"},"content":"        case ListCustomersCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"weixue123"},"content":"            return new ListCustomersCommand();","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"weixue123"},"content":"        case ListCheesesCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"weixue123"},"content":"            return new ListCheesesCommand();","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"weixue123"},"content":"        case ListOrdersCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"weixue123"},"content":"            return new ListOrdersCommand();","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"AhQuanz"},"content":"        case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"AhQuanz"},"content":"            return new DoneCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AhQuanz":3,"laurenlhy":8,"weixue123":46,"daniellau88":2,"-":53,"aaronsms":15}},{"path":"src/main/java/chim/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"    /* Customer */","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"    /* Order */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"    public static final Prefix PREFIX_ORDER_COMPLETION_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"    public static final Prefix PREFIX_CHEESE_TYPE \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"    public static final Prefix PREFIX_QUANTITY \u003d new Prefix(\"q/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"    public static final Prefix PREFIX_ORDER_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"    /* Cheese */","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"    public static final Prefix PREFIX_CHEESE_ASSIGNMENT_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"    public static final Prefix PREFIX_MANUFACTURE_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"    public static final Prefix PREFIX_EXPIRY_DATE \u003d new Prefix(\"e/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"weixue123":3,"-":14,"aaronsms":10}},{"path":"src/main/java/chim/logic/parser/DeleteCheeseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DeleteCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":" * Parses input arguments and creates a new DeleteCheeseCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"public class DeleteCheeseCommandParser implements Parser\u003cDeleteCheeseCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCheeseCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"     * and returns a DeleteCheeseCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"    public DeleteCheeseCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"            return new DeleteCheeseCommand(index);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCheeseCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"laurenlhy":7,"weixue123":5,"-":16}},{"path":"src/main/java/chim/logic/parser/DeleteCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":" * Parses input arguments and creates a new DeleteCustomerCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"public class DeleteCustomerCommandParser implements Parser\u003cDeleteCustomerCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCustomerCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"     * and returns a DeleteCustomerCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"    public DeleteCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PHONE);","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PHONE) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"                    DeleteCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"        return new DeleteCustomerCommand(phone);","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"laurenlhy":24,"weixue123":6,"-":13}},{"path":"src/main/java/chim/logic/parser/DeleteOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DeleteOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":" * Parses input arguments and creates a new DeleteOrderCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"public class DeleteOrderCommandParser implements Parser\u003cDeleteOrderCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteOrderCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"     * and returns a DeleteOrderCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"    public DeleteOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"            return new DeleteOrderCommand(index);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"laurenlhy":7,"weixue123":5,"-":16}},{"path":"src/main/java/chim/logic/parser/DoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DoneCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":" * Parses input arguments and creates a new DoneCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"public class DoneCommandParser implements Parser\u003cDoneCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"     * and returns a DoneCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"    public DoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"AhQuanz":23,"weixue123":5}},{"path":"src/main/java/chim/logic/parser/EditCheeseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_MANUFACTURE_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCheeseCommand.EditCheeseDescriptor;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":" * Parses input arguments and creates a new EditCheeseCommand object","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"public class EditCheeseCommandParser implements Parser\u003cEditCheeseCommand\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"     * and returns an EditCheeseCommand object for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"    public EditCheeseCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CHEESE_TYPE, PREFIX_MANUFACTURE_DATE, PREFIX_EXPIRY_DATE);","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"        Index index;","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"        try {","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCheeseCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"        EditCheeseDescriptor editCheeseDescriptor \u003d new EditCheeseDescriptor();","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"        if (argMultimap.getValue(PREFIX_CHEESE_TYPE).isPresent()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"            editCheeseDescriptor.setCheeseType(","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"                    ParserUtil.parseCheeseType(argMultimap.getValue(PREFIX_CHEESE_TYPE).get()));","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"        if (argMultimap.getValue(PREFIX_MANUFACTURE_DATE).isPresent()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"            editCheeseDescriptor.setManufactureDate(","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"                    ParserUtil.parseManufactureDate(argMultimap.getValue(PREFIX_MANUFACTURE_DATE).get()));","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"        if (argMultimap.getValue(PREFIX_EXPIRY_DATE).isPresent()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"            editCheeseDescriptor.setExpiryDate(","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"                    ParserUtil.parseExpiryDate(argMultimap.getValue(PREFIX_EXPIRY_DATE).get()));","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"        if (!editCheeseDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(EditCheeseCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"        return new EditCheeseCommand(index, editCheeseDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"weixue123":9,"daniellau88":1,"aaronsms":50}},{"path":"src/main/java/chim/logic/parser/EditCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":" * Parses input arguments and creates a new EditCustomerCommand object","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"public class EditCustomerCommandParser implements Parser\u003cEditCustomerCommand\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"    public EditCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCustomerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"        EditCustomerDescriptor editCustomerDescriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"            editCustomerDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"            editCustomerDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":"            editCustomerDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"            editCustomerDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editCustomerDescriptor::setTags);","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"laurenlhy"},"content":"        if (!editCustomerDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(EditCustomerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"        return new EditCustomerCommand(index, editCustomerDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"laurenlhy":7,"weixue123":12,"-":57,"aaronsms":7}},{"path":"src/main/java/chim/logic/parser/EditOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ORDER_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":" * Parses input arguments and creates a new EditOrderCommand object","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"public class EditOrderCommandParser implements Parser\u003cEditOrderCommand\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"     * and returns an EditOrderCommand object for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"    public EditOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CHEESE_TYPE,","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"                        PREFIX_ORDER_DATE, PREFIX_QUANTITY, PREFIX_PHONE);","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"        Index index;","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"        EditOrderCommand.EditOrderDescriptor editOrderDescriptor \u003d new EditOrderCommand.EditOrderDescriptor();","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"        if (argMultimap.getValue(PREFIX_CHEESE_TYPE).isPresent()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"            editOrderDescriptor.setCheeseType(","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"                    ParserUtil.parseCheeseType(argMultimap.getValue(PREFIX_CHEESE_TYPE).get()));","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"        if (argMultimap.getValue(PREFIX_ORDER_DATE).isPresent()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"            editOrderDescriptor.setOrderDate(","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"                    ParserUtil.parseOrderDate(argMultimap.getValue(PREFIX_ORDER_DATE).get()));","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"        if (argMultimap.getValue(PREFIX_QUANTITY).isPresent()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"            editOrderDescriptor.setQuantity(","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"                    ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_QUANTITY).get()));","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"            editOrderDescriptor.setPhone(","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"                    ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"        if (!editOrderDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(EditOrderCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"        return new EditOrderCommand(index, editOrderDescriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"weixue123":9,"aaronsms":55}},{"path":"src/main/java/chim/logic/parser/FindCheeseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_ASSIGNMENT_STATUS;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.FindCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.CompositeFieldPredicateBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":" * Parses input arguments and creates a new FindCheeseCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"public class FindCheeseCommandParser implements Parser\u003cFindCheeseCommand\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"     * Parses the given {@code String} of arguments in the context of FindCheeseCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"     * and returns a FindCheeseCommand object for execution.","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"    public FindCheeseCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CHEESE_ASSIGNMENT_STATUS,","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"                PREFIX_CHEESE_TYPE);","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"        if (!areAnyPrefixesPresent(argMultimap, PREFIX_CHEESE_ASSIGNMENT_STATUS, PREFIX_CHEESE_TYPE)","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCheeseCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicateBuilder\u003cCheese\u003e pBuilder \u003d new CompositeFieldPredicateBuilder\u003c\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"        Optional\u003cString\u003e statusArg \u003d argMultimap.getValue(PREFIX_CHEESE_ASSIGNMENT_STATUS);","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"        if (statusArg.isPresent()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"            pBuilder.compose(ParserUtil.parseCheeseAssignmentStatusKeyword(statusArg.get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"        Optional\u003cString\u003e cheeseTypeArg \u003d argMultimap.getValue(PREFIX_CHEESE_TYPE);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"        if (cheeseTypeArg.isPresent()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"            pBuilder.compose(ParserUtil.parseCheeseCheeseTypeKeywords(cheeseTypeArg.get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"        return new FindCheeseCommand(pBuilder.build());","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"    private static boolean areAnyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"weixue123":58}},{"path":"src/main/java/chim/logic/parser/FindCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.FindCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.CompositeFieldPredicateBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"public class FindCustomerCommandParser implements Parser\u003cFindCustomerCommand\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    public FindCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"        if (!areAnyPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"        CompositeFieldPredicateBuilder\u003cCustomer\u003e pBuilder \u003d new CompositeFieldPredicateBuilder\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"        Optional\u003cString\u003e nameArg \u003d argMultimap.getValue(PREFIX_NAME);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        if (nameArg.isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"            pBuilder.compose(ParserUtil.parseCustomerNameKeywords(nameArg.get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"        Optional\u003cString\u003e phoneArg \u003d argMultimap.getValue(PREFIX_PHONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"        if (phoneArg.isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"            pBuilder.compose(ParserUtil.parseCustomerPhoneKeywords(phoneArg.get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"        Optional\u003cString\u003e emailArg \u003d argMultimap.getValue(PREFIX_EMAIL);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"        if (emailArg.isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"            pBuilder.compose(ParserUtil.parseCustomerEmailKeywords(emailArg.get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"        Optional\u003cString\u003e addressArg \u003d argMultimap.getValue(PREFIX_ADDRESS);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"        if (addressArg.isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"            pBuilder.compose(ParserUtil.parseCustomerAddressKeywords(addressArg.get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"        return new FindCustomerCommand(pBuilder.build());","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"    private static boolean areAnyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"weixue123":14,"daniellau88":36,"-":18}},{"path":"src/main/java/chim/logic/parser/FindOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ORDER_COMPLETION_STATUS;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.FindOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.CompositeFieldPredicateBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":" * Parses input arguments and creates a new FindOrderCommand.","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"public class FindOrderCommandParser implements Parser\u003cFindOrderCommand\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"    private final List\u003cCustomer\u003e customerList;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"    public FindOrderCommandParser(List\u003cCustomer\u003e customerList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"        this.customerList \u003d customerList;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"     * Parses the given {@code String} of arugments in the context of FindOrderCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"     * and returns a FindOrderCommand object for execution.","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    public FindOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"        requireNonNull(customerList);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CHEESE_TYPE,","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"                PREFIX_ORDER_COMPLETION_STATUS, PREFIX_PHONE, PREFIX_NAME);","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"        if (!areAnyPrefixesPresent(argMultimap, PREFIX_CHEESE_TYPE, PREFIX_ORDER_COMPLETION_STATUS, PREFIX_PHONE,","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"                PREFIX_NAME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicateBuilder\u003cOrder\u003e pBuilder \u003d new CompositeFieldPredicateBuilder\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"        Optional\u003cString\u003e cheeseTypeArg \u003d argMultimap.getValue(PREFIX_CHEESE_TYPE);","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"        if (cheeseTypeArg.isPresent()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"            pBuilder.compose(ParserUtil.parseOrderCheeseTypeKeywords(cheeseTypeArg.get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"        Optional\u003cString\u003e phoneArg \u003d argMultimap.getValue(PREFIX_PHONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"        if (phoneArg.isPresent()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"            pBuilder.compose(ParserUtil.parseOrderPhoneKeywords(phoneArg.get(), customerList));","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"        Optional\u003cString\u003e nameArg \u003d argMultimap.getValue(PREFIX_NAME);","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"        if (nameArg.isPresent()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"            pBuilder.compose(ParserUtil.parseOrderNameKeywords(nameArg.get(), customerList));","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"        Optional\u003cString\u003e statusArg \u003d argMultimap.getValue(PREFIX_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"        if (statusArg.isPresent()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"            pBuilder.compose(ParserUtil.parseOrderCompletionStatusKeyword(statusArg.get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"        return new FindOrderCommand(pBuilder.build());","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"weixue123"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"weixue123"},"content":"    private static boolean areAnyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"weixue123"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"weixue123":81}},{"path":"src/main/java/chim/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.Command;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"weixue123":3,"-":13}},{"path":"src/main/java/chim/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.StringUtil.splitToKeywordsList;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.StringUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ExpiryDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ManufactureDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.predicates.CheeseAssignmentStatusPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.predicates.CheeseCheeseTypePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Address;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Email;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Name;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerAddressPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerEmailPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerNamePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerPhonePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"import chim.model.order.predicates.OrderCheeseTypePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"import chim.model.order.predicates.OrderCompletionStatusPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"import chim.model.order.predicates.OrderNamePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"import chim.model.order.predicates.OrderPhonePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":144,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"aaronsms"},"content":"     * Parses a {@code String cheeseType} into a {@code CheeseType}.","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"aaronsms"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"aaronsms"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"aaronsms"},"content":"     * @throws ParseException if the given {@code cheeseType} is invalid.","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"aaronsms"},"content":"    public static CheeseType parseCheeseType(String cheeseType) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(cheeseType);","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"weixue123"},"content":"        String trimmedCheeseType \u003d StringUtil.convertToTitleCase(cheeseType.trim());","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"aaronsms"},"content":"        if (!CheeseType.isValidType(trimmedCheeseType)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(CheeseType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"aaronsms"},"content":"        return CheeseType.getCheeseType(trimmedCheeseType);","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"aaronsms"},"content":"     * Parses a {@code String quantity} into a {@code Quantity}.","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"aaronsms"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"aaronsms"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"aaronsms"},"content":"     * @throws ParseException if the given {@code quantity} is invalid.","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"aaronsms"},"content":"    public static Quantity parseQuantity(String quantity) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"aaronsms"},"content":"        String trimmedQuantity \u003d quantity.trim();","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"aaronsms"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedQuantity)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"aaronsms"},"content":"        int quantityInt \u003d Integer.parseInt(trimmedQuantity);","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"aaronsms"},"content":"        if (!Quantity.isValidQuantity(quantityInt)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"aaronsms"},"content":"        return new Quantity(quantityInt);","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"aaronsms"},"content":"     * Parses a {@code String date} into a {@code OrderDate}.","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"aaronsms"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"aaronsms"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"aaronsms"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"aaronsms"},"content":"    public static OrderDate parseOrderDate(String date) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"aaronsms"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"aaronsms"},"content":"        if (!OrderDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(OrderDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"aaronsms"},"content":"        return new OrderDate(trimmedDate);","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":194,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":195,"author":{"gitId":"aaronsms"},"content":"     * Parses a {@code String quantity} into an {@code Integer}.","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"aaronsms"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"aaronsms"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"aaronsms"},"content":"     * @throws ParseException if the given {@code quantity} is invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"aaronsms"},"content":"    public static int parseInteger(String quantity) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"aaronsms"},"content":"        String trimmedQuantity \u003d quantity.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"aaronsms"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedQuantity)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":206,"author":{"gitId":"aaronsms"},"content":"        int quantityInt \u003d Integer.parseInt(trimmedQuantity);","lastModifiedDate":"2021-03-16"},{"lineNumber":207,"author":{"gitId":"aaronsms"},"content":"        if (!Quantity.isValidQuantity(quantityInt)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"aaronsms"},"content":"        return quantityInt;","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":212,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":213,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":214,"author":{"gitId":"aaronsms"},"content":"     * Parses a {@code String date} into a {@code ManufactureDate}.","lastModifiedDate":"2021-03-16"},{"lineNumber":215,"author":{"gitId":"aaronsms"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":216,"author":{"gitId":"aaronsms"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":217,"author":{"gitId":"aaronsms"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":218,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":219,"author":{"gitId":"aaronsms"},"content":"    public static ManufactureDate parseManufactureDate(String date) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":220,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-16"},{"lineNumber":221,"author":{"gitId":"aaronsms"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":222,"author":{"gitId":"aaronsms"},"content":"        if (!ManufactureDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":223,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(ManufactureDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":224,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":225,"author":{"gitId":"aaronsms"},"content":"        return new ManufactureDate(trimmedDate);","lastModifiedDate":"2021-03-16"},{"lineNumber":226,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":227,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":228,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":229,"author":{"gitId":"aaronsms"},"content":"     * Parses a {@code String date} into a {@code ExpiryDate}.","lastModifiedDate":"2021-03-16"},{"lineNumber":230,"author":{"gitId":"aaronsms"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":231,"author":{"gitId":"aaronsms"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":232,"author":{"gitId":"aaronsms"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":233,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":234,"author":{"gitId":"aaronsms"},"content":"    public static ExpiryDate parseExpiryDate(String date) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":235,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-16"},{"lineNumber":236,"author":{"gitId":"aaronsms"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":237,"author":{"gitId":"aaronsms"},"content":"        if (!ExpiryDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":238,"author":{"gitId":"aaronsms"},"content":"            throw new ParseException(ExpiryDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":239,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":240,"author":{"gitId":"aaronsms"},"content":"        return new ExpiryDate(trimmedDate);","lastModifiedDate":"2021-03-16"},{"lineNumber":241,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":242,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":243,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":244,"author":{"gitId":"weixue123"},"content":"     * Parses a string of name keywords into a {@code CustomerNamePredicate}.","lastModifiedDate":"2021-03-24"},{"lineNumber":245,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":246,"author":{"gitId":"weixue123"},"content":"    public static CustomerNamePredicate parseCustomerNameKeywords(String keywords) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e keywordsList \u003d parseKeywordsIntoKeywordsList(","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"weixue123"},"content":"                keywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":249,"author":{"gitId":"weixue123"},"content":"                CustomerNamePredicate::isValidKeywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":250,"author":{"gitId":"weixue123"},"content":"                CustomerNamePredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":251,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":252,"author":{"gitId":"weixue123"},"content":"        return new CustomerNamePredicate(keywordsList);","lastModifiedDate":"2021-03-24"},{"lineNumber":253,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":254,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":255,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":256,"author":{"gitId":"weixue123"},"content":"     * Parses a string of email keywords into a {@code CustomerEmailPredicate}.","lastModifiedDate":"2021-03-24"},{"lineNumber":257,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":258,"author":{"gitId":"weixue123"},"content":"    public static CustomerEmailPredicate parseCustomerEmailKeywords(String keywords) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":259,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e keywordsList \u003d parseKeywordsIntoKeywordsList(","lastModifiedDate":"2021-03-24"},{"lineNumber":260,"author":{"gitId":"weixue123"},"content":"                keywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":261,"author":{"gitId":"weixue123"},"content":"                CustomerEmailPredicate::isValidKeywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":262,"author":{"gitId":"weixue123"},"content":"                CustomerEmailPredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":263,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":264,"author":{"gitId":"weixue123"},"content":"        return new CustomerEmailPredicate(keywordsList);","lastModifiedDate":"2021-03-24"},{"lineNumber":265,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":266,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":267,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":268,"author":{"gitId":"weixue123"},"content":"     * Parses a string of address keywords into a {@code CustomerAddressPredicate}.","lastModifiedDate":"2021-03-24"},{"lineNumber":269,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":270,"author":{"gitId":"weixue123"},"content":"    public static CustomerAddressPredicate parseCustomerAddressKeywords(String keywords) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":271,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e keywordsList \u003d parseKeywordsIntoKeywordsList(","lastModifiedDate":"2021-03-24"},{"lineNumber":272,"author":{"gitId":"weixue123"},"content":"                keywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":273,"author":{"gitId":"weixue123"},"content":"                CustomerAddressPredicate::isValidKeywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":274,"author":{"gitId":"weixue123"},"content":"                CustomerAddressPredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":275,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":276,"author":{"gitId":"weixue123"},"content":"        return new CustomerAddressPredicate(keywordsList);","lastModifiedDate":"2021-03-24"},{"lineNumber":277,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":278,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":279,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":280,"author":{"gitId":"weixue123"},"content":"     * Parses a string of phone number keywords into a {@code CustomerPhonePredicate}.","lastModifiedDate":"2021-03-24"},{"lineNumber":281,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":282,"author":{"gitId":"weixue123"},"content":"    public static CustomerPhonePredicate parseCustomerPhoneKeywords(String keywords) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":283,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e keywordsList \u003d parseKeywordsIntoKeywordsList(","lastModifiedDate":"2021-03-24"},{"lineNumber":284,"author":{"gitId":"weixue123"},"content":"                keywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":285,"author":{"gitId":"weixue123"},"content":"                CustomerPhonePredicate::isValidKeywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":286,"author":{"gitId":"weixue123"},"content":"                CustomerPhonePredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":287,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":288,"author":{"gitId":"weixue123"},"content":"        return new CustomerPhonePredicate(keywordsList);","lastModifiedDate":"2021-03-24"},{"lineNumber":289,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":290,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":291,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":292,"author":{"gitId":"weixue123"},"content":"     * Parses a {@code String} status into a {@code CheeseAssignmentStatusPredicate}.","lastModifiedDate":"2021-03-24"},{"lineNumber":293,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":294,"author":{"gitId":"weixue123"},"content":"    public static CheeseAssignmentStatusPredicate parseCheeseAssignmentStatusKeyword(String status)","lastModifiedDate":"2021-03-24"},{"lineNumber":295,"author":{"gitId":"weixue123"},"content":"            throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":296,"author":{"gitId":"weixue123"},"content":"        String parsedStatus \u003d parseKeyword(","lastModifiedDate":"2021-03-24"},{"lineNumber":297,"author":{"gitId":"weixue123"},"content":"                status,","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"weixue123"},"content":"                CheeseAssignmentStatusPredicate::isValidStatus,","lastModifiedDate":"2021-03-24"},{"lineNumber":299,"author":{"gitId":"weixue123"},"content":"                CheeseAssignmentStatusPredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":300,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":301,"author":{"gitId":"weixue123"},"content":"        return new CheeseAssignmentStatusPredicate(parsedStatus);","lastModifiedDate":"2021-03-24"},{"lineNumber":302,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":303,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":304,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":305,"author":{"gitId":"weixue123"},"content":"     * Parses a string of cheese type keywords into a {@code CheeseCheeseTypePredicate}.","lastModifiedDate":"2021-03-24"},{"lineNumber":306,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":307,"author":{"gitId":"weixue123"},"content":"    public static CheeseCheeseTypePredicate parseCheeseCheeseTypeKeywords(String keywords) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":308,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e keywordsList \u003d parseKeywordsIntoKeywordsList(","lastModifiedDate":"2021-03-24"},{"lineNumber":309,"author":{"gitId":"weixue123"},"content":"                keywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":310,"author":{"gitId":"weixue123"},"content":"                CheeseCheeseTypePredicate::isValidKeywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":311,"author":{"gitId":"weixue123"},"content":"                CheeseCheeseTypePredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":312,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":313,"author":{"gitId":"weixue123"},"content":"        return new CheeseCheeseTypePredicate(keywordsList);","lastModifiedDate":"2021-03-24"},{"lineNumber":314,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":315,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":316,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":317,"author":{"gitId":"weixue123"},"content":"     * Parses a {@code String} status into a {@code OrderAssignmentStatusPredicate}.","lastModifiedDate":"2021-03-24"},{"lineNumber":318,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":319,"author":{"gitId":"weixue123"},"content":"    public static OrderCompletionStatusPredicate parseOrderCompletionStatusKeyword(String status)","lastModifiedDate":"2021-03-24"},{"lineNumber":320,"author":{"gitId":"weixue123"},"content":"            throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":321,"author":{"gitId":"weixue123"},"content":"        String parsedStatus \u003d parseKeyword(","lastModifiedDate":"2021-03-24"},{"lineNumber":322,"author":{"gitId":"weixue123"},"content":"                status,","lastModifiedDate":"2021-03-24"},{"lineNumber":323,"author":{"gitId":"weixue123"},"content":"                OrderCompletionStatusPredicate::isValidStatus,","lastModifiedDate":"2021-03-24"},{"lineNumber":324,"author":{"gitId":"weixue123"},"content":"                OrderCompletionStatusPredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":325,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":326,"author":{"gitId":"weixue123"},"content":"        return new OrderCompletionStatusPredicate(parsedStatus);","lastModifiedDate":"2021-03-24"},{"lineNumber":327,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":328,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":329,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":330,"author":{"gitId":"weixue123"},"content":"     * Parses a string of cheese type keywords into a {@code OrderCheeseTypePredicate}.","lastModifiedDate":"2021-03-24"},{"lineNumber":331,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":332,"author":{"gitId":"weixue123"},"content":"    public static OrderCheeseTypePredicate parseOrderCheeseTypeKeywords(String keywords) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":333,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e keywordsList \u003d parseKeywordsIntoKeywordsList(","lastModifiedDate":"2021-03-24"},{"lineNumber":334,"author":{"gitId":"weixue123"},"content":"                keywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":335,"author":{"gitId":"weixue123"},"content":"                OrderCheeseTypePredicate::isValidKeywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":336,"author":{"gitId":"weixue123"},"content":"                OrderCheeseTypePredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":337,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":338,"author":{"gitId":"weixue123"},"content":"        return new OrderCheeseTypePredicate(keywordsList);","lastModifiedDate":"2021-03-24"},{"lineNumber":339,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":340,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":341,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":342,"author":{"gitId":"weixue123"},"content":"     * Parses a string of phone number keywords into a {@code OrderNamePredicate}.","lastModifiedDate":"2021-03-24"},{"lineNumber":343,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":344,"author":{"gitId":"weixue123"},"content":"    public static OrderNamePredicate parseOrderNameKeywords(String keywords, List\u003cCustomer\u003e customerList)","lastModifiedDate":"2021-03-24"},{"lineNumber":345,"author":{"gitId":"weixue123"},"content":"            throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":346,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e keywordsList \u003d parseKeywordsIntoKeywordsList(","lastModifiedDate":"2021-03-24"},{"lineNumber":347,"author":{"gitId":"weixue123"},"content":"                keywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":348,"author":{"gitId":"weixue123"},"content":"                OrderNamePredicate::isValidKeywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":349,"author":{"gitId":"weixue123"},"content":"                OrderNamePredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":350,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":351,"author":{"gitId":"weixue123"},"content":"        return new OrderNamePredicate(keywordsList, customerList);","lastModifiedDate":"2021-03-24"},{"lineNumber":352,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":353,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":354,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":355,"author":{"gitId":"weixue123"},"content":"     * Parses a string of phone number keywords into a {@code OrderPhonePredicate}.","lastModifiedDate":"2021-03-24"},{"lineNumber":356,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":357,"author":{"gitId":"weixue123"},"content":"    public static OrderPhonePredicate parseOrderPhoneKeywords(String keywords, List\u003cCustomer\u003e customerList)","lastModifiedDate":"2021-03-24"},{"lineNumber":358,"author":{"gitId":"weixue123"},"content":"            throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":359,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e keywordsList \u003d parseKeywordsIntoKeywordsList(","lastModifiedDate":"2021-03-24"},{"lineNumber":360,"author":{"gitId":"weixue123"},"content":"                keywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":361,"author":{"gitId":"weixue123"},"content":"                OrderPhonePredicate::isValidKeywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":362,"author":{"gitId":"weixue123"},"content":"                OrderPhonePredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":363,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":364,"author":{"gitId":"weixue123"},"content":"        return new OrderPhonePredicate(keywordsList, customerList);","lastModifiedDate":"2021-03-24"},{"lineNumber":365,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":366,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":367,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":368,"author":{"gitId":"weixue123"},"content":"     * Parses a keyword string into a list of tokens.","lastModifiedDate":"2021-03-24"},{"lineNumber":369,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":370,"author":{"gitId":"weixue123"},"content":"     * @param keywords           Input keyword string.","lastModifiedDate":"2021-03-24"},{"lineNumber":371,"author":{"gitId":"weixue123"},"content":"     * @param isValidKeywords    Function with which to check the validity of the keywords.","lastModifiedDate":"2021-03-24"},{"lineNumber":372,"author":{"gitId":"weixue123"},"content":"     * @param messageConstraints Message to show if the keywords are not valid.","lastModifiedDate":"2021-03-24"},{"lineNumber":373,"author":{"gitId":"weixue123"},"content":"     * @throws ParseException if the given {@code keywords} is invalid.","lastModifiedDate":"2021-03-24"},{"lineNumber":374,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":375,"author":{"gitId":"weixue123"},"content":"    private static List\u003cString\u003e parseKeywordsIntoKeywordsList(String keywords, Predicate\u003cList\u003cString\u003e\u003e isValidKeywords,","lastModifiedDate":"2021-03-24"},{"lineNumber":376,"author":{"gitId":"weixue123"},"content":"                                                              String messageConstraints) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":377,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-03-22"},{"lineNumber":378,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e keywordsList \u003d splitToKeywordsList(keywords.trim());","lastModifiedDate":"2021-03-24"},{"lineNumber":379,"author":{"gitId":"weixue123"},"content":"        if (!isValidKeywords.test(keywordsList)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":380,"author":{"gitId":"weixue123"},"content":"            throw new ParseException(messageConstraints);","lastModifiedDate":"2021-03-24"},{"lineNumber":381,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":382,"author":{"gitId":"weixue123"},"content":"        return keywordsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":383,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":384,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":385,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":386,"author":{"gitId":"weixue123"},"content":"     * Parses a keyword string.","lastModifiedDate":"2021-03-24"},{"lineNumber":387,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":388,"author":{"gitId":"weixue123"},"content":"     * @param keyword            Input keyword string.","lastModifiedDate":"2021-03-24"},{"lineNumber":389,"author":{"gitId":"weixue123"},"content":"     * @param isValidKeyword     Function with which to check the validity of the keyword.","lastModifiedDate":"2021-03-24"},{"lineNumber":390,"author":{"gitId":"weixue123"},"content":"     * @param messageConstraints Message to show if the keywords is not valid.","lastModifiedDate":"2021-03-24"},{"lineNumber":391,"author":{"gitId":"weixue123"},"content":"     * @throws ParseException if the given {@code keyword} is invalid.","lastModifiedDate":"2021-03-24"},{"lineNumber":392,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":393,"author":{"gitId":"weixue123"},"content":"    private static String parseKeyword(String keyword, Predicate\u003cString\u003e isValidKeyword,","lastModifiedDate":"2021-03-24"},{"lineNumber":394,"author":{"gitId":"weixue123"},"content":"                                       String messageConstraints) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":395,"author":{"gitId":"weixue123"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2021-03-24"},{"lineNumber":396,"author":{"gitId":"weixue123"},"content":"        String trimmedKeyword \u003d keyword.trim();","lastModifiedDate":"2021-03-24"},{"lineNumber":397,"author":{"gitId":"weixue123"},"content":"        if (!isValidKeyword.test(trimmedKeyword)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":398,"author":{"gitId":"weixue123"},"content":"            throw new ParseException(messageConstraints);","lastModifiedDate":"2021-03-24"},{"lineNumber":399,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":400,"author":{"gitId":"weixue123"},"content":"        return trimmedKeyword;","lastModifiedDate":"2021-03-24"},{"lineNumber":401,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":402,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"weixue123":181,"daniellau88":9,"-":115,"aaronsms":97}},{"path":"src/main/java/chim/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"weixue123":1,"-":38}},{"path":"src/main/java/chim/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser.exceptions;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"weixue123":2,"-":15}},{"path":"src/main/java/chim/model/AbstractDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"public abstract class AbstractDate {","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"        \"Dates should be given in the following formats (dd/MM/yyyy or yyyy-MM-dd or MMM d yyyy)\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"            + \"e.g. 31/03/2021 or 2021-03-31 or Mar 31 2021 where Mar is case-sensitive.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    public static final DateTimeFormatter INPUT_DATE_TIME_FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"        .appendPattern(\"[d/M/yyyy HH:mm]\")","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"        .appendPattern(\"[d/M/yyyy]\")","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"        .appendPattern(\"[yyyy-M-d HH:mm]\")","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"        .appendPattern(\"[yyyy-M-d]\")","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"        .appendPattern(\"[MMM d yyyy HH:mm]\")","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"        .appendPattern(\"[MMM d yyyy]\")","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"        .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"        .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"        .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"    public static final DateTimeFormatter TO_STRING_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMM yy\");","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"    public static final DateTimeFormatter TO_JSON_STRING_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d HH:mm\");","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"     * Constructs a {@code Date} with current date time.","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"    public AbstractDate() {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"        value \u003d LocalDateTime.now();","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2021-03-04"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"     * @param date A valid String date.","lastModifiedDate":"2021-03-04"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"    public AbstractDate(String date) {","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"        LocalDateTime dateTime \u003d parseDate(date);","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"        checkArgument(dateTime !\u003d null, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"        value \u003d dateTime;","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"     * @param dateText A String containing date","lastModifiedDate":"2021-03-04"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"     * @return null if date is invalid otherwise a LocalDateTime object of String date","lastModifiedDate":"2021-03-04"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"    public static LocalDateTime parseDate(String dateText) {","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"        try {","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"            return LocalDateTime.parse(dateText, INPUT_DATE_TIME_FORMATTER);","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"            return null;","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"     * @param dateText A String containing date","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"     * @return false if date is invalid otherwise true","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"    public static boolean isValidDate(String dateText) {","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"        return parseDate(dateText) !\u003d null;","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"    public String toJsonString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"        return value.format(TO_JSON_STRING_FORMATTER);","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"    public boolean isAfter(AbstractDate otherDate) {","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"        return this.value.isAfter(otherDate.value);","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"    public boolean isAfterOrEquals(AbstractDate otherDate) {","lastModifiedDate":"2021-04-06"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"        return !this.value.isBefore(otherDate.value);","lastModifiedDate":"2021-04-06"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"    public String toString() {","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"        return value.format(TO_STRING_FORMATTER);","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"daniellau88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"daniellau88"},"content":"            || (other instanceof AbstractDate // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"daniellau88"},"content":"            \u0026\u0026 value.equals(((AbstractDate) other).value)); // state check","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"AhQuanz":1,"laurenlhy":2,"weixue123":8,"daniellau88":84,"aaronsms":7}},{"path":"src/main/java/chim/model/AbstractId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"public abstract class AbstractId\u003cU\u003e implements Comparable\u003cAbstractId\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"ID must be a positive number.\";","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"    public final int value;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"     * @param id A valid id.","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    public AbstractId(int id) {","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"        value \u003d id;","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"     * Returns if a given integer is a valid quantity.","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    public static boolean isValidId(int id) {","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"        return id \u003e 0;","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"    public String toString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"        return Integer.toString(value);","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"            || (other instanceof AbstractId // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"            \u0026\u0026 value \u003d\u003d ((AbstractId) other).value); // state check","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"    public int compareTo(AbstractId id) {","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"        if (value \u003e id.value) {","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"            return 1;","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"        } else if (value \u003c id.value) {","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"            return -1;","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"        return 0;","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"        return value;","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"weixue123":2,"daniellau88":51}},{"path":"src/main/java/chim/model/Chim.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"import java.util.Optional;","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.UniqueCheeseList;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.UniqueCustomerList;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.order.CompletedDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderId;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.model.order.UniqueOrderList;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":" * Wraps all data in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":" * Duplicate customers, orders, or cheeses are not allowed.","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"public class Chim implements ReadOnlyChim {","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"    private final UniqueCustomerList customers;","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"    private final UniqueOrderList orders;","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"    private final UniqueCheeseList cheeses;","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"laurenlhy"},"content":"        customers \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"        orders \u003d new UniqueOrderList();","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"        cheeses \u003d new UniqueCheeseList();","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"    public Chim() {","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"     * Creates Chim using the Customers, Orders and Cheeses in the {@code toBeCopied}","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"    public Chim(ReadOnlyChim toBeCopied) {","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"     * Replaces the contents of the customer list with {@code customers}.","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"laurenlhy"},"content":"     * {@code customers} must not contain duplicate customers.","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"laurenlhy"},"content":"        this.customers.setCustomers(customers);","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"     * Replaces the contents of the orders list with {@code orders}.","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"     * {@code orders} must not contain duplicate customers.","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"        this.orders.setOrders(orders);","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"     * Replaces the contents of the cheese list with {@code cheeses}.","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"     * {@code cheeses} must not contain duplicate cheeses.","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"    public void setCheeses(List\u003cCheese\u003e cheeses) {","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"        this.cheeses.setCheeses(cheeses);","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"weixue123"},"content":"     * Resets the existing data of this {@code Chim} with {@code newData}.","lastModifiedDate":"2021-04-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"weixue123"},"content":"    public void resetData(ReadOnlyChim newData) {","lastModifiedDate":"2021-04-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"laurenlhy"},"content":"        setCustomers(newData.getCustomerList());","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"        setOrders(newData.getOrderList());","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"        setCheeses(newData.getCheeseList());","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"    //// order-level operations","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"weixue123"},"content":"     * Returns true if orders with the same identity as {@code orders} exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"daniellau88"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"        return orders.contains(order);","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"weixue123"},"content":"     * Adds an order to CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":114,"author":{"gitId":"weixue123"},"content":"     * The order must not already exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"daniellau88"},"content":"    public void addOrder(Order o) {","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"daniellau88"},"content":"        orders.add(o);","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"daniellau88"},"content":"     * Replaces the given order {@code target} in the list with {@code editedOrder}.","lastModifiedDate":"2021-03-08"},{"lineNumber":122,"author":{"gitId":"weixue123"},"content":"     * {@code target} must exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":123,"author":{"gitId":"daniellau88"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"weixue123"},"content":"     * in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":125,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"daniellau88"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(editedOrder);","lastModifiedDate":"2021-03-08"},{"lineNumber":128,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":129,"author":{"gitId":"daniellau88"},"content":"        orders.setOrder(target, editedOrder);","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"weixue123"},"content":"     * Removes {@code key} from this {@code Chim}.","lastModifiedDate":"2021-04-08"},{"lineNumber":134,"author":{"gitId":"weixue123"},"content":"     * {@code key} must exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":135,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"laurenlhy"},"content":"    public void deleteOrder(Order key) {","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"laurenlhy"},"content":"        orders.delete(key);","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"weixue123"},"content":"        // Cascade-delete the cheeses assigned to the deleted order","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"weixue123"},"content":"        List\u003cCheese\u003e cheesesToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"weixue123"},"content":"        for (CheeseId cheeseId : key.getCheeses()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"weixue123"},"content":"            for (Cheese cheese : cheeses) {","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"weixue123"},"content":"                if (cheese.getCheeseId().toString().equals(cheeseId.toString())) {","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"weixue123"},"content":"                    cheesesToDelete.add(cheese);","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"weixue123"},"content":"                    break;","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"weixue123"},"content":"                }","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"weixue123"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"weixue123"},"content":"        for (Cheese cheese : cheesesToDelete) {","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"weixue123"},"content":"            deleteCheese(cheese);","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"weixue123"},"content":"     * Returns an order with {@code orderId} if exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":158,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"daniellau88"},"content":"    public Order getOrderWithId(OrderId orderId) {","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(orderId);","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"daniellau88"},"content":"        return orders.getOrderWithId(orderId);","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"laurenlhy"},"content":"    //// customer-level operations","lastModifiedDate":"2021-03-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"weixue123"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"laurenlhy"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-07"},{"lineNumber":170,"author":{"gitId":"laurenlhy"},"content":"        requireNonNull(customer);","lastModifiedDate":"2021-03-07"},{"lineNumber":171,"author":{"gitId":"laurenlhy"},"content":"        return customers.contains(customer);","lastModifiedDate":"2021-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"weixue123"},"content":"     * Returns true if a customer with {@code phone} exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":176,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"aaronsms"},"content":"    public boolean hasCustomerWithPhone(Phone phone) {","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"aaronsms"},"content":"        return customers.hasPhone(phone);","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"weixue123"},"content":"     * Returns a customer with {@code phone} if exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":184,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"aaronsms"},"content":"    public Customer getCustomerWithPhone(Phone phone) {","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"aaronsms"},"content":"        return customers.getCustomerWithPhone(phone);","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-04-07"},{"lineNumber":191,"author":{"gitId":"weixue123"},"content":"     * Returns a customer with {@code id} if exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":192,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-04-07"},{"lineNumber":193,"author":{"gitId":"AhQuanz"},"content":"    public Customer getCustomerWithId(CustomerId id) {","lastModifiedDate":"2021-04-07"},{"lineNumber":194,"author":{"gitId":"AhQuanz"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-04-07"},{"lineNumber":195,"author":{"gitId":"AhQuanz"},"content":"        return customers.getCustomerWithId(id);","lastModifiedDate":"2021-04-07"},{"lineNumber":196,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":197,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":198,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"weixue123"},"content":"     * Adds a customer to CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":201,"author":{"gitId":"weixue123"},"content":"     * The customer must not already exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"laurenlhy"},"content":"    public void addCustomer(Customer p) {","lastModifiedDate":"2021-03-07"},{"lineNumber":204,"author":{"gitId":"laurenlhy"},"content":"        customers.add(p);","lastModifiedDate":"2021-03-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":208,"author":{"gitId":"laurenlhy"},"content":"     * Replaces the given customer {@code target} in the list with {@code editedCustomer}.","lastModifiedDate":"2021-03-07"},{"lineNumber":209,"author":{"gitId":"weixue123"},"content":"     * {@code target} must exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":210,"author":{"gitId":"laurenlhy"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as another existing customer","lastModifiedDate":"2021-03-07"},{"lineNumber":211,"author":{"gitId":"weixue123"},"content":"     * in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":213,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2021-03-07"},{"lineNumber":214,"author":{"gitId":"laurenlhy"},"content":"        requireNonNull(editedCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":216,"author":{"gitId":"laurenlhy"},"content":"        customers.setCustomer(target, editedCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":220,"author":{"gitId":"weixue123"},"content":"     * Removes {@code key} from this {@code Chim}.","lastModifiedDate":"2021-04-08"},{"lineNumber":221,"author":{"gitId":"weixue123"},"content":"     * {@code key} must exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":223,"author":{"gitId":"laurenlhy"},"content":"    public void deleteCustomer(Customer key) {","lastModifiedDate":"2021-03-14"},{"lineNumber":224,"author":{"gitId":"laurenlhy"},"content":"        customers.delete(key);","lastModifiedDate":"2021-03-14"},{"lineNumber":225,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"weixue123"},"content":"        // Cascade-delete orders belonging to the deleted customer","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"weixue123"},"content":"        List\u003cOrder\u003e ordersToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"weixue123"},"content":"        for (Order order : orders) {","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"weixue123"},"content":"            if (order.getCustomerId().toString().equals(key.getId().toString())) {","lastModifiedDate":"2021-03-24"},{"lineNumber":231,"author":{"gitId":"weixue123"},"content":"                ordersToDelete.add(order);","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"weixue123"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"weixue123"},"content":"        for (Order order : ordersToDelete) {","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"weixue123"},"content":"            deleteOrder(order);","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"daniellau88"},"content":"    //// cheese-level operations","lastModifiedDate":"2021-03-08"},{"lineNumber":241,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":242,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":243,"author":{"gitId":"weixue123"},"content":"     * Returns true if a cheese with the same identity as {@code cheese} exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":244,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":245,"author":{"gitId":"daniellau88"},"content":"    public boolean hasCheese(Cheese cheese) {","lastModifiedDate":"2021-03-08"},{"lineNumber":246,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(cheese);","lastModifiedDate":"2021-03-08"},{"lineNumber":247,"author":{"gitId":"daniellau88"},"content":"        return cheeses.contains(cheese);","lastModifiedDate":"2021-03-08"},{"lineNumber":248,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":249,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":250,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":251,"author":{"gitId":"weixue123"},"content":"     * Adds a cheese to CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":252,"author":{"gitId":"weixue123"},"content":"     * The cheese must not already exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":253,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":254,"author":{"gitId":"daniellau88"},"content":"    public void addCheese(Cheese c) {","lastModifiedDate":"2021-03-08"},{"lineNumber":255,"author":{"gitId":"daniellau88"},"content":"        cheeses.add(c);","lastModifiedDate":"2021-03-08"},{"lineNumber":256,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":257,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":258,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":259,"author":{"gitId":"daniellau88"},"content":"     * Replaces the given cheese {@code target} in the list with {@code editedCheese}.","lastModifiedDate":"2021-03-08"},{"lineNumber":260,"author":{"gitId":"weixue123"},"content":"     * {@code target} must exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":261,"author":{"gitId":"daniellau88"},"content":"     * The cheese identity of {@code editedCheese} must not be the same as another existing cheese","lastModifiedDate":"2021-03-08"},{"lineNumber":262,"author":{"gitId":"weixue123"},"content":"     * in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":263,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":264,"author":{"gitId":"daniellau88"},"content":"    public void setCheese(Cheese target, Cheese editedCheese) {","lastModifiedDate":"2021-03-08"},{"lineNumber":265,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(editedCheese);","lastModifiedDate":"2021-03-08"},{"lineNumber":266,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":267,"author":{"gitId":"daniellau88"},"content":"        cheeses.setCheese(target, editedCheese);","lastModifiedDate":"2021-03-08"},{"lineNumber":268,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":269,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":270,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":271,"author":{"gitId":"weixue123"},"content":"     * Removes {@code key} from this {@code Chim}.","lastModifiedDate":"2021-04-08"},{"lineNumber":272,"author":{"gitId":"weixue123"},"content":"     * {@code key} must exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":273,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":274,"author":{"gitId":"laurenlhy"},"content":"    public void deleteCheese(Cheese key) {","lastModifiedDate":"2021-03-14"},{"lineNumber":275,"author":{"gitId":"laurenlhy"},"content":"        cheeses.delete(key);","lastModifiedDate":"2021-03-14"},{"lineNumber":276,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":277,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":278,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":279,"author":{"gitId":"weixue123"},"content":"     * Returns a cheese with {@code cheeseId} if exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":280,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":281,"author":{"gitId":"daniellau88"},"content":"    public Cheese getCheeseWithId(CheeseId cheeseId) {","lastModifiedDate":"2021-03-25"},{"lineNumber":282,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(cheeseId);","lastModifiedDate":"2021-03-25"},{"lineNumber":283,"author":{"gitId":"daniellau88"},"content":"        return cheeses.getCheeseWithId(cheeseId);","lastModifiedDate":"2021-03-25"},{"lineNumber":284,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":285,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":286,"author":{"gitId":"AhQuanz"},"content":"    public Set\u003cCheeseId\u003e getUnassignedCheeses(CheeseType cheeseType, Quantity quantity) {","lastModifiedDate":"2021-03-15"},{"lineNumber":287,"author":{"gitId":"AhQuanz"},"content":"        return cheeses.getUnassignedCheeses(cheeseType, quantity);","lastModifiedDate":"2021-03-15"},{"lineNumber":288,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":289,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":290,"author":{"gitId":"AhQuanz"},"content":"    public void updateCheesesStatus(Set\u003cCheeseId\u003e cheesesAssigned) {","lastModifiedDate":"2021-03-16"},{"lineNumber":291,"author":{"gitId":"AhQuanz"},"content":"        cheeses.updateCheesesStatus(cheesesAssigned);","lastModifiedDate":"2021-03-16"},{"lineNumber":292,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":293,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":294,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":295,"author":{"gitId":"weixue123"},"content":"     * Checks whether CHIM\u0027s current state is valid.","lastModifiedDate":"2021-04-08"},{"lineNumber":296,"author":{"gitId":"weixue123"},"content":"     * Includes checking dependencies between models.","lastModifiedDate":"2021-04-08"},{"lineNumber":297,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"weixue123"},"content":"    public void checkChim() {","lastModifiedDate":"2021-04-08"},{"lineNumber":299,"author":{"gitId":"daniellau88"},"content":"        Set\u003cCustomerId\u003e customerIdSet \u003d customers.asUnmodifiableObservableList().stream()","lastModifiedDate":"2021-03-24"},{"lineNumber":300,"author":{"gitId":"daniellau88"},"content":"            .map(x -\u003e x.getId()).collect(Collectors.toSet());","lastModifiedDate":"2021-03-24"},{"lineNumber":301,"author":{"gitId":"daniellau88"},"content":"        Map\u003cCheeseId, Cheese\u003e cheeseIdMap \u003d cheeses.asUnmodifiableObservableList().stream()","lastModifiedDate":"2021-03-24"},{"lineNumber":302,"author":{"gitId":"daniellau88"},"content":"            .collect(Collectors.toMap(x -\u003e x.getCheeseId(), x -\u003e x));","lastModifiedDate":"2021-03-24"},{"lineNumber":303,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":304,"author":{"gitId":"daniellau88"},"content":"        HashSet\u003cCheeseId\u003e orderCheeseIdSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":305,"author":{"gitId":"daniellau88"},"content":"        // Check that each order is valid on the system level","lastModifiedDate":"2021-03-24"},{"lineNumber":306,"author":{"gitId":"daniellau88"},"content":"        for (Order order : orders.asUnmodifiableObservableList()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":307,"author":{"gitId":"daniellau88"},"content":"            CustomerId customerId \u003d order.getCustomerId();","lastModifiedDate":"2021-03-24"},{"lineNumber":308,"author":{"gitId":"daniellau88"},"content":"            CheeseType expectedCheeseType \u003d order.getCheeseType();","lastModifiedDate":"2021-03-24"},{"lineNumber":309,"author":{"gitId":"daniellau88"},"content":"            Set\u003cCheeseId\u003e cheeseIds \u003d order.getCheeses();","lastModifiedDate":"2021-03-24"},{"lineNumber":310,"author":{"gitId":"daniellau88"},"content":"            OrderId orderId \u003d order.getOrderId();","lastModifiedDate":"2021-03-24"},{"lineNumber":311,"author":{"gitId":"daniellau88"},"content":"            OrderDate orderDate \u003d order.getOrderDate();","lastModifiedDate":"2021-04-06"},{"lineNumber":312,"author":{"gitId":"daniellau88"},"content":"            Optional\u003cCompletedDate\u003e completedDate \u003d order.getCompletedDate();","lastModifiedDate":"2021-04-06"},{"lineNumber":313,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":314,"author":{"gitId":"daniellau88"},"content":"            checkArgument(customerIdSet.contains(customerId),","lastModifiedDate":"2021-03-25"},{"lineNumber":315,"author":{"gitId":"daniellau88"},"content":"                String.format(Messages.MESSAGE_INVALID_ORDER_CUSTOMER_ID, orderId.value));","lastModifiedDate":"2021-03-25"},{"lineNumber":316,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":317,"author":{"gitId":"daniellau88"},"content":"            if (cheeseIds.size() \u003e 0) {","lastModifiedDate":"2021-03-24"},{"lineNumber":318,"author":{"gitId":"daniellau88"},"content":"                for (CheeseId cheeseId : cheeseIds) {","lastModifiedDate":"2021-03-24"},{"lineNumber":319,"author":{"gitId":"daniellau88"},"content":"                    checkArgument(cheeseIdMap.containsKey(cheeseId),","lastModifiedDate":"2021-03-24"},{"lineNumber":320,"author":{"gitId":"daniellau88"},"content":"                        String.format(Messages.MESSAGE_INVALID_ORDER_CHEESE_ID, orderId.value));","lastModifiedDate":"2021-03-25"},{"lineNumber":321,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":322,"author":{"gitId":"daniellau88"},"content":"                    // Each assigned cheese should have a one-to-one relation with orders","lastModifiedDate":"2021-03-25"},{"lineNumber":323,"author":{"gitId":"daniellau88"},"content":"                    checkArgument(!orderCheeseIdSet.contains(cheeseId),","lastModifiedDate":"2021-03-24"},{"lineNumber":324,"author":{"gitId":"daniellau88"},"content":"                        String.format(Messages.MESSAGE_INVALID_CHEESE_MULTIPLE_ORDER, orderId.value, cheeseId.value));","lastModifiedDate":"2021-03-25"},{"lineNumber":325,"author":{"gitId":"daniellau88"},"content":"                    orderCheeseIdSet.add(cheeseId);","lastModifiedDate":"2021-03-24"},{"lineNumber":326,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":327,"author":{"gitId":"daniellau88"},"content":"                    Cheese currentCheese \u003d cheeseIdMap.get(cheeseId);","lastModifiedDate":"2021-04-06"},{"lineNumber":328,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":329,"author":{"gitId":"daniellau88"},"content":"                    // Cheese should have been marked assigned","lastModifiedDate":"2021-03-24"},{"lineNumber":330,"author":{"gitId":"daniellau88"},"content":"                    checkArgument(currentCheese.isCheeseAssigned(),","lastModifiedDate":"2021-04-06"},{"lineNumber":331,"author":{"gitId":"daniellau88"},"content":"                        String.format(Messages.MESSAGE_INVALID_CHEESE_NOT_ASSIGNED, orderId.value, cheeseId.value));","lastModifiedDate":"2021-03-25"},{"lineNumber":332,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":333,"author":{"gitId":"daniellau88"},"content":"                    // Cheese should match the order by type","lastModifiedDate":"2021-03-24"},{"lineNumber":334,"author":{"gitId":"daniellau88"},"content":"                    checkArgument(currentCheese.getCheeseType().equals(expectedCheeseType),","lastModifiedDate":"2021-04-06"},{"lineNumber":335,"author":{"gitId":"daniellau88"},"content":"                        String.format(Messages.MESSAGE_INVALID_ORDER_CHEESE_CHEESE_TYPE,","lastModifiedDate":"2021-03-25"},{"lineNumber":336,"author":{"gitId":"daniellau88"},"content":"                            orderId.value, cheeseId.value));","lastModifiedDate":"2021-03-25"},{"lineNumber":337,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":338,"author":{"gitId":"daniellau88"},"content":"                    if (completedDate.isPresent()) {","lastModifiedDate":"2021-04-06"},{"lineNumber":339,"author":{"gitId":"daniellau88"},"content":"                        // Cheese\u0027s manufacture date must be after the order\u0027s completed date","lastModifiedDate":"2021-04-06"},{"lineNumber":340,"author":{"gitId":"daniellau88"},"content":"                        checkArgument(completedDate.get().isAfterOrEquals(currentCheese.getManufactureDate()),","lastModifiedDate":"2021-04-06"},{"lineNumber":341,"author":{"gitId":"daniellau88"},"content":"                            String.format(Messages.MESSAGE_INVALID_MANUFACTURE_DATE_COMPLETED_DATE,","lastModifiedDate":"2021-04-06"},{"lineNumber":342,"author":{"gitId":"daniellau88"},"content":"                                orderId.value, cheeseId.value));","lastModifiedDate":"2021-04-06"},{"lineNumber":343,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":344,"author":{"gitId":"daniellau88"},"content":"                        // Cheese\u0027s expiry date must be after the order\u0027s completed date","lastModifiedDate":"2021-04-06"},{"lineNumber":345,"author":{"gitId":"daniellau88"},"content":"                        if (currentCheese.getExpiryDate().isPresent()) {","lastModifiedDate":"2021-04-06"},{"lineNumber":346,"author":{"gitId":"daniellau88"},"content":"                            checkArgument(currentCheese.getExpiryDate().get().isAfterOrEquals(completedDate.get()),","lastModifiedDate":"2021-04-06"},{"lineNumber":347,"author":{"gitId":"daniellau88"},"content":"                                String.format(Messages.MESSAGE_INVALID_EXPIRY_DATE_COMPLETED_DATE,","lastModifiedDate":"2021-04-06"},{"lineNumber":348,"author":{"gitId":"daniellau88"},"content":"                                    orderId.value, cheeseId.value));","lastModifiedDate":"2021-04-06"},{"lineNumber":349,"author":{"gitId":"daniellau88"},"content":"                        }","lastModifiedDate":"2021-04-06"},{"lineNumber":350,"author":{"gitId":"daniellau88"},"content":"                    }","lastModifiedDate":"2021-04-06"},{"lineNumber":351,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":352,"author":{"gitId":"daniellau88"},"content":"                }","lastModifiedDate":"2021-03-24"},{"lineNumber":353,"author":{"gitId":"daniellau88"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":354,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":355,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":356,"author":{"gitId":"daniellau88"},"content":"        for (Cheese cheese: cheeseIdMap.values()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":357,"author":{"gitId":"daniellau88"},"content":"            if (cheese.isCheeseAssigned()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":358,"author":{"gitId":"daniellau88"},"content":"                CheeseId cheeseId \u003d cheese.getCheeseId();","lastModifiedDate":"2021-03-25"},{"lineNumber":359,"author":{"gitId":"daniellau88"},"content":"                // Cheeses that are assigned must have an order attached to it","lastModifiedDate":"2021-03-25"},{"lineNumber":360,"author":{"gitId":"daniellau88"},"content":"                checkArgument(orderCheeseIdSet.contains(cheese.getCheeseId()),","lastModifiedDate":"2021-03-25"},{"lineNumber":361,"author":{"gitId":"daniellau88"},"content":"                    String.format(Messages.MESSAGE_INVALID_ASSIGNED_CHEESE, cheeseId.value));","lastModifiedDate":"2021-03-25"},{"lineNumber":362,"author":{"gitId":"daniellau88"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":363,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":364,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":365,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"daniellau88"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-08"},{"lineNumber":371,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":372,"author":{"gitId":"daniellau88"},"content":"        sb.append(customers.asUnmodifiableObservableList().size())","lastModifiedDate":"2021-03-08"},{"lineNumber":373,"author":{"gitId":"daniellau88"},"content":"                .append(\" customers, \")","lastModifiedDate":"2021-03-08"},{"lineNumber":374,"author":{"gitId":"daniellau88"},"content":"                .append(cheeses.asUnmodifiableObservableList().size())","lastModifiedDate":"2021-03-08"},{"lineNumber":375,"author":{"gitId":"daniellau88"},"content":"                .append(\" cheeses, \")","lastModifiedDate":"2021-03-08"},{"lineNumber":376,"author":{"gitId":"daniellau88"},"content":"                .append(orders.asUnmodifiableObservableList().size())","lastModifiedDate":"2021-03-08"},{"lineNumber":377,"author":{"gitId":"daniellau88"},"content":"                .append(\" orders\");","lastModifiedDate":"2021-03-08"},{"lineNumber":378,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":379,"author":{"gitId":"daniellau88"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":383,"author":{"gitId":"laurenlhy"},"content":"    public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":384,"author":{"gitId":"laurenlhy"},"content":"        return customers.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-07"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":387,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":388,"author":{"gitId":"daniellau88"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":389,"author":{"gitId":"daniellau88"},"content":"        return orders.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-08"},{"lineNumber":390,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":391,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":392,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":393,"author":{"gitId":"daniellau88"},"content":"    public ObservableList\u003cCheese\u003e getCheeseList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":394,"author":{"gitId":"daniellau88"},"content":"        return cheeses.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-08"},{"lineNumber":395,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":396,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":400,"author":{"gitId":"weixue123"},"content":"                || (other instanceof Chim // instanceof handles nulls","lastModifiedDate":"2021-04-08"},{"lineNumber":401,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 customers.equals(((Chim) other).customers))","lastModifiedDate":"2021-04-08"},{"lineNumber":402,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 cheeses.equals(((Chim) other).cheeses)","lastModifiedDate":"2021-04-08"},{"lineNumber":403,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 orders.equals(((Chim) other).orders);","lastModifiedDate":"2021-04-08"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":408,"author":{"gitId":"laurenlhy"},"content":"        return customers.hashCode();","lastModifiedDate":"2021-03-07"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":410,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":411,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AhQuanz":23,"laurenlhy":27,"weixue123":89,"daniellau88":182,"-":76,"aaronsms":14}},{"path":"src/main/java/chim/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.model.util.predicate.FieldPredicate.getDefaultPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderId;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    FieldPredicate\u003cCustomer\u003e PREDICATE_SHOW_ALL_CUSTOMERS \u003d getDefaultPredicate();","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    FieldPredicate\u003cOrder\u003e PREDICATE_SHOW_ALL_ORDERS \u003d getDefaultPredicate();","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    FieldPredicate\u003cCheese\u003e PREDICATE_SHOW_ALL_CHEESES \u003d getDefaultPredicate();","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"     * Returns the user prefs\u0027 CHIM file path.","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"    Path getChimFilePath();","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"     * Sets the user prefs\u0027 CHIM file path.","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"    void setChimFilePath(Path chimFilePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"     * Replaces CHIM data with the data in {@code chim}.","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"    void setChim(ReadOnlyChim chim);","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"     * Returns the Chim object.","lastModifiedDate":"2021-04-08"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"    ReadOnlyChim getChim();","lastModifiedDate":"2021-04-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"laurenlhy"},"content":"    boolean hasCustomer(Customer customer);","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"weixue123"},"content":"     * Returns true if a customer with the {@code phone} exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"    boolean hasCustomerWithPhone(Phone phone);","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"weixue123"},"content":"     * Returns a customer with the {@code phone} if exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"    Customer getCustomerWithPhone(Phone phone);","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-04-07"},{"lineNumber":89,"author":{"gitId":"weixue123"},"content":"     * Returns a customer with the {@code id} if exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":90,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-04-07"},{"lineNumber":91,"author":{"gitId":"AhQuanz"},"content":"    Customer getCustomerWithId(CustomerId id);","lastModifiedDate":"2021-04-07"},{"lineNumber":92,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"laurenlhy"},"content":"     * Deletes the given customer.","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"weixue123"},"content":"     * The customer must exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"laurenlhy"},"content":"    void deleteCustomer(Customer target);","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"laurenlhy"},"content":"     * Adds the given customer.","lastModifiedDate":"2021-03-07"},{"lineNumber":101,"author":{"gitId":"weixue123"},"content":"     * {@code customer} must not already exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"laurenlhy"},"content":"    void addCustomer(Customer customer);","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"laurenlhy"},"content":"     * Replaces the given customer {@code target} with {@code editedCustomer}.","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"weixue123"},"content":"     * {@code target} must exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":108,"author":{"gitId":"laurenlhy"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as another existing customer in","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"weixue123"},"content":"     * CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"laurenlhy"},"content":"    void setCustomer(Customer target, Customer editedCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"weixue123"},"content":"     * Returns a complete/unfiltered list of customers.","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"weixue123"},"content":"    ObservableList\u003cCustomer\u003e getCompleteCustomerList();","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"weixue123"},"content":"     * Returns true if a Order with the same identity as {@code order} exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":120,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"AhQuanz"},"content":"    boolean hasOrder(Order order);","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"AhQuanz"},"content":"     * Deletes the given order.","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"weixue123"},"content":"     * The order must exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":126,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"AhQuanz"},"content":"    void deleteOrder(Order target);","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"AhQuanz"},"content":"     * Adds the given order.","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"weixue123"},"content":"     * {@code order} must not already exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":132,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"AhQuanz"},"content":"    void addOrder(Order order);","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"AhQuanz"},"content":"     * Replaces the given order {@code target} with {@code editedOrder}.","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"weixue123"},"content":"     * {@code target} must exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":138,"author":{"gitId":"AhQuanz"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order in","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"weixue123"},"content":"     * CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":140,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"AhQuanz"},"content":"    void setOrder(Order target, Order editedOrder);","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"weixue123"},"content":"     * Returns a order with the {@code orderId} if exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":145,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"daniellau88"},"content":"    Order getOrderWithId(OrderId orderId);","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"weixue123"},"content":"     * Returns true if a Cheese with the same identity as {@code cheese} exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":150,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"AhQuanz"},"content":"    boolean hasCheese(Cheese cheese);","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"AhQuanz"},"content":"     * Deletes the given cheese.","lastModifiedDate":"2021-03-13"},{"lineNumber":155,"author":{"gitId":"weixue123"},"content":"     * The cheese must exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":156,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"AhQuanz"},"content":"    void deleteCheese(Cheese target);","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"AhQuanz"},"content":"     * Adds the given cheese.","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"weixue123"},"content":"     * {@code cheese} must not already exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":162,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"AhQuanz"},"content":"    void addCheese(Cheese cheese);","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":165,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"AhQuanz"},"content":"     * Replaces the given cheese {@code target} with {@code editedCheese}.","lastModifiedDate":"2021-03-13"},{"lineNumber":167,"author":{"gitId":"weixue123"},"content":"     * {@code target} must exist in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":168,"author":{"gitId":"AhQuanz"},"content":"     * The order identity of {@code editedCheese} must not be the same as another existing order in","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"weixue123"},"content":"     * CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":170,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"daniellau88"},"content":"    void setCheese(Cheese target, Cheese editedCheese);","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"weixue123"},"content":"     * Returns a cheese with the {@code cheeseId} if exists in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":175,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"daniellau88"},"content":"    Cheese getCheeseWithId(CheeseId cheeseId);","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"AhQuanz"},"content":"     * Return Unassigned cheeses with given cheeseType.","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"AhQuanz"},"content":"    Set\u003cCheeseId\u003e getUnassignedCheeses(CheeseType cheesetype, Quantity quantity);","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"AhQuanz"},"content":"     * Updates cheeses with cheeseId found in cheesesAssigned to be assigned","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"weixue123"},"content":"     * @param cheesesAssigned A set of cheese Ids","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":188,"author":{"gitId":"AhQuanz"},"content":"    void updateCheesesStatus(Set\u003cCheeseId\u003e cheesesAssigned);","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"weixue123"},"content":"     * Returns an unmodifiable view of the filtered customer list","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"laurenlhy"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2021-03-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":195,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"weixue123"},"content":"     * Returns an unmodifiable view of the filtered order list","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"AhQuanz"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"AhQuanz"},"content":"     * Returns a summary of the filtered order list","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"AhQuanz"},"content":"    int getFilteredOrderListIncompleteCount();","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":206,"author":{"gitId":"weixue123"},"content":"     * Returns an unmodifiable view of the filtered cheese list","lastModifiedDate":"2021-03-14"},{"lineNumber":207,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":208,"author":{"gitId":"AhQuanz"},"content":"    ObservableList\u003cCheese\u003e getFilteredCheeseList();","lastModifiedDate":"2021-03-13"},{"lineNumber":209,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":210,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":211,"author":{"gitId":"AhQuanz"},"content":"     * Returns a summary of the filtered cheese list","lastModifiedDate":"2021-03-30"},{"lineNumber":212,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":213,"author":{"gitId":"AhQuanz"},"content":"    int getFilteredCheeseListUnassignedCount();","lastModifiedDate":"2021-03-30"},{"lineNumber":214,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":216,"author":{"gitId":"laurenlhy"},"content":"     * Updates the filter of the filtered customer list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-07"},{"lineNumber":217,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":220,"author":{"gitId":"daniellau88"},"content":"    void updateFilteredCustomerList(FieldPredicate\u003cCustomer\u003e predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":222,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":223,"author":{"gitId":"AhQuanz"},"content":"     * Updates the filter of the filtered order list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-13"},{"lineNumber":224,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":225,"author":{"gitId":"AhQuanz"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-13"},{"lineNumber":226,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":227,"author":{"gitId":"daniellau88"},"content":"    void updateFilteredOrderList(FieldPredicate\u003cOrder\u003e predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":229,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":230,"author":{"gitId":"AhQuanz"},"content":"     * Updates the filter of the filtered cheese list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-13"},{"lineNumber":231,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":232,"author":{"gitId":"AhQuanz"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-13"},{"lineNumber":233,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":234,"author":{"gitId":"daniellau88"},"content":"    void updateFilteredCheeseList(FieldPredicate\u003cCheese\u003e predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":236,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":237,"author":{"gitId":"weixue123"},"content":"     * Sets the list panel in the UI to show the filtered customers list.","lastModifiedDate":"2021-03-14"},{"lineNumber":238,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":239,"author":{"gitId":"weixue123"},"content":"    void setPanelToCustomerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":240,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":241,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":242,"author":{"gitId":"weixue123"},"content":"     * Sets the list panel in the UI to show the filtered cheeses list.","lastModifiedDate":"2021-03-14"},{"lineNumber":243,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":244,"author":{"gitId":"weixue123"},"content":"    void setPanelToCheeseList();","lastModifiedDate":"2021-03-14"},{"lineNumber":245,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":246,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":247,"author":{"gitId":"weixue123"},"content":"     * Sets the list panel in the UI to show the filtered orders list.","lastModifiedDate":"2021-03-14"},{"lineNumber":248,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":249,"author":{"gitId":"weixue123"},"content":"    void setPanelToOrderList();","lastModifiedDate":"2021-03-14"},{"lineNumber":250,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"AhQuanz":78,"laurenlhy":10,"weixue123":80,"daniellau88":19,"-":56,"aaronsms":8}},{"path":"src/main/java/chim/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.LogsCenter;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderId;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.util.FilteredSortedList;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":" * Represents the in-memory model of CHIM\u0027s data.","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    private final Chim chim;","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    private final FilteredSortedList\u003cCustomer\u003e filteredAndSortedCustomers;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    private final FilteredSortedList\u003cOrder\u003e filteredAndSortedOrders;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"    private final FilteredSortedList\u003cCheese\u003e filteredAndSortedCheeses;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"     * Initializes a ModelManager with the given chim and userPrefs.","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"    public ModelManager(ReadOnlyChim chim, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"        requireAllNonNull(chim, userPrefs);","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"        logger.fine(\"Initializing with CHIM: \" + chim + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"        this.chim \u003d new Chim(chim);","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"        filteredAndSortedCustomers \u003d new FilteredSortedList\u003c\u003e(this.chim.getCustomerList());","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"        filteredAndSortedOrders \u003d new FilteredSortedList\u003c\u003e(this.chim.getOrderList());","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"        filteredAndSortedCheeses \u003d new FilteredSortedList\u003c\u003e(this.chim.getCheeseList());","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"        this(new Chim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"weixue123"},"content":"    public Path getChimFilePath() {","lastModifiedDate":"2021-04-08"},{"lineNumber":83,"author":{"gitId":"weixue123"},"content":"        return userPrefs.getChimFilePath();","lastModifiedDate":"2021-04-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"weixue123"},"content":"    public void setChimFilePath(Path chimFilePath) {","lastModifiedDate":"2021-04-08"},{"lineNumber":88,"author":{"gitId":"weixue123"},"content":"        requireNonNull(chimFilePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":89,"author":{"gitId":"weixue123"},"content":"        userPrefs.setChimFilePath(chimFilePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"weixue123"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Chim \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"weixue123"},"content":"    public void setChim(ReadOnlyChim chim) {","lastModifiedDate":"2021-04-08"},{"lineNumber":96,"author":{"gitId":"weixue123"},"content":"        this.chim.resetData(chim);","lastModifiedDate":"2021-04-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"    public ReadOnlyChim getChim() {","lastModifiedDate":"2021-04-08"},{"lineNumber":101,"author":{"gitId":"weixue123"},"content":"        return chim;","lastModifiedDate":"2021-04-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"AhQuanz"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Customer Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"laurenlhy"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"laurenlhy"},"content":"        requireNonNull(customer);","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"weixue123"},"content":"        return chim.hasCustomer(customer);","lastModifiedDate":"2021-04-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"aaronsms"},"content":"    public boolean hasCustomerWithPhone(Phone phone) {","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"weixue123"},"content":"        return chim.hasCustomerWithPhone(phone);","lastModifiedDate":"2021-04-08"},{"lineNumber":116,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"aaronsms"},"content":"    public Customer getCustomerWithPhone(Phone phone) {","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"weixue123"},"content":"        return chim.getCustomerWithPhone(phone);","lastModifiedDate":"2021-04-08"},{"lineNumber":122,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-04-07"},{"lineNumber":125,"author":{"gitId":"AhQuanz"},"content":"    public Customer getCustomerWithId(CustomerId id) {","lastModifiedDate":"2021-04-07"},{"lineNumber":126,"author":{"gitId":"AhQuanz"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-04-07"},{"lineNumber":127,"author":{"gitId":"weixue123"},"content":"        return chim.getCustomerWithId(id);","lastModifiedDate":"2021-04-08"},{"lineNumber":128,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":129,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"laurenlhy"},"content":"    public void deleteCustomer(Customer target) {","lastModifiedDate":"2021-03-07"},{"lineNumber":132,"author":{"gitId":"weixue123"},"content":"        chim.deleteCustomer(target);","lastModifiedDate":"2021-04-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"laurenlhy"},"content":"    public void addCustomer(Customer customer) {","lastModifiedDate":"2021-03-07"},{"lineNumber":137,"author":{"gitId":"weixue123"},"content":"        chim.addCustomer(customer);","lastModifiedDate":"2021-04-08"},{"lineNumber":138,"author":{"gitId":"laurenlhy"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2021-03-07"},{"lineNumber":143,"author":{"gitId":"laurenlhy"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"weixue123"},"content":"        chim.setCustomer(target, editedCustomer);","lastModifiedDate":"2021-04-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"weixue123"},"content":"    public ObservableList\u003cCustomer\u003e getCompleteCustomerList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"weixue123"},"content":"        return chim.getCustomerList();","lastModifiedDate":"2021-04-08"},{"lineNumber":151,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"AhQuanz"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Order Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":155,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":156,"author":{"gitId":"AhQuanz"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"AhQuanz"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"weixue123"},"content":"        return chim.hasOrder(order);","lastModifiedDate":"2021-04-08"},{"lineNumber":159,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"AhQuanz"},"content":"    public void deleteOrder(Order target) {","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"weixue123"},"content":"        chim.deleteOrder(target);","lastModifiedDate":"2021-04-08"},{"lineNumber":164,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":165,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":167,"author":{"gitId":"AhQuanz"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2021-03-13"},{"lineNumber":168,"author":{"gitId":"weixue123"},"content":"        chim.addOrder(order);","lastModifiedDate":"2021-04-08"},{"lineNumber":169,"author":{"gitId":"weixue123"},"content":"        updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"AhQuanz"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"AhQuanz"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"weixue123"},"content":"        chim.setOrder(target, editedOrder);","lastModifiedDate":"2021-04-08"},{"lineNumber":177,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"daniellau88"},"content":"    public Order getOrderWithId(OrderId orderId) {","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(orderId);","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"weixue123"},"content":"        return chim.getOrderWithId(orderId);","lastModifiedDate":"2021-04-08"},{"lineNumber":183,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"AhQuanz"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Cheese Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"AhQuanz"},"content":"    public boolean hasCheese(Cheese cheese) {","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"AhQuanz"},"content":"        requireNonNull(cheese);","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"weixue123"},"content":"        return chim.hasCheese(cheese);","lastModifiedDate":"2021-04-08"},{"lineNumber":191,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"AhQuanz"},"content":"    public void deleteCheese(Cheese target) {","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"weixue123"},"content":"        chim.deleteCheese(target);","lastModifiedDate":"2021-04-08"},{"lineNumber":196,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":197,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":198,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"AhQuanz"},"content":"    public void addCheese(Cheese cheese) {","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"weixue123"},"content":"        chim.addCheese(cheese);","lastModifiedDate":"2021-04-08"},{"lineNumber":201,"author":{"gitId":"weixue123"},"content":"        updateFilteredCheeseList(PREDICATE_SHOW_ALL_CHEESES);","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":203,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":204,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":205,"author":{"gitId":"AhQuanz"},"content":"    public void setCheese(Cheese target, Cheese editedCheese) {","lastModifiedDate":"2021-03-13"},{"lineNumber":206,"author":{"gitId":"AhQuanz"},"content":"        requireAllNonNull(target, editedCheese);","lastModifiedDate":"2021-03-13"},{"lineNumber":207,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":208,"author":{"gitId":"weixue123"},"content":"        chim.setCheese(target, editedCheese);","lastModifiedDate":"2021-04-08"},{"lineNumber":209,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":210,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":211,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":212,"author":{"gitId":"daniellau88"},"content":"    public Cheese getCheeseWithId(CheeseId cheeseId) {","lastModifiedDate":"2021-03-25"},{"lineNumber":213,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(cheeseId);","lastModifiedDate":"2021-03-25"},{"lineNumber":214,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":215,"author":{"gitId":"weixue123"},"content":"        return chim.getCheeseWithId(cheeseId);","lastModifiedDate":"2021-04-08"},{"lineNumber":216,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":217,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":218,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":219,"author":{"gitId":"AhQuanz"},"content":"    public Set\u003cCheeseId\u003e getUnassignedCheeses(CheeseType cheeseType, Quantity quantity) {","lastModifiedDate":"2021-03-15"},{"lineNumber":220,"author":{"gitId":"weixue123"},"content":"        return chim.getUnassignedCheeses(cheeseType, quantity);","lastModifiedDate":"2021-04-08"},{"lineNumber":221,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":222,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":223,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":224,"author":{"gitId":"AhQuanz"},"content":"    public void updateCheesesStatus(Set\u003cCheeseId\u003e cheesesAssigned) {","lastModifiedDate":"2021-03-16"},{"lineNumber":225,"author":{"gitId":"weixue123"},"content":"        chim.updateCheesesStatus(cheesesAssigned);","lastModifiedDate":"2021-04-08"},{"lineNumber":226,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":227,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":228,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":229,"author":{"gitId":"laurenlhy"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Customer List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":232,"author":{"gitId":"laurenlhy"},"content":"     * Returns an unmodifiable view of the list of {@code Customer} backed by the internal list of","lastModifiedDate":"2021-03-07"},{"lineNumber":233,"author":{"gitId":"weixue123"},"content":"     * {@code versionedChim}","lastModifiedDate":"2021-04-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":236,"author":{"gitId":"laurenlhy"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":237,"author":{"gitId":"daniellau88"},"content":"        return filteredAndSortedCustomers.getObservableList();","lastModifiedDate":"2021-03-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":240,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":241,"author":{"gitId":"AhQuanz"},"content":"     * Returns an unmodifiable view of the list of {@code Order} backed by the internal list of","lastModifiedDate":"2021-03-13"},{"lineNumber":242,"author":{"gitId":"weixue123"},"content":"     * {@code versionedChim}","lastModifiedDate":"2021-04-08"},{"lineNumber":243,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":244,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":245,"author":{"gitId":"AhQuanz"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":246,"author":{"gitId":"daniellau88"},"content":"        return filteredAndSortedOrders.getObservableList();","lastModifiedDate":"2021-03-15"},{"lineNumber":247,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"AhQuanz"},"content":"    public int getFilteredOrderListIncompleteCount() {","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"AhQuanz"},"content":"        int c \u003d 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"AhQuanz"},"content":"        for (Order o : getFilteredOrderList()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"AhQuanz"},"content":"            if (!o.isComplete()) {","lastModifiedDate":"2021-04-07"},{"lineNumber":254,"author":{"gitId":"AhQuanz"},"content":"                c++;","lastModifiedDate":"2021-03-30"},{"lineNumber":255,"author":{"gitId":"AhQuanz"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"AhQuanz"},"content":"        return c;","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":259,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":260,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"AhQuanz"},"content":"    public int getFilteredCheeseListUnassignedCount() {","lastModifiedDate":"2021-03-30"},{"lineNumber":262,"author":{"gitId":"AhQuanz"},"content":"        int c \u003d 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"AhQuanz"},"content":"        for (Cheese cheese : getFilteredCheeseList()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"AhQuanz"},"content":"            if (!cheese.isCheeseAssigned()) {","lastModifiedDate":"2021-04-07"},{"lineNumber":265,"author":{"gitId":"AhQuanz"},"content":"                c++;","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"AhQuanz"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":267,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":268,"author":{"gitId":"AhQuanz"},"content":"        return c;","lastModifiedDate":"2021-03-30"},{"lineNumber":269,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":270,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":271,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":272,"author":{"gitId":"AhQuanz"},"content":"     * Returns an unmodifiable view of the list of {@code Cheese} backed by the internal list of","lastModifiedDate":"2021-03-13"},{"lineNumber":273,"author":{"gitId":"weixue123"},"content":"     * {@code versionedChim}","lastModifiedDate":"2021-04-08"},{"lineNumber":274,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":275,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":276,"author":{"gitId":"AhQuanz"},"content":"    public ObservableList\u003cCheese\u003e getFilteredCheeseList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":277,"author":{"gitId":"daniellau88"},"content":"        return filteredAndSortedCheeses.getObservableList();","lastModifiedDate":"2021-03-15"},{"lineNumber":278,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":279,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":281,"author":{"gitId":"daniellau88"},"content":"    public void updateFilteredCustomerList(FieldPredicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":283,"author":{"gitId":"daniellau88"},"content":"        filteredAndSortedCustomers.setModelPredicate(predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":286,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":287,"author":{"gitId":"daniellau88"},"content":"    public void updateFilteredOrderList(FieldPredicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":288,"author":{"gitId":"AhQuanz"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":289,"author":{"gitId":"daniellau88"},"content":"        filteredAndSortedOrders.setModelPredicate(predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":290,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":291,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":292,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":293,"author":{"gitId":"daniellau88"},"content":"    public void updateFilteredCheeseList(FieldPredicate\u003cCheese\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":294,"author":{"gitId":"AhQuanz"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":295,"author":{"gitId":"daniellau88"},"content":"        filteredAndSortedCheeses.setModelPredicate(predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":296,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":297,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":298,"author":{"gitId":"weixue123"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d For Toggling UI Panel \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":299,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":300,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":301,"author":{"gitId":"weixue123"},"content":"    public void setPanelToCustomerList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":302,"author":{"gitId":"weixue123"},"content":"        getGuiSettings().setPanelToCustomerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":303,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":304,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":305,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":306,"author":{"gitId":"weixue123"},"content":"    public void setPanelToCheeseList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":307,"author":{"gitId":"weixue123"},"content":"        getGuiSettings().setPanelToCheeseList();","lastModifiedDate":"2021-03-14"},{"lineNumber":308,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":309,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":310,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":311,"author":{"gitId":"weixue123"},"content":"    public void setPanelToOrderList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":312,"author":{"gitId":"weixue123"},"content":"        getGuiSettings().setPanelToOrderList();","lastModifiedDate":"2021-03-14"},{"lineNumber":313,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":314,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":324,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":329,"author":{"gitId":"weixue123"},"content":"        return chim.equals(other.chim)","lastModifiedDate":"2021-04-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":331,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 filteredAndSortedCustomers.equals(other.filteredAndSortedCustomers)","lastModifiedDate":"2021-03-15"},{"lineNumber":332,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 filteredAndSortedOrders.equals(other.filteredAndSortedOrders)","lastModifiedDate":"2021-03-15"},{"lineNumber":333,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 filteredAndSortedCheeses.equals(other.filteredAndSortedCheeses);","lastModifiedDate":"2021-03-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AhQuanz":104,"laurenlhy":10,"weixue123":82,"daniellau88":26,"-":104,"aaronsms":10}},{"path":"src/main/java/chim/model/ReadOnlyChim.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":" * Unmodifiable view of CHIM\u0027s customers, orders and cheeses lists.","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"public interface ReadOnlyChim {","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"     * Returns an unmodifiable view of the customers list.","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"     * This list will not contain any duplicate customers.","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":"    ObservableList\u003cCustomer\u003e getCustomerList();","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"     * Returns an unmodifiable view of the orders list.","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"     * This list will not contain any duplicate orders.","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"     * Returns an unmodifiable view of the cheeses list.","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"     * This list will not contain any duplicate cheeses.","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    ObservableList\u003cCheese\u003e getCheeseList();","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"laurenlhy":1,"weixue123":8,"daniellau88":12,"-":10}},{"path":"src/main/java/chim/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"    Path getChimFilePath();","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"weixue123":3,"-":13}},{"path":"src/main/java/chim/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"    private Path chimFilePath \u003d Paths.get(\"data\" , \"chim.json\");","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"        setChimFilePath(newUserPrefs.getChimFilePath());","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"    public Path getChimFilePath() {","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"        return chimFilePath;","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"    public void setChimFilePath(Path chimFilePath) {","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"        requireNonNull(chimFilePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"        this.chimFilePath \u003d chimFilePath;","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 chimFilePath.equals(o.chimFilePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"        return Objects.hash(guiSettings, chimFilePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"weixue123"},"content":"        sb.append(\"\\nLocal data file location : \" + chimFilePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":12,"-":75}},{"path":"src/main/java/chim/model/cheese/Cheese.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.DateUtil.isBeforeToday;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":" * Represents a Cheese in the Cheese Inventory Management System (CHIM)","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"public class Cheese {","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    // Identity fields","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    // Primary key for Cheese","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"    private final CheeseId cheeseId;","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"    private final CheeseType cheeseType;","lastModifiedDate":"2021-03-04"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    // Data fields","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"    private final ManufactureDate manufactureDate;","lastModifiedDate":"2021-03-04"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"    private final Optional\u003cExpiryDate\u003e expiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"    private final boolean isAssigned;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    public Cheese(CheeseType cheeseType, ManufactureDate manufactureDate, ExpiryDate expiryDate) {","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"        this(cheeseType, manufactureDate, expiryDate, CheeseId.getNextId(), false);","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    public Cheese(CheeseType cheeseType, ManufactureDate manufactureDate, ExpiryDate expiryDate, CheeseId cheeseId) {","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"        this(cheeseType, manufactureDate, expiryDate, cheeseId, true);","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"     * Every compulsory field must be present and not null.","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"    public Cheese(CheeseType cheeseType, ManufactureDate manufactureDate, ExpiryDate expiryDate,","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"                  CheeseId cheeseId, boolean isAssigned) {","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        requireAllNonNull(cheeseType, manufactureDate, cheeseId);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"        checkCheeseArguments(cheeseType, manufactureDate, expiryDate, cheeseId, isAssigned);","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        this.cheeseType \u003d cheeseType;","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"        this.manufactureDate \u003d manufactureDate;","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"        this.expiryDate \u003d Optional.ofNullable(expiryDate);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"        this.cheeseId \u003d cheeseId;","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"        this.isAssigned \u003d isAssigned;","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"    public CheeseType getCheeseType() {","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"        return cheeseType;","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"    public ManufactureDate getManufactureDate() {","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"        return manufactureDate;","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"    public Optional\u003cExpiryDate\u003e getExpiryDate() {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"        return expiryDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"    public CheeseId getCheeseId() {","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"        return cheeseId;","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"    public boolean isCheeseAssigned() {","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"        return isAssigned;","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"     * Checks whether the given parameters are valid for an order","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"    public static void checkCheeseArguments(CheeseType cheeseType, ManufactureDate manufactureDate,","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"                                            ExpiryDate expiryDate, CheeseId cheeseId,","lastModifiedDate":"2021-04-05"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"                                            boolean isAssigned) {","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"        checkArgument(isBeforeToday(manufactureDate), \"The manufacture date cannot be after today.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"        if (expiryDate !\u003d null) {","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"            checkArgument(expiryDate.isAfterOrEquals(manufactureDate),","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"                \"The expiry date of the cheese should be after the manufacture date.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"AhQuanz"},"content":"    public boolean isSameType(CheeseType cheeseType) {","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"AhQuanz"},"content":"        return this.cheeseType.equals(cheeseType);","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"     * Returns a cheese with same fields that is marked assigned.","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"AhQuanz"},"content":"    public Cheese assignToOrder() {","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"        return new Cheese(cheeseType, manufactureDate, expiryDate.orElse(null), cheeseId);","lastModifiedDate":"2021-04-05"},{"lineNumber":90,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"daniellau88"},"content":"     * Returns true if both cheeses have the same name.","lastModifiedDate":"2021-03-04"},{"lineNumber":94,"author":{"gitId":"daniellau88"},"content":"     * This defines a weaker notion of equality between two cheeses.","lastModifiedDate":"2021-03-04"},{"lineNumber":95,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"    public boolean isSameCheese(Cheese otherCheese) {","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"daniellau88"},"content":"        if (otherCheese \u003d\u003d this) {","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"            return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"        return otherCheese !\u003d null","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"            \u0026\u0026 otherCheese.cheeseId.equals(cheeseId);","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"     * Returns true if both cheeses have the same identity and data fields.","lastModifiedDate":"2021-03-04"},{"lineNumber":107,"author":{"gitId":"daniellau88"},"content":"     * This defines a stronger notion of equality between two cheeses.","lastModifiedDate":"2021-03-04"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"            return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"        if (!(other instanceof Cheese)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"daniellau88"},"content":"            return false;","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":119,"author":{"gitId":"daniellau88"},"content":"        Cheese otherCheese \u003d (Cheese) other;","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"daniellau88"},"content":"        return otherCheese.getCheeseId().equals(getCheeseId())","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"daniellau88"},"content":"            \u0026\u0026 otherCheese.getCheeseType().equals(getCheeseType())","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"daniellau88"},"content":"            \u0026\u0026 otherCheese.getManufactureDate().equals(getManufactureDate())","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"daniellau88"},"content":"            \u0026\u0026 otherCheese.getExpiryDate().equals(getExpiryDate());","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"daniellau88"},"content":"    public String toString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":128,"author":{"gitId":"daniellau88"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-08"},{"lineNumber":129,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"AhQuanz"},"content":"        builder.append(\"Cheese Type: \")","lastModifiedDate":"2021-04-07"},{"lineNumber":131,"author":{"gitId":"daniellau88"},"content":"            .append(getCheeseType())","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"daniellau88"},"content":"            .append(\"; Manufacture Date: \")","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"daniellau88"},"content":"            .append(getManufactureDate())","lastModifiedDate":"2021-03-08"},{"lineNumber":134,"author":{"gitId":"daniellau88"},"content":"            .append(\"; Expiry Date: \")","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"aaronsms"},"content":"            .append(getExpiryDate().map(ExpiryDate::toString).orElse(\"-\"))","lastModifiedDate":"2021-03-18"},{"lineNumber":136,"author":{"gitId":"AhQuanz"},"content":"            .append(\"; Status: \")","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"weixue123"},"content":"            .append(isCheeseAssigned() ? \"Assigned \" : \"Not Assigned\");","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"daniellau88"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":140,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":141,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":142,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"AhQuanz":18,"weixue123":6,"daniellau88":108,"aaronsms":10}},{"path":"src/main/java/chim/model/cheese/CheeseContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.StringUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":" * Tests that a {@code Cheese}\u0027s {@code Type} matches any of the keywords given.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"public class CheeseContainsKeywordsPredicate implements Predicate\u003cCheese\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"    public CheeseContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"    public boolean test(Cheese cheese) {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(cheese.getCheeseType().toString(), keyword));","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"                || (other instanceof CheeseContainsKeywordsPredicate","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 keywords.equals(((CheeseContainsKeywordsPredicate) other).keywords));","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"laurenlhy":28,"weixue123":4}},{"path":"src/main/java/chim/model/cheese/CheeseId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.AbstractId;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"public class CheeseId extends AbstractId\u003cCheeseId\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"    private static int nextId \u003d 1;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"     * Constructs a {@code CheeseId}.","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"     * @param id A valid id.","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"    protected CheeseId(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"        super(id);","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"    public static CheeseId getNextId() {","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"        return getNextId(nextId);","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"    public static CheeseId getNextId(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"        CheeseId result \u003d new CheeseId(id);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"        updateNextId(result);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"        return result;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    private static void updateNextId(CheeseId otherId) {","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"        if (nextId \u003c\u003d otherId.value) {","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"            nextId \u003d otherId.value + 1;","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"    protected static int getNextIdValue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"        return nextId;","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"weixue123":2,"daniellau88":22,"aaronsms":14}},{"path":"src/main/java/chim/model/cheese/CheeseType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":" * Represents a Cheese\u0027s type in the Cheese Inventory Management System (CHIM).","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":" * Guarantees: immutable","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"public class CheeseType {","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"        \"Cheese types should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\w]+[\\\\s\u0026\\\\w+]*\";","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    private static final Map\u003cString, CheeseType\u003e typeToCheeseMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    public final String value;","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"     * Constructs a {@code CheeseType}.","lastModifiedDate":"2021-03-04"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"     * @param type A valid cheese type.","lastModifiedDate":"2021-03-04"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    private CheeseType(String type) {","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(type);","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"        checkArgument(isValidType(type), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"        value \u003d type;","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"    public static boolean isValidType(String test) {","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"    public static CheeseType getCheeseType(String type) {","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"        if (typeToCheeseMap.containsKey(type)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"            return typeToCheeseMap.get(type);","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"        CheeseType newCheeseType \u003d new CheeseType(type);","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"        typeToCheeseMap.put(type, newCheeseType);","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"        return newCheeseType;","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"    public static Map\u003cString, CheeseType\u003e getReadOnlyCheeseTypeMap() {","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"        return Collections.unmodifiableMap(typeToCheeseMap);","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"    public String toString() {","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"        return value;","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"            || (other instanceof CheeseType // instanceof handles nulls","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"            \u0026\u0026 value.equals(((CheeseType) other).value)); // state check","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"AhQuanz":9,"weixue123":2,"daniellau88":57,"aaronsms":2}},{"path":"src/main/java/chim/model/cheese/ExpiryDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.AbstractDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-04"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":" * Represents a Cheese\u0027s expiry date in the Cheese Inventory Management System (CHIM).","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":" * Guarantees: immutable","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"public class ExpiryDate extends AbstractDate {","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"     * Constructs a {@code ExpiryDate}.","lastModifiedDate":"2021-03-04"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"     * @param date A valid expiry date.","lastModifiedDate":"2021-03-04"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    public ExpiryDate(String date) {","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"        super(date);","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"        checkArgument(isValidManufactureDate(this.value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    public boolean isValidManufactureDate(LocalDateTime value) {","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"        return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"weixue123":3,"daniellau88":25}},{"path":"src/main/java/chim/model/cheese/ManufactureDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.AbstractDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-04"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":" * Represents a Cheese\u0027s manufacture date in the Cheese Inventory Management System (CHIM).","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":" * Guarantees: immutable","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"public class ManufactureDate extends AbstractDate {","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"     * Constructs a {@code OrderDate} with current date time.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"    private ManufactureDate() {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"        super();","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"     * Constructs a {@code ManufactureDate}.","lastModifiedDate":"2021-03-04"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"     * @param date A valid manufacture date.","lastModifiedDate":"2021-03-04"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    public ManufactureDate(String date) {","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        super(date);","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"        checkArgument(isValidManufactureDate(this.value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    public boolean isValidManufactureDate(LocalDateTime value) {","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"        return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"    public static ManufactureDate now() {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"        return new ManufactureDate();","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"weixue123":3,"daniellau88":25,"aaronsms":11}},{"path":"src/main/java/chim/model/cheese/UniqueCheeseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.AbstractDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.exceptions.CheeseNotFoundException;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.exceptions.DuplicateCheeseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.order.exceptions.DuplicateOrderException;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.order.exceptions.OrderNotFoundException;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":" * A list of Cheese that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":" * A Cheese is considered unique by comparing using {@code Cheese#isSameCheese(Cheese)}. As such, adding and updating of","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":" * cheeses uses Cheese#isSameCheese(Cheese) for equality so as to ensure that the Cheese being added or updated is","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":" * unique in terms of identity in the UniqueCheeseList. However, the removal of a Cheese uses Cheese#equals(Cheese) so","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":" * as to ensure that the Cheese with exactly the same fields will be removed.","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":" *","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":" *","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":" * @see Cheese#isSameCheese(Cheese)","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"public class UniqueCheeseList implements Iterable\u003cCheese\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    private final ObservableList\u003cCheese\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    private final ObservableList\u003cCheese\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"     * Returns true if the list contains an equivalent cheese as the given argument.","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"    public boolean contains(Cheese toCheck) {","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"        return internalList.stream().anyMatch(toCheck::isSameCheese);","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"     * Returns first {@code Cheese} instance with equivalent cheeseId as the given","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"     * argument or null if it does not exist.","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"    public Cheese getCheeseWithId(CheeseId cheeseId) {","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(cheeseId);","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"        return internalList.stream().filter(cheese -\u003e cheese.getCheeseId().equals(cheeseId))","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"            .findFirst().orElse(null);","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"     * Adds a Cheese to the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"     * The cheese must not already exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"    public void add(Cheese toAdd) {","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"            throw new DuplicateCheeseException();","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"     * Replaces the Cheese {@code target} in the list with {@code editedCheese}.","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"     * The Cheese identity of {@code editedCheese} must not be the same as another existing Cheese in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"    public void setCheese(Cheese target, Cheese editedCheese) {","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"        requireAllNonNull(target, editedCheese);","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"        if (!target.isSameCheese(editedCheese) \u0026\u0026 contains(editedCheese)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"        internalList.set(index, editedCheese);","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"     * Removes the equivalent cheese from the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"     * The cheese must exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"laurenlhy"},"content":"    public void delete(Cheese toDelete) {","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"laurenlhy"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"laurenlhy"},"content":"        if (!internalList.remove(toDelete)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"daniellau88"},"content":"            throw new CheeseNotFoundException();","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"     * Replaces the contents of this list with {@code cheeses}.","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"     * {@code cheeses} must not contain duplicate cheeses.","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"    public void setCheeses(List\u003cCheese\u003e cheeses) {","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"        requireAllNonNull(cheeses);","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"        if (!cheesesAreUnique(cheeses)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"            throw new DuplicateCheeseException();","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"daniellau88"},"content":"        internalList.setAll(cheeses);","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"AhQuanz"},"content":"    public Set\u003cCheeseId\u003e getUnassignedCheeses(CheeseType cheeseType, Quantity quantity) {","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"AhQuanz"},"content":"        requireAllNonNull(cheeseType, quantity);","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"AhQuanz"},"content":"        Set\u003cCheeseId\u003e cheeses \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"AhQuanz"},"content":"        int c \u003d quantity.getQuantity();","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"        AbstractDate abstractDateNow \u003d ManufactureDate.now();","lastModifiedDate":"2021-04-06"},{"lineNumber":116,"author":{"gitId":"AhQuanz"},"content":"        for (int i \u003d 0; i \u003c internalList.size() \u0026\u0026 c \u003e 0; i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"AhQuanz"},"content":"            Cheese cheese \u003d internalList.get(i);","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"daniellau88"},"content":"            if (!cheese.isCheeseAssigned() \u0026\u0026 cheese.isSameType(cheeseType)","lastModifiedDate":"2021-04-06"},{"lineNumber":119,"author":{"gitId":"daniellau88"},"content":"                    \u0026\u0026 cheese.getExpiryDate().map(x -\u003e x.isAfter(abstractDateNow)).orElse(true)) {","lastModifiedDate":"2021-04-06"},{"lineNumber":120,"author":{"gitId":"AhQuanz"},"content":"                cheeses.add(cheese.getCheeseId());","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"AhQuanz"},"content":"                c--;","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"AhQuanz"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"AhQuanz"},"content":"        return cheeses;","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"AhQuanz"},"content":"     * Updates cheeses to assigned based on the set of cheese Ids provided","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"AhQuanz"},"content":"     * @param cheesesAssigned , cheese Ids of cheeses assigned to an order","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"AhQuanz"},"content":"    public void updateCheesesStatus(Set\u003cCheeseId\u003e cheesesAssigned) {","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"AhQuanz"},"content":"        requireAllNonNull(cheesesAssigned);","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"daniellau88"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-04-06"},{"lineNumber":135,"author":{"gitId":"AhQuanz"},"content":"            Cheese cheese \u003d internalList.get(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"daniellau88"},"content":"            if (cheesesAssigned.contains(cheese.getCheeseId())) {","lastModifiedDate":"2021-04-06"},{"lineNumber":137,"author":{"gitId":"AhQuanz"},"content":"                internalList.set(i, cheese.assignToOrder());","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"AhQuanz"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":143,"author":{"gitId":"daniellau88"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-08"},{"lineNumber":144,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":145,"author":{"gitId":"daniellau88"},"content":"    public ObservableList\u003cCheese\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":146,"author":{"gitId":"daniellau88"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-08"},{"lineNumber":147,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":148,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":149,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":150,"author":{"gitId":"daniellau88"},"content":"    public Iterator\u003cCheese\u003e iterator() {","lastModifiedDate":"2021-03-08"},{"lineNumber":151,"author":{"gitId":"daniellau88"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-08"},{"lineNumber":152,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":153,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":154,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":155,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":156,"author":{"gitId":"daniellau88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":157,"author":{"gitId":"daniellau88"},"content":"                || (other instanceof UniqueCheeseList // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":158,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 internalList.equals(((UniqueCheeseList) other).internalList));","lastModifiedDate":"2021-03-08"},{"lineNumber":159,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":160,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":161,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":162,"author":{"gitId":"daniellau88"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":163,"author":{"gitId":"daniellau88"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-08"},{"lineNumber":164,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":165,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":166,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":167,"author":{"gitId":"daniellau88"},"content":"     * Returns true if {@code cheeses} contains only unique cheeses.","lastModifiedDate":"2021-03-08"},{"lineNumber":168,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":169,"author":{"gitId":"daniellau88"},"content":"    private boolean cheesesAreUnique(List\u003cCheese\u003e cheeses) {","lastModifiedDate":"2021-03-08"},{"lineNumber":170,"author":{"gitId":"daniellau88"},"content":"        for (int i \u003d 0; i \u003c cheeses.size() - 1; i++) {","lastModifiedDate":"2021-03-08"},{"lineNumber":171,"author":{"gitId":"daniellau88"},"content":"            for (int j \u003d i + 1; j \u003c cheeses.size(); j++) {","lastModifiedDate":"2021-03-08"},{"lineNumber":172,"author":{"gitId":"daniellau88"},"content":"                if (cheeses.get(i).isSameCheese(cheeses.get(j))) {","lastModifiedDate":"2021-03-08"},{"lineNumber":173,"author":{"gitId":"daniellau88"},"content":"                    return false;","lastModifiedDate":"2021-03-08"},{"lineNumber":174,"author":{"gitId":"daniellau88"},"content":"                }","lastModifiedDate":"2021-03-08"},{"lineNumber":175,"author":{"gitId":"daniellau88"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":176,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":177,"author":{"gitId":"daniellau88"},"content":"        return true;","lastModifiedDate":"2021-03-08"},{"lineNumber":178,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":179,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"AhQuanz":29,"laurenlhy":3,"weixue123":8,"daniellau88":139}},{"path":"src/main/java/chim/model/cheese/exceptions/CheeseNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese.exceptions;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":" * Signals that the operation is unable to find the specified cheese.","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"public class CheeseNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"weixue123":1,"daniellau88":5}},{"path":"src/main/java/chim/model/cheese/exceptions/DuplicateCheeseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese.exceptions;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":" * Signals that the operation will result in duplicate Cheeses (Cheese are considered duplicates if they have the same","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":" * identity).","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"public class DuplicateCheeseException extends RuntimeException {","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"    public DuplicateCheeseException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"        super(\"Operation would result in duplicate cheese\");","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"weixue123":1,"daniellau88":10}},{"path":"src/main/java/chim/model/cheese/predicates/CheeseAssignmentStatusPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese.predicates;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":" * Predicate for filtering cheeses by their assignemnt status.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"public class CheeseAssignmentStatusPredicate extends FieldPredicate\u003cCheese\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Input cheese status must be either \u0027assigned\u0027 or \u0027unassigned\u0027.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"    private enum AssignmentStatus {","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"        ASSIGNED,","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"        UNASSIGNED","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"    private final boolean isCheeseAssigned;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"     * Creates a {@code CheeseAssignmentStatusPredicate} to filter list of cheeses.","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"     * If input {@code isCheeseAssigned} is \u0027assigned\u0027, only assigned cheeses will be left in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"     * If input {@code isCheeseAssigned} is \u0027unassigned\u0027, only unassigned cheeses will be left in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"    public CheeseAssignmentStatusPredicate(String status) {","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"        super();","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"        assert isValidStatus(status);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"        isCheeseAssigned \u003d status.equalsIgnoreCase(AssignmentStatus.ASSIGNED.toString());","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"     * Returns if the input cheese assignment status {@code String} is valid.","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"    public static boolean isValidStatus(String status) {","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"        return status.equalsIgnoreCase(AssignmentStatus.ASSIGNED.toString())","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"                || status.equalsIgnoreCase(AssignmentStatus.UNASSIGNED.toString());","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"    public boolean test(Cheese cheese) {","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"        return isCheeseAssigned \u003d\u003d cheese.isCheeseAssigned();","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"                || (other instanceof CheeseAssignmentStatusPredicate","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 (isCheeseAssigned \u003d\u003d ((CheeseAssignmentStatusPredicate) other).isCheeseAssigned));","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"    public double getSimilarityScore(Cheese cheese) {","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"        return 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"        return isCheeseAssigned ? 1 : 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"        return String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"                \"%s status\", (isCheeseAssigned ? \"assigned\" : \"not assigned\")","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"        );","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"AhQuanz":7,"weixue123":61}},{"path":"src/main/java/chim/model/cheese/predicates/CheeseCheeseTypePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese.predicates;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.PredicateUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.SingleFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":" * Predicate for filtering cheeses by their cheese types.","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"public class CheeseCheeseTypePredicate extends SingleFieldPredicate\u003cCheese\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Cheese type keywords must not be empty.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"    public CheeseCheeseTypePredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"        super(keywords);","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    public double getSimilarityScore(Cheese cheese) {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"        return PredicateUtil.getWordSimilarityScoreIgnoreCase(cheese.getCheeseType().value, getKeywords());","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    public boolean test(Cheese cheese) {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        return PredicateUtil.containsPrefixWordIgnoreCase(cheese.getCheeseType().value, getKeywords());","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"        return (other instanceof CheeseCheeseTypePredicate) \u0026\u0026 super.equals(other); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"cheese type keyword(s) of %s\",","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"                keywords.stream().collect(Collectors.joining(\" , \")));","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"AhQuanz":6,"weixue123":9,"daniellau88":26}},{"path":"src/main/java/chim/model/customer/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":" * Represents a Customer\u0027s address in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weixue123":3,"-":54}},{"path":"src/main/java/chim/model/customer/Customer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":" * Represents a Customer in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"public class Customer {","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    private final CustomerId customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    public Customer(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, CustomerId customerId) {","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"        requireAllNonNull(name, phone, email, address, tags, customerId);","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"    public Customer(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        this(name, phone, email, address, tags, CustomerId.getNextId());","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"    public CustomerId getId() {","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"        return customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"     * Returns true if both customers have the same phone.","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"     * This defines a weaker notion of equality between two customers.","lastModifiedDate":"2021-04-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"laurenlhy"},"content":"    public boolean isSameCustomer(Customer otherCustomer) {","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"laurenlhy"},"content":"        if (otherCustomer \u003d\u003d this) {","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"laurenlhy"},"content":"        return otherCustomer !\u003d null","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"                \u0026\u0026 otherCustomer.getPhone().equals(getPhone());","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"weixue123"},"content":"     * Returns true if both customers have the same identity and data fields.","lastModifiedDate":"2021-04-08"},{"lineNumber":86,"author":{"gitId":"weixue123"},"content":"     * This defines a stronger notion of equality between two customers.","lastModifiedDate":"2021-04-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"laurenlhy"},"content":"        if (!(other instanceof Customer)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"laurenlhy"},"content":"        Customer otherCustomer \u003d (Customer) other;","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"        return otherCustomer.getId().equals(getId())","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 otherCustomer.getName().equals(getName())","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"laurenlhy"},"content":"                \u0026\u0026 otherCustomer.getPhone().equals(getPhone())","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"laurenlhy"},"content":"                \u0026\u0026 otherCustomer.getEmail().equals(getEmail())","lastModifiedDate":"2021-03-07"},{"lineNumber":103,"author":{"gitId":"laurenlhy"},"content":"                \u0026\u0026 otherCustomer.getAddress().equals(getAddress())","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"laurenlhy"},"content":"                \u0026\u0026 otherCustomer.getTags().equals(getTags());","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"laurenlhy":10,"weixue123":8,"daniellau88":11,"-":102,"aaronsms":1}},{"path":"src/main/java/chim/model/customer/CustomerId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.AbstractId;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"public class CustomerId extends AbstractId\u003cCustomerId\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"    private static int nextId \u003d 1;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"     * Constructs a {@code CustomerId}.","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"     * @param id A valid id.","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"    protected CustomerId(int id) {","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"        super(id);","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"    public static CustomerId getNextId() {","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"        return getNextId(nextId);","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    public static CustomerId getNextId(int id) {","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"        CustomerId result \u003d new CustomerId(id);","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"        updateNextId(result);","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"        return result;","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    private static void updateNextId(CustomerId otherId) {","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"        if (nextId \u003c\u003d otherId.value) {","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"            // Ensures that the tests will produce customer ids of the same value","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"            nextId \u003d otherId.value + 1;","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"    protected static int getNextIdValue() {","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"        return nextId;","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"weixue123":2,"daniellau88":37}},{"path":"src/main/java/chim/model/customer/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":" * Represents a Customer\u0027s email in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"            + \"    - end with at least one suffix (a suffix is a period followed by at least 2 alphabets)\";","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]\";","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"    private static final String DOMAIN_SUFFIX_REGEX \u003d \"\\\\.[a-zA-Z]{2,}+$\";","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_FIRST_CHARACTER_REGEX","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"            + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX + DOMAIN_SUFFIX_REGEX;","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weixue123":10,"-":60}},{"path":"src/main/java/chim/model/customer/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":" * Represents a Customer\u0027s name in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weixue123":3,"-":56}},{"path":"src/main/java/chim/model/customer/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":" * Represents a Customer\u0027s phone number in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weixue123":3,"-":50}},{"path":"src/main/java/chim/model/customer/UniqueCustomerList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"laurenlhy"},"content":"import java.util.List;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.exceptions.CustomerNotFoundException;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":" * A list of customers that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":" * A customer is considered unique by comparing using {@code Customer#isSameCustomer(Customer)}. As such, adding and","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":" * updating of customer uses Customer#isSameCustomer(Customer) for equality so as to ensure that the customer being","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":" * added or updated is unique in terms of identity in the UniqueCustomerList. However, the removal of a customer uses","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":" * Customer#equals(Object) so as to ensure that the customer with exactly the same fields will be removed.","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":" *","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":" *","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":" * @see Customer#isSameCustomer(Customer)","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"public class UniqueCustomerList implements Iterable\u003cCustomer\u003e {","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"    private final ObservableList\u003cCustomer\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"    private final ObservableList\u003cCustomer\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"     * Returns true if the list contains an equivalent customer as the given argument.","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"    public boolean contains(Customer toCheck) {","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"        return internalList.stream().anyMatch(toCheck::isSameCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"     * Returns true if the list contains a customer with equivalent phone as the given argument.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"    public boolean hasPhone(Phone toCheck) {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"        return internalList.stream().anyMatch(customer -\u003e customer.getPhone().equals(toCheck));","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"     * Returns first {@code Customer} instance with equivalent phone as the given argument or null if it does not exist.","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"    public Customer getCustomerWithPhone(Phone phone) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"        return internalList.stream().filter(customer -\u003e customer.getPhone().equals(phone)).findFirst().orElse(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"     * Returns first {@code Customer} instance with equivalent id as the given argument or null if it does not exist.","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"    public Customer getCustomerWithId(CustomerId id) {","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"        return internalList.stream().filter(customer -\u003e customer.getId().equals(id)).findFirst().orElse(null);","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"laurenlhy"},"content":"     * Adds a customer to the list.","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"laurenlhy"},"content":"     * The customer must not already exist in the list.","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"laurenlhy"},"content":"    public void add(Customer toAdd) {","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"laurenlhy"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"laurenlhy"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"laurenlhy"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"laurenlhy"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"laurenlhy"},"content":"     * Replaces the customer {@code target} in the list with {@code editedCustomer}.","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"laurenlhy"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"laurenlhy"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as another existing customer in the list.","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"laurenlhy"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"laurenlhy"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"laurenlhy"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"laurenlhy"},"content":"            throw new CustomerNotFoundException();","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"laurenlhy"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"laurenlhy"},"content":"        if (!target.isSameCustomer(editedCustomer) \u0026\u0026 contains(editedCustomer)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"laurenlhy"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"laurenlhy"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"laurenlhy"},"content":"        internalList.set(index, editedCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"laurenlhy"},"content":"     * Removes the equivalent customer from the list.","lastModifiedDate":"2021-03-07"},{"lineNumber":97,"author":{"gitId":"laurenlhy"},"content":"     * The customer must exist in the list.","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"laurenlhy"},"content":"    public void delete(Customer toDelete) {","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"laurenlhy"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"laurenlhy"},"content":"        if (!internalList.remove(toDelete)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"laurenlhy"},"content":"            throw new CustomerNotFoundException();","lastModifiedDate":"2021-03-07"},{"lineNumber":103,"author":{"gitId":"laurenlhy"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomers(UniqueCustomerList replacement) {","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"laurenlhy"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"laurenlhy"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":110,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":112,"author":{"gitId":"laurenlhy"},"content":"     * Replaces the contents of this list with {@code customers}.","lastModifiedDate":"2021-03-07"},{"lineNumber":113,"author":{"gitId":"laurenlhy"},"content":"     * {@code customers} must not contain duplicate customers.","lastModifiedDate":"2021-03-07"},{"lineNumber":114,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":115,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2021-03-07"},{"lineNumber":116,"author":{"gitId":"laurenlhy"},"content":"        requireAllNonNull(customers);","lastModifiedDate":"2021-03-07"},{"lineNumber":117,"author":{"gitId":"laurenlhy"},"content":"        if (!customersAreUnique(customers)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":118,"author":{"gitId":"laurenlhy"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2021-03-07"},{"lineNumber":119,"author":{"gitId":"laurenlhy"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":120,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":121,"author":{"gitId":"laurenlhy"},"content":"        internalList.setAll(customers);","lastModifiedDate":"2021-03-07"},{"lineNumber":122,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":123,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":124,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":125,"author":{"gitId":"laurenlhy"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-07"},{"lineNumber":126,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"laurenlhy"},"content":"    public ObservableList\u003cCustomer\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":128,"author":{"gitId":"laurenlhy"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-07"},{"lineNumber":129,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":130,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":131,"author":{"gitId":"laurenlhy"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":132,"author":{"gitId":"laurenlhy"},"content":"    public Iterator\u003cCustomer\u003e iterator() {","lastModifiedDate":"2021-03-07"},{"lineNumber":133,"author":{"gitId":"laurenlhy"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-07"},{"lineNumber":134,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":135,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":136,"author":{"gitId":"laurenlhy"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":137,"author":{"gitId":"laurenlhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":138,"author":{"gitId":"laurenlhy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"laurenlhy"},"content":"                || (other instanceof UniqueCustomerList // instanceof handles nulls","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"laurenlhy"},"content":"                        \u0026\u0026 internalList.equals(((UniqueCustomerList) other).internalList));","lastModifiedDate":"2021-03-07"},{"lineNumber":141,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":142,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":143,"author":{"gitId":"laurenlhy"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":144,"author":{"gitId":"laurenlhy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-07"},{"lineNumber":145,"author":{"gitId":"laurenlhy"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-07"},{"lineNumber":146,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":147,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":148,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":149,"author":{"gitId":"laurenlhy"},"content":"     * Returns true if {@code customers} contains only unique customers.","lastModifiedDate":"2021-03-07"},{"lineNumber":150,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":151,"author":{"gitId":"laurenlhy"},"content":"    private boolean customersAreUnique(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2021-03-07"},{"lineNumber":152,"author":{"gitId":"laurenlhy"},"content":"        for (int i \u003d 0; i \u003c customers.size() - 1; i++) {","lastModifiedDate":"2021-03-07"},{"lineNumber":153,"author":{"gitId":"laurenlhy"},"content":"            for (int j \u003d i + 1; j \u003c customers.size(); j++) {","lastModifiedDate":"2021-03-07"},{"lineNumber":154,"author":{"gitId":"laurenlhy"},"content":"                if (customers.get(i).isSameCustomer(customers.get(j))) {","lastModifiedDate":"2021-03-07"},{"lineNumber":155,"author":{"gitId":"laurenlhy"},"content":"                    return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":156,"author":{"gitId":"laurenlhy"},"content":"                }","lastModifiedDate":"2021-03-07"},{"lineNumber":157,"author":{"gitId":"laurenlhy"},"content":"            }","lastModifiedDate":"2021-03-07"},{"lineNumber":158,"author":{"gitId":"laurenlhy"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":159,"author":{"gitId":"laurenlhy"},"content":"        return true;","lastModifiedDate":"2021-03-07"},{"lineNumber":160,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":161,"author":{"gitId":"laurenlhy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"AhQuanz":8,"laurenlhy":133,"weixue123":4,"aaronsms":16}},{"path":"src/main/java/chim/model/customer/exceptions/CustomerNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer.exceptions;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":" * Signals that the operation is unable to find the specified customer.","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":"public class CustomerNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"laurenlhy":5,"weixue123":1}},{"path":"src/main/java/chim/model/customer/exceptions/DuplicateCustomerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer.exceptions;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":" * Signals that the operation will result in duplicate Customers (Customers are considered duplicates if","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":" * they have the same identity).","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"laurenlhy"},"content":"public class DuplicateCustomerException extends RuntimeException {","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"    public DuplicateCustomerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"        super(\"Operation would result in duplicate customers\");","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"laurenlhy":2,"weixue123":4,"-":5}},{"path":"src/main/java/chim/model/customer/predicates/CustomerAddressPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer.predicates;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.PredicateUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.SingleFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":" * Predicate for filtering customers by their addresses.","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"public class CustomerAddressPredicate extends SingleFieldPredicate\u003cCustomer\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Address keywords must not be empty.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    public CustomerAddressPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"        super(keywords);","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    public double getSimilarityScore(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"        return PredicateUtil.getWordSimilarityScoreIgnoreCase(customer.getAddress().value, getKeywords());","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"        return PredicateUtil.containsPrefixWordIgnoreCase(customer.getAddress().value, getKeywords());","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"        return (other instanceof CustomerAddressPredicate) \u0026\u0026 super.equals(other); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"address containing keyword(s) of %s\",","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"                super.toString());","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"AhQuanz":6,"weixue123":9,"daniellau88":26}},{"path":"src/main/java/chim/model/customer/predicates/CustomerEmailPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer.predicates;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.StringUtil.replaceEmailSpecialCharacters;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.PredicateUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.SingleFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":" * Predicate for filtering customers by their emails.","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"public class CustomerEmailPredicate extends SingleFieldPredicate\u003cCustomer\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Email keywords must not be empty.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    public CustomerEmailPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"        super(keywords);","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    public double getSimilarityScore(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"        return PredicateUtil.getWordSimilarityScoreIgnoreCase(","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"            replaceEmailSpecialCharacters(customer.getEmail().value),","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"            getKeywords()","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"        return PredicateUtil.containsPrefixWordIgnoreCase(","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"            replaceEmailSpecialCharacters(customer.getEmail().value),","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"            getKeywords()","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        return (other instanceof CustomerEmailPredicate) \u0026\u0026 super.equals(other); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"email starting with %s\",","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"                super.toString());","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"AhQuanz":5,"weixue123":10,"daniellau88":33}},{"path":"src/main/java/chim/model/customer/predicates/CustomerNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer.predicates;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.PredicateUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.SingleFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":" * Predicate for filtering customers by their names.","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"public class CustomerNamePredicate extends SingleFieldPredicate\u003cCustomer\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Name keywords must not be empty.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    public CustomerNamePredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"        super(keywords);","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    public double getSimilarityScore(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"        return PredicateUtil.getWordSimilarityScoreIgnoreCase(customer.getName().fullName, getKeywords());","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"        return PredicateUtil.containsPrefixWordIgnoreCase(customer.getName().fullName, getKeywords());","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"        return (other instanceof CustomerNamePredicate) \u0026\u0026 super.equals(other); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"name containing %s\",","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"                super.toString());","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"AhQuanz":5,"weixue123":9,"daniellau88":26}},{"path":"src/main/java/chim/model/customer/predicates/CustomerPhonePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer.predicates;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.PredicateUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.SingleFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":" * Predicate for filtering customers by their phone numbers.","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"public class CustomerPhonePredicate extends SingleFieldPredicate\u003cCustomer\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Phone number keywords must be numerical and not empty.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    public CustomerPhonePredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"        super(keywords);","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"     * Checks whether a given list of phone keywords is valid.","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"    public static boolean isValidKeywords(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"        return SingleFieldPredicate.isValidKeywords(keywords)","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 keywords.stream().allMatch(word -\u003e word.matches(\"\\\\d+\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    public double getSimilarityScore(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"        return PredicateUtil.getWordSimilarityScoreIgnoreCase(customer.getPhone().value, getKeywords());","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"        return PredicateUtil.containsPrefixWordIgnoreCase(customer.getPhone().value, getKeywords());","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        return (other instanceof CustomerPhonePredicate) \u0026\u0026 super.equals(other); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"phone starting with %s\",","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"                super.toString());","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"AhQuanz":5,"weixue123":17,"daniellau88":26}},{"path":"src/main/java/chim/model/order/CompletedDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.AbstractDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-04"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":" * Represents an Order\u0027s completed date in the Cheese Inventory Management System (CHIM).","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":" * Guarantees: immutable","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"public class CompletedDate extends AbstractDate {","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"     * Constructs a {@code CompletedDate}.","lastModifiedDate":"2021-03-04"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"     * @param date A valid completed date.","lastModifiedDate":"2021-03-04"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"    public CompletedDate(String date) {","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"        super(date);","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"        checkArgument(isValidCompletedDate(this.value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"    public boolean isValidCompletedDate(LocalDateTime value) {","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"        return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"weixue123":3,"daniellau88":24}},{"path":"src/main/java/chim/model/order/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.DateUtil.isBeforeToday;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-04"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":" * Represents a Order in the Cheese Inventory Management System (CHIM).","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":" * Guarantees: details are present and not null, field values are validated.","lastModifiedDate":"2021-03-04"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-04"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"public class Order {","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    // Identity fields","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    // Primary key for Order","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"    private final OrderId orderId;","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"    private final CheeseType orderCheeseType;","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    private final Quantity quantity;","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    private final CustomerId customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    // Data fields","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    private final OrderDate orderDate;","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    private final Optional\u003cCompletedDate\u003e completedDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"    // Set of cheese IDs for this order","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    private final Set\u003cCheeseId\u003e cheeses \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"    public Order(CheeseType cheeseType, Quantity quantity, OrderDate orderDate,","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"                 CompletedDate completedDate, CustomerId customerId) {","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        this(cheeseType, quantity, orderDate, completedDate, new HashSet\u003c\u003e(), customerId);","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"     * Initializes an incomplete order.","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"     * Completed date is set to null to indicate the order is incomplete.","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"    public Order(CheeseType cheeseType, Quantity quantity, OrderDate orderDate, CustomerId customerId) {","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"        this(cheeseType, quantity, orderDate, null, new HashSet\u003c\u003e(),","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"                OrderId.getNextId(), customerId);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"     * Initializes a complete order with date of completion and the IDs of cheeses used to fulfil the order.","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"    public Order(CheeseType cheeseType, Quantity quantity, OrderDate orderDate, CompletedDate completedDate,","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"                 Set\u003cCheeseId\u003e cheeses, CustomerId customerId) {","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"        this(cheeseType, quantity, orderDate, completedDate, cheeses, OrderId.getNextId(), customerId);","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"    public Order(CheeseType cheeseType, Quantity quantity, OrderDate orderDate, CompletedDate completedDate,","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"                 OrderId orderId, CustomerId customerId) {","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"        this(cheeseType, quantity, orderDate, completedDate, new HashSet\u003c\u003e(), orderId, customerId);","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"     * Initializes a complete order with existing order ,","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"     * date of completion and the IDs of cheeses used to fulfil the order.","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":"    public Order(Order orderToUpdate, CompletedDate completedDate, Set\u003cCheeseId\u003e cheeses) {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"        this(orderToUpdate.orderCheeseType, orderToUpdate.quantity,","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":"                orderToUpdate.orderDate, completedDate, cheeses,","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"AhQuanz"},"content":"                orderToUpdate.orderId, orderToUpdate.customerId);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"    public Order(CheeseType cheeseType, Quantity quantity, OrderDate orderDate, CompletedDate completedDate,","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"                 Set\u003cCheeseId\u003e cheeses, OrderId orderId, CustomerId customerId) {","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"        requireAllNonNull(cheeseType, quantity, orderDate, cheeses, orderId, customerId);","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"        checkOrderArguments(cheeseType, quantity, orderDate, completedDate, cheeses, orderId, customerId);","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"        this.orderCheeseType \u003d cheeseType;","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"        this.orderDate \u003d orderDate;","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"        this.completedDate \u003d Optional.ofNullable(completedDate);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"        this.orderId \u003d orderId;","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"        this.cheeses.addAll(cheeses);","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"    public CheeseType getCheeseType() {","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"daniellau88"},"content":"        return orderCheeseType;","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"daniellau88"},"content":"    public Quantity getQuantity() {","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"daniellau88"},"content":"        return quantity;","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"daniellau88"},"content":"    public OrderDate getOrderDate() {","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"        return orderDate;","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"    public Optional\u003cCompletedDate\u003e getCompletedDate() {","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"        return completedDate;","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"    public boolean isComplete() {","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"        // If an order is incomplete, the date must have been set to empty","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"daniellau88"},"content":"        return completedDate.isPresent();","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"daniellau88"},"content":"    public OrderId getOrderId() {","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"        return orderId;","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"daniellau88"},"content":"    public CustomerId getCustomerId() {","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"        return customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":119,"author":{"gitId":"AhQuanz"},"content":"     * Returns an immutable Cheese Ids set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"daniellau88"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"daniellau88"},"content":"    public Set\u003cCheeseId\u003e getCheeses() {","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"daniellau88"},"content":"        return Collections.unmodifiableSet(cheeses);","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"daniellau88"},"content":"     * Checks whether the given parameters are valid for an order","lastModifiedDate":"2021-03-22"},{"lineNumber":128,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":129,"author":{"gitId":"daniellau88"},"content":"    public static void checkOrderArguments(CheeseType cheeseType, Quantity quantity, OrderDate orderDate,","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"daniellau88"},"content":"                                           CompletedDate completedDate, Set\u003cCheeseId\u003e cheeses, OrderId orderId,","lastModifiedDate":"2021-03-22"},{"lineNumber":131,"author":{"gitId":"daniellau88"},"content":"                                           CustomerId customerId) {","lastModifiedDate":"2021-03-22"},{"lineNumber":132,"author":{"gitId":"daniellau88"},"content":"        checkArgument(isBeforeToday(orderDate), \"The order date cannot be after today.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":133,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":134,"author":{"gitId":"daniellau88"},"content":"        if (completedDate \u003d\u003d null) {","lastModifiedDate":"2021-03-22"},{"lineNumber":135,"author":{"gitId":"daniellau88"},"content":"            // Checks for incomplete orders","lastModifiedDate":"2021-03-22"},{"lineNumber":136,"author":{"gitId":"daniellau88"},"content":"            checkArgument(cheeses.size() \u003d\u003d 0, \"The cheese set for an incomplete order should be empty.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":137,"author":{"gitId":"daniellau88"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":138,"author":{"gitId":"daniellau88"},"content":"            // Checks for completed orders","lastModifiedDate":"2021-03-22"},{"lineNumber":139,"author":{"gitId":"daniellau88"},"content":"            checkArgument(completedDate.isAfterOrEquals(orderDate), \"The completed date of an order should be after the\"","lastModifiedDate":"2021-04-10"},{"lineNumber":140,"author":{"gitId":"daniellau88"},"content":"                + \" order date.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":141,"author":{"gitId":"daniellau88"},"content":"            checkArgument(cheeses.size() \u003d\u003d quantity.value, \"The number of cheeses in the order does not\"","lastModifiedDate":"2021-03-22"},{"lineNumber":142,"author":{"gitId":"daniellau88"},"content":"                + \" match the specified quantity.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":143,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":144,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":145,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"daniellau88"},"content":"     * Returns true if both orders have the same name.","lastModifiedDate":"2021-03-04"},{"lineNumber":148,"author":{"gitId":"daniellau88"},"content":"     * This defines a weaker notion of equality between two orders.","lastModifiedDate":"2021-03-04"},{"lineNumber":149,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":150,"author":{"gitId":"daniellau88"},"content":"    public boolean isSameOrder(Order otherOrder) {","lastModifiedDate":"2021-03-02"},{"lineNumber":151,"author":{"gitId":"daniellau88"},"content":"        if (otherOrder \u003d\u003d this) {","lastModifiedDate":"2021-03-02"},{"lineNumber":152,"author":{"gitId":"daniellau88"},"content":"            return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":153,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":154,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":155,"author":{"gitId":"daniellau88"},"content":"        return otherOrder !\u003d null","lastModifiedDate":"2021-03-08"},{"lineNumber":156,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 otherOrder.orderId.equals(orderId)","lastModifiedDate":"2021-03-08"},{"lineNumber":157,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 otherOrder.customerId.equals(customerId);","lastModifiedDate":"2021-03-08"},{"lineNumber":158,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":159,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":160,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-04"},{"lineNumber":161,"author":{"gitId":"daniellau88"},"content":"     * Returns true if both orders have the same identity and data fields.","lastModifiedDate":"2021-03-04"},{"lineNumber":162,"author":{"gitId":"daniellau88"},"content":"     * This defines a stronger notion of equality between two orders.","lastModifiedDate":"2021-03-04"},{"lineNumber":163,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-04"},{"lineNumber":164,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":165,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":166,"author":{"gitId":"daniellau88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-02"},{"lineNumber":167,"author":{"gitId":"daniellau88"},"content":"            return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":168,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":169,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":170,"author":{"gitId":"daniellau88"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":171,"author":{"gitId":"daniellau88"},"content":"            return false;","lastModifiedDate":"2021-03-02"},{"lineNumber":172,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":173,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":174,"author":{"gitId":"daniellau88"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2021-03-02"},{"lineNumber":175,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"daniellau88"},"content":"        return otherOrder.getOrderId().equals(getOrderId())","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 otherOrder.getCustomerId().equals(getCustomerId())","lastModifiedDate":"2021-03-08"},{"lineNumber":178,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 otherOrder.getCheeseType().equals(getCheeseType())","lastModifiedDate":"2021-03-02"},{"lineNumber":179,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 otherOrder.getQuantity().equals(getQuantity())","lastModifiedDate":"2021-03-08"},{"lineNumber":180,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 otherOrder.getOrderDate().equals(getOrderDate())","lastModifiedDate":"2021-03-02"},{"lineNumber":181,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 otherOrder.getCompletedDate().equals(getCompletedDate())","lastModifiedDate":"2021-03-02"},{"lineNumber":182,"author":{"gitId":"daniellau88"},"content":"                \u0026\u0026 otherOrder.getCheeses().equals(getCheeses());","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":184,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":185,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":186,"author":{"gitId":"daniellau88"},"content":"    public String toString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":187,"author":{"gitId":"daniellau88"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-08"},{"lineNumber":188,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":189,"author":{"gitId":"AhQuanz"},"content":"        builder.append(\"Cheese Type: \")","lastModifiedDate":"2021-04-07"},{"lineNumber":190,"author":{"gitId":"daniellau88"},"content":"            .append(getCheeseType())","lastModifiedDate":"2021-03-08"},{"lineNumber":191,"author":{"gitId":"daniellau88"},"content":"            .append(\"; Quantity: \")","lastModifiedDate":"2021-03-08"},{"lineNumber":192,"author":{"gitId":"daniellau88"},"content":"            .append(getQuantity())","lastModifiedDate":"2021-03-08"},{"lineNumber":193,"author":{"gitId":"daniellau88"},"content":"            .append(\"; Order Date: \")","lastModifiedDate":"2021-03-08"},{"lineNumber":194,"author":{"gitId":"daniellau88"},"content":"            .append(getOrderDate())","lastModifiedDate":"2021-03-08"},{"lineNumber":195,"author":{"gitId":"daniellau88"},"content":"            .append(\"; Completed Date: \")","lastModifiedDate":"2021-03-08"},{"lineNumber":196,"author":{"gitId":"AhQuanz"},"content":"            .append(getCompletedDate().map(x -\u003e x.toString()).orElse(\"-\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":197,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":198,"author":{"gitId":"daniellau88"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":199,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":200,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"AhQuanz":16,"weixue123":7,"daniellau88":177}},{"path":"src/main/java/chim/model/order/OrderContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.StringUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":" * Tests that a {@code Order}\u0027s {@code Type} matches any of the keywords given.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"public class OrderContainsKeywordsPredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"    public OrderContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(order.getOrderId().toString(), keyword));","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"                || (other instanceof OrderContainsKeywordsPredicate","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"                \u0026\u0026 keywords.equals(((OrderContainsKeywordsPredicate) other).keywords));","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"AhQuanz":2,"laurenlhy":27,"weixue123":2}},{"path":"src/main/java/chim/model/order/OrderDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.AbstractDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-04"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":" * Represents an Order\u0027s order date in the Cheese Inventory Management System (CHIM).","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":" * Guarantees: immutable","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"public class OrderDate extends AbstractDate {","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"     * Constructs a {@code OrderDate} with current date time.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"    private OrderDate() {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"        super();","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"     * Constructs a {@code OrderDate}.","lastModifiedDate":"2021-03-04"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"     * @param date A valid order date.","lastModifiedDate":"2021-03-04"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    public OrderDate(String date) {","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        super(date);","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"        checkArgument(isValidOrderDate(this.value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    public boolean isValidOrderDate(LocalDateTime value) {","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"        return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"    public static OrderDate now() {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"        return new OrderDate();","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"weixue123":3,"daniellau88":25,"aaronsms":11}},{"path":"src/main/java/chim/model/order/OrderId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.AbstractId;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"public class OrderId extends AbstractId\u003cOrderId\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"    private static int nextId \u003d 1;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"     * Constructs a {@code OrderId}.","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"     * @param id A valid id.","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"    protected OrderId(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"        super(id);","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"    public static OrderId getNextId() {","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"        return getNextId(nextId);","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"    public static OrderId getNextId(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"        OrderId result \u003d new OrderId(id);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"        updateNextId(result);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"        return result;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    private static void updateNextId(OrderId otherId) {","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        if (nextId \u003c\u003d otherId.value) {","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"            nextId \u003d otherId.value + 1;","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"    protected static int getNextIdValue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"        return nextId;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"weixue123":2,"daniellau88":22,"aaronsms":12}},{"path":"src/main/java/chim/model/order/Quantity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":" * Represents an Order\u0027s quantity in the Cheese Inventory Management System (CHIM).","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidQuantity(int)}","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-04"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"public class Quantity {","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Quantity must be a positive integer number.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"    public final int value;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"     * Constructs an {@code Quantity}.","lastModifiedDate":"2021-03-04"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"     * @param quantity A valid quantity.","lastModifiedDate":"2021-03-04"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"    public Quantity(int quantity) {","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"        checkArgument(isValidQuantity(quantity), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"        value \u003d quantity;","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"     * Returns if a given integer is a valid quantity.","lastModifiedDate":"2021-03-04"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    public static boolean isValidQuantity(int quantity) {","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        return quantity \u003e 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"    public int getQuantity() {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"        return value;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"    public boolean isSameQuantity(int quantity) {","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"        return this.value \u003d\u003d quantity;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"    public String toString() {","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"        return Integer.toString(value);","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"            || (other instanceof Quantity // instanceof handles nulls","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"            \u0026\u0026 value \u003d\u003d ((Quantity) other).value); // state check","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"AhQuanz":8,"weixue123":2,"daniellau88":40}},{"path":"src/main/java/chim/model/order/UniqueOrderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.order.exceptions.DuplicateOrderException;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.order.exceptions.OrderNotFoundException;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":" * A list of Order that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":" * A Order is considered unique by comparing using {@code Order#isSameOrder(Order)}. As such, adding and updating of","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":" * orders uses Order#isSameOrder(Order) for equality so as to ensure that the Order being added or updated is","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":" * unique in terms of identity in the UniqueOrderList. However, the removal of a Order uses Order#equals(Object) so","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":" * as to ensure that the Order with exactly the same fields will be removed.","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":" *","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":" *","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":" * @see Order#isSameOrder(Order)","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"public class UniqueOrderList implements Iterable\u003cOrder\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"    private final ObservableList\u003cOrder\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"    private final ObservableList\u003cOrder\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"     * Returns true if the list contains an equivalent order as the given argument.","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"    public boolean contains(Order toCheck) {","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"        return internalList.stream().anyMatch(toCheck::isSameOrder);","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"     * Returns first {@code Order} instance with equivalent orderId as the given argument or null if it does not exist.","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"    public Order getOrderWithId(OrderId orderId) {","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(orderId);","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"        return internalList.stream().filter(order -\u003e order.getOrderId().equals(orderId)).findFirst().orElse(null);","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"     * Adds a Order to the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"     * The order must not already exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"    public void add(Order toAdd) {","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"     * Replaces the Order {@code target} in the list with {@code editedOrder}.","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"     * The Order identity of {@code editedOrder} must not be the same as another existing Order in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":"        if (!target.isSameOrder(editedOrder) \u0026\u0026 contains(editedOrder)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"AhQuanz"},"content":"        internalList.set(index, editedOrder);","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"     * Removes the equivalent order from the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"     * The order must exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"laurenlhy"},"content":"    public void delete(Order toDelete) {","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"laurenlhy"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"laurenlhy"},"content":"        if (!internalList.remove(toDelete)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"AhQuanz"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"AhQuanz"},"content":"     * Replaces the contents of this list with {@code orders}.","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"AhQuanz"},"content":"     * {@code orders} must not contain duplicate orders.","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"AhQuanz"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"AhQuanz"},"content":"        requireAllNonNull(orders);","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"AhQuanz"},"content":"        if (!ordersAreUnique(orders)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"AhQuanz"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"AhQuanz"},"content":"        internalList.setAll(orders);","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"AhQuanz"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"AhQuanz"},"content":"    public ObservableList\u003cOrder\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"AhQuanz"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"AhQuanz"},"content":"    public Iterator\u003cOrder\u003e iterator() {","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"AhQuanz"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"AhQuanz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"AhQuanz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"AhQuanz"},"content":"                || (other instanceof UniqueOrderList // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"AhQuanz"},"content":"                \u0026\u0026 internalList.equals(((UniqueOrderList) other).internalList));","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":122,"author":{"gitId":"AhQuanz"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"AhQuanz"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":125,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"daniellau88"},"content":"     * Returns true if {@code orders} contains only unique orders.","lastModifiedDate":"2021-03-08"},{"lineNumber":128,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":129,"author":{"gitId":"AhQuanz"},"content":"    private boolean ordersAreUnique(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"AhQuanz"},"content":"        for (int i \u003d 0; i \u003c orders.size() - 1; i++) {","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"AhQuanz"},"content":"            for (int j \u003d i + 1; j \u003c orders.size(); j++) {","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"AhQuanz"},"content":"                if (orders.get(i).isSameOrder(orders.get(j))) {","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"AhQuanz"},"content":"                    return false;","lastModifiedDate":"2021-03-08"},{"lineNumber":134,"author":{"gitId":"AhQuanz"},"content":"                }","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"AhQuanz"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"AhQuanz"},"content":"        return true;","lastModifiedDate":"2021-03-08"},{"lineNumber":138,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"AhQuanz"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"AhQuanz":117,"laurenlhy":3,"weixue123":4,"daniellau88":15}},{"path":"src/main/java/chim/model/order/exceptions/DuplicateOrderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order.exceptions;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":" * Signals that the operation will result in duplicate orders (Orders are considered duplicates if they have the same","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":" * identity).","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"public class DuplicateOrderException extends RuntimeException {","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"    public DuplicateOrderException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"        super(\"Operation would result in duplicate orders\");","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"AhQuanz":10,"weixue123":1}},{"path":"src/main/java/chim/model/order/exceptions/OrderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order.exceptions;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":" * Signals that the operation is unable to find the specified order.","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"public class OrderNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"AhQuanz":5,"weixue123":1}},{"path":"src/main/java/chim/model/order/predicates/OrderCheeseTypePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order.predicates;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.PredicateUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.SingleFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":" * Predicate for filtering orders by the cheese types assigned to them.","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"public class OrderCheeseTypePredicate extends SingleFieldPredicate\u003cOrder\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Cheese type keywords must not be empty.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"    public OrderCheeseTypePredicate(List\u003cString\u003e keywordsList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"        super(keywordsList);","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    public double getSimilarityScore(Order order) {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"        return PredicateUtil.getWordSimilarityScoreIgnoreCase(order.getCheeseType().value, getKeywords());","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"        return PredicateUtil.containsPrefixWordIgnoreCase(order.getCheeseType().value, getKeywords());","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"        return (other instanceof OrderCheeseTypePredicate) \u0026\u0026 super.equals(other); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"cheese type starting with %s\",","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"                super.toString());","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"AhQuanz":5,"weixue123":11,"daniellau88":24}},{"path":"src/main/java/chim/model/order/predicates/OrderCompletionStatusPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order.predicates;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":" * Predicate for filtering orders by completion status.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"public class OrderCompletionStatusPredicate extends FieldPredicate\u003cOrder\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Input order status must be \u0027complete\u0027 or \u0027incomplete\u0027.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"    private enum CompletionStatus {","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"        COMPLETE,","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"        INCOMPLETE","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"    private final boolean isOrderComplete;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"     * Creates a {@code OrderCompletionStatusPredicate} to filter list of orders.","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"     * If input {@code isOrderComplete} is \u0027complete\u0027, only completed will be left in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"     * If input {@code isOrderComplete} is \u0027incomplete\u0027, only uncomplete orders will be left in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"    public OrderCompletionStatusPredicate(String status) {","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"        super();","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"        assert isValidStatus(status);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"        this.isOrderComplete \u003d status.equalsIgnoreCase(CompletionStatus.COMPLETE.toString());","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"     * Returns if the input order completion status {@code String} is valid.","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"    public static boolean isValidStatus(String status) {","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"        return status.equalsIgnoreCase(CompletionStatus.COMPLETE.toString())","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"                || status.equalsIgnoreCase(CompletionStatus.INCOMPLETE.toString());","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"        return isOrderComplete \u003d\u003d order.isComplete();","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"                || (other instanceof OrderCompletionStatusPredicate","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 (isOrderComplete \u003d\u003d ((OrderCompletionStatusPredicate) other).isOrderComplete));","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"    public double getSimilarityScore(Order order) {","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"        return 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"        return isOrderComplete ? 1 : 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"        return String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"                \"%s order status\", (isOrderComplete ? \"completed\" : \"incompleted\")","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"        );","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"AhQuanz":6,"weixue123":61}},{"path":"src/main/java/chim/model/order/predicates/OrderIdPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order.predicates;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.PredicateUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.SingleFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"public class OrderIdPredicate extends SingleFieldPredicate\u003cOrder\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"    public OrderIdPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"        super(keywords);","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    public double getSimilarityScore(Order order) {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"        return -order.getOrderId().value;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"        return PredicateUtil.matchIntegerId(order.getOrderId(), getKeywords());","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"        return (other instanceof OrderIdPredicate) \u0026\u0026 super.equals(other); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"order id of %s\",","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"                super.toString());","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"AhQuanz":5,"weixue123":4,"daniellau88":26}},{"path":"src/main/java/chim/model/order/predicates/OrderNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order.predicates;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.PredicateUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.SingleFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":" * Predicate for filtering orders by their customers\u0027 names.","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"public class OrderNamePredicate extends SingleFieldPredicate\u003cOrder\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Customer name keywords must not be empty.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"    private final List\u003cCustomer\u003e customerList;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"     * Creates a predicate to filter orders by the orders\u0027 customers\u0027 names.","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"     * The customer list is needed here to access the orders\u0027 customers\u0027 information.","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"    public OrderNamePredicate(List\u003cString\u003e keywords, List\u003cCustomer\u003e customerList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"        super(keywords);","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"        this.customerList \u003d customerList;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    public double getSimilarityScore(Order order) {","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"        String name \u003d getNameByOrder(order);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"        return PredicateUtil.getWordSimilarityScoreIgnoreCase(name, getKeywords());","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"        String name \u003d getNameByOrder(order);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"        return PredicateUtil.containsPrefixWordIgnoreCase(name, getKeywords());","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"        return (other instanceof SingleFieldPredicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 super.equals(other)","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 this.customerList.equals(((OrderNamePredicate) other).customerList);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"    private String getNameByOrder(Order order) {","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"        Customer matchingCustomer \u003d customerList","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"                .stream()","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"                .filter(customer -\u003e customer.getId().equals(order.getCustomerId()))","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"                .findAny()","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"                .orElse(null);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"        return matchingCustomer !\u003d null ? matchingCustomer.getName().toString() : null;","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"customer\u0027s name containing  %s\",","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"                super.toString());","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"AhQuanz":5,"weixue123":60}},{"path":"src/main/java/chim/model/order/predicates/OrderPhonePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order.predicates;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.PredicateUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.SingleFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":" * Predicate for filtering orders by their customers\u0027 phone numbers.","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"public class OrderPhonePredicate extends SingleFieldPredicate\u003cOrder\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Phone number keywords must be numerical and not empty.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"    private final List\u003cCustomer\u003e customerList;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"     * Creates a predicate to filter orders by the orders\u0027 customers\u0027 phone numbers.","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"     * The customer list is needed here to access the orders\u0027 customers\u0027 information.","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"    public OrderPhonePredicate(List\u003cString\u003e keywords, List\u003cCustomer\u003e customerList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"        super(keywords);","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"        this.customerList \u003d customerList;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"     * Checks whether a given list of phone keywords is valid.","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"    public static boolean isValidKeywords(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"        return SingleFieldPredicate.isValidKeywords(keywords)","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 keywords.stream().allMatch(word -\u003e word.matches(\"\\\\d+\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"    public double getSimilarityScore(Order order) {","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"        String phone \u003d getPhoneByOrder(order);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"        return PredicateUtil.getWordSimilarityScoreIgnoreCase(phone, getKeywords());","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"        String phone \u003d getPhoneByOrder(order);","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"        return PredicateUtil.containsPrefixWordIgnoreCase(phone, getKeywords());","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"        return (other instanceof SingleFieldPredicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 super.equals(other)","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 this.customerList.equals(((OrderPhonePredicate) other).customerList);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"    private String getPhoneByOrder(Order order) {","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"        Customer matchingCustomer \u003d customerList","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"                .stream()","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"                .filter(customer -\u003e customer.getId().equals(order.getCustomerId()))","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"                .findAny()","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"                .orElse(null);","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"        return matchingCustomer !\u003d null ? matchingCustomer.getPhone().toString() : null;","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"customer\u0027s phone starting with %s\",","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":"                super.toString());","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"AhQuanz":6,"weixue123":67}},{"path":"src/main/java/chim/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":" * Represents a Tag in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weixue123":3,"-":51}},{"path":"src/main/java/chim/model/util/FilteredSortedList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":" * Equivalent to an observable list that both sorts and filters","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":" * based on the given predicates and comparators","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":" * @param \u003cU\u003e model class","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"public class FilteredSortedList\u003cU\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"    final FilteredList\u003cU\u003e filteredList;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    final SortedList\u003cU\u003e sortedList;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"     * Creates a filtered and sorted list","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"     * @param list list to be sorted and filtered","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    public FilteredSortedList(ObservableList\u003cU\u003e list) {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"        filteredList \u003d new FilteredList\u003c\u003e(list);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"        sortedList \u003d new SortedList\u003c\u003e(filteredList);","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    public void setModelPredicate(FieldPredicate\u003c? super U\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"        filteredList.setPredicate(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        // Add to sort by natural order","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"        if (predicate.useDefaultOrdering()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"            sortedList.setComparator(null);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"            sortedList.setComparator(predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"    public ObservableList\u003cU\u003e getObservableList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"        return sortedList;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"            || (other instanceof FilteredSortedList // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"            \u0026\u0026 filteredList.equals(((FilteredSortedList) other).filteredList)","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"            \u0026\u0026 sortedList.equals(((FilteredSortedList) other).sortedList));","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"weixue123":2,"daniellau88":45}},{"path":"src/main/java/chim/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ExpiryDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ManufactureDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Address;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Email;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Name;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.order.CompletedDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":" * Contains utility methods for populating {@code Chim} with sample data.","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    public static final Customer[] SAMPLE_CUSTOMERS \u003d new Customer[] {","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"        new Customer(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"        new Customer(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"        new Customer(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"        new Customer(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"        new Customer(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"        new Customer(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"    public static final Cheese[] SAMPLE_CHEESES \u003d new Cheese[]{","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"        new Cheese(CheeseType.getCheeseType(\"Brie\"), new ManufactureDate(\"2021-03-10\"),","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"            new ExpiryDate(\"2022-04-10\")),","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"        new Cheese(CheeseType.getCheeseType(\"Gouda\"), new ManufactureDate(\"2021-03-10\"),","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"            new ExpiryDate(\"2022-05-10\")),","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"        new Cheese(CheeseType.getCheeseType(\"Parmesan\"), new ManufactureDate(\"2021-03-10\"),","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"            new ExpiryDate(\"2022-04-10\")),","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"        new Cheese(CheeseType.getCheeseType(\"Feta\"), new ManufactureDate(\"2020-03-10\"),","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"            new ExpiryDate(\"2025-04-10\"), CheeseId.getNextId(), true),","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"        new Cheese(CheeseType.getCheeseType(\"Feta\"), new ManufactureDate(\"2020-03-10\"),","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"            new ExpiryDate(\"2025-04-10\"), CheeseId.getNextId(), true),","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"    };","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"    public static final Order[] SAMPLE_ORDERS \u003d new Order[] {","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"        new Order(CheeseType.getCheeseType(\"Brie\"), new Quantity(2), new OrderDate(\"2021-03-24\"),","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"            null, CustomerId.getNextId(3)),","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"        new Order(CheeseType.getCheeseType(\"Gouda\"), new Quantity(5), new OrderDate(\"2021-03-25\"),","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"            null, CustomerId.getNextId(4)),","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"        new Order(CheeseType.getCheeseType(\"Feta\"), new Quantity(2), new OrderDate(\"2021-02-25\"),","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"            new CompletedDate(\"2021-03-06\"),","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"            Set.of(SAMPLE_CHEESES[3].getCheeseId(), SAMPLE_CHEESES[4].getCheeseId()),","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"            CustomerId.getNextId(1)),","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"    };","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"    public static Customer[] getSampleCustomers() {","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"        return SAMPLE_CUSTOMERS;","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"    public static Order[] getSampleOrders() {","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"        return SAMPLE_ORDERS;","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"    public static Cheese[] getSampleCheeses() {","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"        return SAMPLE_CHEESES;","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"weixue123"},"content":"    public static ReadOnlyChim getSampleChim() {","lastModifiedDate":"2021-04-08"},{"lineNumber":89,"author":{"gitId":"weixue123"},"content":"        Chim sampleChim \u003d new Chim();","lastModifiedDate":"2021-04-08"},{"lineNumber":90,"author":{"gitId":"laurenlhy"},"content":"        for (Customer sampleCustomer : getSampleCustomers()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"weixue123"},"content":"            sampleChim.addCustomer(sampleCustomer);","lastModifiedDate":"2021-04-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"daniellau88"},"content":"        for (Order sampleOrder : getSampleOrders()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"weixue123"},"content":"            sampleChim.addOrder(sampleOrder);","lastModifiedDate":"2021-04-08"},{"lineNumber":95,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"        for (Cheese sampleCheese : getSampleCheeses()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"weixue123"},"content":"            sampleChim.addCheese(sampleCheese);","lastModifiedDate":"2021-04-08"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"weixue123"},"content":"        sampleChim.checkChim();","lastModifiedDate":"2021-04-08"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"        return sampleChim;","lastModifiedDate":"2021-04-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"laurenlhy":7,"weixue123":27,"daniellau88":41,"-":36}},{"path":"src/main/java/chim/model/util/predicate/CompositeFieldPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.util.predicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":" * Predicate which contains multiple predicates for fields.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":" * To be used for filtering and sorting data by multiple parameters.","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":" * Guarantees: Immutable","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"public class CompositeFieldPredicate\u003cU\u003e extends FieldPredicate\u003cU\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"    private final Set\u003cFieldPredicate\u003cU\u003e\u003e fieldPredicateSet;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"     * Initialize composite predicate with a set of predicates.","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    public CompositeFieldPredicate(Set\u003cFieldPredicate\u003cU\u003e\u003e fieldPredicateSet) {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"        assert (fieldPredicateSet.size() \u003e 0);","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"        this.fieldPredicateSet \u003d fieldPredicateSet;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    public CompositeFieldPredicate(FieldPredicate\u003cU\u003e fieldPredicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"        this(Set.of(fieldPredicate));","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"    public double getSimilarityScore(U u) {","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"        return fieldPredicateSet.stream().mapToDouble(x -\u003e x.getSimilarityScore(u)).sum();","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    public boolean test(U u) {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"        return fieldPredicateSet.stream().allMatch(x -\u003e x.test(u));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"            || (other instanceof CompositeFieldPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"            \u0026\u0026 fieldPredicateSet.equals(((CompositeFieldPredicate\u003c?\u003e) other).fieldPredicateSet)); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"        return fieldPredicateSet.size();","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"        return fieldPredicateSet.stream().map(FieldPredicate::toString).collect(Collectors.joining(\"\\nand \"));","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"AhQuanz":5,"weixue123":3,"daniellau88":45}},{"path":"src/main/java/chim/model/util/predicate/CompositeFieldPredicateBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.util.predicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":" * Builder class for {@code CompositeFieldPredicate}.","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"public class CompositeFieldPredicateBuilder\u003cU\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"    private final Set\u003cFieldPredicate\u003cU\u003e\u003e fieldPredicatesSet;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    public CompositeFieldPredicateBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"        this.fieldPredicatesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"     * Simple constructor to convert single predicates into a composite predicate.","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"    public CompositeFieldPredicateBuilder\u003cU\u003e compose(FieldPredicate\u003cU\u003e fieldPredicate) {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"        requireNonNull(fieldPredicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"        fieldPredicatesSet.add(fieldPredicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    public CompositeFieldPredicate\u003cU\u003e build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"        return new CompositeFieldPredicate\u003cU\u003e(Collections.unmodifiableSet(fieldPredicatesSet));","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"            || (other instanceof CompositeFieldPredicateBuilder // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"            \u0026\u0026 fieldPredicatesSet.equals(((CompositeFieldPredicateBuilder\u003c?\u003e) other).fieldPredicatesSet));","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"weixue123":8,"daniellau88":32}},{"path":"src/main/java/chim/model/util/predicate/FieldPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.util.predicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"public abstract class FieldPredicate\u003cU\u003e implements Predicate\u003cU\u003e, Comparator\u003cU\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"    private static final FieldPredicate\u003c?\u003e DEFAULT_PREDICATE \u003d new FieldPredicate\u003c\u003e() {","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"        public double getSimilarityScore(Object o) {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"            return 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"        public boolean test(Object o) {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"        public boolean useDefaultOrdering() {","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"            return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"        public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"            return \"\";","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    };","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    private static final FieldPredicate\u003c?\u003e EMPTY_PREDICATE \u003d new FieldPredicate\u003c\u003e() {","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"        public double getSimilarityScore(Object o) {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"            return 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        public boolean test(Object o) {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"            return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"        public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"            return \"\";","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"    };","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"    public static \u003cU\u003e FieldPredicate\u003cU\u003e getDefaultPredicate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"        FieldPredicate\u003cU\u003e u \u003d (FieldPredicate\u003cU\u003e) DEFAULT_PREDICATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"        return u;","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"    public static \u003cU\u003e FieldPredicate\u003cU\u003e getEmptyPredicate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"        FieldPredicate\u003cU\u003e u \u003d (FieldPredicate\u003cU\u003e) EMPTY_PREDICATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"        return u;","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"    public abstract double getSimilarityScore(U u);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"    public int compare(U u, U otherU) {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"        double score1 \u003d getSimilarityScore(u);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"        double score2 \u003d getSimilarityScore(otherU);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"        if (score1 \u003c score2) {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"            return 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"        } else if (score1 \u003e score2) {","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"            return -1;","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"        return 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"     * Use to set field predicate to use natural ordering","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"     * Needed as the sorted list\u0027s comparator has to be set to null","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"     * {@Code getSimilarityScore} will not be used if this is true","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"    public boolean useDefaultOrdering() {","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"        return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"AhQuanz":12,"weixue123":3,"daniellau88":71}},{"path":"src/main/java/chim/model/util/predicate/SingleFieldPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.util.predicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.ListUtil.compareListWithoutOrder;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static java.util.Objects.hash;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":" * Class to hold single predicate conditions for fields.","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"public abstract class SingleFieldPredicate\u003cU\u003e extends FieldPredicate\u003cU\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"    protected final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"     * Creates new {@code SingleFieldPredicate} object by given keywords.","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    public SingleFieldPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"        assert isValidKeywords(keywords);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    public List\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        return Collections.unmodifiableList(this.keywords);","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    public static boolean isValidKeywords(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"        return !keywords.isEmpty();","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"            || (other instanceof SingleFieldPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"            \u0026\u0026 compareListWithoutOrder(keywords, ((SingleFieldPredicate\u003c?\u003e) other).keywords)); // state check","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"    // Use keywords as hash for object","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"        return hash(keywords);","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"        return keywords.stream().collect(Collectors.joining(\" or \"));","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"AhQuanz":6,"weixue123":12,"daniellau88":34}},{"path":"src/main/java/chim/storage/ChimStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import java.io.IOException;","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import java.util.Optional;","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":" * Represents a storage for {@link Chim}.","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"public interface ChimStorage {","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"    Path getChimFilePath();","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"     * Returns CHIM data as a {@link ReadOnlyChim}.","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"    Optional\u003cReadOnlyChim\u003e readChim() throws DataConversionException, IOException;","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"     * @see #getChimFilePath()","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"    Optional\u003cReadOnlyChim\u003e readChim(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"     * Saves the given {@link ReadOnlyChim} to the storage.","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"     * @param chim cannot be null.","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"    void saveChim(ReadOnlyChim chim) throws IOException;","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"     * @see #saveChim(ReadOnlyChim)","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"    void saveChim(ReadOnlyChim chim, Path filePath) throws IOException;","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"weixue123":46}},{"path":"src/main/java/chim/storage/JsonAdaptedCheese.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ExpiryDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ManufactureDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":" * Jackson-friendly version of {@link Cheese}.","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"class JsonAdaptedCheese {","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Cheese\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    private final Integer cheeseId;","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    private final String cheeseType;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    private final String manufactureDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    private final String expiryDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"    private final boolean isAssigned;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"     * Constructs a {@code JsonAdaptedCheese} with the given cheese details.","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    public JsonAdaptedCheese(@JsonProperty(\"cheeseId\") Integer cheeseId,","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"                             @JsonProperty(\"cheeseType\") String cheeseType,","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"                             @JsonProperty(\"manufactureDate\") String manufactureDate,","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"                             @JsonProperty(\"expiryDate\") String expiryDate,","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"                             @JsonProperty(\"isAssigned\") boolean isAssigned) {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"        this.cheeseId \u003d cheeseId;","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"        this.cheeseType \u003d cheeseType;","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"        this.manufactureDate \u003d manufactureDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"        this.isAssigned \u003d isAssigned;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"     * Converts a given {@code Cheese} into this class for Jackson use.","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"    public JsonAdaptedCheese(Cheese source) {","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"        cheeseId \u003d source.getCheeseId().value;","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"        cheeseType \u003d source.getCheeseType().value;","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"        manufactureDate \u003d source.getManufactureDate().toJsonString();","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"        expiryDate \u003d source.getExpiryDate().map(ExpiryDate::toJsonString).orElse(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"        isAssigned \u003d source.isCheeseAssigned();","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"     * Converts this Jackson-friendly adapted cheese object into the model\u0027s {@code Cheese} object.","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted cheese.","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"    public Cheese toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"        if (!CheeseId.isValidId(cheeseId)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(CheeseId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"        final CheeseId modelId \u003d CheeseId.getNextId(cheeseId);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"        if (cheeseType \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"                CheeseType.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"        final CheeseType modelCheeseType \u003d CheeseType.getCheeseType(cheeseType);","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"        if (manufactureDate \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"                ManufactureDate.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"        if (!ManufactureDate.isValidDate(manufactureDate)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(ManufactureDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"        final ManufactureDate modelManufactureDate \u003d new ManufactureDate(manufactureDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"        final ExpiryDate modelExpiryDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"        if (expiryDate \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"            modelExpiryDate \u003d null;","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"        } else if (!ExpiryDate.isValidDate(expiryDate)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(ExpiryDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"            modelExpiryDate \u003d new ExpiryDate(expiryDate);","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"        return new Cheese(modelCheeseType, modelManufactureDate, modelExpiryDate, modelId, isAssigned);","lastModifiedDate":"2021-04-05"},{"lineNumber":90,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"AhQuanz":4,"weixue123":9,"daniellau88":72,"aaronsms":7}},{"path":"src/main/java/chim/storage/JsonAdaptedCustomer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Address;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Email;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Name;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":" * Jackson-friendly version of {@link Customer}.","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"class JsonAdaptedCustomer {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Customer\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    private final Integer customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"     * Constructs a {@code JsonAdaptedCustomer} with the given customer details.","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"    public JsonAdaptedCustomer(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                               @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"                               @JsonProperty(\"customerId\") Integer customerId,","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                               @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":"     * Converts a given {@code Customer} into this class for Jackson use.","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"    public JsonAdaptedCustomer(Customer source) {","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"        customerId \u003d source.getId().value;","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"     * Converts this Jackson-friendly adapted customer object into the model\u0027s {@code Customer} object.","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"laurenlhy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted customer.","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"laurenlhy"},"content":"    public Customer toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"laurenlhy"},"content":"        final List\u003cTag\u003e customerTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"laurenlhy"},"content":"            customerTags.add(tag.toModelType());","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"daniellau88"},"content":"        if (customerId \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, CustomerId.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"        if (!CustomerId.isValidId(customerId)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(CustomerId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"daniellau88"},"content":"        final CustomerId modelId \u003d CustomerId.getNextId(customerId);","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"laurenlhy"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(customerTags);","lastModifiedDate":"2021-03-07"},{"lineNumber":121,"author":{"gitId":"daniellau88"},"content":"        return new Customer(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelId);","lastModifiedDate":"2021-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"laurenlhy":13,"weixue123":9,"daniellau88":15,"-":87}},{"path":"src/main/java/chim/storage/JsonAdaptedOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.order.CompletedDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderId;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":" * Jackson-friendly version of {@link Order}.","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"class JsonAdaptedOrder {","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Order\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    private final Integer orderId;","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    private final String cheeseType;","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    private final Integer quantity;","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    private final String orderDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    private final String completedDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    private final Integer customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"    private final List\u003cInteger\u003e cheeseIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"     * Constructs a {@code JsonAdaptedOrder} with the given order details.","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"    public JsonAdaptedOrder(@JsonProperty(\"orderId\") Integer orderId,","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"                            @JsonProperty(\"cheeseType\") String cheeseType,","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"                            @JsonProperty(\"quantity\") Integer quantity,","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"                            @JsonProperty(\"orderDate\") String orderDate,","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"                            @JsonProperty(\"completedDate\") String completedDate,","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"                            @JsonProperty(\"customerId\") Integer customerId,","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"                            @JsonProperty(\"cheeseIds\") List\u003cInteger\u003e cheeseIds) {","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"        this.orderId \u003d orderId;","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"        this.cheeseType \u003d cheeseType;","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"        this.orderDate \u003d orderDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"        this.completedDate \u003d completedDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"        if (cheeseIds !\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"            this.cheeseIds.addAll(cheeseIds);","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"     * Converts a given {@code Order} into this class for Jackson use.","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"    public JsonAdaptedOrder(Order source) {","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"        orderId \u003d source.getOrderId().value;","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"        cheeseType \u003d source.getCheeseType().value;","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"        quantity \u003d source.getQuantity().value;","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"        orderDate \u003d source.getOrderDate().toJsonString();","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"        completedDate \u003d source.getCompletedDate().map(CompletedDate::toJsonString).orElse(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"        customerId \u003d source.getCustomerId().value;","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"        cheeseIds.addAll(source.getCheeses().stream()","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"                    .map(x -\u003e x.value)","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"     * Converts this Jackson-friendly adapted order object into the model\u0027s {@code Order} object.","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted order.","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"    public Order toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"        final List\u003cCheeseId\u003e orderCheeses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"        for (Integer cheeseId : cheeseIds) {","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"            orderCheeses.add(CheeseId.getNextId(cheeseId));","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"        if (!OrderId.isValidId(orderId)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(OrderId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"aaronsms"},"content":"        final OrderId modelId \u003d OrderId.getNextId(orderId);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"daniellau88"},"content":"        if (cheeseType \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"daniellau88"},"content":"                CheeseType.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"daniellau88"},"content":"        final CheeseType modelCheeseType \u003d CheeseType.getCheeseType(cheeseType);","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"        if (quantity \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"                Quantity.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"        if (!Quantity.isValidQuantity(quantity)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"        final Quantity modelQuantity \u003d new Quantity(quantity);","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"        if (orderDate \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"daniellau88"},"content":"                OrderDate.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"        if (!OrderDate.isValidDate(orderDate)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(OrderDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"        final OrderDate modelOrderDate \u003d new OrderDate(orderDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"daniellau88"},"content":"        final CompletedDate modelCompletedDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"AhQuanz"},"content":"        final Set\u003cCheeseId\u003e modelCheeseId \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"daniellau88"},"content":"        if (completedDate \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"daniellau88"},"content":"            modelCompletedDate \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"daniellau88"},"content":"        } else if (!CompletedDate.isValidDate(completedDate)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(CompletedDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"AhQuanz"},"content":"        } else if (cheeseIds \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"AhQuanz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"AhQuanz"},"content":"                    OrderDate.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"daniellau88"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"daniellau88"},"content":"            modelCompletedDate \u003d new CompletedDate(completedDate);","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"AhQuanz"},"content":"        modelCheeseId.addAll(cheeseIds.stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"aaronsms"},"content":"            .map(CheeseId::getNextId)","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"AhQuanz"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"daniellau88"},"content":"        if (customerId \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-08"},{"lineNumber":134,"author":{"gitId":"daniellau88"},"content":"                CustomerId.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"daniellau88"},"content":"        if (!CustomerId.isValidId(customerId)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"daniellau88"},"content":"            throw new IllegalValueException(CustomerId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":138,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"daniellau88"},"content":"        final CustomerId modelCustomerId \u003d CustomerId.getNextId(customerId);","lastModifiedDate":"2021-03-08"},{"lineNumber":140,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":141,"author":{"gitId":"AhQuanz"},"content":"        return new Order(modelCheeseType, modelQuantity, modelOrderDate,","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"AhQuanz"},"content":"                modelCompletedDate, modelCheeseId, modelId, modelCustomerId);","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":144,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"AhQuanz":11,"weixue123":11,"daniellau88":118,"aaronsms":4}},{"path":"src/main/java/chim/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weixue123":3,"-":45}},{"path":"src/main/java/chim/storage/JsonChimStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.LogsCenter;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.FileUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.JsonUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":" * A class to access CHIM data stored as a json file on the hard disk.","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"public class JsonChimStorage implements ChimStorage {","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonChimStorage.class);","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"    public JsonChimStorage(Path filePath) {","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"    public Path getChimFilePath() {","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"    public Optional\u003cReadOnlyChim\u003e readChim() throws DataConversionException {","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"        return readChim(filePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"     * Similar to {@link #readChim()}.","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"    public Optional\u003cReadOnlyChim\u003e readChim(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"        Optional\u003cJsonSerializableChim\u003e jsonChim \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"                filePath, JsonSerializableChim.class);","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"        if (!jsonChim.isPresent()) {","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"            return Optional.of(jsonChim.get().toModelType());","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"        } catch (IllegalValueException | IllegalArgumentException ive) {","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"    public void saveChim(ReadOnlyChim chim) throws IOException {","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"        saveChim(chim, filePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"     * Similar to {@link #saveChim(ReadOnlyChim)}.","lastModifiedDate":"2021-04-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"    public void saveChim(ReadOnlyChim chim, Path filePath) throws IOException {","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"        requireNonNull(chim);","lastModifiedDate":"2021-04-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"weixue123"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableChim(chim), filePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weixue123":26,"daniellau88":1,"-":53}},{"path":"src/main/java/chim/storage/JsonSerializableChim.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":" * An Immutable Chim that is serializable to JSON format.","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"@JsonRootName(value \u003d \"chim\")","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"class JsonSerializableChim {","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"Customers list contains duplicate customer(s).\";","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_DUPLICATE_CHEESE \u003d \"Cheese list contains duplicate cheese(s).\";","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"Order list contains duplicate order(s).\";","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"    private final List\u003cJsonAdaptedCustomer\u003e customers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    private final List\u003cJsonAdaptedCheese\u003e cheeses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    private final List\u003cJsonAdaptedOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"     * Constructs a {@code JsonSerializableChim} with the given customers, cheeses and orders.","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"    public JsonSerializableChim(@JsonProperty(\"customers\") List\u003cJsonAdaptedCustomer\u003e customers,","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"                                @JsonProperty(\"cheeses\") List\u003cJsonAdaptedCheese\u003e cheeses,","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"                                @JsonProperty(\"orders\") List\u003cJsonAdaptedOrder\u003e orders) {","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"        this.customers.addAll(customers);","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        this.cheeses.addAll(cheeses);","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"        this.orders.addAll(orders);","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"     * Converts a given {@code ReadOnlyChim} into this class for Jackson use.","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableChim}.","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"    public JsonSerializableChim(ReadOnlyChim source) {","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"laurenlhy"},"content":"        customers.addAll(source.getCustomerList().stream().map(JsonAdaptedCustomer::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"        cheeses.addAll(source.getCheeseList().stream().map(JsonAdaptedCheese::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"        orders.addAll(source.getOrderList().stream().map(JsonAdaptedOrder::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"     * Converts this CHIM into the model\u0027s {@code Chim} object.","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"    public Chim toModelType() throws IllegalValueException {","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"        Chim chim \u003d new Chim();","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"laurenlhy"},"content":"        for (JsonAdaptedCustomer jsonAdaptedCustomer : customers) {","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"laurenlhy"},"content":"            Customer customer \u003d jsonAdaptedCustomer.toModelType();","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"            if (chim.hasCustomer(customer)) {","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"laurenlhy"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"            chim.addCustomer(customer);","lastModifiedDate":"2021-04-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"        for (JsonAdaptedCheese jsonAdaptedCheese : cheeses) {","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"            Cheese cheese \u003d jsonAdaptedCheese.toModelType();","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"            if (chim.hasCheese(cheese)) {","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CHEESE);","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"weixue123"},"content":"            chim.addCheese(cheese);","lastModifiedDate":"2021-04-08"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"        for (JsonAdaptedOrder jsonAdaptedOrder : orders) {","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"            Order order \u003d jsonAdaptedOrder.toModelType();","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"weixue123"},"content":"            if (chim.hasOrder(order)) {","lastModifiedDate":"2021-04-08"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"weixue123"},"content":"            chim.addOrder(order);","lastModifiedDate":"2021-04-08"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"weixue123"},"content":"        chim.checkChim();","lastModifiedDate":"2021-04-08"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"weixue123"},"content":"        return chim;","lastModifiedDate":"2021-04-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"laurenlhy":7,"weixue123":26,"daniellau88":24,"-":34}},{"path":"src/main/java/chim/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.JsonUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"weixue123":5,"-":42}},{"path":"src/main/java/chim/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":" * API of the Storage component.","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"public interface Storage extends ChimStorage, UserPrefsStorage {","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"    Path getChimFilePath();","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"    Optional\u003cReadOnlyChim\u003e readChim() throws DataConversionException, IOException;","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"    void saveChim(ReadOnlyChim chim) throws IOException;","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"weixue123":10,"-":22}},{"path":"src/main/java/chim/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.LogsCenter;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":" * Manages storage of CHIM data in local storage.","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    private ChimStorage chimStorage;","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"     * Creates a {@code StorageManager} with the given {@code ChimStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"    public StorageManager(ChimStorage chimStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"        this.chimStorage \u003d chimStorage;","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Chim methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"    public Path getChimFilePath() {","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"        return chimStorage.getChimFilePath();","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"    public Optional\u003cReadOnlyChim\u003e readChim() throws DataConversionException, IOException {","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"        return readChim(chimStorage.getChimFilePath());","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"    public Optional\u003cReadOnlyChim\u003e readChim(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"        return chimStorage.readChim(filePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"    public void saveChim(ReadOnlyChim chim) throws IOException {","lastModifiedDate":"2021-04-08"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"        saveChim(chim, chimStorage.getChimFilePath());","lastModifiedDate":"2021-04-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"    public void saveChim(ReadOnlyChim chim, Path filePath) throws IOException {","lastModifiedDate":"2021-04-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"        chimStorage.saveChim(chim, filePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":22,"-":57}},{"path":"src/main/java/chim/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":" * Represents a storage for {@link chim.model.UserPrefs}.","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"     * Saves the given {@link chim.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"weixue123":8,"-":30}},{"path":"src/main/java/chim/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.CommandResult;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"        } catch (Exception | Error e) {","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"weixue123"},"content":"         * @see chim.logic.Logic#execute(String)","lastModifiedDate":"2021-04-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"weixue123":5,"daniellau88":2,"-":80}},{"path":"src/main/java/chim/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.LogsCenter;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103-w16-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"AhQuanz":1,"weixue123":2,"-":99}},{"path":"src/main/java/chim/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings.PanelToShow;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.LogsCenter;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.logic.Logic;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.CommandResult;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ListCheesesCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ListCustomersCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ListOrdersCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.ui.panels.CheeseListPanel;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.ui.panels.CustomerListPanel;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.ui.panels.OrderListPanel;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"    private final Logic logic;","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"    private PanelToShow panel;","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"    private CustomerListPanel customerListPanel;","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"    private CheeseListPanel cheeseListPanel;","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"    private OrderListPanel orderListPanel;","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"        setDefaultPanel(logic.getGuiSettings());","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"weixue123"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"weixue123"},"content":"        customerListPanel \u003d new CustomerListPanel(logic.getFilteredCustomerList());","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"weixue123"},"content":"        cheeseListPanel \u003d new CheeseListPanel(logic.getFilteredCheeseList());","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"weixue123"},"content":"        orderListPanel \u003d new OrderListPanel(logic.getFilteredOrderList(), logic.getCompleteCustomerList());","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"weixue123"},"content":"        // Set the information to show when starting the app","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"weixue123"},"content":"        setListPanel();","lastModifiedDate":"2021-03-19"},{"lineNumber":132,"author":{"gitId":"weixue123"},"content":"        setDefaultResultDisplay();","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"weixue123"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getChimFilePath());","lastModifiedDate":"2021-04-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"weixue123"},"content":"     * Set what information to render in list panel.","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"weixue123"},"content":"     * Called at initialization and every time after a command is executed.","lastModifiedDate":"2021-03-19"},{"lineNumber":144,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"weixue123"},"content":"    void setListPanel() {","lastModifiedDate":"2021-03-19"},{"lineNumber":146,"author":{"gitId":"weixue123"},"content":"        listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"weixue123"},"content":"        panel \u003d logic.getGuiSettings().getPanel();","lastModifiedDate":"2021-03-19"},{"lineNumber":148,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":149,"author":{"gitId":"weixue123"},"content":"        // Re-initialize orderListPanel with new customer details","lastModifiedDate":"2021-04-07"},{"lineNumber":150,"author":{"gitId":"weixue123"},"content":"        // We need to do this because customer details may have changed from the EditCustomerCommand","lastModifiedDate":"2021-04-07"},{"lineNumber":151,"author":{"gitId":"weixue123"},"content":"        orderListPanel \u003d new OrderListPanel(logic.getFilteredOrderList(), logic.getCompleteCustomerList());","lastModifiedDate":"2021-04-07"},{"lineNumber":152,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":153,"author":{"gitId":"weixue123"},"content":"        if (panel \u003d\u003d PanelToShow.CHEESE_LIST) {","lastModifiedDate":"2021-03-19"},{"lineNumber":154,"author":{"gitId":"weixue123"},"content":"            listPanelPlaceholder.getChildren().add(cheeseListPanel.getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"weixue123"},"content":"        } else if (panel \u003d\u003d PanelToShow.ORDER_LIST) {","lastModifiedDate":"2021-03-19"},{"lineNumber":156,"author":{"gitId":"weixue123"},"content":"            listPanelPlaceholder.getChildren().add(orderListPanel.getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"weixue123"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"weixue123"},"content":"            listPanelPlaceholder.getChildren().add(customerListPanel.getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"weixue123"},"content":"     * Sets the default results display to show; called at initialization.","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"weixue123"},"content":"    void setDefaultResultDisplay() {","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"weixue123"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"weixue123"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"weixue123"},"content":"        panel \u003d logic.getGuiSettings().getPanel();","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"weixue123"},"content":"        if (panel \u003d\u003d PanelToShow.CHEESE_LIST) {","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"weixue123"},"content":"            resultDisplay.setFeedbackToUser(ListCheesesCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"weixue123"},"content":"        } else if (panel \u003d\u003d PanelToShow.ORDER_LIST) {","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"weixue123"},"content":"            resultDisplay.setFeedbackToUser(ListOrdersCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"weixue123"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"weixue123"},"content":"            resultDisplay.setFeedbackToUser(ListCustomersCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":193,"author":{"gitId":"weixue123"},"content":"     * Sets the default panel based on {@code guiSettings}.","lastModifiedDate":"2021-03-19"},{"lineNumber":194,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":195,"author":{"gitId":"weixue123"},"content":"    private void setDefaultPanel(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-19"},{"lineNumber":196,"author":{"gitId":"weixue123"},"content":"        panel \u003d guiSettings.getPanel();","lastModifiedDate":"2021-03-19"},{"lineNumber":197,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":198,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":220,"author":{"gitId":"weixue123"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(","lastModifiedDate":"2021-03-19"},{"lineNumber":221,"author":{"gitId":"weixue123"},"content":"                panel,","lastModifiedDate":"2021-03-19"},{"lineNumber":222,"author":{"gitId":"weixue123"},"content":"                primaryStage.getWidth(),","lastModifiedDate":"2021-03-19"},{"lineNumber":223,"author":{"gitId":"weixue123"},"content":"                primaryStage.getHeight(),","lastModifiedDate":"2021-03-19"},{"lineNumber":224,"author":{"gitId":"weixue123"},"content":"                (int) primaryStage.getX(),","lastModifiedDate":"2021-03-19"},{"lineNumber":225,"author":{"gitId":"weixue123"},"content":"                (int) primaryStage.getY()","lastModifiedDate":"2021-03-19"},{"lineNumber":226,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"weixue123"},"content":"     * @see chim.logic.Logic#execute(String)","lastModifiedDate":"2021-04-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"weixue123"},"content":"            setListPanel();","lastModifiedDate":"2021-03-19"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"daniellau88"},"content":"        } catch (Exception | Error e) {","lastModifiedDate":"2021-04-10"},{"lineNumber":258,"author":{"gitId":"daniellau88"},"content":"            logger.info(\"An error has occurred\");","lastModifiedDate":"2021-04-10"},{"lineNumber":259,"author":{"gitId":"daniellau88"},"content":"            logger.info(e.getMessage());","lastModifiedDate":"2021-04-10"},{"lineNumber":260,"author":{"gitId":"daniellau88"},"content":"            resultDisplay.setFeedbackToUser(\"An error has occurred. Please refer to the logs for more details.\");","lastModifiedDate":"2021-04-10"},{"lineNumber":261,"author":{"gitId":"daniellau88"},"content":"            throw e;","lastModifiedDate":"2021-04-10"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"weixue123":86,"daniellau88":5,"-":173}},{"path":"src/main/java/chim/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"weixue123":1,"-":27}},{"path":"src/main/java/chim/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":1,"-":27}},{"path":"src/main/java/chim/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"weixue123":1,"-":12}},{"path":"src/main/java/chim/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.MainApp;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.LogsCenter;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.StringUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.logic.Logic;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/chim.png\";","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"weixue123":6,"-":83}},{"path":"src/main/java/chim/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.MainApp;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"weixue123":2,"-":86}},{"path":"src/main/java/chim/ui/cards/CheeseCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui.cards;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ExpiryDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.ui.UiPart;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":" * A UI component that displays the information of a {@code Cheese}.","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"public class CheeseCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"    private static final String FXML \u003d \"CheeseCard.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"    public final Cheese cheese;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"    private Label cheeseType;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"    private Label id;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"    private Label status;","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"    private Label manufactureDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    private Label expiryDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"     * Creates a {@code CheeseCard} with the given {@code Cheese} and index to display","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"    public CheeseCard(Cheese cheese, int displayedIndex) {","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"        super(FXML);","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"        this.cheese \u003d cheese;","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"        cheeseType.setText(cheese.getCheeseType().toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"        status.setText(\"Assigned: \" + (cheese.isCheeseAssigned() ? \"Yes\" : \"No\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"        manufactureDate.setText(\"Manufacture Date: \" + cheese.getManufactureDate().toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"        expiryDate.setText(\"Expiry Date: \" + cheese.getExpiryDate().map(ExpiryDate::toString).orElse(\"-\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"        if (!(other instanceof CheeseCard)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"            return false;","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"        CheeseCard card \u003d (CheeseCard) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"                \u0026\u0026 cheese.equals(card.cheese);","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"weixue123":59,"aaronsms":1}},{"path":"src/main/java/chim/ui/cards/CustomerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui.cards;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.ui.UiPart;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":" * A UI component that displays the information of a {@code Customer}.","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"public class CustomerCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"    private static final String FXML \u003d \"CustomerCard.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"    public final Customer customer;","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"     * Creates a {@code CustomerCard} with the given {@code Customer} and index to display.","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"    public CustomerCard(Customer customer, int displayedIndex) {","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"laurenlhy"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"laurenlhy"},"content":"        name.setText(customer.getName().fullName);","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"laurenlhy"},"content":"        phone.setText(customer.getPhone().value);","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":"        address.setText(customer.getAddress().value);","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"laurenlhy"},"content":"        email.setText(customer.getEmail().value);","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"        customer.getTags().stream()","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"        if (!(other instanceof CustomerCard)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"        CustomerCard card \u003d (CustomerCard) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"laurenlhy"},"content":"                \u0026\u0026 customer.equals(card.customer);","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"laurenlhy":8,"weixue123":10,"-":60}},{"path":"src/main/java/chim/ui/cards/OrderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui.cards;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.order.CompletedDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.ui.UiPart;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":" * A UI component that displays the information of an {@code Order}.","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"public class OrderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"    private static final String FXML \u003d \"OrderCard.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"    public final Order order;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"    private Label id;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"    private Label cheeseTypeAndQuantity;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"    private Label name;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"    private Label phone;","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"    private Label quantity;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"    private Label orderDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"    private Label completedDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"     * Creates an {@code OrderCard} with the given {@code Order} and index to display.","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"    public OrderCard(Order order, Customer customer, int displayedIndex) {","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"        super(FXML);","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"        this.order \u003d order;","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"        cheeseTypeAndQuantity.setText(order.getCheeseType().toString() + \"   x \" + order.getQuantity());","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"        name.setText(customer.getName().toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"        phone.setText(customer.getPhone().toString());","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"        orderDate.setText(\"Order Date: \" + order.getOrderDate().toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"        completedDate.setText(\"Completed Date: \" + order.getCompletedDate().map(CompletedDate::toString).orElse(\"-\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"        if (!(other instanceof OrderCard)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"            return false;","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"        OrderCard card \u003d (OrderCard) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"        return id.getText().equals(card.id.getText()) \u0026\u0026 order.equals(card.order);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"weixue123":65}},{"path":"src/main/java/chim/ui/panels/CheeseListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui.panels;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.LogsCenter;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.ui.UiPart;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.ui.cards.CheeseCard;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":" * Panel in UI containing a list of cheeses.","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"public class CheeseListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"    private static final String FXML \u003d \"ListPanel.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CustomerListPanel.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"    private ListView\u003cCheese\u003e listView;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"     * Creates a {@code CheeseListPanel} with the given {@code cheeseList}.","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"    public CheeseListPanel(ObservableList\u003cCheese\u003e cheeseList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"        super(FXML);","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"        listView.setItems(cheeseList);","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"        listView.setCellFactory(listView -\u003e new CheeseListViewCell());","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"     * Custom {@code ListCell} that displays the details of a {@code Cheese} using a {@code CustomerCard}.","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    class CheeseListViewCell extends ListCell\u003cCheese\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"        @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"        protected void updateItem(Cheese cheese, boolean empty) {","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"            super.updateItem(cheese, empty);","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"            if (empty || cheese \u003d\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"                setText(null);","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"            } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"                setGraphic(new CheeseCard(cheese, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"weixue123":50}},{"path":"src/main/java/chim/ui/panels/CustomerListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui.panels;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.LogsCenter;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.ui.UiPart;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.ui.cards.CustomerCard;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":" * Panel in UI containing a list of customers.","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"public class CustomerListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"    private static final String FXML \u003d \"ListPanel.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CustomerListPanel.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"    private ListView\u003cCustomer\u003e listView;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"     * Creates a {@code CustomerListPanel} with the given {@code customerList}.","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"    public CustomerListPanel(ObservableList\u003cCustomer\u003e customerList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"        super(FXML);","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"        listView.setItems(customerList);","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"        listView.setCellFactory(listView -\u003e new CustomerListViewCell());","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"     * Custom {@code ListCell} that displays the details of a {@code Customer} using a {@code CustomerCard}.","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    class CustomerListViewCell extends ListCell\u003cCustomer\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"        @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"        protected void updateItem(Customer customer, boolean empty) {","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"            super.updateItem(customer, empty);","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"            if (empty || customer \u003d\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"                setText(null);","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"            } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"                setGraphic(new CustomerCard(customer, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"weixue123":50}},{"path":"src/main/java/chim/ui/panels/OrderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui.panels;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.LogsCenter;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.ui.UiPart;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.ui.cards.OrderCard;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":" * Panel in UI containing a list of orders.","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"public class OrderListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"    private static final String FXML \u003d \"ListPanel.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OrderListPanel.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"    private ListView\u003cOrder\u003e listView;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"    private final ObservableList\u003cCustomer\u003e customerList;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"     * Creates a {@code OrderListPanel} with the given {@code orderList}.","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"     * {@code customerList} is input into this class so that for each order, we can look for its","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"     * customer\u0027s details.","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"    public OrderListPanel(ObservableList\u003cOrder\u003e orderList, ObservableList\u003cCustomer\u003e customerList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"        super(FXML);","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"        listView.setItems(orderList);","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"        listView.setCellFactory(listView -\u003e new OrderListView());","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"        this.customerList \u003d customerList;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"     * Custom {@code ListCell} that displays the details of an {@code Order} using a {@code OrderCard}.","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"    class OrderListView extends ListCell\u003cOrder\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"        @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"        protected void updateItem(Order order, boolean empty) {","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"            super.updateItem(order, empty);","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"            if (empty || order \u003d\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"                setText(null);","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"            } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"                Customer customer \u003d getCustomerById(order.getCustomerId());","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"                requireNonNull(customer);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"                setGraphic(new OrderCard(order, customer, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"     * Obtains the {@code Customer} with the given {@code customerId}.","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"     * The customer with {@code customerId} must exist.","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"    private Customer getCustomerById(CustomerId customerId) {","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"        for (Customer customer : customerList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"            if (customerId.equals(customer.getId())) {","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"                return customer;","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"        return null;","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"weixue123":74}},{"path":"src/main/resources/view/CheeseCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"        \u003cLabel fx:id\u003d\"cheeseType\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"      \u003cLabel fx:id\u003d\"manufactureDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$manufactureDate\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"      \u003cLabel fx:id\u003d\"expiryDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$expiryDate\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":4,"-":30}},{"path":"src/main/resources/view/ListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"  \u003cListView fx:id\u003d\"listView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"         title\u003d\"Cheese Inventory Management\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"    \u003cImage url\u003d\"@/images/chim.png\" /\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"laurenlhy"},"content":"        \u003cVBox fx:id\u003d\"customerList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"          \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"laurenlhy":1,"daniellau88":1,"weixue123":2,"-":56}},{"path":"src/main/resources/view/OrderCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"        \u003cLabel fx:id\u003d\"cheeseTypeAndQuantity\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"      \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"      \u003cLabel fx:id\u003d\"orderDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$orderDate\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"      \u003cLabel fx:id\u003d\"completedDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$completedDate\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":5,"-":30}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" wrapText\u003d\"true\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"daniellau88":1,"-":8}},{"path":"src/test/data/JsonChimStorageTest/invalidAndValidCustomerChim.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"laurenlhy":1,"-":12}},{"path":"src/test/data/JsonChimStorageTest/invalidCustomerChim.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"laurenlhy":1,"-":7}},{"path":"src/test/data/JsonSerializableChimTest/duplicateCustomerChim.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"    \"customerId\" : 1,","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"    \"customerId\" : 1","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"  } ],","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"  \"cheeses\": [],","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"  \"orders\": []","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"laurenlhy":1,"daniellau88":6,"-":11}},{"path":"src/test/data/JsonSerializableChimTest/invalidCustomerChim.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"    \"customerId\" : 1,","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"  } ],","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"  \"cheeses\": [],","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"  \"orders\": []","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"laurenlhy":1,"daniellau88":6,"-":5}},{"path":"src/test/data/JsonSerializableChimTest/typicalChim.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"  \"_comment\": \"Chim save file which contains the same Customer values as in TypicalCustomers#getTypicalCustomers()\",","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"  \"customers\" : [ {","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"    \"customerId\" : 1,","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    \"customerId\" : 2,","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    \"customerId\" : 3,","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    \"customerId\" : 4,","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"    \"customerId\" : 5,","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"    \"customerId\" : 6,","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"    \"customerId\" : 7,","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"  } ],","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"  \"cheeses\": [ {","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"    \"cheeseId\": 1,","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"    \"cheeseType\": \"Camembert\",","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"    \"manufactureDate\": \"2021-03-04 07:00\",","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"    \"expiryDate\": \"2022-03-12 06:00\",","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"    \"isAssigned\": true","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"  }, {","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"    \"cheeseId\": 2,","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"    \"cheeseType\": \"Feta\",","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"    \"manufactureDate\": \"2021-03-06 07:00\",","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"    \"expiryDate\": \"2023-04-04 06:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"    \"isAssigned\": true","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"    \"cheeseId\": 3,","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":"    \"cheeseType\": \"Brie\",","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"    \"manufactureDate\": \"2021-03-10 07:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":"    \"expiryDate\": \"2024-04-10 06:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"AhQuanz"},"content":"    \"isAssigned\": false","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":"  }, {","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"    \"cheeseId\": 4,","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"laurenlhy"},"content":"    \"cheeseType\": \"Mozzarella\",","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"AhQuanz"},"content":"    \"manufactureDate\": \"2021-03-12 07:00\",","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"AhQuanz"},"content":"    \"expiryDate\": \"2025-04-15 06:00\",","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"AhQuanz"},"content":"    \"isAssigned\": false","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"laurenlhy"},"content":"  }, {","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"laurenlhy"},"content":"    \"cheeseId\": 5,","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"laurenlhy"},"content":"    \"cheeseType\": \"Camembert\",","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"laurenlhy"},"content":"    \"manufactureDate\": \"2021-03-04 07:00\",","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"    \"expiryDate\": \"2022-03-12 06:00\",","lastModifiedDate":"2021-04-06"},{"lineNumber":82,"author":{"gitId":"laurenlhy"},"content":"    \"isAssigned\": true","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"  }, {","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"    \"cheeseId\": 6,","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"    \"cheeseType\": \"Gouda\",","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"    \"manufactureDate\": \"2021-03-12 07:00\",","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"    \"expiryDate\": \"2023-05-15 06:00\",","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"    \"isAssigned\": false","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"  } ],","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"laurenlhy"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"daniellau88"},"content":"    \"orderId\": 1,","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"AhQuanz"},"content":"    \"cheeseType\": \"Brie\",","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"AhQuanz"},"content":"    \"quantity\": 1,","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"AhQuanz"},"content":"    \"orderDate\": \"2021-03-07 08:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"AhQuanz"},"content":"    \"completedDate\": null,","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"AhQuanz"},"content":"    \"customerId\": 3,","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"AhQuanz"},"content":"    \"cheeseIds\": []","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"AhQuanz"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"AhQuanz"},"content":"    \"orderId\": 2,","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"    \"cheeseType\": \"Camembert\",","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"    \"quantity\": 1,","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"    \"orderDate\": \"2021-02-05 07:00\",","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"    \"completedDate\": \"2021-08-10 13:00\",","lastModifiedDate":"2021-04-06"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"    \"customerId\": 1,","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"AhQuanz"},"content":"    \"cheeseIds\": [1]","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"  }, {","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"AhQuanz"},"content":"    \"orderId\": 3,","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"    \"cheeseType\": \"Feta\",","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"    \"quantity\": 1,","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"daniellau88"},"content":"    \"orderDate\": \"2021-03-06 08:00\",","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"    \"completedDate\": \"2021-08-06 10:00\",","lastModifiedDate":"2021-04-06"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"    \"customerId\": 2,","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"AhQuanz"},"content":"    \"cheeseIds\": [2]","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"AhQuanz"},"content":"  }, {","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"AhQuanz"},"content":"    \"orderId\": 4,","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"laurenlhy"},"content":"    \"cheeseType\": \"Mozzarella\",","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"AhQuanz"},"content":"    \"quantity\": 2,","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"AhQuanz"},"content":"    \"orderDate\": \"2021-03-08 08:00\",","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"AhQuanz"},"content":"    \"completedDate\": null,","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"AhQuanz"},"content":"    \"customerId\": 4,","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"AhQuanz"},"content":"    \"cheeseIds\": []","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"laurenlhy"},"content":"  }, {","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"laurenlhy"},"content":"    \"orderId\": 5,","lastModifiedDate":"2021-03-22"},{"lineNumber":124,"author":{"gitId":"laurenlhy"},"content":"    \"cheeseType\": \"Camembert\",","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"laurenlhy"},"content":"    \"quantity\": 1,","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"laurenlhy"},"content":"    \"orderDate\": \"2021-03-06 08:00\",","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"daniellau88"},"content":"    \"completedDate\": \"2021-08-06 10:00\",","lastModifiedDate":"2021-04-06"},{"lineNumber":128,"author":{"gitId":"laurenlhy"},"content":"    \"customerId\": 2,","lastModifiedDate":"2021-03-22"},{"lineNumber":129,"author":{"gitId":"laurenlhy"},"content":"    \"cheeseIds\": [5]","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"daniellau88"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"daniellau88"},"content":"    \"orderId\": 6,","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"daniellau88"},"content":"    \"cheeseType\": \"Gouda\",","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"daniellau88"},"content":"    \"quantity\": 1,","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"daniellau88"},"content":"    \"orderDate\": \"2021-03-11 08:00\",","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"daniellau88"},"content":"    \"completedDate\": null,","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"daniellau88"},"content":"    \"customerId\": 2,","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"daniellau88"},"content":"    \"cheeseIds\": []","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AhQuanz":32,"laurenlhy":16,"weixue123":1,"daniellau88":46,"-":44}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"    \"panel\" : \"CUSTOMER_LIST\",","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"  \"chimFilePath\" : \"chim.json\"","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"weixue123":2,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"    \"panel\" : \"CUSTOMER_LIST\",","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"  \"chimFilePath\" : \"chim.json\"","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"weixue123":2,"-":10}},{"path":"src/test/java/chim/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"weixue123":1,"-":57}},{"path":"src/test/java/chim/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.core;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"weixue123":1,"-":26}},{"path":"src/test/java/chim/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.core;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":2,"-":133}},{"path":"src/test/java/chim/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.core.index;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"weixue123":2,"-":58}},{"path":"src/test/java/chim/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"        assertNotNull(AppUtil.getImage(\"/images/chim.png\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"weixue123":3,"-":33}},{"path":"src/test/java/chim/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"weixue123":3,"-":105}},{"path":"src/test/java/chim/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Config;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"weixue123":4,"-":112}},{"path":"src/test/java/chim/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":2,"-":21}},{"path":"src/test/java/chim/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.testutil.SerializableTestClass;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.testutil.TestUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":3,"-":42}},{"path":"src/test/java/chim/commons/util/PredicateUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.AbstractId;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"public class PredicateUtilTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    public class IdTestStub extends AbstractId\u003cIdTestStub\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"        public IdTestStub(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"            super(id);","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    public void null_containsPrefixWordIgnoreCase_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"            PredicateUtil.containsPrefixWordIgnoreCase(null, Arrays.asList(\"key1\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"            PredicateUtil.containsPrefixWordIgnoreCase(\"string\", null));","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    public void containsPrefixWordIgnoreCase() {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"        // Contains full word","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"        assertTrue(PredicateUtil.containsPrefixWordIgnoreCase(\"abc abc\", Arrays.asList(\"Abc\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"        assertTrue(PredicateUtil.containsPrefixWordIgnoreCase(\"marry Ann\", Arrays.asList(\"ann\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"        // Contains prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"        assertTrue(PredicateUtil.containsPrefixWordIgnoreCase(\"MAx lee\", Arrays.asList(\"Ma\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        assertTrue(PredicateUtil.containsPrefixWordIgnoreCase(\"Armstrong Chan\", Arrays.asList(\"chA\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        // Contains suffix (false)","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"        assertFalse(PredicateUtil.containsPrefixWordIgnoreCase(\"Armstrong Chan\", Arrays.asList(\"stronG\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"        assertFalse(PredicateUtil.containsPrefixWordIgnoreCase(\"Chan Yulee\", Arrays.asList(\"Lee\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"        // More than 1 keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"        assertTrue(PredicateUtil.containsPrefixWordIgnoreCase(\"Yuan Lee Hui\", Arrays.asList(\"Yu\", \"hui\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"        assertTrue(PredicateUtil.containsPrefixWordIgnoreCase(\"Boris, Ng Chan\", Arrays.asList(\"alex\", \"bori\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"        assertFalse(PredicateUtil.containsPrefixWordIgnoreCase(\"Boris, Ng Chan\", Arrays.asList(\"lee\", \"hui\", \"wu\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"    public void null_getWordSimilarityScoreIgnoreCase_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"            PredicateUtil.getWordSimilarityScoreIgnoreCase(null, Arrays.asList(\"key1\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"            PredicateUtil.getWordSimilarityScoreIgnoreCase(\"string\", null));","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"    public void getWordSimilarityScoreIgnoreCase() {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"        final List\u003cString\u003e keywordList \u003d Arrays.asList(\"key1\", \"key2\", \"key3\");","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"        double allPresentScore \u003d PredicateUtil.getWordSimilarityScoreIgnoreCase(\"key1 key2 key3\", keywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"        double somePresentScore \u003d PredicateUtil.getWordSimilarityScoreIgnoreCase(\"key1 key3\", keywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"        double somePrefixPresentScore \u003d PredicateUtil.getWordSimilarityScoreIgnoreCase(\"key138 key3\", keywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"        assertTrue(allPresentScore \u003e somePresentScore);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"        assertTrue(somePresentScore \u003e somePrefixPresentScore);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"        assertTrue(somePrefixPresentScore \u003e 0);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"        double nonePresent \u003d PredicateUtil.getWordSimilarityScoreIgnoreCase(\"key key key\", keywordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"        assertTrue(nonePresent \u003d\u003d 0);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"        final List\u003cString\u003e emptyKeywordList \u003d Arrays.asList();","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"        assertTrue(PredicateUtil.getWordSimilarityScoreIgnoreCase(\"key1 key2 key3\", emptyKeywordList) \u003d\u003d 0);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"    public void null_matchIntegerId_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"        assertThrows(NullPointerException.class, () -\u003e PredicateUtil.matchIntegerId(new IdTestStub(1), null));","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"        assertThrows(NullPointerException.class, () -\u003e PredicateUtil.matchIntegerId(null, Arrays.asList(\"123\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"    public void matchIntegerId() {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"        final List\u003cString\u003e keywordList \u003d Arrays.asList(\"1\", \"2\", \"3\");","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"        assertTrue(PredicateUtil.matchIntegerId(new IdTestStub(1), keywordList));","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"        assertTrue(PredicateUtil.matchIntegerId(new IdTestStub(3), keywordList));","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"        assertFalse(PredicateUtil.matchIntegerId(new IdTestStub(5), keywordList));","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"daniellau88"},"content":"        // Match non-numeric","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"daniellau88"},"content":"        final List\u003cString\u003e nonNumericKeywordList \u003d Arrays.asList(\"abc\");","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"daniellau88"},"content":"        assertFalse(PredicateUtil.matchIntegerId(new IdTestStub(5), nonNumericKeywordList));","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"weixue123":2,"daniellau88":94}},{"path":"src/test/java/chim/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.commons.util;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"        // EP: parse number beyond integer range;","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1234123415232\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"daniellau88"},"content":"    //---------------- Tests for containsPrefixWordIgnoreCase --------------------------------------","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"daniellau88"},"content":"    /*","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"daniellau88"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"daniellau88"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"daniellau88"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"daniellau88"},"content":"    public void containsPrefixWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"daniellau88"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"daniellau88"},"content":"            -\u003e StringUtil.containsPrefixWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"daniellau88"},"content":"    public void containsPrefixWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"daniellau88"},"content":"            -\u003e StringUtil.containsPrefixWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"daniellau88"},"content":"    public void containsPrefixWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"daniellau88"},"content":"            -\u003e StringUtil.containsPrefixWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"daniellau88"},"content":"    public void containsPrefixWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"daniellau88"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsPrefixWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"daniellau88"},"content":"    public void containsPrefixWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"daniellau88"},"content":"        // Empty sentence","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"daniellau88"},"content":"        assertFalse(StringUtil.containsPrefixWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"daniellau88"},"content":"        assertFalse(StringUtil.containsPrefixWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"daniellau88"},"content":"        // Matches a prefix word","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"daniellau88"},"content":"        assertTrue(StringUtil.containsPrefixWordIgnoreCase(\"aaa bab ccc\", \"ba\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"daniellau88"},"content":"        assertTrue(StringUtil.containsPrefixWordIgnoreCase(\"aca bbb ccc\", \"ac\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"daniellau88"},"content":"        // Matches a suffix word","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"daniellau88"},"content":"        assertFalse(StringUtil.containsPrefixWordIgnoreCase(\"aaa bab ccc\", \"ab\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":175,"author":{"gitId":"daniellau88"},"content":"        assertFalse(StringUtil.containsPrefixWordIgnoreCase(\"aca bbb ccc\", \"ca\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":176,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":177,"author":{"gitId":"daniellau88"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2021-03-15"},{"lineNumber":178,"author":{"gitId":"daniellau88"},"content":"        assertTrue(StringUtil.containsPrefixWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2021-03-15"},{"lineNumber":179,"author":{"gitId":"daniellau88"},"content":"        assertTrue(StringUtil.containsPrefixWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2021-03-15"},{"lineNumber":180,"author":{"gitId":"daniellau88"},"content":"        assertTrue(StringUtil.containsPrefixWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"daniellau88"},"content":"        assertTrue(StringUtil.containsPrefixWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"daniellau88"},"content":"        assertTrue(StringUtil.containsPrefixWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2021-03-15"},{"lineNumber":183,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":184,"author":{"gitId":"daniellau88"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2021-03-15"},{"lineNumber":185,"author":{"gitId":"daniellau88"},"content":"        assertTrue(StringUtil.containsPrefixWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":186,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":187,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":206,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":207,"author":{"gitId":"daniellau88"},"content":"    //---------------- Tests for replaceEmailSpecialCharacters --------------------------------------","lastModifiedDate":"2021-03-18"},{"lineNumber":208,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":209,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":210,"author":{"gitId":"daniellau88"},"content":"    public void null_replaceEmailSpecialCharacters_throwsNullPointerException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":211,"author":{"gitId":"weixue123"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.replaceEmailSpecialCharacters(null));","lastModifiedDate":"2021-04-09"},{"lineNumber":212,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":213,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":214,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":215,"author":{"gitId":"daniellau88"},"content":"    public void replaceEmailSpecialCharacters() {","lastModifiedDate":"2021-03-18"},{"lineNumber":216,"author":{"gitId":"daniellau88"},"content":"        // Empty Strings","lastModifiedDate":"2021-03-18"},{"lineNumber":217,"author":{"gitId":"daniellau88"},"content":"        assertEquals(StringUtil.replaceEmailSpecialCharacters(\"\"), \"\");","lastModifiedDate":"2021-03-18"},{"lineNumber":218,"author":{"gitId":"daniellau88"},"content":"        assertEquals(StringUtil.replaceEmailSpecialCharacters(\"   \"), \"\");","lastModifiedDate":"2021-03-18"},{"lineNumber":219,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":220,"author":{"gitId":"daniellau88"},"content":"        // Normal usage","lastModifiedDate":"2021-03-18"},{"lineNumber":221,"author":{"gitId":"daniellau88"},"content":"        assertEquals(StringUtil.replaceEmailSpecialCharacters(\"a@a.com\"), \"a a com\");","lastModifiedDate":"2021-03-18"},{"lineNumber":222,"author":{"gitId":"daniellau88"},"content":"        assertEquals(StringUtil.replaceEmailSpecialCharacters(\"deach@gmail.com\"), \"deach gmail com\");","lastModifiedDate":"2021-03-18"},{"lineNumber":223,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":224,"author":{"gitId":"daniellau88"},"content":"        // None email format","lastModifiedDate":"2021-03-18"},{"lineNumber":225,"author":{"gitId":"daniellau88"},"content":"        assertEquals(StringUtil.replaceEmailSpecialCharacters(\"deachgmailcom\"), \"deachgmailcom\");","lastModifiedDate":"2021-03-18"},{"lineNumber":226,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":227,"author":{"gitId":"daniellau88"},"content":"        // Partial email format","lastModifiedDate":"2021-03-18"},{"lineNumber":228,"author":{"gitId":"daniellau88"},"content":"        assertEquals(StringUtil.replaceEmailSpecialCharacters(\"don@hotmailcom\"), \"don hotmailcom\");","lastModifiedDate":"2021-03-18"},{"lineNumber":229,"author":{"gitId":"daniellau88"},"content":"        assertEquals(StringUtil.replaceEmailSpecialCharacters(\"deanhotmail.com\"), \"deanhotmail com\");","lastModifiedDate":"2021-03-18"},{"lineNumber":230,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":231,"author":{"gitId":"daniellau88"},"content":"        // Multiple email symbols in between (for general usage)","lastModifiedDate":"2021-03-18"},{"lineNumber":232,"author":{"gitId":"daniellau88"},"content":"        assertEquals(StringUtil.replaceEmailSpecialCharacters(\"cas@@gmail.com\"), \"cas gmail com\");","lastModifiedDate":"2021-03-18"},{"lineNumber":233,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":234,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"weixue123":3,"daniellau88":91,"-":141}},{"path":"src/test/java/chim/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.CommandResult;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ListCustomersCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.CustomerIdStub;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"import chim.storage.JsonChimStorage;","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"import chim.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"import chim.storage.StorageManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CustomerBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"        JsonChimStorage chimStorage \u003d","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"                new JsonChimStorage(temporaryFolder.resolve(\"Chim.json\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"        StorageManager storage \u003d new StorageManager(chimStorage, userPrefsStorage);","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"laurenlhy"},"content":"        String deleteCustomerCommand \u003d \"deletecustomer p/90000989\";","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"laurenlhy"},"content":"        assertCommandException(deleteCustomerCommand, MESSAGE_INVALID_CUSTOMER_DISPLAYED_PHONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"        String listCommand \u003d ListCustomersCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"AhQuanz"},"content":"                ListCustomersCommand.SUMMARY_MESSAGE,","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":"                model.getFilteredCustomerList().size()","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"        );","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(listCommand, expectedMessage, model);","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"weixue123"},"content":"        // Setup LogicManager with JsonChimIoExceptionThrowingStub","lastModifiedDate":"2021-04-08"},{"lineNumber":79,"author":{"gitId":"weixue123"},"content":"        JsonChimStorage chimStorage \u003d","lastModifiedDate":"2021-04-08"},{"lineNumber":80,"author":{"gitId":"weixue123"},"content":"                new JsonChimIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionChim.json\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"weixue123"},"content":"        StorageManager storage \u003d new StorageManager(chimStorage, userPrefsStorage);","lastModifiedDate":"2021-04-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"        String addCommand \u003d AddCustomerCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withId(CustomerIdStub.getNextId()).withTags().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.addCustomer(expectedCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"laurenlhy"},"content":"    public void getFilteredCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredCustomerList().remove(0));","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"weixue123"},"content":"    public void getFilteredCheeseList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"weixue123"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredCheeseList().remove(0));","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"weixue123"},"content":"    public void getFilteredOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"weixue123"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredOrderList().remove(0));","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"weixue123"},"content":"    private static class JsonChimIoExceptionThrowingStub extends JsonChimStorage {","lastModifiedDate":"2021-04-08"},{"lineNumber":168,"author":{"gitId":"weixue123"},"content":"        private JsonChimIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-04-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"weixue123"},"content":"        public void saveChim(ReadOnlyChim chim, Path filePath) throws IOException {","lastModifiedDate":"2021-04-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"AhQuanz":5,"laurenlhy":5,"weixue123":47,"daniellau88":1,"-":118,"aaronsms":1}},{"path":"src/test/java/chim/logic/commands/AddCheeseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings.PanelToShow;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CheeseBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"public class AddCheeseCommandTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"    public void constructor_nullFields_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCheeseCommand(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"    public void execute_cheeseAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"        Cheese validCheese \u003d new CheeseBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"        ModelStubAcceptingCheeseAdded modelStub \u003d new ModelStubAcceptingCheeseAdded();","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"        CommandResult commandResult \u003d new AddCheeseCommand(new Cheese[] { validCheese }).execute(modelStub);","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"        assertEquals(AddCheeseCommand.MESSAGE_SUCCESS + \"\\n\" + validCheese,","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"        assertEquals(Arrays.asList(validCheese), modelStub.cheesesAdded);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"        assertEquals(modelStub.getGuiSettings().getPanel(), PanelToShow.CHEESE_LIST);","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"    public void equals() {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"        Cheese parmesan \u003d new CheeseBuilder().withCheeseType(\"Parmesan\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"        Cheese brie \u003d new CheeseBuilder().withCheeseType(\"Brie\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"        AddCheeseCommand addCheeseCommand1 \u003d new AddCheeseCommand(new Cheese[] { parmesan });","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"        AddCheeseCommand addCheeseCommand2 \u003d new AddCheeseCommand(new Cheese[] { brie });","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"        assertTrue(addCheeseCommand1.equals(addCheeseCommand1));","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"        AddCheeseCommand addCheeseCommand1Copy \u003d new AddCheeseCommand(new Cheese[] { parmesan });","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"        assertTrue(addCheeseCommand1.equals(addCheeseCommand1Copy));","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"        assertFalse(addCheeseCommand1.equals(1));","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"        assertFalse(addCheeseCommand1.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"        assertFalse(addCheeseCommand1.equals(addCheeseCommand2));","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"     * A Model stub that always accepts the cheese being added.","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"    private class ModelStubAcceptingCheeseAdded extends ModelStub {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"        final ArrayList\u003cCheese\u003e cheesesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"        private final ReadOnlyUserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"        public boolean hasCheese(Cheese cheese) {","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"            requireNonNull(cheese);","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"            return cheesesAdded.stream().anyMatch(cheese::isSameCheese);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"        public void addCheese(Cheese cheese) {","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"            requireNonNull(cheese);","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"            cheesesAdded.add(cheese);","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"aaronsms"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"aaronsms"},"content":"            return userPrefs.getGuiSettings();","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"aaronsms"},"content":"        public void setPanelToCheeseList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"aaronsms"},"content":"            getGuiSettings().setPanelToCheeseList();","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"weixue123"},"content":"        public ReadOnlyChim getChim() {","lastModifiedDate":"2021-04-08"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"            return new Chim();","lastModifiedDate":"2021-04-08"},{"lineNumber":101,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"weixue123":13,"aaronsms":91}},{"path":"src/test/java/chim/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.OrderIdStub;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CheeseBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CustomerBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.testutil.OrderBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.testutil.TypicalOrder;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"        model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"    public void execute_newCustomer_success() {","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.addCustomer(validCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"        expectedModel.setPanelToCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"        assertCommandSuccess(new AddCustomerCommand(validCustomer), model,","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"                String.format(AddCustomerCommand.MESSAGE_SUCCESS, validCustomer), expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"    public void execute_duplicateCustomer_throwsCommandException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"        Customer customerInList \u003d model.getChim().getCustomerList().get(0);","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"        assertCommandFailure(new AddCustomerCommand(customerInList), model,","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"                AddCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"    public void execute_newCheese_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"        Cheese validCheese \u003d new CheeseBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"        expectedModel.addCheese(validCheese);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"        expectedModel.setPanelToCheeseList();","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"        String successMessage \u003d AddCheeseCommand.MESSAGE_SUCCESS + \"\\n\" + validCheese;","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"        assertCommandSuccess(new AddCheeseCommand(new Cheese[] { validCheese }), model, successMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"    public void execute_newCheeses_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"        Cheese validCheese1 \u003d new CheeseBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"        Cheese validCheese2 \u003d new CheeseBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"        Cheese validCheese3 \u003d new CheeseBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"        expectedModel.addCheese(validCheese1);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"        expectedModel.addCheese(validCheese2);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"        expectedModel.addCheese(validCheese3);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"        expectedModel.setPanelToCheeseList();","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"        String successMessage \u003d AddCheeseCommand.MESSAGE_SUCCESS + \"\\n\" + validCheese1 + \"\\n\" + validCheese2","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"                + \"\\n\" + validCheese3;","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"        assertCommandSuccess(new AddCheeseCommand(new Cheese[] { validCheese1, validCheese2, validCheese3 }),","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"                model, successMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"aaronsms"},"content":"    public void execute_newOrderWithCustomerPresent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"weixue123"},"content":"        Phone customerPhoneInList \u003d new Phone(model.getChim().getCustomerList().get(0).getPhone().value);","lastModifiedDate":"2021-04-08"},{"lineNumber":90,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"aaronsms"},"content":"        Order validOrder \u003d new OrderBuilder(TypicalOrder.ORDER_CAMEMBERT)","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"aaronsms"},"content":"                .withCompletedDate(null).withOrderId(OrderIdStub.getNextId()).withCheeses(new HashSet\u003c\u003e()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":95,"author":{"gitId":"aaronsms"},"content":"        expectedModel.addOrder(validOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"aaronsms"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"aaronsms"},"content":"        assertCommandSuccess(new AddOrderCommand(validOrder.getCheeseType(), customerPhoneInList,","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"aaronsms"},"content":"                validOrder.getQuantity(), validOrder.getOrderDate()), model,","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"aaronsms"},"content":"                String.format(AddOrderCommand.MESSAGE_SUCCESS, validOrder), expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"aaronsms"},"content":"    public void execute_newOrderWithCustomerAbsent_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"aaronsms"},"content":"        Order validOrder \u003d new OrderBuilder(TypicalOrder.ORDER_CAMEMBERT)","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"                .withCompletedDate(null).withCheeses(Set.of())","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"daniellau88"},"content":"                .withOrderId(OrderIdStub.getNextId()).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":110,"author":{"gitId":"aaronsms"},"content":"        expectedModel.addOrder(validOrder);","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"aaronsms"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"aaronsms"},"content":"        assertCommandFailure(new AddOrderCommand(validOrder.getCheeseType(), new Phone(\"55555555\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"aaronsms"},"content":"                validOrder.getQuantity(), validOrder.getOrderDate()), model,","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"aaronsms"},"content":"                AddOrderCommand.MESSAGE_NO_CUSTOMERS_FOUND);","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"laurenlhy":4,"weixue123":24,"daniellau88":3,"-":24,"aaronsms":62}},{"path":"src/test/java/chim/logic/commands/AddCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings.PanelToShow;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CustomerBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"public class AddCustomerCommandTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"    public void constructor_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCustomerCommand(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"    public void execute_customerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"        ModelStubAcceptingCustomerAdded modelStub \u003d new ModelStubAcceptingCustomerAdded();","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"        CommandResult commandResult \u003d new AddCustomerCommand(validCustomer).execute(modelStub);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"        assertEquals(String.format(AddCustomerCommand.MESSAGE_SUCCESS, validCustomer),","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"        assertEquals(Arrays.asList(validCustomer), modelStub.customersAdded);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"        assertEquals(modelStub.getGuiSettings().getPanel(), PanelToShow.CUSTOMER_LIST);","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"    public void execute_duplicateCustomer_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"        AddCustomerCommand addCommand \u003d new AddCustomerCommand(validCustomer);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"        ModelStub modelStub \u003d new ModelStubWithCustomer(validCustomer);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"        assertThrows(CommandException.class, AddCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER, () -\u003e addCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"                .execute(modelStub));","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"    public void equals() {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"        Customer alice \u003d new CustomerBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"        Customer bob \u003d new CustomerBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"        AddCustomerCommand addAliceCommand \u003d new AddCustomerCommand(alice);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"        AddCustomerCommand addBobCommand \u003d new AddCustomerCommand(bob);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"        AddCustomerCommand addAliceCommandCopy \u003d new AddCustomerCommand(alice);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"     * A Model stub that contains a single customer.","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"    private class ModelStubWithCustomer extends ModelStub {","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"        private final Customer customer;","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"        ModelStubWithCustomer(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"            requireNonNull(customer);","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"            this.customer \u003d customer;","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"aaronsms"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"aaronsms"},"content":"            requireNonNull(customer);","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"aaronsms"},"content":"            return this.customer.isSameCustomer(customer);","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"aaronsms"},"content":"     * A Model stub that always accept the customer being added.","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"aaronsms"},"content":"    private class ModelStubAcceptingCustomerAdded extends ModelStub {","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"aaronsms"},"content":"        final ArrayList\u003cCustomer\u003e customersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"aaronsms"},"content":"        private final ReadOnlyUserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"aaronsms"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"aaronsms"},"content":"            requireNonNull(customer);","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"aaronsms"},"content":"            return customersAdded.stream().anyMatch(customer::isSameCustomer);","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"aaronsms"},"content":"        public void addCustomer(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"aaronsms"},"content":"            requireNonNull(customer);","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"aaronsms"},"content":"            customersAdded.add(customer);","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"aaronsms"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"aaronsms"},"content":"            return userPrefs.getGuiSettings();","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"aaronsms"},"content":"        public void setPanelToCustomerList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"aaronsms"},"content":"            getGuiSettings().setPanelToCustomerList();","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"weixue123"},"content":"        public ReadOnlyChim getChim() {","lastModifiedDate":"2021-04-08"},{"lineNumber":127,"author":{"gitId":"weixue123"},"content":"            return new Chim();","lastModifiedDate":"2021-04-08"},{"lineNumber":128,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"weixue123":14,"aaronsms":117}},{"path":"src/test/java/chim/logic/commands/AddOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings.PanelToShow;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CustomerBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.testutil.OrderBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"public class AddOrderCommandTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"    public void constructor_nullFields_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddOrderCommand(null, null, null, null));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"    public void execute_orderAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"        // Instantiate a model stub with a single customer present.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"        ModelStubAcceptingOrderAddedWithCustomer modelStub \u003d new","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"            ModelStubAcceptingOrderAddedWithCustomer(validCustomer);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"        // Instantiate an AddOrderCommand with default fields in OrderBuilder and same phone","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"        Order validOrder \u003d new OrderBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"        AddOrderCommand addOrderCommand \u003d new AddOrderCommand(validOrder.getCheeseType(), validCustomer.getPhone(),","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"                validOrder.getQuantity(), validOrder.getOrderDate());","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"        CommandResult commandResult \u003d addOrderCommand.execute(modelStub);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"        Order addedOrder \u003d modelStub.getOrderAdded();","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"        assertTrue(addedOrder !\u003d null);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"        assertEquals(String.format(AddOrderCommand.MESSAGE_SUCCESS, addedOrder),","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"        assertTrue(modelStub.ordersAdded.size() \u003d\u003d 1);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"        assertEquals(modelStub.getGuiSettings().getPanel(), PanelToShow.ORDER_LIST);","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"    public void execute_customerPhoneNotFound_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"        ModelStubAcceptingOrderAddedWithCustomer modelStub \u003d new","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"            ModelStubAcceptingOrderAddedWithCustomer(validCustomer);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"        Order validOrder \u003d new OrderBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"        AddOrderCommand addOrderCommand \u003d new AddOrderCommand(validOrder.getCheeseType(), new Phone(\"65889999\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"                validOrder.getQuantity(), validOrder.getOrderDate());","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"        assertThrows(CommandException.class, AddOrderCommand.MESSAGE_NO_CUSTOMERS_FOUND, () -\u003e addOrderCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"                .execute(modelStub));","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"    public void equals() {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"        Phone phone \u003d new CustomerBuilder().build().getPhone();","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"        Order order1 \u003d new OrderBuilder().withOrderDate(\"2020-12-30\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"        Order order2 \u003d new OrderBuilder().withOrderDate(\"2020-12-31\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"        AddOrderCommand addOrderCommand1 \u003d new AddOrderCommand(order1.getCheeseType(), phone,","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"                order1.getQuantity(), order1.getOrderDate());","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"        AddOrderCommand addOrderCommand2 \u003d new AddOrderCommand(order2.getCheeseType(), phone,","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"                order2.getQuantity(), order2.getOrderDate());","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"        assertTrue(addOrderCommand1.equals(addOrderCommand1));","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"        AddOrderCommand addOrderCommand1Copy \u003d new AddOrderCommand(order1.getCheeseType(),","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"                phone, order1.getQuantity(), order1.getOrderDate());","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"        assertTrue(addOrderCommand1.equals(addOrderCommand1Copy));","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"aaronsms"},"content":"        assertFalse(addOrderCommand1.equals(1));","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"aaronsms"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"aaronsms"},"content":"        assertFalse(addOrderCommand1.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"aaronsms"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"aaronsms"},"content":"        assertFalse(addOrderCommand1.equals(addOrderCommand2));","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"aaronsms"},"content":"     * A Model stub that accepts the order being added referencing existing customer.","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"aaronsms"},"content":"    private class ModelStubAcceptingOrderAddedWithCustomer extends ModelStub {","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"aaronsms"},"content":"        final Customer singleCustomer;","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"aaronsms"},"content":"        final ArrayList\u003cOrder\u003e ordersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"aaronsms"},"content":"        private final ReadOnlyUserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"aaronsms"},"content":"        public ModelStubAcceptingOrderAddedWithCustomer(Customer validCustomer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"aaronsms"},"content":"            requireNonNull(validCustomer);","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"aaronsms"},"content":"            singleCustomer \u003d validCustomer;","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"aaronsms"},"content":"        private Order getOrderAdded() {","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"aaronsms"},"content":"            return !ordersAdded.isEmpty() ? ordersAdded.get(0) : null;","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"aaronsms"},"content":"        public boolean hasCustomerWithPhone(Phone phone) {","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"aaronsms"},"content":"            requireNonNull(phone);","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"aaronsms"},"content":"            return singleCustomer.getPhone().equals(phone);","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"aaronsms"},"content":"        public Customer getCustomerWithPhone(Phone phone) {","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"aaronsms"},"content":"            requireNonNull(phone);","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"aaronsms"},"content":"            if (hasCustomerWithPhone(phone)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"aaronsms"},"content":"                return singleCustomer;","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"aaronsms"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"aaronsms"},"content":"                return null;","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"aaronsms"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"aaronsms"},"content":"        public void addOrder(Order order) {","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"aaronsms"},"content":"            requireNonNull(order);","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"aaronsms"},"content":"            ordersAdded.add(order);","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"aaronsms"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"aaronsms"},"content":"            return userPrefs.getGuiSettings();","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"aaronsms"},"content":"        public void setPanelToOrderList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"aaronsms"},"content":"            getGuiSettings().setPanelToOrderList();","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"aaronsms"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"weixue123"},"content":"        public ReadOnlyChim getChim() {","lastModifiedDate":"2021-04-08"},{"lineNumber":149,"author":{"gitId":"weixue123"},"content":"            return new Chim();","lastModifiedDate":"2021-04-08"},{"lineNumber":150,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"weixue123":17,"aaronsms":136}},{"path":"src/test/java/chim/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"    public void execute_emptyChim_success() {","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"    public void execute_nonEmptyChim_success() {","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"        Model model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"        expectedModel.setChim(new Chim());","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"weixue123":12,"-":20}},{"path":"src/test/java/chim/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"weixue123":1,"-":53}},{"path":"src/test/java/chim/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_MANUFACTURE_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ORDER_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.predicates.CheeseCheeseTypePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerNamePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"import chim.model.order.predicates.OrderIdPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"import chim.testutil.EditCheeseDescriptorBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"import chim.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"import chim.testutil.EditOrderDescriptorBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"    public static final String VALID_PHONE_CARL \u003d \"95352563\";","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"    public static final EditCustomerCommand.EditCustomerDescriptor DESC_AMY;","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"    public static final EditCustomerCommand.EditCustomerDescriptor DESC_BOB;","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"AhQuanz"},"content":"    public static final EditOrderCommand.EditOrderDescriptor DESC_BRIE;","lastModifiedDate":"2021-04-08"},{"lineNumber":77,"author":{"gitId":"AhQuanz"},"content":"    public static final EditOrderCommand.EditOrderDescriptor DESC_MOZZARELLA;","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"laurenlhy"},"content":"    public static final EditCheeseCommand.EditCheeseDescriptor DESC_EDIT_CHEESE;","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"    public static final int VALID_QUANTITY_1 \u003d 1;","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"AhQuanz"},"content":"    public static final int VALID_QUANTITY_2 \u003d 2;","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"    public static final int VALID_QUANTITY_5 \u003d 5;","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_CHEESE_TYPE_BRIE \u003d \"Brie\";","lastModifiedDate":"2021-03-04"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_CHEESE_TYPE_CAMEMBERT \u003d \"Camembert\";","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_CHEESE_TYPE_FETA \u003d \"Feta\";","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"laurenlhy"},"content":"    public static final String VALID_CHEESE_TYPE_MOZZARELLA \u003d \"Mozzarella\";","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_CHEESE_TYPE_GOUDA \u003d \"Gouda\";","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_MANUFACTURE_DATE_1 \u003d \"2021-03-04 07:00\";","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_MANUFACTURE_DATE_2 \u003d \"2021-03-06 07:00\";","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"AhQuanz"},"content":"    public static final String VALID_MANUFACTURE_DATE_3 \u003d \"2021-03-10 07:00\";","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"AhQuanz"},"content":"    public static final String VALID_MANUFACTURE_DATE_4 \u003d \"2021-03-12 07:00\";","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_MANUFACTURE_DATE_5 \u003d \"2021-03-12 07:00\";","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_EXPIRY_DATE_1 \u003d \"2022-03-12 06:00\";","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_EXPIRY_DATE_2 \u003d \"2023-04-04 06:00\";","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"AhQuanz"},"content":"    public static final String VALID_EXPIRY_DATE_3 \u003d \"2024-04-10 06:00\";","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"AhQuanz"},"content":"    public static final String VALID_EXPIRY_DATE_4 \u003d \"2025-04-15 06:00\";","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_EXPIRY_DATE_5 \u003d \"2023-05-15 06:00\";","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"weixue123"},"content":"    public static final String VALID_CHEESE_ASSIGNED_STATUS \u003d \"assigned\";","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"    public static final String VALID_CHEESE_UNASSIGNED_STATUS \u003d \"unassigned\";","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_ORDER_DATE_1 \u003d \"2021-02-05 07:00\";","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_ORDER_DATE_2 \u003d \"2021-03-06 08:00\";","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"AhQuanz"},"content":"    public static final String VALID_ORDER_DATE_3 \u003d \"2021-03-07 08:00\";","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"AhQuanz"},"content":"    public static final String VALID_ORDER_DATE_4 \u003d \"2021-03-08 08:00\";","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_ORDER_DATE_5 \u003d \"2021-03-11 08:00\";","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_COMPLETED_DATE_1 \u003d \"2021-08-10 13:00\";","lastModifiedDate":"2021-04-06"},{"lineNumber":107,"author":{"gitId":"daniellau88"},"content":"    public static final String VALID_COMPLETED_DATE_2 \u003d \"2021-08-06 10:00\";","lastModifiedDate":"2021-04-06"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"    public static final String INVALID_EXPIRY_DATE_1 \u003d \"2000-03-04 06:00\";","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"    public static final String INVALID_COMPLETED_DATE_1 \u003d \"2020-03-06 10:00\"; // Before order date","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"weixue123"},"content":"    public static final String VALID_ORDER_COMPLETE_STATUS \u003d \"complete\";","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"weixue123"},"content":"    public static final String VALID_ORDER_INCOMPLETE_STATUS \u003d \"incomplete\";","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"aaronsms"},"content":"    public static final String CHEESE_TYPE_DESC_CAMEMBERT \u003d \" \" + PREFIX_CHEESE_TYPE + VALID_CHEESE_TYPE_CAMEMBERT;","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"aaronsms"},"content":"    public static final String CHEESE_TYPE_DESC_FETA \u003d \" \" + PREFIX_CHEESE_TYPE + VALID_CHEESE_TYPE_FETA;","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"AhQuanz"},"content":"    public static final String CHEESE_TYPE_DESC_GOUDA \u003d \" \" + PREFIX_CHEESE_TYPE + VALID_CHEESE_TYPE_GOUDA;","lastModifiedDate":"2021-04-08"},{"lineNumber":116,"author":{"gitId":"aaronsms"},"content":"    public static final String QUANTITY_DESC \u003d \" \" + PREFIX_QUANTITY + VALID_QUANTITY_1;","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"aaronsms"},"content":"    public static final String QUANTITY_5_DESC \u003d \" \" + PREFIX_QUANTITY + VALID_QUANTITY_5;","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"aaronsms"},"content":"    public static final String MANUFACTURE_DATE_DESC \u003d \" \" + PREFIX_MANUFACTURE_DATE + VALID_MANUFACTURE_DATE_1;","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"aaronsms"},"content":"    public static final String EXPIRY_DATE_DESC \u003d \" \" + PREFIX_EXPIRY_DATE + VALID_EXPIRY_DATE_1;","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"aaronsms"},"content":"    public static final String ORDER_DATE_DESC \u003d \" \" + PREFIX_ORDER_DATE + VALID_ORDER_DATE_1;","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"aaronsms"},"content":"    public static final String ORDER_DATE_DESC_FETA \u003d \" \" + PREFIX_ORDER_DATE + VALID_ORDER_DATE_2;","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"AhQuanz"},"content":"    public static final String CARL_PHONE_DESC \u003d \" \" + PREFIX_PHONE + VALID_PHONE_CARL;","lastModifiedDate":"2021-04-08"},{"lineNumber":123,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"laurenlhy"},"content":"    public static final String CHEESE_TYPE_DESC_MOZZARELLA \u003d \" \" + PREFIX_CHEESE_TYPE + VALID_CHEESE_TYPE_MOZZARELLA;","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"laurenlhy"},"content":"    public static final String EXPIRY_DATE_5_DESC \u003d \" \" + PREFIX_EXPIRY_DATE + VALID_EXPIRY_DATE_5;","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"laurenlhy"},"content":"    public static final String MANUFACTURE_DATE_5_DESC \u003d \" \" + PREFIX_MANUFACTURE_DATE + VALID_MANUFACTURE_DATE_5;","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"aaronsms"},"content":"    public static final String INVALID_CHEESE_TYPE_DESC \u003d \" \" + PREFIX_CHEESE_TYPE + \"\"; // Blanks not allowed","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"aaronsms"},"content":"    public static final String INVALID_QUANTITY_DESC \u003d \" \" + PREFIX_QUANTITY + \"911a\"; // \u0027a\u0027 not allowed in quantity","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"aaronsms"},"content":"    public static final String INVALID_ORDER_DATE_DESC \u003d \" \" + PREFIX_ORDER_DATE + \"20-05$-2020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"aaronsms"},"content":"    public static final String INVALID_MANUFACTURE_DATE_DESC \u003d \" \" + PREFIX_MANUFACTURE_DATE + \"20-05-2020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"aaronsms"},"content":"    public static final String INVALID_EXPIRY_DATE_DESC \u003d \" \" + PREFIX_EXPIRY_DATE + \"12 Feb 2020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":136,"author":{"gitId":"laurenlhy"},"content":"        DESC_AMY \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":139,"author":{"gitId":"laurenlhy"},"content":"        DESC_BOB \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":142,"author":{"gitId":"laurenlhy"},"content":"        DESC_EDIT_CHEESE \u003d new EditCheeseDescriptorBuilder()","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"laurenlhy"},"content":"                .withCheeseType(CheeseType.getCheeseType(VALID_CHEESE_TYPE_MOZZARELLA))","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"daniellau88"},"content":"                .withManufactureDate(VALID_MANUFACTURE_DATE_5)","lastModifiedDate":"2021-04-05"},{"lineNumber":145,"author":{"gitId":"laurenlhy"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_5).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":147,"author":{"gitId":"AhQuanz"},"content":"        DESC_BRIE \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2021-04-07"},{"lineNumber":148,"author":{"gitId":"AhQuanz"},"content":"                .withCheeseType(VALID_CHEESE_TYPE_BRIE).withQuantity(VALID_QUANTITY_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":149,"author":{"gitId":"AhQuanz"},"content":"                .withOrderDate(VALID_ORDER_DATE_3)","lastModifiedDate":"2021-04-08"},{"lineNumber":150,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":151,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":152,"author":{"gitId":"AhQuanz"},"content":"        DESC_MOZZARELLA \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2021-04-08"},{"lineNumber":153,"author":{"gitId":"AhQuanz"},"content":"                .withCheeseType(VALID_CHEESE_TYPE_MOZZARELLA).withQuantity(VALID_QUANTITY_2)","lastModifiedDate":"2021-04-08"},{"lineNumber":154,"author":{"gitId":"AhQuanz"},"content":"                .withOrderDate(VALID_ORDER_DATE_4)","lastModifiedDate":"2021-04-08"},{"lineNumber":155,"author":{"gitId":"AhQuanz"},"content":"                .withPhone(VALID_PHONE_CARL)","lastModifiedDate":"2021-04-08"},{"lineNumber":156,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":189,"author":{"gitId":"weixue123"},"content":"     * - the Chim object and the filtered customers list remain unchanged after execution.","lastModifiedDate":"2021-04-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":194,"author":{"gitId":"weixue123"},"content":"        Chim expectedChim \u003d new Chim(actualModel.getChim());","lastModifiedDate":"2021-04-08"},{"lineNumber":195,"author":{"gitId":"laurenlhy"},"content":"        List\u003cCustomer\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredCustomerList());","lastModifiedDate":"2021-03-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":198,"author":{"gitId":"weixue123"},"content":"        assertEquals(expectedChim, actualModel.getChim());","lastModifiedDate":"2021-04-08"},{"lineNumber":199,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredCustomerList());","lastModifiedDate":"2021-03-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":202,"author":{"gitId":"weixue123"},"content":"     * Updates {@code model}\u0027s filtered customers list to show only the customer at the given {@code targetIndex}.","lastModifiedDate":"2021-04-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":204,"author":{"gitId":"laurenlhy"},"content":"    public static void showCustomerAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-07"},{"lineNumber":205,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredCustomerList().size());","lastModifiedDate":"2021-03-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":207,"author":{"gitId":"laurenlhy"},"content":"        Customer customer \u003d model.getFilteredCustomerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":208,"author":{"gitId":"laurenlhy"},"content":"        final String[] splitName \u003d customer.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-07"},{"lineNumber":209,"author":{"gitId":"daniellau88"},"content":"        model.updateFilteredCustomerList(new CustomerNamePredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":211,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(1, model.getFilteredCustomerList().size());","lastModifiedDate":"2021-03-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":215,"author":{"gitId":"weixue123"},"content":"     * Updates {@code model}\u0027s filtered cheeses list to show only the cheese at the given {@code targetIndex}.","lastModifiedDate":"2021-04-08"},{"lineNumber":216,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":217,"author":{"gitId":"laurenlhy"},"content":"    public static void showCheeseAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":218,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredCheeseList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"laurenlhy"},"content":"        Cheese cheese \u003d model.getFilteredCheeseList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"laurenlhy"},"content":"        final String[] splitName \u003d cheese.getCheeseType().toString().split(\"\\\\s+\");","lastModifiedDate":"2021-03-14"},{"lineNumber":222,"author":{"gitId":"daniellau88"},"content":"        model.updateFilteredCheeseList(new CheeseCheeseTypePredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-16"},{"lineNumber":223,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":224,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(1, model.getFilteredCheeseList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":225,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":226,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":227,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":228,"author":{"gitId":"weixue123"},"content":"     * Updates {@code model}\u0027s filtered order list to show only the order at the given {@code targetIndex}.","lastModifiedDate":"2021-04-08"},{"lineNumber":229,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":230,"author":{"gitId":"laurenlhy"},"content":"    public static void showOrderAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":231,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredOrderList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":232,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":233,"author":{"gitId":"laurenlhy"},"content":"        Order order \u003d model.getFilteredOrderList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":234,"author":{"gitId":"laurenlhy"},"content":"        final String[] splitName \u003d order.getOrderId().toString().split(\"\\\\s+\");","lastModifiedDate":"2021-03-14"},{"lineNumber":235,"author":{"gitId":"daniellau88"},"content":"        model.updateFilteredOrderList(new OrderIdPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-16"},{"lineNumber":236,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":237,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(1, model.getFilteredOrderList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":238,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"AhQuanz":24,"laurenlhy":40,"weixue123":36,"daniellau88":25,"-":97,"aaronsms":17}},{"path":"src/test/java/chim/logic/commands/DeleteCheeseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.showCheeseAtIndex;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_CHEESE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_SECOND_CHEESE;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_THIRD_CHEESE;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":" * {@code DeleteCheeseCommand}.","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"public class DeleteCheeseCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"    private Model model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"        Cheese cheeseToDelete \u003d model.getFilteredCheeseList().get(INDEX_THIRD_CHEESE.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"        DeleteCheeseCommand deleteCheeseCommand \u003d new DeleteCheeseCommand(INDEX_THIRD_CHEESE);","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"        String expectedMessage \u003d String.format(DeleteCheeseCommand.MESSAGE_DELETE_CHEESE_SUCCESS,","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"                cheeseToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.deleteCheese(cheeseToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setPanelToCheeseList();","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"        assertCommandSuccess(deleteCheeseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCheeseList().size() + 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"        DeleteCheeseCommand deleteCheeseCommand \u003d new DeleteCheeseCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"laurenlhy"},"content":"        assertCommandFailure(deleteCheeseCommand, model, Messages.MESSAGE_INVALID_CHEESE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"        showCheeseAtIndex(model, INDEX_THIRD_CHEESE);","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"        Cheese cheeseToDelete \u003d model.getFilteredCheeseList().get(INDEX_FIRST_CHEESE.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"laurenlhy"},"content":"        DeleteCheeseCommand deleteCheeseCommand \u003d new DeleteCheeseCommand(INDEX_FIRST_CHEESE);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"laurenlhy"},"content":"        String expectedMessage \u003d String.format(DeleteCheeseCommand.MESSAGE_DELETE_CHEESE_SUCCESS,","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"laurenlhy"},"content":"                cheeseToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.deleteCheese(cheeseToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"laurenlhy"},"content":"        showNoCheese(expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setPanelToCheeseList();","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"        assertCommandSuccess(deleteCheeseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"    public void execute_invalidAssignedCheese_throwsCommandException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"        showCheeseAtIndex(model, INDEX_SECOND_CHEESE);","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"        Cheese cheeseToDelete \u003d model.getFilteredCheeseList().get(INDEX_FIRST_CHEESE.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"        DeleteCheeseCommand deleteCheeseCommand \u003d new DeleteCheeseCommand(INDEX_FIRST_CHEESE);","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_CHEESE_ASSIGNED_TO_COMPLETED_ORDER;","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"        assertCommandFailure(deleteCheeseCommand, model, expectedMessage);","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"laurenlhy"},"content":"        showCheeseAtIndex(model, INDEX_SECOND_CHEESE);","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"laurenlhy"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"weixue123"},"content":"        // ensures that outOfBoundIndex is still in bounds of CHIM\u0027s full cheeses list","lastModifiedDate":"2021-04-08"},{"lineNumber":89,"author":{"gitId":"weixue123"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getChim().getCheeseList().size());","lastModifiedDate":"2021-04-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"laurenlhy"},"content":"        DeleteCheeseCommand deleteCheeseCommand \u003d new DeleteCheeseCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"laurenlhy"},"content":"        assertCommandFailure(deleteCheeseCommand, model, Messages.MESSAGE_INVALID_CHEESE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"laurenlhy"},"content":"        DeleteCheeseCommand deleteFirstCommand \u003d new DeleteCheeseCommand(INDEX_FIRST_CHEESE);","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"laurenlhy"},"content":"        DeleteCheeseCommand deleteSecondCommand \u003d new DeleteCheeseCommand(INDEX_SECOND_CHEESE);","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"laurenlhy"},"content":"        DeleteCheeseCommand deleteFirstCommandCopy \u003d new DeleteCheeseCommand(INDEX_FIRST_CHEESE);","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"laurenlhy"},"content":"        // different cheese -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"laurenlhy"},"content":"    private void showNoCheese(Model model) {","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"daniellau88"},"content":"        model.updateFilteredCheeseList(FieldPredicate.getEmptyPredicate());","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(model.getFilteredCheeseList().isEmpty());","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"laurenlhy":28,"weixue123":20,"daniellau88":16,"-":62}},{"path":"src/test/java/chim/logic/commands/DeleteCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCheese.CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCheese.CAMEMBERT_2;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCheese.FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_TYPICAL_CUSTOMER;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalOrder.ORDER_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalOrder.ORDER_CAMEMBERT_2;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalOrder.ORDER_FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":" * {@code DeleteCustomerCommand}.","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"public class DeleteCustomerCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    private Model model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"    public void execute_validPhoneUnfilteredList_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"        Customer customerToDelete \u003d model.getFilteredCustomerList().get(INDEX_TYPICAL_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(customerToDelete.getPhone());","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"        String expectedMessage \u003d String.format(DeleteCustomerCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS,","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"laurenlhy"},"content":"                customerToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.deleteCustomer(customerToDelete);","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"        expectedModel.setPanelToCustomerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"        assertCommandSuccess(deleteCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"laurenlhy"},"content":"    public void execute_invalidPhoneUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"        Phone invalidPhone \u003d new Phone(\"000\");","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(invalidPhone);","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"        assertCommandFailure(deleteCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_PHONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"laurenlhy"},"content":"    public void execute_validPhoneFilteredList_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"laurenlhy"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"laurenlhy"},"content":"        Customer customerToDelete \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"laurenlhy"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"                new Phone(customerToDelete.getPhone().value));","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"laurenlhy"},"content":"        String expectedMessage \u003d String.format(DeleteCustomerCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS,","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"laurenlhy"},"content":"                customerToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":74,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.deleteCustomer(customerToDelete);","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"weixue123"},"content":"        assertFalse(expectedModel.hasOrder(ORDER_CAMEMBERT));","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"        assertFalse(expectedModel.hasCheese(CAMEMBERT));","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"weixue123"},"content":"        expectedModel.setPanelToCustomerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"laurenlhy"},"content":"        showNoCustomer(expectedModel);","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"laurenlhy"},"content":"        assertCommandSuccess(deleteCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"laurenlhy"},"content":"    public void execute_validPhoneFilteredListDoubleOrders_success() {","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"laurenlhy"},"content":"        Customer customerToDelete \u003d model.getFilteredCustomerList().get(INDEX_SECOND_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"laurenlhy"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"laurenlhy"},"content":"                new Phone(customerToDelete.getPhone().value));","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"laurenlhy"},"content":"        String expectedMessage \u003d String.format(DeleteCustomerCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS,","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"laurenlhy"},"content":"                customerToDelete);","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":93,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.deleteCustomer(customerToDelete);","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"weixue123"},"content":"        assertFalse(expectedModel.hasOrder(ORDER_FETA));","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"weixue123"},"content":"        assertFalse(expectedModel.hasOrder(ORDER_CAMEMBERT_2));","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"weixue123"},"content":"        assertFalse(expectedModel.hasCheese(FETA));","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"weixue123"},"content":"        assertFalse(expectedModel.hasCheese(CAMEMBERT_2));","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setPanelToCustomerList();","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"laurenlhy"},"content":"        assertCommandSuccess(deleteCustomerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"laurenlhy"},"content":"    public void execute_invalidPhoneFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"laurenlhy"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"laurenlhy"},"content":"        Phone invalidPhone \u003d new Phone(\"000\");","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"laurenlhy"},"content":"        DeleteCustomerCommand deleteCustomerCommand \u003d new DeleteCustomerCommand(invalidPhone);","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"laurenlhy"},"content":"        assertCommandFailure(deleteCustomerCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_PHONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"laurenlhy"},"content":"        DeleteCustomerCommand deleteFirstCommand \u003d new DeleteCustomerCommand(ALICE.getPhone());","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"laurenlhy"},"content":"        DeleteCustomerCommand deleteSecondCommand \u003d new DeleteCustomerCommand(BENSON.getPhone());","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"laurenlhy"},"content":"        DeleteCustomerCommand deleteFirstCommandCopy \u003d new DeleteCustomerCommand(ALICE.getPhone());","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"laurenlhy"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"laurenlhy"},"content":"    private void showNoCustomer(Model model) {","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"daniellau88"},"content":"        model.updateFilteredCustomerList(FieldPredicate.getEmptyPredicate());","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(model.getFilteredCustomerList().isEmpty());","lastModifiedDate":"2021-03-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"laurenlhy":49,"weixue123":36,"daniellau88":1,"-":58}},{"path":"src/test/java/chim/logic/commands/DeleteOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Name;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":" * {@code DeleteOrderCommand}.","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"public class DeleteOrderCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"    private Model model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"        Order orderToDelete \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"        Name name \u003d model.getCustomerWithId(orderToDelete.getCustomerId()).getName();","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"        String expectedMessage \u003d String.format(DeleteOrderCommand.MESSAGE_DELETE_ORDER_SUCCESS,","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"                orderToDelete, name);","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.deleteOrder(orderToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"        assertCommandSuccess(deleteOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"laurenlhy"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"        assertCommandFailure(deleteOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"laurenlhy"},"content":"        Order orderToDelete \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"        Name name \u003d model.getCustomerWithId(orderToDelete.getCustomerId()).getName();","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"laurenlhy"},"content":"        String expectedMessage \u003d String.format(DeleteOrderCommand.MESSAGE_DELETE_ORDER_SUCCESS,","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"                orderToDelete, name);","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.deleteOrder(orderToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"laurenlhy"},"content":"        showNoOrder(expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"laurenlhy"},"content":"        assertCommandSuccess(deleteOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"laurenlhy"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"laurenlhy"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ORDER;","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"weixue123"},"content":"        // ensures that outOfBoundIndex is still in bounds of CHIM\u0027s full order list","lastModifiedDate":"2021-04-08"},{"lineNumber":79,"author":{"gitId":"weixue123"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getChim().getOrderList().size());","lastModifiedDate":"2021-04-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"laurenlhy"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"laurenlhy"},"content":"        assertCommandFailure(deleteOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"laurenlhy"},"content":"        DeleteOrderCommand deleteFirstCommand \u003d new DeleteOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"laurenlhy"},"content":"        DeleteOrderCommand deleteSecondCommand \u003d new DeleteOrderCommand(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"laurenlhy"},"content":"        DeleteOrderCommand deleteFirstCommandCopy \u003d new DeleteOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"laurenlhy"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"laurenlhy"},"content":"    private void showNoOrder(Model model) {","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"        model.updateFilteredOrderList(FieldPredicate.getEmptyPredicate());","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(model.getFilteredOrderList().isEmpty());","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"AhQuanz":4,"laurenlhy":29,"weixue123":20,"daniellau88":1,"-":62}},{"path":"src/test/java/chim/logic/commands/DoneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.model.AbstractDate.TO_JSON_STRING_FORMATTER;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_COMPLETED_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_INSUFFICENT_CHEESE_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_UNCOMPLETED_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.testutil.OrderBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"    private Model model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"        Order order \u003d model.getFilteredOrderList().get(INDEX_UNCOMPLETED_ORDER.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"        Order updatedOrder \u003d new OrderBuilder(order)","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"                .withCompletedDate(LocalDateTime.now().format(TO_JSON_STRING_FORMATTER))","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"                .withCheeses(expectedModel.getUnassignedCheeses(order.getCheeseType(), order.getQuantity()))","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_UNCOMPLETED_ORDER);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(DoneCommand.MESSAGE_MARK_ORDER_DONE_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"                updatedOrder);","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setOrder(order , updatedOrder);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.updateCheesesStatus(updatedOrder.getCheeses());","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"    public void execute_invalidOrderIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"        assertCommandFailure(doneCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"    public void execute_validIndexfilteredList_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"        showOrderAtIndex(model, INDEX_UNCOMPLETED_ORDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"        Order order \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(model.getChim(), model.getUserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"        Order updatedOrder \u003d new OrderBuilder(order)","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"                .withCompletedDate(LocalDateTime.now().format(TO_JSON_STRING_FORMATTER))","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"                .withCheeses(expectedModel.getUnassignedCheeses(order.getCheeseType(), order.getQuantity()))","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(DoneCommand.MESSAGE_MARK_ORDER_DONE_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":"                updatedOrder);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setOrder(order , updatedOrder);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.updateCheesesStatus(updatedOrder.getCheeses());","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"AhQuanz"},"content":"    public void execute_invalidOrderIndexfilteredList_failure() {","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"AhQuanz"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"AhQuanz"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"AhQuanz"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"AhQuanz"},"content":"        assertCommandFailure(doneCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-08"},{"lineNumber":88,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"AhQuanz"},"content":"    public void execute_completedOrderUnfilteredList_failure() {","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"AhQuanz"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_COMPLETED_ORDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"AhQuanz"},"content":"        assertCommandFailure(doneCommand, model, Messages.MESSAGE_INVALID_ORDER_COMPLETE);","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"AhQuanz"},"content":"    public void execute_completedOrderfilteredList_failure() {","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"AhQuanz"},"content":"        showOrderAtIndex(model, INDEX_COMPLETED_ORDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"AhQuanz"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"AhQuanz"},"content":"        assertCommandFailure(doneCommand, model, Messages.MESSAGE_INVALID_ORDER_COMPLETE);","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"AhQuanz"},"content":"    public void execute_insufficentCheeseOrderUnfilteredList_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"AhQuanz"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_INSUFFICENT_CHEESE_ORDER);","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"AhQuanz"},"content":"        assertCommandFailure(doneCommand, model, Messages.MESSAGE_INSUFFICIENT_CHEESES_FOR_ORDER);","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"AhQuanz"},"content":"    public void execute_insufficentCheeseOrderfilteredList_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"AhQuanz"},"content":"        showOrderAtIndex(model, INDEX_INSUFFICENT_CHEESE_ORDER);","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"AhQuanz"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"AhQuanz"},"content":"        assertCommandFailure(doneCommand, model, Messages.MESSAGE_INSUFFICIENT_CHEESES_FOR_ORDER);","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"AhQuanz"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"AhQuanz"},"content":"        final DoneCommand standardCommand \u003d new DoneCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"AhQuanz"},"content":"        // Same object -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"AhQuanz"},"content":"        // Same values -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"AhQuanz"},"content":"        DoneCommand standardCommandCopy \u003d new DoneCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(standardCommand.equals(standardCommandCopy));","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"AhQuanz"},"content":"        // Different types -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(standardCommand.equals(\"COMMAND\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"AhQuanz"},"content":"        // Null -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"AhQuanz"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"AhQuanz"},"content":"        DoneCommand secondOrderCommand \u003d new DoneCommand(INDEX_SECOND_ORDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(standardCommand.equals(secondOrderCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"AhQuanz"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"AhQuanz":121,"weixue123":21}},{"path":"src/test/java/chim/logic/commands/EditCheeseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_MOZZARELLA;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_4;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.showCheeseAtIndex;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FILTERED_CHEESE;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_CHEESE;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FOURTH_CHEESE;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_SECOND_CHEESE;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_THIRD_CHEESE;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CheeseBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import chim.testutil.EditCheeseDescriptorBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCheeseCommand.","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"public class EditCheeseCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"    private Model model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"        Cheese editedCheese \u003d new CheeseBuilder().withId(model.getFilteredCheeseList().get(2).getCheeseId()).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptor \u003d new EditCheeseDescriptorBuilder(editedCheese).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand editCheeseCommand \u003d new EditCheeseCommand(INDEX_THIRD_CHEESE, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"        String expectedMessage \u003d String.format(EditCheeseCommand.MESSAGE_EDIT_CHEESE_SUCCESS, editedCheese);","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setCheese(model.getFilteredCheeseList().get(2), editedCheese);","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setPanelToCheeseList();","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"laurenlhy"},"content":"        assertCommandSuccess(editCheeseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"laurenlhy"},"content":"        Cheese cheese \u003d model.getFilteredCheeseList().get(INDEX_THIRD_CHEESE.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"        Cheese editedCheese \u003d new CheeseBuilder(cheese)","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"                .withCheeseType(VALID_CHEESE_TYPE_MOZZARELLA)","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"laurenlhy"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_4).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptor \u003d new EditCheeseDescriptorBuilder()","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"laurenlhy"},"content":"                .withCheeseType(CheeseType.getCheeseType(VALID_CHEESE_TYPE_MOZZARELLA))","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"laurenlhy"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_4).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand editCheeseCommand \u003d new EditCheeseCommand(INDEX_THIRD_CHEESE, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"laurenlhy"},"content":"        String expectedMessage \u003d String.format(EditCheeseCommand.MESSAGE_EDIT_CHEESE_SUCCESS, editedCheese);","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setCheese(model.getFilteredCheeseList().get(2), editedCheese);","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setPanelToCheeseList();","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"laurenlhy"},"content":"        assertCommandSuccess(editCheeseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"laurenlhy"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand editCheeseCommand \u003d new EditCheeseCommand(INDEX_THIRD_CHEESE,","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"laurenlhy"},"content":"                new EditCheeseCommand.EditCheeseDescriptor());","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"laurenlhy"},"content":"        Cheese editedCheese \u003d model.getFilteredCheeseList().get(INDEX_THIRD_CHEESE.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"laurenlhy"},"content":"        String expectedMessage \u003d String.format(EditCheeseCommand.MESSAGE_EDIT_CHEESE_SUCCESS, editedCheese);","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":82,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setPanelToCheeseList();","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"laurenlhy"},"content":"        assertCommandSuccess(editCheeseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"laurenlhy"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"laurenlhy"},"content":"        showCheeseAtIndex(model, INDEX_THIRD_CHEESE);","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"laurenlhy"},"content":"        Cheese cheeseInFilteredList \u003d model.getFilteredCheeseList().get(INDEX_FILTERED_CHEESE.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"laurenlhy"},"content":"        Cheese editedCheese \u003d new CheeseBuilder(cheeseInFilteredList)","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"laurenlhy"},"content":"                .withCheeseType(VALID_CHEESE_TYPE_MOZZARELLA).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptor \u003d new EditCheeseDescriptorBuilder()","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"laurenlhy"},"content":"                .withCheeseType(CheeseType.getCheeseType(VALID_CHEESE_TYPE_MOZZARELLA)).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand editCheeseCommand \u003d new EditCheeseCommand(INDEX_FILTERED_CHEESE, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"laurenlhy"},"content":"        String expectedMessage \u003d String.format(EditCheeseCommand.MESSAGE_EDIT_CHEESE_SUCCESS, editedCheese);","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":101,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setCheese(model.getFilteredCheeseList().get(0), editedCheese);","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setPanelToCheeseList();","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"laurenlhy"},"content":"        assertCommandSuccess(editCheeseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"laurenlhy"},"content":"    public void execute_assignedCheeseUnfilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"laurenlhy"},"content":"        Cheese cheese \u003d model.getFilteredCheeseList().get(INDEX_FIRST_CHEESE.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptor \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"laurenlhy"},"content":"                new EditCheeseDescriptorBuilder(cheese).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand editCheeseCommand \u003d new EditCheeseCommand(INDEX_FIRST_CHEESE, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"laurenlhy"},"content":"        assertCommandFailure(editCheeseCommand, model, EditCheeseCommand.MESSAGE_CHEESE_IS_ASSIGNED);","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"laurenlhy"},"content":"    public void execute_assignedCheeseFilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"laurenlhy"},"content":"        showCheeseAtIndex(model, INDEX_SECOND_CHEESE);","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"laurenlhy"},"content":"        Cheese cheese \u003d model.getFilteredCheeseList().get(INDEX_FILTERED_CHEESE.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptor \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"laurenlhy"},"content":"                new EditCheeseDescriptorBuilder(cheese).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand editCheeseCommand \u003d new EditCheeseCommand(INDEX_FILTERED_CHEESE, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"laurenlhy"},"content":"        assertCommandFailure(editCheeseCommand, model, EditCheeseCommand.MESSAGE_CHEESE_IS_ASSIGNED);","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"laurenlhy"},"content":"    public void execute_invalidCheeseIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"laurenlhy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCheeseList().size() + 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptor \u003d new EditCheeseDescriptorBuilder()","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"laurenlhy"},"content":"                .withCheeseType(CheeseType.getCheeseType(VALID_CHEESE_TYPE_MOZZARELLA)).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand editCheeseCommand \u003d new EditCheeseCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"laurenlhy"},"content":"        assertCommandFailure(editCheeseCommand, model, Messages.MESSAGE_INVALID_CHEESE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"laurenlhy"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"laurenlhy"},"content":"     * but smaller than size of cheese list","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"laurenlhy"},"content":"    public void execute_invalidCheeseIndexFilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"laurenlhy"},"content":"        showCheeseAtIndex(model, INDEX_THIRD_CHEESE);","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"laurenlhy"},"content":"        Index outOfBoundIndex \u003d INDEX_FOURTH_CHEESE;","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"laurenlhy"},"content":"        // ensures that outOfBoundIndex is still in bounds of cheese list","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"weixue123"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getChim().getCheeseList().size());","lastModifiedDate":"2021-04-08"},{"lineNumber":151,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptor \u003d new EditCheeseDescriptorBuilder()","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"laurenlhy"},"content":"                .withCheeseType(CheeseType.getCheeseType(VALID_CHEESE_TYPE_MOZZARELLA)).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand editCheeseCommand \u003d new EditCheeseCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"laurenlhy"},"content":"        assertCommandFailure(editCheeseCommand, model, Messages.MESSAGE_INVALID_CHEESE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"laurenlhy"},"content":"    public void equals() {","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptor \u003d new EditCheeseDescriptorBuilder()","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"laurenlhy"},"content":"                .withCheeseType(CheeseType.getCheeseType(VALID_CHEESE_TYPE_MOZZARELLA)).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"laurenlhy"},"content":"        final EditCheeseCommand standardCommand \u003d new EditCheeseCommand(INDEX_THIRD_CHEESE, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"laurenlhy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor copyDescriptor \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"laurenlhy"},"content":"                new EditCheeseCommand.EditCheeseDescriptor(descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand commandWithSameValues \u003d new EditCheeseCommand(INDEX_THIRD_CHEESE, copyDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"laurenlhy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"laurenlhy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"laurenlhy"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"laurenlhy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"laurenlhy"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"laurenlhy"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"laurenlhy"},"content":"        assertFalse(standardCommand.equals(new EditCheeseCommand(INDEX_FOURTH_CHEESE, descriptor)));","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"laurenlhy"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor newDescriptor \u003d new EditCheeseDescriptorBuilder()","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"laurenlhy"},"content":"                .withCheeseType(CheeseType.getCheeseType(VALID_CHEESE_TYPE_FETA)).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"laurenlhy"},"content":"        assertFalse(standardCommand.equals(new EditCheeseCommand(INDEX_THIRD_CHEESE, newDescriptor)));","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"laurenlhy"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"laurenlhy":158,"weixue123":30}},{"path":"src/test/java/chim/logic/commands/EditCheeseDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.DESC_EDIT_CHEESE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_MANUFACTURE_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"laurenlhy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.testutil.EditCheeseDescriptorBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"public class EditCheeseDescriptorTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":"    public void equals() {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptorWithSameValues \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"                new EditCheeseCommand.EditCheeseDescriptor(DESC_EDIT_CHEESE);","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(DESC_EDIT_CHEESE.equals(descriptorWithSameValues));","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(DESC_EDIT_CHEESE.equals(DESC_EDIT_CHEESE));","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"        assertFalse(DESC_EDIT_CHEESE.equals(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"        assertFalse(DESC_EDIT_CHEESE.equals(5));","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"        // different cheese type -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor editedCheese \u003d new EditCheeseDescriptorBuilder(DESC_EDIT_CHEESE)","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"                        .withCheeseType(CheeseType.getCheeseType(VALID_CHEESE_TYPE_CAMEMBERT)).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"        assertFalse(DESC_EDIT_CHEESE.equals(editedCheese));","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"        // different manufacture date -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"        editedCheese \u003d new EditCheeseDescriptorBuilder(DESC_EDIT_CHEESE)","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"                .withManufactureDate(VALID_MANUFACTURE_DATE_1).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"        assertFalse(DESC_EDIT_CHEESE.equals(editedCheese));","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"        // different expiry date -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"        editedCheese \u003d new EditCheeseDescriptorBuilder(DESC_EDIT_CHEESE)","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_1).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"laurenlhy"},"content":"        assertFalse(DESC_EDIT_CHEESE.equals(editedCheese));","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"laurenlhy":40,"weixue123":7}},{"path":"src/test/java/chim/logic/commands/EditCommandStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":"public class EditCommandStub extends EditCustomerCommand {","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"    public EditCommandStub(EditCustomerCommand editCommand, EditCustomerDescriptor editCustomerDescriptor) {","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"        super(editCommand.index, editCustomerDescriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"weixue123":1,"daniellau88":4,"aaronsms":2}},{"path":"src/test/java/chim/logic/commands/EditCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CustomerBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCustomerCommand.","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"public class EditCustomerCommandTest {","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"    private Model model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"        Customer editedCustomer \u003d new CustomerBuilder().withId(model.getFilteredCustomerList().get(0).getId()).build();","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"            new EditCustomerDescriptorBuilder(editedCustomer).build();","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand editCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"            String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"        expectedModel.setPanelToCustomerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"laurenlhy"},"content":"        Index indexLastCustomer \u003d Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"        Customer lastCustomer \u003d model.getFilteredCustomerList().get(indexLastCustomer.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"laurenlhy"},"content":"        CustomerBuilder customerInListInList \u003d new CustomerBuilder(lastCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"        Customer editedCustomer \u003d customerInListInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"            new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand editCommand \u003d new EditCustomerCommand(indexLastCustomer, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":70,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setCustomer(lastCustomer, editedCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"        expectedModel.setPanelToCustomerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand editCommand \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"            new EditCustomerCommand(INDEX_FIRST_CUSTOMER, new EditCustomerCommand.EditCustomerDescriptor());","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"laurenlhy"},"content":"        Customer editedCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":85,"author":{"gitId":"weixue123"},"content":"        expectedModel.setPanelToCustomerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"laurenlhy"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"laurenlhy"},"content":"        Customer customerInFilteredList \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"laurenlhy"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(customerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand editCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"laurenlhy"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"aaronsms"},"content":"        String expectedMessage \u003d String.format(EditCustomerCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":102,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2021-03-07"},{"lineNumber":103,"author":{"gitId":"weixue123"},"content":"        expectedModel.setPanelToCustomerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"laurenlhy"},"content":"    public void execute_duplicateCustomerUnfilteredList_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":110,"author":{"gitId":"laurenlhy"},"content":"        Customer firstCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":112,"author":{"gitId":"aaronsms"},"content":"            new EditCustomerDescriptorBuilder(firstCustomer).build();","lastModifiedDate":"2021-03-26"},{"lineNumber":113,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand editCommand \u003d new EditCustomerCommand(INDEX_SECOND_CUSTOMER, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"aaronsms"},"content":"        assertCommandFailure(editCommand, model, EditCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"laurenlhy"},"content":"    public void execute_duplicateCustomerFilteredList_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":120,"author":{"gitId":"laurenlhy"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"weixue123"},"content":"        // edit customer in filtered list into a duplicate in CHIM","lastModifiedDate":"2021-04-08"},{"lineNumber":123,"author":{"gitId":"weixue123"},"content":"        Customer customerInList \u003d model.getChim().getCustomerList().get(INDEX_SECOND_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-04-08"},{"lineNumber":124,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand editCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"laurenlhy"},"content":"                new EditCustomerDescriptorBuilder(customerInList).build());","lastModifiedDate":"2021-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"aaronsms"},"content":"        assertCommandFailure(editCommand, model, EditCustomerCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"laurenlhy"},"content":"    public void execute_invalidCustomerIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":132,"author":{"gitId":"laurenlhy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2021-03-07"},{"lineNumber":133,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"laurenlhy"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":135,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand editCommand \u003d new EditCustomerCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"aaronsms"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"weixue123"},"content":"     * Test case where index is larger than the size of filtered list, but smaller than the","lastModifiedDate":"2021-04-08"},{"lineNumber":142,"author":{"gitId":"weixue123"},"content":"     * number of customers in CHIM.","lastModifiedDate":"2021-04-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"laurenlhy"},"content":"    public void execute_invalidCustomerIndexFilteredList_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":146,"author":{"gitId":"laurenlhy"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-07"},{"lineNumber":147,"author":{"gitId":"laurenlhy"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-07"},{"lineNumber":148,"author":{"gitId":"weixue123"},"content":"        // ensures that outOfBoundIndex is still in bounds of CHIM\u0027s full customers list","lastModifiedDate":"2021-04-08"},{"lineNumber":149,"author":{"gitId":"weixue123"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getChim().getCustomerList().size());","lastModifiedDate":"2021-04-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand editCommand \u003d new EditCustomerCommand(outOfBoundIndex,","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"laurenlhy"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"aaronsms"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"aaronsms"},"content":"        final EditCustomerCommand standardCommand \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER, DESC_AMY);","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand.EditCustomerDescriptor copyDescriptor \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"aaronsms"},"content":"            new EditCustomerCommand.EditCustomerDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-26"},{"lineNumber":164,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand commandWithSameValues \u003d new EditCustomerCommand(INDEX_FIRST_CUSTOMER, copyDescriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"aaronsms"},"content":"        assertFalse(standardCommand.equals(new EditCustomerCommand(INDEX_SECOND_CUSTOMER, DESC_AMY)));","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"aaronsms"},"content":"        assertFalse(standardCommand.equals(new EditCustomerCommand(INDEX_FIRST_CUSTOMER, DESC_BOB)));","lastModifiedDate":"2021-03-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"laurenlhy":24,"weixue123":38,"-":89,"aaronsms":32}},{"path":"src/test/java/chim/logic/commands/EditCustomerDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"public class EditCustomerDescriptorTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"        EditCustomerDescriptor descriptorWithSameValues \u003d new EditCustomerDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"        EditCustomerDescriptor editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"laurenlhy"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"laurenlhy":7,"weixue123":11,"-":40}},{"path":"src/test/java/chim/logic/commands/EditOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_CARL;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_QUANTITY_5;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_COMPLETED_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FILTERED_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_LAST_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_SECOND_UNCOMPLETED_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditOrderCommand.EditOrderDescriptor;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.testutil.EditOrderDescriptorBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.testutil.OrderBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"public class EditOrderCommandTest {","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    private Model model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"        Order order \u003d model.getFilteredOrderList().get(INDEX_SECOND_UNCOMPLETED_ORDER.getZeroBased());","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(order.isComplete());","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"        Order editedOrder \u003d new OrderBuilder()","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"                .withOrderId(order.getOrderId().value)","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"                .withCustomerId(model.getFilteredOrderList().get(0).getCustomerId())","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder(editedOrder)","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"                .withPhone(VALID_PHONE_CARL)","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_SECOND_UNCOMPLETED_ORDER, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(3), editedOrder);","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"    public void execute_oneFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"        Order order \u003d model.getFilteredOrderList().get(INDEX_SECOND_UNCOMPLETED_ORDER.getZeroBased());","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(order.isComplete());","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"        Order editedOrder \u003d new OrderBuilder(order)","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"                .withCustomerId(model.getFilteredOrderList().get(0).getCustomerId())","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2021-04-08"},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"                .withPhone(VALID_PHONE_CARL)","lastModifiedDate":"2021-04-08"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":70,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_SECOND_UNCOMPLETED_ORDER, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-04-08"},{"lineNumber":74,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":75,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":76,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(3), editedOrder);","lastModifiedDate":"2021-04-08"},{"lineNumber":77,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":79,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-08"},{"lineNumber":80,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":81,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":82,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":83,"author":{"gitId":"AhQuanz"},"content":"    public void execute_moreThanOneFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-04-08"},{"lineNumber":84,"author":{"gitId":"AhQuanz"},"content":"        Order order \u003d model.getFilteredOrderList().get(INDEX_SECOND_UNCOMPLETED_ORDER.getZeroBased());","lastModifiedDate":"2021-04-08"},{"lineNumber":85,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(order.isComplete());","lastModifiedDate":"2021-04-08"},{"lineNumber":86,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":87,"author":{"gitId":"AhQuanz"},"content":"        Order editedOrder \u003d new OrderBuilder(order)","lastModifiedDate":"2021-04-08"},{"lineNumber":88,"author":{"gitId":"AhQuanz"},"content":"                .withQuantity(VALID_QUANTITY_5)","lastModifiedDate":"2021-04-08"},{"lineNumber":89,"author":{"gitId":"AhQuanz"},"content":"                .withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":90,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":91,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":92,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2021-04-08"},{"lineNumber":93,"author":{"gitId":"AhQuanz"},"content":"                .withQuantity(VALID_QUANTITY_5)","lastModifiedDate":"2021-04-08"},{"lineNumber":94,"author":{"gitId":"AhQuanz"},"content":"                .withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":95,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":96,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":97,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_SECOND_UNCOMPLETED_ORDER, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":98,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":99,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-04-08"},{"lineNumber":100,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":101,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":102,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(3), editedOrder);","lastModifiedDate":"2021-04-08"},{"lineNumber":103,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-04-08"},{"lineNumber":104,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":105,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-08"},{"lineNumber":106,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":107,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":108,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":109,"author":{"gitId":"AhQuanz"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-04-08"},{"lineNumber":110,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_SECOND_UNCOMPLETED_ORDER,","lastModifiedDate":"2021-04-08"},{"lineNumber":111,"author":{"gitId":"AhQuanz"},"content":"                new EditOrderDescriptor());","lastModifiedDate":"2021-04-08"},{"lineNumber":112,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":113,"author":{"gitId":"AhQuanz"},"content":"        Order editedOrder \u003d model.getFilteredOrderList().get(INDEX_SECOND_UNCOMPLETED_ORDER.getZeroBased());","lastModifiedDate":"2021-04-08"},{"lineNumber":114,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(editedOrder.isComplete());","lastModifiedDate":"2021-04-08"},{"lineNumber":115,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":116,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-04-08"},{"lineNumber":117,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":118,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":119,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-04-08"},{"lineNumber":120,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":121,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-08"},{"lineNumber":122,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":123,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":124,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":125,"author":{"gitId":"AhQuanz"},"content":"    public void execute_oneFieldSpecifiedFilteredList_success() {","lastModifiedDate":"2021-04-08"},{"lineNumber":126,"author":{"gitId":"AhQuanz"},"content":"        showOrderAtIndex(model, INDEX_SECOND_UNCOMPLETED_ORDER);","lastModifiedDate":"2021-04-08"},{"lineNumber":127,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":128,"author":{"gitId":"AhQuanz"},"content":"        Order order \u003d model.getFilteredOrderList().get(INDEX_FILTERED_ORDER.getZeroBased());","lastModifiedDate":"2021-04-08"},{"lineNumber":129,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(order.isComplete());","lastModifiedDate":"2021-04-08"},{"lineNumber":130,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":131,"author":{"gitId":"AhQuanz"},"content":"        Order editedOrder \u003d new OrderBuilder(order)","lastModifiedDate":"2021-04-08"},{"lineNumber":132,"author":{"gitId":"AhQuanz"},"content":"                .withQuantity(VALID_QUANTITY_5)","lastModifiedDate":"2021-04-08"},{"lineNumber":133,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":134,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":135,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2021-04-08"},{"lineNumber":136,"author":{"gitId":"AhQuanz"},"content":"                .withQuantity(VALID_QUANTITY_5)","lastModifiedDate":"2021-04-08"},{"lineNumber":137,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":138,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":139,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FILTERED_ORDER, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":140,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":141,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-04-08"},{"lineNumber":142,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":143,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":144,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(0), editedOrder);","lastModifiedDate":"2021-04-08"},{"lineNumber":145,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-04-08"},{"lineNumber":146,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":147,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-08"},{"lineNumber":148,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":149,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":150,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":151,"author":{"gitId":"AhQuanz"},"content":"    public void execute_moreThanOneFieldsSpecifiedFilteredList_success() {","lastModifiedDate":"2021-04-08"},{"lineNumber":152,"author":{"gitId":"AhQuanz"},"content":"        showOrderAtIndex(model, INDEX_SECOND_UNCOMPLETED_ORDER);","lastModifiedDate":"2021-04-08"},{"lineNumber":153,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":154,"author":{"gitId":"AhQuanz"},"content":"        Order order \u003d model.getFilteredOrderList().get(INDEX_FILTERED_ORDER.getZeroBased());","lastModifiedDate":"2021-04-08"},{"lineNumber":155,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(order.isComplete());","lastModifiedDate":"2021-04-08"},{"lineNumber":156,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":157,"author":{"gitId":"AhQuanz"},"content":"        Order editedOrder \u003d new OrderBuilder(order)","lastModifiedDate":"2021-04-08"},{"lineNumber":158,"author":{"gitId":"AhQuanz"},"content":"                .withQuantity(VALID_QUANTITY_5)","lastModifiedDate":"2021-04-08"},{"lineNumber":159,"author":{"gitId":"AhQuanz"},"content":"                .withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":160,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":161,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":162,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2021-04-08"},{"lineNumber":163,"author":{"gitId":"AhQuanz"},"content":"                .withQuantity(VALID_QUANTITY_5)","lastModifiedDate":"2021-04-08"},{"lineNumber":164,"author":{"gitId":"AhQuanz"},"content":"                .withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":165,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":166,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":167,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FILTERED_ORDER, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":168,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":169,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-04-08"},{"lineNumber":170,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":171,"author":{"gitId":"weixue123"},"content":"        Model expectedModel \u003d new ModelManager(new Chim(model.getChim()), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":172,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(0), editedOrder);","lastModifiedDate":"2021-04-08"},{"lineNumber":173,"author":{"gitId":"AhQuanz"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-04-08"},{"lineNumber":174,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":175,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-08"},{"lineNumber":176,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":177,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":178,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":179,"author":{"gitId":"AhQuanz"},"content":"    public void execute_completedOrderUnfilteredList_failure() {","lastModifiedDate":"2021-04-08"},{"lineNumber":180,"author":{"gitId":"AhQuanz"},"content":"        Order order \u003d model.getFilteredOrderList().get(INDEX_COMPLETED_ORDER.getZeroBased());","lastModifiedDate":"2021-04-08"},{"lineNumber":181,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(order.isComplete());","lastModifiedDate":"2021-04-08"},{"lineNumber":182,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":183,"author":{"gitId":"AhQuanz"},"content":"        // Empty descriptor","lastModifiedDate":"2021-04-08"},{"lineNumber":184,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_COMPLETED_ORDER, new EditOrderDescriptor());","lastModifiedDate":"2021-04-08"},{"lineNumber":185,"author":{"gitId":"AhQuanz"},"content":"        assertCommandFailure(editOrderCommand, model, EditOrderCommand.MESSAGE_COMPLETED_ORDER_ERROR);","lastModifiedDate":"2021-04-08"},{"lineNumber":186,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":187,"author":{"gitId":"AhQuanz"},"content":"        // non-empty descriptor","lastModifiedDate":"2021-04-08"},{"lineNumber":188,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2021-04-08"},{"lineNumber":189,"author":{"gitId":"AhQuanz"},"content":"                .withQuantity(VALID_QUANTITY_5)","lastModifiedDate":"2021-04-08"},{"lineNumber":190,"author":{"gitId":"AhQuanz"},"content":"                .withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":191,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":192,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":193,"author":{"gitId":"AhQuanz"},"content":"        editOrderCommand \u003d new EditOrderCommand(INDEX_COMPLETED_ORDER, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":194,"author":{"gitId":"AhQuanz"},"content":"        assertCommandFailure(editOrderCommand, model, EditOrderCommand.MESSAGE_COMPLETED_ORDER_ERROR);","lastModifiedDate":"2021-04-08"},{"lineNumber":195,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":196,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":197,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":198,"author":{"gitId":"AhQuanz"},"content":"    public void execute_completedOrderFilteredList_failure() {","lastModifiedDate":"2021-04-08"},{"lineNumber":199,"author":{"gitId":"AhQuanz"},"content":"        showOrderAtIndex(model, INDEX_COMPLETED_ORDER);","lastModifiedDate":"2021-04-08"},{"lineNumber":200,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":201,"author":{"gitId":"AhQuanz"},"content":"        Order order \u003d model.getFilteredOrderList().get(INDEX_FILTERED_ORDER.getZeroBased());","lastModifiedDate":"2021-04-08"},{"lineNumber":202,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(order.isComplete());","lastModifiedDate":"2021-04-08"},{"lineNumber":203,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":204,"author":{"gitId":"AhQuanz"},"content":"        // Empty descriptor","lastModifiedDate":"2021-04-08"},{"lineNumber":205,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FILTERED_ORDER, new EditOrderDescriptor());","lastModifiedDate":"2021-04-08"},{"lineNumber":206,"author":{"gitId":"AhQuanz"},"content":"        assertCommandFailure(editOrderCommand, model, EditOrderCommand.MESSAGE_COMPLETED_ORDER_ERROR);","lastModifiedDate":"2021-04-08"},{"lineNumber":207,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":208,"author":{"gitId":"AhQuanz"},"content":"        // non-empty descriptor","lastModifiedDate":"2021-04-08"},{"lineNumber":209,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2021-04-08"},{"lineNumber":210,"author":{"gitId":"AhQuanz"},"content":"                .withQuantity(VALID_QUANTITY_5)","lastModifiedDate":"2021-04-08"},{"lineNumber":211,"author":{"gitId":"AhQuanz"},"content":"                .withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":212,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":213,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":214,"author":{"gitId":"AhQuanz"},"content":"        editOrderCommand \u003d new EditOrderCommand(INDEX_FILTERED_ORDER, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":215,"author":{"gitId":"AhQuanz"},"content":"        assertCommandFailure(editOrderCommand, model, EditOrderCommand.MESSAGE_COMPLETED_ORDER_ERROR);","lastModifiedDate":"2021-04-08"},{"lineNumber":216,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":217,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":218,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":219,"author":{"gitId":"AhQuanz"},"content":"    public void execute_invalidOrderIndexUnfilteredList_failure() {","lastModifiedDate":"2021-04-08"},{"lineNumber":220,"author":{"gitId":"AhQuanz"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-04-08"},{"lineNumber":221,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":222,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2021-04-08"},{"lineNumber":223,"author":{"gitId":"AhQuanz"},"content":"                .withQuantity(VALID_QUANTITY_5)","lastModifiedDate":"2021-04-08"},{"lineNumber":224,"author":{"gitId":"AhQuanz"},"content":"                .withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":225,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":226,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":227,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":228,"author":{"gitId":"AhQuanz"},"content":"        assertCommandFailure(editOrderCommand, model, MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-08"},{"lineNumber":229,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":230,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":231,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":232,"author":{"gitId":"AhQuanz"},"content":"    public void execute_invalidOrderIndexFilteredList_failure() {","lastModifiedDate":"2021-04-08"},{"lineNumber":233,"author":{"gitId":"AhQuanz"},"content":"        showOrderAtIndex(model, INDEX_SECOND_UNCOMPLETED_ORDER);","lastModifiedDate":"2021-04-08"},{"lineNumber":234,"author":{"gitId":"AhQuanz"},"content":"        Index outOfBoundIndex \u003d INDEX_LAST_ORDER;","lastModifiedDate":"2021-04-08"},{"lineNumber":235,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":236,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2021-04-08"},{"lineNumber":237,"author":{"gitId":"AhQuanz"},"content":"                .withQuantity(VALID_QUANTITY_5)","lastModifiedDate":"2021-04-08"},{"lineNumber":238,"author":{"gitId":"AhQuanz"},"content":"                .withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":239,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":240,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":241,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":242,"author":{"gitId":"AhQuanz"},"content":"        assertCommandFailure(editOrderCommand, model, MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-08"},{"lineNumber":243,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":244,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":245,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":246,"author":{"gitId":"AhQuanz"},"content":"    public void equals() {","lastModifiedDate":"2021-04-08"},{"lineNumber":247,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2021-04-08"},{"lineNumber":248,"author":{"gitId":"AhQuanz"},"content":"                .withQuantity(VALID_QUANTITY_5)","lastModifiedDate":"2021-04-08"},{"lineNumber":249,"author":{"gitId":"AhQuanz"},"content":"                .withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":250,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":251,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":252,"author":{"gitId":"AhQuanz"},"content":"        final EditOrderCommand standardCommand \u003d new EditOrderCommand(INDEX_SECOND_UNCOMPLETED_ORDER, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":253,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":254,"author":{"gitId":"AhQuanz"},"content":"        // same values -\u003e return true","lastModifiedDate":"2021-04-08"},{"lineNumber":255,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor copy \u003d new EditOrderDescriptor(descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":256,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand commandCopy \u003d new EditOrderCommand(INDEX_SECOND_UNCOMPLETED_ORDER, copy);","lastModifiedDate":"2021-04-08"},{"lineNumber":257,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(standardCommand.equals(commandCopy));","lastModifiedDate":"2021-04-08"},{"lineNumber":258,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":259,"author":{"gitId":"AhQuanz"},"content":"        // same object -\u003e return true","lastModifiedDate":"2021-04-08"},{"lineNumber":260,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-04-08"},{"lineNumber":261,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":262,"author":{"gitId":"AhQuanz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-08"},{"lineNumber":263,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-04-08"},{"lineNumber":264,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":265,"author":{"gitId":"AhQuanz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-08"},{"lineNumber":266,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(standardCommand.equals(7));","lastModifiedDate":"2021-04-08"},{"lineNumber":267,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":268,"author":{"gitId":"AhQuanz"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-04-08"},{"lineNumber":269,"author":{"gitId":"AhQuanz"},"content":"        commandCopy \u003d new EditOrderCommand(INDEX_LAST_ORDER, copy);","lastModifiedDate":"2021-04-08"},{"lineNumber":270,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(standardCommand.equals(commandCopy));","lastModifiedDate":"2021-04-08"},{"lineNumber":271,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":272,"author":{"gitId":"AhQuanz"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-04-08"},{"lineNumber":273,"author":{"gitId":"AhQuanz"},"content":"        commandCopy \u003d new EditOrderCommand(INDEX_SECOND_UNCOMPLETED_ORDER, new EditOrderDescriptor());","lastModifiedDate":"2021-04-08"},{"lineNumber":274,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(standardCommand.equals(commandCopy));","lastModifiedDate":"2021-04-08"},{"lineNumber":275,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":276,"author":{"gitId":"AhQuanz"},"content":"}","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"AhQuanz":247,"weixue123":29}},{"path":"src/test/java/chim/logic/commands/EditOrderDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.DESC_BRIE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.DESC_MOZZARELLA;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_MOZZARELLA;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_DATE_4;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_QUANTITY_5;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditOrderCommand.EditOrderDescriptor;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.testutil.EditOrderDescriptorBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"public class EditOrderDescriptorTest {","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"    public void equals() {","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptor(DESC_BRIE);","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(DESC_BRIE.equals(descriptor));","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(DESC_BRIE.equals(DESC_BRIE));","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(DESC_BRIE.equals(null));","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(DESC_BRIE.equals(7));","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(DESC_BRIE.equals(DESC_MOZZARELLA));","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"        // different CheeseType -\u003e returns false","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor editedBrie \u003d new EditOrderDescriptorBuilder(DESC_BRIE)","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"                .withCheeseType(VALID_CHEESE_TYPE_MOZZARELLA).build();","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(DESC_BRIE.equals(editedBrie));","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"        // different quantity --\u003e returns false","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"        editedBrie \u003d new EditOrderDescriptorBuilder(DESC_BRIE)","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"                .withQuantity(VALID_QUANTITY_5).build();","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(DESC_BRIE.equals(editedBrie));","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"        // different orderDate --\u003e returns false","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"        editedBrie \u003d new EditOrderDescriptorBuilder(DESC_BRIE)","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"                .withOrderDate(VALID_ORDER_DATE_4).build();","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(DESC_BRIE.equals(editedBrie));","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"}","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"AhQuanz":46,"weixue123":8}},{"path":"src/test/java/chim/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"weixue123":5,"-":14}},{"path":"src/test/java/chim/logic/commands/FindCheeseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_ASSIGNED_STATUS;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.model.Model.PREDICATE_SHOW_ALL_CHEESES;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.predicates.CheeseAssignmentStatusPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.predicates.CheeseCheeseTypePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.CompositeFieldPredicateBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":" * Contains integration tests (interaction with the Model) and unit tests for FindCheeseCommand.","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"public class FindCheeseCommandTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"    private Model model;","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"        model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"        expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"        expectedModel.setPanelToCheeseList();","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"    public void execute_listIsNotFiltered_showsEverything() {","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"        assertCommandSuccess(","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"                new FindCheeseCommand(PREDICATE_SHOW_ALL_CHEESES),","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"                model,","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"                String.format(Messages.MESSAGE_CHEESES_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"                        expectedModel.getFilteredCheeseList().size(),","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"                        PREDICATE_SHOW_ALL_CHEESES),","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"                expectedModel","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"    public void execute_listIsFiltered_byCheeseTypeOnly() {","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e cheeseTypeKeywords \u003d Arrays.asList(\"brie\", \"feta\");","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"        CheeseCheeseTypePredicate predicate \u003d new CheeseCheeseTypePredicate(cheeseTypeKeywords);","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"        expectedModel.updateFilteredCheeseList(predicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"        assertCommandSuccess(","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"                new FindCheeseCommand(predicate),","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"                model,","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"                String.format(Messages.MESSAGE_CHEESES_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"                        expectedModel.getFilteredCheeseList().size(),","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"                        predicate),","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"                expectedModel","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"    public void execute_listIsFiltered_byAssignmentStatusOnly() {","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"        CheeseAssignmentStatusPredicate predicate \u003d new CheeseAssignmentStatusPredicate(VALID_CHEESE_ASSIGNED_STATUS);","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"        expectedModel.updateFilteredCheeseList(predicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"        assertCommandSuccess(","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"                new FindCheeseCommand(predicate),","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"                model,","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"AhQuanz"},"content":"                String.format(Messages.MESSAGE_CHEESES_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"AhQuanz"},"content":"                        expectedModel.getFilteredCheeseList().size(),","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"AhQuanz"},"content":"                        predicate),","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"                expectedModel","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"weixue123"},"content":"    public void execute_listIsFiltered_byCheeseTypeAndAssignmentStatus() {","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e cheeseTypeKeywords \u003d Arrays.asList(\"brie\", \"feta\");","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"weixue123"},"content":"        CheeseCheeseTypePredicate typePredicate \u003d new CheeseCheeseTypePredicate(cheeseTypeKeywords);","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"weixue123"},"content":"        CheeseAssignmentStatusPredicate statusPredicate \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"weixue123"},"content":"                new CheeseAssignmentStatusPredicate(VALID_CHEESE_ASSIGNED_STATUS);","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicateBuilder\u003cCheese\u003e pBuilder \u003d new CompositeFieldPredicateBuilder\u003c\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"weixue123"},"content":"        pBuilder.compose(typePredicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"weixue123"},"content":"        pBuilder.compose(statusPredicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"weixue123"},"content":"        FieldPredicate\u003cCheese\u003e predicate \u003d pBuilder.build();","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"weixue123"},"content":"        expectedModel.updateFilteredCheeseList(predicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"weixue123"},"content":"        assertCommandSuccess(","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"weixue123"},"content":"                new FindCheeseCommand(predicate),","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"weixue123"},"content":"                model,","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"AhQuanz"},"content":"                String.format(Messages.MESSAGE_CHEESES_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"AhQuanz"},"content":"                        expectedModel.getFilteredCheeseList().size(),","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"AhQuanz"},"content":"                        predicate),","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"weixue123"},"content":"                expectedModel","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"AhQuanz":12,"weixue123":91}},{"path":"src/test/java/chim/logic/commands/FindCustomerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_CUSTOMERS_FOUND_OVERVIEW;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.CARL;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.ELLE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.FIONA;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerNamePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.CompositeFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"public class FindCustomerCommandTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"    private Model model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"        final List\u003cString\u003e firstList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"        final List\u003cString\u003e secondList \u003d Collections.singletonList(\"second\");","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        CompositeFieldPredicate\u003cCustomer\u003e firstPredicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"                new CompositeFieldPredicate\u003c\u003e(new CustomerNamePredicate(firstList));","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        CompositeFieldPredicate\u003cCustomer\u003e secondPredicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"                new CompositeFieldPredicate\u003c\u003e(new CustomerNamePredicate(secondList));","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"        FindCustomerCommand findFirstCommand \u003d new FindCustomerCommand(firstPredicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"        FindCustomerCommand findSecondCommand \u003d new FindCustomerCommand(secondPredicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"        FindCustomerCommand findFirstCommandCopy \u003d new FindCustomerCommand(firstPredicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"laurenlhy"},"content":"    public void execute_multipleKeywords_multipleCustomersFound() {","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"        final String keywordsString \u003d \"Kurz Elle Kunz\";","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"        CompositeFieldPredicate\u003cCustomer\u003e predicate \u003d preparePredicate(keywordsString);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CUSTOMERS_FOUND_OVERVIEW, 3, predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"        FindCustomerCommand command \u003d new FindCustomerCommand(predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"laurenlhy"},"content":"        expectedModel.updateFilteredCustomerList(predicate);","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"        expectedModel.setPanelToCustomerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredCustomerList());","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"     * Parses {@code userInput} into a {@code ModelCompositePredicate}.","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"    private CompositeFieldPredicate\u003cCustomer\u003e preparePredicate(String userInput) {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"        return new CompositeFieldPredicate\u003c\u003e(new CustomerNamePredicate(Arrays.asList(userInput.split(\"\\\\s+\"))));","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"AhQuanz":1,"laurenlhy":4,"weixue123":16,"daniellau88":20,"-":41}},{"path":"src/test/java/chim/logic/commands/FindOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.StringUtil.splitToKeywordsList;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_BRIE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_COMPLETE_STATUS;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.order.predicates.OrderCheeseTypePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.order.predicates.OrderCompletionStatusPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.order.predicates.OrderNamePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.model.order.predicates.OrderPhonePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.CompositeFieldPredicateBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":" * Contains integration tests (interaction with the Model) and unit tests for FindOrderCommand.","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"public class FindOrderCommandTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"    private Model model;","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    private List\u003cCustomer\u003e customerList;","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"        model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"        expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"        customerList \u003d model.getCompleteCustomerList();","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"    public void execute_listIsNotFiltered_showsEverything() {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"        assertCommandSuccess(","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"                new FindOrderCommand(PREDICATE_SHOW_ALL_ORDERS),","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"                model,","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"                String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"                        Messages.MESSAGE_ORDERS_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"                        expectedModel.getFilteredOrderList().size(),","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"                        PREDICATE_SHOW_ALL_ORDERS),","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"                expectedModel","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"    public void execute_listIsFilteredByCheeseTypeOnly() {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e cheeseTypeKeywords \u003d splitToKeywordsList(VALID_CHEESE_TYPE_BRIE);","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"        OrderCheeseTypePredicate predicate \u003d new OrderCheeseTypePredicate(cheeseTypeKeywords);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"        assertCommandSuccess(","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"                new FindOrderCommand(predicate),","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"                model,","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"                String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":"                        Messages.MESSAGE_ORDERS_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"AhQuanz"},"content":"                        expectedModel.getFilteredOrderList().size(),","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":"                        predicate),","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"                expectedModel","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"weixue123"},"content":"    public void execute_listIsFiltered_byCustomerNameOnly() {","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e nameKeywords \u003d splitToKeywordsList(VALID_NAME_AMY);","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"weixue123"},"content":"        OrderNamePredicate predicate \u003d new OrderNamePredicate(nameKeywords, customerList);","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"weixue123"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"AhQuanz"},"content":"                Messages.MESSAGE_ORDERS_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"AhQuanz"},"content":"                expectedModel.getFilteredOrderList().size(),","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"AhQuanz"},"content":"                predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"AhQuanz"},"content":"        if (expectedModel.getFilteredOrderList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"AhQuanz"},"content":"            expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"AhQuanz"},"content":"                    Messages.MESSAGE_ORDERS_NOT_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"AhQuanz"},"content":"                    predicate","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"AhQuanz"},"content":"            );","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"weixue123"},"content":"        assertCommandSuccess(","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"weixue123"},"content":"                new FindOrderCommand(predicate),","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"weixue123"},"content":"                model,","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"AhQuanz"},"content":"                expectedMessage,","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"weixue123"},"content":"                expectedModel","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"weixue123"},"content":"    public void execute_listIsFiltered_byCustomerPhoneOnly() {","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e phoneKeywords \u003d splitToKeywordsList(VALID_PHONE_AMY);","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"weixue123"},"content":"        OrderPhonePredicate predicate \u003d new OrderPhonePredicate(phoneKeywords, customerList);","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"weixue123"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"AhQuanz"},"content":"                Messages.MESSAGE_ORDERS_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"AhQuanz"},"content":"                expectedModel.getFilteredOrderList().size(),","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"AhQuanz"},"content":"                predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"AhQuanz"},"content":"        if (expectedModel.getFilteredOrderList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"AhQuanz"},"content":"            expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"AhQuanz"},"content":"                    Messages.MESSAGE_ORDERS_NOT_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"AhQuanz"},"content":"                    predicate","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"AhQuanz"},"content":"            );","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"weixue123"},"content":"        assertCommandSuccess(","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"weixue123"},"content":"                new FindOrderCommand(predicate),","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"weixue123"},"content":"                model,","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"AhQuanz"},"content":"                expectedMessage,","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"weixue123"},"content":"                expectedModel","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"weixue123"},"content":"    public void execute_listIsFiltered_byCompletionStatusOnly() {","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"weixue123"},"content":"        OrderCompletionStatusPredicate predicate \u003d new OrderCompletionStatusPredicate(VALID_ORDER_COMPLETE_STATUS);","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"weixue123"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"AhQuanz"},"content":"                Messages.MESSAGE_ORDERS_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"AhQuanz"},"content":"                expectedModel.getFilteredOrderList().size(),","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"AhQuanz"},"content":"                predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"AhQuanz"},"content":"        if (expectedModel.getFilteredOrderList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"AhQuanz"},"content":"            expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"AhQuanz"},"content":"                    Messages.MESSAGE_ORDERS_NOT_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"AhQuanz"},"content":"                    predicate","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"AhQuanz"},"content":"            );","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"weixue123"},"content":"        assertCommandSuccess(","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"weixue123"},"content":"                new FindOrderCommand(predicate),","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"weixue123"},"content":"                model,","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"AhQuanz"},"content":"                expectedMessage,","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"weixue123"},"content":"                expectedModel","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"weixue123"},"content":"    public void execute_listIsFiltered_byCheeseTypeAndCompletionStatus() {","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"weixue123"},"content":"        FieldPredicate\u003cOrder\u003e predicate \u003d new CompositeFieldPredicateBuilder\u003cOrder\u003e()","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderCheeseTypePredicate(splitToKeywordsList(VALID_CHEESE_TYPE_BRIE)))","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderCompletionStatusPredicate(VALID_ORDER_COMPLETE_STATUS))","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderNamePredicate(splitToKeywordsList(VALID_NAME_AMY), customerList))","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderPhonePredicate(splitToKeywordsList(VALID_PHONE_AMY), customerList))","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"weixue123"},"content":"                .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"weixue123"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"AhQuanz"},"content":"                Messages.MESSAGE_ORDERS_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"AhQuanz"},"content":"                expectedModel.getFilteredOrderList().size(),","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"AhQuanz"},"content":"                predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"AhQuanz"},"content":"        if (expectedModel.getFilteredOrderList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"AhQuanz"},"content":"            expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"AhQuanz"},"content":"                    Messages.MESSAGE_ORDERS_NOT_FOUND_OVERVIEW,","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"AhQuanz"},"content":"                    predicate","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"AhQuanz"},"content":"            );","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"AhQuanz"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"weixue123"},"content":"        assertCommandSuccess(","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"weixue123"},"content":"                new FindOrderCommand(predicate),","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"weixue123"},"content":"                model,","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"AhQuanz"},"content":"                expectedMessage,","lastModifiedDate":"2021-03-28"},{"lineNumber":180,"author":{"gitId":"weixue123"},"content":"                expectedModel","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"AhQuanz":64,"weixue123":119}},{"path":"src/test/java/chim/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"weixue123":5,"-":15}},{"path":"src/test/java/chim/logic/commands/ListCheesesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCheesesCommand.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"public class ListCheesesCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"        model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"        expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"        expectedModel.setPanelToCheeseList();","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"        int unassignedCount \u003d expectedModel.getFilteredCheeseListUnassignedCount();","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"        int totalCheese \u003d expectedModel.getFilteredCheeseList().size();","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"                ListCheesesCommand.SUMMARY_MESSAGE,","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"                totalCheese,","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"                totalCheese - unassignedCount,","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"                unassignedCount","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"        );","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(new ListCheesesCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"    public void execute_listIsNotFiltered_showsEverything() {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"        int unassignedCount \u003d expectedModel.getFilteredCheeseListUnassignedCount();","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"        int totalCheese \u003d expectedModel.getFilteredCheeseList().size();","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"                ListCheesesCommand.SUMMARY_MESSAGE,","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"                totalCheese,","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"                totalCheese - unassignedCount,","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"                unassignedCount","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"        );","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(new ListCheesesCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"AhQuanz":18,"weixue123":12,"-":23}},{"path":"src/test/java/chim/logic/commands/ListCustomersCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCustomersCommand.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"public class ListCustomersCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"        model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"        expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"        expectedModel.setPanelToCustomerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"                ListCustomersCommand.SUMMARY_MESSAGE,","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"                expectedModel.getFilteredCustomerList().size()","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"        );","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(new ListCustomersCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"                ListCustomersCommand.SUMMARY_MESSAGE,","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"                expectedModel.getFilteredCustomerList().size()","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"        );","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(new ListCustomersCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"AhQuanz":10,"laurenlhy":1,"weixue123":13,"-":24}},{"path":"src/test/java/chim/logic/commands/ListOrdersCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListOrdersCommand.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"public class ListOrdersCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"        model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"        expectedModel \u003d new ModelManager(model.getChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"        expectedModel.setPanelToOrderList();","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"        int incompleteCount \u003d expectedModel.getFilteredOrderListIncompleteCount();","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"        int totalOrder \u003d expectedModel.getFilteredOrderList().size();","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"                ListOrdersCommand.SUMMARY_MESSAGE,","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"                expectedModel.getFilteredOrderList().size(),","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"                totalOrder - incompleteCount,","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"                incompleteCount","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"        );","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(new ListOrdersCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"        int incompleteCount \u003d expectedModel.getFilteredOrderListIncompleteCount();","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"        int totalOrder \u003d expectedModel.getFilteredOrderList().size();","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"                ListOrdersCommand.SUMMARY_MESSAGE,","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"                expectedModel.getFilteredOrderList().size(),","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"                totalOrder - incompleteCount,","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"                incompleteCount","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"        );","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"        assertCommandSuccess(new ListOrdersCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"AhQuanz":18,"weixue123":11,"-":24}},{"path":"src/test/java/chim/logic/commands/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderId;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.FieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"    public Path getChimFilePath() {","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"    public void setChimFilePath(Path chimFilePath) {","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"    public void addCustomer(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"    public void setChim(ReadOnlyChim newData) {","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"    public ReadOnlyChim getChim() {","lastModifiedDate":"2021-04-08"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"    public void deleteCustomer(Customer target) {","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"weixue123"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"weixue123"},"content":"    public ObservableList\u003cCustomer\u003e getCompleteCustomerList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"weixue123"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"aaronsms"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"aaronsms"},"content":"    public void deleteOrder(Order order) {","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"aaronsms"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"aaronsms"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"    public Order getOrderWithId(OrderId orderId) {","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"daniellau88"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"aaronsms"},"content":"    public boolean hasCheese(Cheese cheese) {","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"aaronsms"},"content":"    public void deleteCheese(Cheese cheese) {","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"aaronsms"},"content":"    public void addCheese(Cheese cheese) {","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"aaronsms"},"content":"    public void setCheese(Cheese target, Cheese editedCheese) {","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"daniellau88"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"daniellau88"},"content":"    public Cheese getCheeseWithId(CheeseId cheeseId) {","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"daniellau88"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"aaronsms"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"aaronsms"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"aaronsms"},"content":"    public ObservableList\u003cCheese\u003e getFilteredCheeseList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"daniellau88"},"content":"    public void updateFilteredCustomerList(FieldPredicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"daniellau88"},"content":"    public void updateFilteredOrderList(FieldPredicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"daniellau88"},"content":"    public void updateFilteredCheeseList(FieldPredicate\u003cCheese\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"AhQuanz"},"content":"    public int getFilteredOrderListIncompleteCount() {","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"AhQuanz"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"AhQuanz"},"content":"    public int getFilteredCheeseListUnassignedCount() {","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"AhQuanz"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"aaronsms"},"content":"    public void setPanelToCustomerList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":187,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":188,"author":{"gitId":"aaronsms"},"content":"    public void setPanelToCheeseList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":191,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":192,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":193,"author":{"gitId":"aaronsms"},"content":"    public void setPanelToOrderList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":194,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":195,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"aaronsms"},"content":"    public boolean hasCustomerWithPhone(Phone phone) {","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"aaronsms"},"content":"    public Customer getCustomerWithPhone(Phone phone) {","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":206,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"AhQuanz"},"content":"    @Override","lastModifiedDate":"2021-04-07"},{"lineNumber":208,"author":{"gitId":"AhQuanz"},"content":"    public Customer getCustomerWithId(CustomerId id) {","lastModifiedDate":"2021-04-07"},{"lineNumber":209,"author":{"gitId":"AhQuanz"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-07"},{"lineNumber":210,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":211,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":212,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":213,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"aaronsms"},"content":"    public Set\u003cCheeseId\u003e getUnassignedCheeses(CheeseType cheesetype, Quantity quantity) {","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"aaronsms"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"aaronsms"},"content":"    public void updateCheesesStatus(Set\u003cCheeseId\u003e cheesesAssigned) {","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"aaronsms"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"AhQuanz":17,"weixue123":24,"daniellau88":13,"aaronsms":168}},{"path":"src/test/java/chim/logic/parser/AddCheeseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.CHEESE_TYPE_DESC_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.EXPIRY_DATE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_CHEESE_TYPE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_EXPIRY_DATE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_MANUFACTURE_DATE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_QUANTITY_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.MANUFACTURE_DATE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.QUANTITY_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_QUANTITY_5;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCheese.CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.CheeseIdStub;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ExpiryDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ManufactureDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CheeseBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"public class AddCheeseCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"    private final AddCheeseCommandParser parser \u003d new AddCheeseCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"        Cheese expectedCheese \u003d new CheeseBuilder(CAMEMBERT).withId(CheeseIdStub.getNextId()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + CHEESE_TYPE_DESC_CAMEMBERT","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"                + QUANTITY_DESC + MANUFACTURE_DATE_DESC + EXPIRY_DATE_DESC,","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"                new AddCheeseCommand(new Cheese[]{expectedCheese}));","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"        // no manufacture date provided - default to LocalDate.now()","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"        assertParseSuccess(parser, CHEESE_TYPE_DESC_CAMEMBERT + QUANTITY_DESC + EXPIRY_DATE_DESC);","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"        // no expiry date provided - set to Optional\u003c\u003e()","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"        Cheese expectedCheese \u003d new CheeseBuilder(CAMEMBERT)","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"                .withId(CheeseIdStub.getNextId()).withExpiryDate(null).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"        assertParseSuccess(parser, CHEESE_TYPE_DESC_CAMEMBERT + QUANTITY_DESC + MANUFACTURE_DATE_DESC,","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"                new AddCheeseCommand(new Cheese[]{expectedCheese}));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCheeseCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"        // missing cheese type prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, VALID_CHEESE_TYPE_CAMEMBERT + QUANTITY_DESC, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"        // missing quantity prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, CHEESE_TYPE_DESC_CAMEMBERT + VALID_QUANTITY_5, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"        // all prefixes missing","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, VALID_CHEESE_TYPE_CAMEMBERT + VALID_QUANTITY_5, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"        // invalid cheese type","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, INVALID_CHEESE_TYPE_DESC + QUANTITY_DESC, CheeseType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"        // invalid quantity","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, CHEESE_TYPE_DESC_CAMEMBERT + INVALID_QUANTITY_DESC, Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"        // invalid manufacture date","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, CHEESE_TYPE_DESC_CAMEMBERT + QUANTITY_DESC + INVALID_MANUFACTURE_DATE_DESC,","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"                ManufactureDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"        // invalid expiry date","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, CHEESE_TYPE_DESC_CAMEMBERT + QUANTITY_DESC + MANUFACTURE_DATE_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"                + INVALID_EXPIRY_DATE_DESC, ExpiryDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, INVALID_CHEESE_TYPE_DESC + INVALID_QUANTITY_DESC, CheeseType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"aaronsms"},"content":"        // non-empty preamble","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + CHEESE_TYPE_DESC_CAMEMBERT","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"daniellau88"},"content":"                        + QUANTITY_DESC + MANUFACTURE_DATE_DESC + EXPIRY_DATE_DESC,","lastModifiedDate":"2021-04-05"},{"lineNumber":92,"author":{"gitId":"aaronsms"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCheeseCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"weixue123":26,"daniellau88":6,"aaronsms":62}},{"path":"src/test/java/chim/logic/parser/AddCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"import chim.model.CustomerIdStub;","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Address;","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Email;","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Name;","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CustomerBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"public class AddCustomerCommandParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"    private final AddCustomerCommandParser parser \u003d new AddCustomerCommandParser();","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(BOB).withId(CustomerIdStub.getNextId())","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"        expectedCustomer \u003d new CustomerBuilder(BOB).withId(CustomerIdStub.getNextId())","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"        expectedCustomer \u003d new CustomerBuilder(BOB).withId(CustomerIdStub.getNextId())","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"        expectedCustomer \u003d new CustomerBuilder(BOB).withId(CustomerIdStub.getNextId())","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"        expectedCustomer \u003d new CustomerBuilder(BOB).withId(CustomerIdStub.getNextId())","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"        Customer expectedCustomerMultipleTags \u003d new CustomerBuilder(BOB).withId(CustomerIdStub.getNextId())","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"aaronsms"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCustomerCommand(expectedCustomerMultipleTags));","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"daniellau88"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withId(CustomerIdStub.getNextId()).withTags().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"aaronsms"},"content":"                new AddCustomerCommand(expectedCustomer));","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"aaronsms"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCustomerCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":153,"author":{"gitId":"aaronsms"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"weixue123":40,"daniellau88":17,"-":88,"aaronsms":10}},{"path":"src/test/java/chim/logic/parser/AddOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.CHEESE_TYPE_DESC_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.CHEESE_TYPE_DESC_FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_CHEESE_TYPE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_ORDER_DATE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_QUANTITY_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.ORDER_DATE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.ORDER_DATE_DESC_FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.QUANTITY_5_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.QUANTITY_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_QUANTITY_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_QUANTITY_5;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalOrder.ORDER_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalOrder.ORDER_FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"public class AddOrderCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"    private final AddOrderCommandParser parser \u003d new AddOrderCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"        CheeseType expectedCheeseType \u003d ORDER_CAMEMBERT.getCheeseType();","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"        Phone expectedPhone \u003d AMY.getPhone();","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"        Quantity expectedQuantity \u003d ORDER_CAMEMBERT.getQuantity();","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"        OrderDate expectedOrderDate \u003d ORDER_CAMEMBERT.getOrderDate();","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"        assertParseSuccess(parser, CHEESE_TYPE_DESC_CAMEMBERT","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"                + PHONE_DESC_AMY + QUANTITY_DESC + ORDER_DATE_DESC,","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"                new AddOrderCommand(expectedCheeseType, expectedPhone, expectedQuantity, expectedOrderDate));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"        expectedCheeseType \u003d ORDER_FETA.getCheeseType();","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"        expectedPhone \u003d BOB.getPhone();","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"        expectedQuantity \u003d ORDER_FETA.getQuantity();","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"        expectedOrderDate \u003d ORDER_FETA.getOrderDate();","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + CHEESE_TYPE_DESC_FETA","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"                        + PHONE_DESC_BOB + QUANTITY_DESC + ORDER_DATE_DESC_FETA,","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"                new AddOrderCommand(expectedCheeseType, expectedPhone, expectedQuantity, expectedOrderDate));","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"        // no order date provided - set to LocalDate.now()","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"        assertParseSuccess(parser, CHEESE_TYPE_DESC_CAMEMBERT + PHONE_DESC_AMY + QUANTITY_DESC);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"        // missing cheese type prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, VALID_CHEESE_TYPE_CAMEMBERT + PHONE_DESC_AMY + QUANTITY_DESC, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"        // missing phone prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, CHEESE_TYPE_DESC_CAMEMBERT + VALID_PHONE_AMY + QUANTITY_DESC, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"        // missing quantity prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, CHEESE_TYPE_DESC_CAMEMBERT + PHONE_DESC_AMY + VALID_QUANTITY_1, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"        // all prefixes missing","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, VALID_CHEESE_TYPE_CAMEMBERT + VALID_PHONE_AMY + VALID_QUANTITY_5, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"        // invalid cheese type","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, INVALID_CHEESE_TYPE_DESC + PHONE_DESC_AMY + QUANTITY_DESC,","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"aaronsms"},"content":"                CheeseType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"aaronsms"},"content":"        // invalid manufacture date","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, CHEESE_TYPE_DESC_CAMEMBERT + INVALID_PHONE_DESC + QUANTITY_DESC,","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"aaronsms"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"aaronsms"},"content":"        // invalid quantity","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, CHEESE_TYPE_DESC_CAMEMBERT + PHONE_DESC_AMY + INVALID_QUANTITY_DESC,","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"aaronsms"},"content":"                Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"aaronsms"},"content":"        // invalid order date","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, CHEESE_TYPE_DESC_CAMEMBERT + PHONE_DESC_AMY + QUANTITY_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"aaronsms"},"content":"                        + INVALID_ORDER_DATE_DESC, OrderDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"aaronsms"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, INVALID_CHEESE_TYPE_DESC + INVALID_PHONE_DESC + INVALID_QUANTITY_DESC,","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"aaronsms"},"content":"                CheeseType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"aaronsms"},"content":"        // non-empty preamble","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + CHEESE_TYPE_DESC_FETA","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"aaronsms"},"content":"                        + PHONE_DESC_BOB + QUANTITY_5_DESC + ORDER_DATE_DESC_FETA,","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"aaronsms"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"weixue123":31,"daniellau88":1,"aaronsms":81}},{"path":"src/test/java/chim/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"weixue123":1,"-":149}},{"path":"src/test/java/chim/logic/parser/ChimParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_CHEESE;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ClearCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DeleteCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DeleteOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCommandStub;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ExitCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.FindCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.HelpCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ListCheesesCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ListCustomersCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.ListOrdersCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"import chim.model.CheeseIdStub;","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"import chim.model.CustomerIdStub;","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"import chim.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"import chim.model.OrderIdStub;","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerNamePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.CompositeFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CheeseBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CheeseUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CustomerBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CustomerUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"import chim.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"import chim.testutil.OrderBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"import chim.testutil.OrderUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"public class ChimParserTest {","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"    private final Model model \u003d new ModelManager(getTypicalChim(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"    private final ChimParser parser \u003d new ChimParser(model);","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"    public void parseCommand_addCustomer() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"        Customer customer \u003d new CustomerBuilder().withId(CustomerIdStub.getNextId()).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"        AddCustomerCommand command \u003d (AddCustomerCommand) parser.parseCommand(CustomerUtil.getAddCommand(customer));","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"        assertEquals(new AddCustomerCommand(customer), command);","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"    public void parseCommand_addOrder() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"        Order order \u003d new OrderBuilder().withOrderId(OrderIdStub.getNextId()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"        Phone phone \u003d new Phone(\"65558888\");","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"        AddOrderCommand command \u003d (AddOrderCommand) parser.parseCommand(OrderUtil.getAddCommand(order, phone));","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"        assertEquals(new AddOrderCommand(order.getCheeseType(), phone,","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"                order.getQuantity(), order.getOrderDate()), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"    public void parseCommand_addCheese() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"        Cheese cheese \u003d new CheeseBuilder().withId(CheeseIdStub.getNextId()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"        AddCheeseCommand command \u003d (AddCheeseCommand) parser.parseCommand(CheeseUtil.getAddCommand(cheese, 1));","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"        assertEquals(new AddCheeseCommand(new Cheese[] { cheese }), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"laurenlhy"},"content":"    public void parseCommand_deleteCustomer() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"laurenlhy"},"content":"        DeleteCustomerCommand command \u003d (DeleteCustomerCommand) parser.parseCommand(","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"laurenlhy"},"content":"                DeleteCustomerCommand.COMMAND_WORD + \" \" + PREFIX_PHONE + ALICE.getPhone());","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(new DeleteCustomerCommand(ALICE.getPhone()), command);","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"laurenlhy"},"content":"    public void parseCommand_deleteCheese() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"laurenlhy"},"content":"        DeleteCheeseCommand command \u003d (DeleteCheeseCommand) parser.parseCommand(","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"laurenlhy"},"content":"                DeleteCheeseCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CHEESE.getOneBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(new DeleteCheeseCommand(INDEX_FIRST_CHEESE), command);","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"laurenlhy"},"content":"    public void parseCommand_deleteOrder() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"laurenlhy"},"content":"        DeleteOrderCommand command \u003d (DeleteOrderCommand) parser.parseCommand(","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"laurenlhy"},"content":"                DeleteOrderCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ORDER.getOneBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(new DeleteOrderCommand(INDEX_FIRST_ORDER), command);","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"        Customer customer \u003d new CustomerBuilder().withId(CustomerIdStub.getNextId()).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(customer).build();","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand command \u003d (EditCustomerCommand) parser.parseCommand(EditCustomerCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"laurenlhy"},"content":"                + INDEX_FIRST_CUSTOMER.getOneBased() + \" \" + CustomerUtil.getEditCustomerDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-07"},{"lineNumber":119,"author":{"gitId":"daniellau88"},"content":"        command \u003d new EditCommandStub(command, descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"aaronsms"},"content":"        assertEquals(new EditCustomerCommand(INDEX_FIRST_CUSTOMER, descriptor), command);","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":132,"author":{"gitId":"daniellau88"},"content":"        FindCustomerCommand command \u003d (FindCustomerCommand) parser.parseCommand(","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"daniellau88"},"content":"                FindCustomerCommand.COMMAND_WORD + \" \" + PREFIX_NAME","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"daniellau88"},"content":"                    + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"daniellau88"},"content":"        assertEquals(new FindCustomerCommand(new CompositeFieldPredicate\u003c\u003e(","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"daniellau88"},"content":"            new CustomerNamePredicate(keywords))","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"daniellau88"},"content":"        ), command);","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"weixue123"},"content":"    public void parseCommand_listCustomers() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"weixue123"},"content":"        assertTrue(parser.parseCommand(ListCustomersCommand.COMMAND_WORD) instanceof ListCustomersCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"weixue123"},"content":"        assertTrue(parser.parseCommand(ListCustomersCommand.COMMAND_WORD + \" 3\") instanceof ListCustomersCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"weixue123"},"content":"    public void parseCommand_listCheeses() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"weixue123"},"content":"        assertTrue(parser.parseCommand(ListCheesesCommand.COMMAND_WORD) instanceof ListCheesesCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"weixue123"},"content":"        assertTrue(parser.parseCommand(ListCheesesCommand.COMMAND_WORD + \" 3\") instanceof ListCheesesCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"weixue123"},"content":"    public void parseCommand_listOrders() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"weixue123"},"content":"        assertTrue(parser.parseCommand(ListOrdersCommand.COMMAND_WORD) instanceof ListOrdersCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"weixue123"},"content":"        assertTrue(parser.parseCommand(ListOrdersCommand.COMMAND_WORD + \" 3\") instanceof ListOrdersCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"laurenlhy":19,"weixue123":64,"daniellau88":9,"-":60,"aaronsms":22}},{"path":"src/test/java/chim/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.Command;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful.","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"    public static void assertParseSuccess(Parser parser, String userInput) {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"            parser.parse(userInput);","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"weixue123":3,"-":35,"aaronsms":11}},{"path":"src/test/java/chim/logic/parser/DeleteCheeseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_CHEESE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DeleteCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"public class DeleteCheeseCommandParserTest {","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"    private final DeleteCheeseCommandParser parser \u003d new DeleteCheeseCommandParser();","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"    public void parse_validArgs_returnsDeleteCheeseCommand() {","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCheeseCommand(INDEX_FIRST_CHEESE));","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"                DeleteCheeseCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"weixue123":25}},{"path":"src/test/java/chim/logic/parser/DeleteCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"public class DeleteCustomerCommandParserTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    private final DeleteCustomerCommandParser parser \u003d new DeleteCustomerCommandParser();","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"    public void parse_validArgs_returnsDeleteCustomerCommand() {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"        assertParseSuccess(parser, \" p/94351253\",","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"                new DeleteCustomerCommand(ALICE.getPhone()));","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"                DeleteCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"laurenlhy":6,"weixue123":7,"-":21}},{"path":"src/test/java/chim/logic/parser/DeleteOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DeleteOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.testutil.TypicalIndexes;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"public class DeleteOrderCommandParserTest {","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"    private DeleteOrderCommandParser parser \u003d new DeleteOrderCommandParser();","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"    public void parse_validArgs_returnsDeleteOrderCommand() {","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(parser, \"1\", new DeleteOrderCommand(TypicalIndexes.INDEX_FIRST_ORDER));","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(parser, \"a\", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"                DeleteOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"weixue123":25}},{"path":"src/test/java/chim/logic/parser/DoneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_LAST_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.DoneCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"public class DoneCommandParserTest {","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"    private final DoneCommandParser parser \u003d new DoneCommandParser();","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"    public void parse_noArgs_throwsParseExeception() {","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"        // no index specific","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"    public void parse_invalidArgs_throwsParseExeception() {","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"        // no index , extra prefixes","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"n/a\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"        // negative index","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"-1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"        // valid index but extra prefixes","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"1 n/a\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"    public void parse_validIndex_returnsDoneCommand() {","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"        //First index","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"        assertParseSuccess(parser, \"1\", new DoneCommand(INDEX_FIRST_ORDER));","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"        //Last Index","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"        assertParseSuccess(parser, INDEX_LAST_ORDER.getOneBased() + \"\", new DoneCommand(INDEX_LAST_ORDER));","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"}","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"AhQuanz":38,"weixue123":8}},{"path":"src/test/java/chim/logic/parser/EditCheeseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.CHEESE_TYPE_DESC_MOZZARELLA;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.EXPIRY_DATE_5_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_CHEESE_TYPE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_EXPIRY_DATE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_MANUFACTURE_DATE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.MANUFACTURE_DATE_5_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_BRIE;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_MOZZARELLA;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_2;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_5;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_MANUFACTURE_DATE_5;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_THIRD_CHEESE;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ExpiryDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ManufactureDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.testutil.EditCheeseDescriptorBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"public class EditCheeseCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCheeseCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"    private EditCheeseCommandParser parser \u003d new EditCheeseCommandParser();","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"        // no index specified","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"        assertParseFailure(parser, VALID_CHEESE_TYPE_CAMEMBERT, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"        // no field specified","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"        assertParseFailure(parser, \"1\", EditCheeseCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"        // no index and no field specified","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"laurenlhy"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"laurenlhy"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"laurenlhy"},"content":"        // negative index","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"        assertParseFailure(parser, \"-5\" + VALID_CHEESE_TYPE_CAMEMBERT, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"laurenlhy"},"content":"        // zero index","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":"        assertParseFailure(parser, \"0\" + VALID_CHEESE_TYPE_CAMEMBERT, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"laurenlhy"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"laurenlhy"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"laurenlhy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CHEESE_TYPE_DESC,","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"laurenlhy"},"content":"                CheeseType.MESSAGE_CONSTRAINTS); // invalid cheese type","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"laurenlhy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MANUFACTURE_DATE_DESC,","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"                ManufactureDate.MESSAGE_CONSTRAINTS); // invalid manufacture date","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"laurenlhy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EXPIRY_DATE_DESC,","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"laurenlhy"},"content":"                ExpiryDate.MESSAGE_CONSTRAINTS); // invalid expiry date","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"laurenlhy"},"content":"        // invalid cheese type followed by valid expiry date","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"laurenlhy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CHEESE_TYPE_DESC + VALID_EXPIRY_DATE_2,","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"laurenlhy"},"content":"                CheeseType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"laurenlhy"},"content":"        // valid cheese type followed by invalid cheese type","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"laurenlhy"},"content":"        assertParseFailure(parser, \"1\" + VALID_CHEESE_TYPE_BRIE + INVALID_CHEESE_TYPE_DESC,","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"laurenlhy"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"laurenlhy"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CHEESE_TYPE_DESC + INVALID_MANUFACTURE_DATE_DESC,","lastModifiedDate":"2021-04-05"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"                CheeseType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":83,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"laurenlhy"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"laurenlhy"},"content":"        Index targetIndex \u003d INDEX_THIRD_CHEESE;","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"laurenlhy"},"content":"        String userInput \u003d targetIndex.getOneBased() + CHEESE_TYPE_DESC_MOZZARELLA","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"                + MANUFACTURE_DATE_5_DESC + EXPIRY_DATE_5_DESC;","lastModifiedDate":"2021-04-05"},{"lineNumber":90,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptor \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"laurenlhy"},"content":"                new EditCheeseDescriptorBuilder().withCheeseType(CheeseType.getCheeseType(VALID_CHEESE_TYPE_MOZZARELLA))","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"laurenlhy"},"content":"                        .withManufactureDate(VALID_MANUFACTURE_DATE_5)","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"laurenlhy"},"content":"                        .withExpiryDate(VALID_EXPIRY_DATE_5)","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"laurenlhy"},"content":"                        .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand expectedCommand \u003d new EditCheeseCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"laurenlhy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"laurenlhy"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"laurenlhy"},"content":"        Index targetIndex \u003d INDEX_THIRD_CHEESE;","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"laurenlhy"},"content":"        String userInput \u003d targetIndex.getOneBased() + CHEESE_TYPE_DESC_MOZZARELLA","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"laurenlhy"},"content":"                + MANUFACTURE_DATE_5_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptor \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"laurenlhy"},"content":"                new EditCheeseDescriptorBuilder().withCheeseType(CheeseType.getCheeseType(VALID_CHEESE_TYPE_MOZZARELLA))","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"laurenlhy"},"content":"                        .withManufactureDate(VALID_MANUFACTURE_DATE_5).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand expectedCommand \u003d new EditCheeseCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"laurenlhy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"laurenlhy"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"laurenlhy"},"content":"        // cheese type","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"laurenlhy"},"content":"        Index targetIndex \u003d INDEX_THIRD_CHEESE;","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"laurenlhy"},"content":"        String userInput \u003d targetIndex.getOneBased() + CHEESE_TYPE_DESC_MOZZARELLA;","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptor \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"laurenlhy"},"content":"                new EditCheeseDescriptorBuilder()","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"laurenlhy"},"content":"                        .withCheeseType(CheeseType.getCheeseType(VALID_CHEESE_TYPE_MOZZARELLA)).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand expectedCommand \u003d new EditCheeseCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"laurenlhy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"laurenlhy"},"content":"        // manufacture date","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"laurenlhy"},"content":"        userInput \u003d targetIndex.getOneBased() + MANUFACTURE_DATE_5_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"laurenlhy"},"content":"        descriptor \u003d new EditCheeseDescriptorBuilder().withManufactureDate(VALID_MANUFACTURE_DATE_5).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"laurenlhy"},"content":"        expectedCommand \u003d new EditCheeseCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"laurenlhy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"laurenlhy"},"content":"        // expiry date","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"laurenlhy"},"content":"        userInput \u003d targetIndex.getOneBased() + EXPIRY_DATE_5_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"laurenlhy"},"content":"        descriptor \u003d new EditCheeseDescriptorBuilder().withExpiryDate(VALID_EXPIRY_DATE_5).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"laurenlhy"},"content":"        expectedCommand \u003d new EditCheeseCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"laurenlhy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"laurenlhy"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"laurenlhy"},"content":"        Index targetIndex \u003d INDEX_THIRD_CHEESE;","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"laurenlhy"},"content":"        String userInput \u003d targetIndex.getOneBased() + CHEESE_TYPE_DESC_MOZZARELLA","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"laurenlhy"},"content":"                + MANUFACTURE_DATE_5_DESC + CHEESE_TYPE_DESC_MOZZARELLA","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"laurenlhy"},"content":"                + EXPIRY_DATE_5_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptor \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"laurenlhy"},"content":"                new EditCheeseDescriptorBuilder().withCheeseType(CheeseType.getCheeseType(VALID_CHEESE_TYPE_MOZZARELLA))","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"laurenlhy"},"content":"                        .withManufactureDate(VALID_MANUFACTURE_DATE_5)","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"laurenlhy"},"content":"                        .withExpiryDate(VALID_EXPIRY_DATE_5)","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"laurenlhy"},"content":"                        .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand expectedCommand \u003d new EditCheeseCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"laurenlhy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"laurenlhy"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"laurenlhy"},"content":"        // no other valid values specified","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"laurenlhy"},"content":"        Index targetIndex \u003d INDEX_THIRD_CHEESE;","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"laurenlhy"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_CHEESE_TYPE_DESC","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"laurenlhy"},"content":"                + CHEESE_TYPE_DESC_MOZZARELLA;","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand.EditCheeseDescriptor descriptor \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"laurenlhy"},"content":"                new EditCheeseDescriptorBuilder()","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"laurenlhy"},"content":"                        .withCheeseType(CheeseType.getCheeseType(VALID_CHEESE_TYPE_MOZZARELLA)).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"laurenlhy"},"content":"        EditCheeseCommand expectedCommand \u003d new EditCheeseCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"laurenlhy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"laurenlhy"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"laurenlhy":144,"weixue123":23,"daniellau88":3}},{"path":"src/test/java/chim/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Address;","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Email;","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Name;","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"import chim.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCustomerCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"    private final EditCustomerCommandParser parser \u003d new EditCustomerCommandParser();","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"        assertParseFailure(parser, \"1\", EditCustomerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"laurenlhy"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Customer} being edited,","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"laurenlhy"},"content":"        Index targetIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"aaronsms"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                        .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"laurenlhy"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"laurenlhy"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"laurenlhy"},"content":"        Index targetIndex \u003d INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"laurenlhy"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":141,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"laurenlhy"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":147,"author":{"gitId":"aaronsms"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"laurenlhy"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":153,"author":{"gitId":"aaronsms"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"laurenlhy"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":159,"author":{"gitId":"aaronsms"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"laurenlhy"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":165,"author":{"gitId":"aaronsms"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"laurenlhy"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"weixue123"},"content":"                new EditCustomerDescriptorBuilder()","lastModifiedDate":"2021-04-09"},{"lineNumber":178,"author":{"gitId":"weixue123"},"content":"                        .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-04-09"},{"lineNumber":179,"author":{"gitId":"weixue123"},"content":"                        .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-04-09"},{"lineNumber":180,"author":{"gitId":"weixue123"},"content":"                        .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-04-09"},{"lineNumber":181,"author":{"gitId":"weixue123"},"content":"                        .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-04-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"laurenlhy"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand.EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder()","lastModifiedDate":"2021-03-26"},{"lineNumber":194,"author":{"gitId":"laurenlhy"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":195,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"laurenlhy"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"aaronsms"},"content":"        expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":209,"author":{"gitId":"laurenlhy"},"content":"        Index targetIndex \u003d INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2021-03-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"laurenlhy"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":213,"author":{"gitId":"aaronsms"},"content":"        EditCustomerCommand expectedCommand \u003d new EditCustomerCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"laurenlhy":16,"weixue123":47,"-":137,"aaronsms":17}},{"path":"src/test/java/chim/logic/parser/EditOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.CARL_PHONE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.CHEESE_TYPE_DESC_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.CHEESE_TYPE_DESC_FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.CHEESE_TYPE_DESC_GOUDA;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_CHEESE_TYPE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_ORDER_DATE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_QUANTITY_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.ORDER_DATE_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.QUANTITY_5_DESC;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_BRIE;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_GOUDA;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_CARL;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_QUANTITY_5;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_SECOND_UNCOMPLETED_ORDER;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditOrderCommand.EditOrderDescriptor;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"import chim.testutil.EditOrderDescriptorBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"public class EditOrderCommandParserTest {","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditOrderCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"    private final EditOrderCommandParser parser \u003d new EditOrderCommandParser();","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"        // no index specific","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, VALID_CHEESE_TYPE_BRIE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"        // no fields specific","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"1\", EditOrderCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"        // no index , no fields","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"        // negative index","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"-10\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"        // zero index","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"1 TEST\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"1 u/TEST\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":70,"author":{"gitId":"AhQuanz"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-04-08"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":"        // Invalid Cheese Type","lastModifiedDate":"2021-04-08"},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CHEESE_TYPE_DESC, CheeseType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":74,"author":{"gitId":"AhQuanz"},"content":"        // Invalid Order Date","lastModifiedDate":"2021-04-08"},{"lineNumber":75,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ORDER_DATE_DESC, OrderDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-08"},{"lineNumber":76,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":77,"author":{"gitId":"AhQuanz"},"content":"        // Invalid Quantity","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"1\" + INVALID_QUANTITY_DESC, Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-08"},{"lineNumber":79,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":80,"author":{"gitId":"AhQuanz"},"content":"        // Invalid Phone","lastModifiedDate":"2021-04-08"},{"lineNumber":81,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-08"},{"lineNumber":82,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":83,"author":{"gitId":"AhQuanz"},"content":"        // Valid Quantity followed by Invalid Cheese Type","lastModifiedDate":"2021-04-08"},{"lineNumber":84,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"1\" + QUANTITY_5_DESC + INVALID_CHEESE_TYPE_DESC,","lastModifiedDate":"2021-04-08"},{"lineNumber":85,"author":{"gitId":"AhQuanz"},"content":"                CheeseType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-08"},{"lineNumber":86,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":87,"author":{"gitId":"AhQuanz"},"content":"        // Valid Cheese Type followed by Invalid Cheese Type","lastModifiedDate":"2021-04-08"},{"lineNumber":88,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"1\" + CHEESE_TYPE_DESC_GOUDA + INVALID_CHEESE_TYPE_DESC,","lastModifiedDate":"2021-04-08"},{"lineNumber":89,"author":{"gitId":"AhQuanz"},"content":"                CheeseType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-08"},{"lineNumber":90,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":91,"author":{"gitId":"AhQuanz"},"content":"        // Multiple invalid values , first invalud value captured","lastModifiedDate":"2021-04-08"},{"lineNumber":92,"author":{"gitId":"AhQuanz"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CHEESE_TYPE_DESC","lastModifiedDate":"2021-04-08"},{"lineNumber":93,"author":{"gitId":"AhQuanz"},"content":"                        + INVALID_ORDER_DATE_DESC + INVALID_QUANTITY_DESC,","lastModifiedDate":"2021-04-08"},{"lineNumber":94,"author":{"gitId":"AhQuanz"},"content":"                CheeseType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-08"},{"lineNumber":95,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":96,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":97,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":98,"author":{"gitId":"AhQuanz"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-04-08"},{"lineNumber":99,"author":{"gitId":"AhQuanz"},"content":"        Index targetIndex \u003d INDEX_SECOND_UNCOMPLETED_ORDER;","lastModifiedDate":"2021-04-08"},{"lineNumber":100,"author":{"gitId":"AhQuanz"},"content":"        String userInput \u003d targetIndex.getOneBased() + QUANTITY_5_DESC","lastModifiedDate":"2021-04-08"},{"lineNumber":101,"author":{"gitId":"AhQuanz"},"content":"                + CHEESE_TYPE_DESC_GOUDA + ORDER_DATE_DESC + CARL_PHONE_DESC;","lastModifiedDate":"2021-04-08"},{"lineNumber":102,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":103,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d","lastModifiedDate":"2021-04-08"},{"lineNumber":104,"author":{"gitId":"AhQuanz"},"content":"                new EditOrderDescriptorBuilder().withCheeseType(VALID_CHEESE_TYPE_GOUDA)","lastModifiedDate":"2021-04-08"},{"lineNumber":105,"author":{"gitId":"AhQuanz"},"content":"                        .withQuantity(VALID_QUANTITY_5).withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":106,"author":{"gitId":"AhQuanz"},"content":"                        .withPhone(VALID_PHONE_CARL).build();","lastModifiedDate":"2021-04-08"},{"lineNumber":107,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":108,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":109,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":110,"author":{"gitId":"AhQuanz"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-08"},{"lineNumber":111,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":112,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":113,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":114,"author":{"gitId":"AhQuanz"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-04-08"},{"lineNumber":115,"author":{"gitId":"AhQuanz"},"content":"        Index targetIndex \u003d INDEX_SECOND_UNCOMPLETED_ORDER;","lastModifiedDate":"2021-04-08"},{"lineNumber":116,"author":{"gitId":"AhQuanz"},"content":"        String userInput \u003d targetIndex.getOneBased() + QUANTITY_5_DESC","lastModifiedDate":"2021-04-08"},{"lineNumber":117,"author":{"gitId":"AhQuanz"},"content":"                + CHEESE_TYPE_DESC_GOUDA;","lastModifiedDate":"2021-04-08"},{"lineNumber":118,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":119,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d","lastModifiedDate":"2021-04-08"},{"lineNumber":120,"author":{"gitId":"AhQuanz"},"content":"                new EditOrderDescriptorBuilder().withCheeseType(VALID_CHEESE_TYPE_GOUDA)","lastModifiedDate":"2021-04-08"},{"lineNumber":121,"author":{"gitId":"AhQuanz"},"content":"                        .withQuantity(VALID_QUANTITY_5).build();","lastModifiedDate":"2021-04-08"},{"lineNumber":122,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":123,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":124,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":125,"author":{"gitId":"AhQuanz"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-08"},{"lineNumber":126,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":127,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":128,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":129,"author":{"gitId":"AhQuanz"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-04-08"},{"lineNumber":130,"author":{"gitId":"AhQuanz"},"content":"        Index targetIndex \u003d INDEX_SECOND_UNCOMPLETED_ORDER;","lastModifiedDate":"2021-04-08"},{"lineNumber":131,"author":{"gitId":"AhQuanz"},"content":"        // cheese type","lastModifiedDate":"2021-04-08"},{"lineNumber":132,"author":{"gitId":"AhQuanz"},"content":"        String userInput \u003d targetIndex.getOneBased() + CHEESE_TYPE_DESC_GOUDA;","lastModifiedDate":"2021-04-08"},{"lineNumber":133,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":134,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d","lastModifiedDate":"2021-04-08"},{"lineNumber":135,"author":{"gitId":"AhQuanz"},"content":"                new EditOrderDescriptorBuilder().withCheeseType(VALID_CHEESE_TYPE_GOUDA)","lastModifiedDate":"2021-04-08"},{"lineNumber":136,"author":{"gitId":"AhQuanz"},"content":"                        .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":137,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":138,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":139,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":140,"author":{"gitId":"AhQuanz"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-08"},{"lineNumber":141,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":142,"author":{"gitId":"AhQuanz"},"content":"        // order date","lastModifiedDate":"2021-04-08"},{"lineNumber":143,"author":{"gitId":"AhQuanz"},"content":"        userInput \u003d targetIndex.getOneBased() + ORDER_DATE_DESC;","lastModifiedDate":"2021-04-08"},{"lineNumber":144,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":145,"author":{"gitId":"AhQuanz"},"content":"        descriptor \u003d new EditOrderDescriptorBuilder().withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":146,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":147,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":148,"author":{"gitId":"AhQuanz"},"content":"        expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":149,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":150,"author":{"gitId":"AhQuanz"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-08"},{"lineNumber":151,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":152,"author":{"gitId":"AhQuanz"},"content":"        // quantity","lastModifiedDate":"2021-04-08"},{"lineNumber":153,"author":{"gitId":"AhQuanz"},"content":"        userInput \u003d targetIndex.getOneBased() + QUANTITY_5_DESC;","lastModifiedDate":"2021-04-08"},{"lineNumber":154,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":155,"author":{"gitId":"AhQuanz"},"content":"        descriptor \u003d new EditOrderDescriptorBuilder().withQuantity(VALID_QUANTITY_5)","lastModifiedDate":"2021-04-08"},{"lineNumber":156,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":157,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":158,"author":{"gitId":"AhQuanz"},"content":"        expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":159,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":160,"author":{"gitId":"AhQuanz"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-08"},{"lineNumber":161,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":162,"author":{"gitId":"AhQuanz"},"content":"        // phone","lastModifiedDate":"2021-04-08"},{"lineNumber":163,"author":{"gitId":"AhQuanz"},"content":"        userInput \u003d targetIndex.getOneBased() + CARL_PHONE_DESC;","lastModifiedDate":"2021-04-08"},{"lineNumber":164,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":165,"author":{"gitId":"AhQuanz"},"content":"        descriptor \u003d new EditOrderDescriptorBuilder().withPhone(VALID_PHONE_CARL)","lastModifiedDate":"2021-04-08"},{"lineNumber":166,"author":{"gitId":"AhQuanz"},"content":"                .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":167,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":168,"author":{"gitId":"AhQuanz"},"content":"        expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":169,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":170,"author":{"gitId":"AhQuanz"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-08"},{"lineNumber":171,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":172,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":173,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":174,"author":{"gitId":"AhQuanz"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-04-08"},{"lineNumber":175,"author":{"gitId":"AhQuanz"},"content":"        Index targetIndex \u003d INDEX_SECOND_UNCOMPLETED_ORDER;","lastModifiedDate":"2021-04-08"},{"lineNumber":176,"author":{"gitId":"AhQuanz"},"content":"        String userInput \u003d targetIndex.getOneBased() + CHEESE_TYPE_DESC_CAMEMBERT + CHEESE_TYPE_DESC_FETA","lastModifiedDate":"2021-04-08"},{"lineNumber":177,"author":{"gitId":"AhQuanz"},"content":"                + CHEESE_TYPE_DESC_GOUDA + CARL_PHONE_DESC + ORDER_DATE_DESC;","lastModifiedDate":"2021-04-08"},{"lineNumber":178,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":179,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d","lastModifiedDate":"2021-04-08"},{"lineNumber":180,"author":{"gitId":"AhQuanz"},"content":"                new EditOrderDescriptorBuilder().withCheeseType(VALID_CHEESE_TYPE_GOUDA)","lastModifiedDate":"2021-04-08"},{"lineNumber":181,"author":{"gitId":"AhQuanz"},"content":"                        .withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":182,"author":{"gitId":"AhQuanz"},"content":"                        .withPhone(VALID_PHONE_CARL).build();","lastModifiedDate":"2021-04-08"},{"lineNumber":183,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":184,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":185,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":186,"author":{"gitId":"AhQuanz"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-08"},{"lineNumber":187,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":188,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":189,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":190,"author":{"gitId":"AhQuanz"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-04-08"},{"lineNumber":191,"author":{"gitId":"AhQuanz"},"content":"        Index targetIndex \u003d INDEX_SECOND_UNCOMPLETED_ORDER;","lastModifiedDate":"2021-04-08"},{"lineNumber":192,"author":{"gitId":"AhQuanz"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_CHEESE_TYPE_DESC + CHEESE_TYPE_DESC_FETA","lastModifiedDate":"2021-04-08"},{"lineNumber":193,"author":{"gitId":"AhQuanz"},"content":"                + CHEESE_TYPE_DESC_GOUDA + CARL_PHONE_DESC + ORDER_DATE_DESC;","lastModifiedDate":"2021-04-08"},{"lineNumber":194,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":195,"author":{"gitId":"AhQuanz"},"content":"        EditOrderDescriptor descriptor \u003d","lastModifiedDate":"2021-04-08"},{"lineNumber":196,"author":{"gitId":"AhQuanz"},"content":"                new EditOrderDescriptorBuilder().withCheeseType(VALID_CHEESE_TYPE_GOUDA)","lastModifiedDate":"2021-04-08"},{"lineNumber":197,"author":{"gitId":"AhQuanz"},"content":"                        .withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-04-08"},{"lineNumber":198,"author":{"gitId":"AhQuanz"},"content":"                        .withPhone(VALID_PHONE_CARL).build();","lastModifiedDate":"2021-04-08"},{"lineNumber":199,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":200,"author":{"gitId":"AhQuanz"},"content":"        EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":201,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":202,"author":{"gitId":"AhQuanz"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-08"},{"lineNumber":203,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":204,"author":{"gitId":"AhQuanz"},"content":"}","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"AhQuanz":174,"weixue123":30}},{"path":"src/test/java/chim/logic/parser/FindCheeseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_ASSIGNED_STATUS;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_BRIE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_UNASSIGNED_STATUS;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_ASSIGNMENT_STATUS;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.FindCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.predicates.CheeseAssignmentStatusPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.predicates.CheeseCheeseTypePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.CompositeFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.CompositeFieldPredicateBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"public class FindCheeseCommandParserTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"    private final FindCheeseCommandParser parser \u003d new FindCheeseCommandParser();","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"    public void parse_noArgs_throwsParseExeception() {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCheeseCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"        // No arguments","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"        // No valid prefixes","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(parser, \"n/brie\", expectedMessage);","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(parser, \"a\", expectedMessage);","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"    public void parse_validCheeseTypeArgs_returnsFindCheeseCommand() {","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"        // One cheese type in argument, e.g. \"findcheese t/brie\"","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e cheeseTypeKeywordSingle \u003d Collections.singletonList(VALID_CHEESE_TYPE_BRIE);","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicate\u003cCheese\u003e singleCheeseTypePredicate \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"                new CompositeFieldPredicate\u003c\u003e(new CheeseCheeseTypePredicate(cheeseTypeKeywordSingle));","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"        String singleCheeseTypeArg \u003d \" \" + PREFIX_CHEESE_TYPE + VALID_CHEESE_TYPE_BRIE;","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(parser, singleCheeseTypeArg, new FindCheeseCommand(singleCheeseTypePredicate));","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"        // Multiple cheese types in argument, e.g. \"findcheese t/brie camembert feta\"","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e cheeseTypeKeywordsMultiple \u003d Arrays.asList(","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"                VALID_CHEESE_TYPE_BRIE,","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"                VALID_CHEESE_TYPE_CAMEMBERT,","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"                VALID_CHEESE_TYPE_FETA","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicate\u003cCheese\u003e multipleCheeseTypePredicate \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"                new CompositeFieldPredicate\u003c\u003e(new CheeseCheeseTypePredicate(cheeseTypeKeywordsMultiple));","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"        String multipleCheeseTypeArg \u003d \" \" + PREFIX_CHEESE_TYPE + String.join(\" \", cheeseTypeKeywordsMultiple);","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(parser, multipleCheeseTypeArg, new FindCheeseCommand(multipleCheeseTypePredicate));","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"    public void parse_validAssignmentStatusArgs_returnsFindCheeseCommand() {","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"        // Inputting an \"assigned\" status argument","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicate\u003cCheese\u003e assignedStatusPredicate \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"                new CompositeFieldPredicate\u003c\u003e(new CheeseAssignmentStatusPredicate(VALID_CHEESE_ASSIGNED_STATUS));","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"        String assignedStatusArg \u003d \" \" + PREFIX_CHEESE_ASSIGNMENT_STATUS + VALID_CHEESE_ASSIGNED_STATUS;","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(parser, assignedStatusArg, new FindCheeseCommand(assignedStatusPredicate));","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"        // Inputting an \"unassigned\" status argument","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicate\u003cCheese\u003e unassignedStatusPredicate \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"                new CompositeFieldPredicate\u003c\u003e(new CheeseAssignmentStatusPredicate(VALID_CHEESE_UNASSIGNED_STATUS));","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"weixue123"},"content":"        String unassignedStatusArg \u003d \" \" + PREFIX_CHEESE_ASSIGNMENT_STATUS + VALID_CHEESE_UNASSIGNED_STATUS;","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(parser, unassignedStatusArg, new FindCheeseCommand(unassignedStatusPredicate));","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"weixue123"},"content":"    public void parse_validCheeseTypeAndAssignmentStatusArgs_returnsFindCheeseCommand() {","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e cheeseTypeKeywordsMultiple \u003d Arrays.asList(","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"weixue123"},"content":"                VALID_CHEESE_TYPE_BRIE,","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"weixue123"},"content":"                VALID_CHEESE_TYPE_CAMEMBERT","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicate\u003cCheese\u003e predicate \u003d new CompositeFieldPredicateBuilder\u003cCheese\u003e()","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"weixue123"},"content":"                .compose(new CheeseAssignmentStatusPredicate(VALID_CHEESE_ASSIGNED_STATUS))","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"weixue123"},"content":"                .compose(new CheeseCheeseTypePredicate(cheeseTypeKeywordsMultiple))","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"weixue123"},"content":"                .build();","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"weixue123"},"content":"        String arg \u003d \" \" + PREFIX_CHEESE_ASSIGNMENT_STATUS + VALID_CHEESE_ASSIGNED_STATUS","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"weixue123"},"content":"                + \" \" + PREFIX_CHEESE_TYPE + VALID_CHEESE_TYPE_BRIE","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"weixue123"},"content":"                + \" \" + VALID_CHEESE_TYPE_CAMEMBERT;","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(parser, arg, new FindCheeseCommand(predicate));","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"weixue123"},"content":"    public void parse_invalidArgs_throwsParseExeception() {","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"        // Empty argument following cheese type prefix","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_CHEESE_TYPE,","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"weixue123"},"content":"                CheeseCheeseTypePredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_CHEESE_ASSIGNMENT_STATUS + \"assigned \" + PREFIX_CHEESE_TYPE,","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"weixue123"},"content":"                CheeseCheeseTypePredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"weixue123"},"content":"        // Invalid argument following assignment status prefix","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_CHEESE_ASSIGNMENT_STATUS,","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"weixue123"},"content":"                CheeseAssignmentStatusPredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_CHEESE_ASSIGNMENT_STATUS + \" \" + PREFIX_CHEESE_TYPE + VALID_CHEESE_TYPE_BRIE,","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"weixue123"},"content":"                CheeseAssignmentStatusPredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_CHEESE_ASSIGNMENT_STATUS + \"a\",","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"weixue123"},"content":"                CheeseAssignmentStatusPredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":129,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"weixue123":130}},{"path":"src/test/java/chim/logic/parser/FindCustomerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.FindCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerNamePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.CompositeFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"public class FindCustomerCommandParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    private final FindCustomerCommandParser parser \u003d new FindCustomerCommandParser();","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"        final List\u003cString\u003e keywords \u003d Arrays.asList(\"Alice\", \"Bob\");","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"        FindCustomerCommand expectedFindCustomerCommand \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"                new FindCustomerCommand(new CompositeFieldPredicate\u003cCustomer\u003e(new CustomerNamePredicate(keywords)));","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \" \" + PREFIX_NAME + \"Alice Bob\", expectedFindCustomerCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \" \" + PREFIX_NAME + \" \\n Alice \\n \\t Bob  \\t\",","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"            expectedFindCustomerCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"weixue123":11,"daniellau88":32}},{"path":"src/test/java/chim/logic/parser/FindOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.commons.util.StringUtil.splitToKeywordsList;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_BRIE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_COMPLETE_STATUS;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_INCOMPLETE_STATUS;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ORDER_COMPLETION_STATUS;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.FindOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"import chim.model.order.predicates.OrderCheeseTypePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"import chim.model.order.predicates.OrderCompletionStatusPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"import chim.model.order.predicates.OrderNamePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"import chim.model.order.predicates.OrderPhonePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.CompositeFieldPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"import chim.model.util.predicate.CompositeFieldPredicateBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"public class FindOrderCommandParserTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"    private FindOrderCommandParser parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"    private List\u003cCustomer\u003e customerList;","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"        customerList \u003d getTypicalChim().getCustomerList();","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"        parser \u003d new FindOrderCommandParser(customerList);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"    public void parse_noArgs_throwsParseException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"        // No arguments","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"        // No valid prefixes","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(parser, \" a/brie\", expectedMessage);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(parser, \" b/\", expectedMessage);","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"    public void parse_validCheeseTypeArgs_returnsFindOrderCommand() {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"        // One cheese type in argument, e.g. \"findorder t/brie\"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e cheeseTypeKeywordSingle \u003d Collections.singletonList(VALID_CHEESE_TYPE_BRIE);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicate\u003cOrder\u003e singleCheeseTypePredicate \u003d new CompositeFieldPredicateBuilder\u003cOrder\u003e()","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderCheeseTypePredicate(cheeseTypeKeywordSingle))","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"                .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_CHEESE_TYPE + VALID_CHEESE_TYPE_BRIE,","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"                new FindOrderCommand(singleCheeseTypePredicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"        // Multiple cheese types in argument, e.g. \"findcheese t/brie camembert feta\"","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"        List\u003cString\u003e cheeseTypeKeywordsMultiple \u003d Arrays.asList(","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"weixue123"},"content":"                VALID_CHEESE_TYPE_BRIE,","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"                VALID_CHEESE_TYPE_CAMEMBERT,","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"weixue123"},"content":"                VALID_CHEESE_TYPE_FETA","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicate\u003cOrder\u003e multipleCheeseTypePredicate \u003d new CompositeFieldPredicateBuilder\u003cOrder\u003e()","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderCheeseTypePredicate(cheeseTypeKeywordsMultiple))","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"weixue123"},"content":"                .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_CHEESE_TYPE + String.join(\" \", cheeseTypeKeywordsMultiple),","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"weixue123"},"content":"                new FindOrderCommand(multipleCheeseTypePredicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"weixue123"},"content":"    public void parse_validCustomerNameArgs_returnsFindOrderCommand() {","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"weixue123"},"content":"        // Inputting a valid name argument, e,g, findorder n/Bob Choo","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicate\u003cOrder\u003e predicate \u003d new CompositeFieldPredicateBuilder\u003cOrder\u003e()","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderNamePredicate(splitToKeywordsList(VALID_NAME_BOB), customerList))","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"weixue123"},"content":"                .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_NAME + VALID_NAME_BOB,","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"weixue123"},"content":"                new FindOrderCommand(predicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"weixue123"},"content":"    public void parse_validCustomerPhoneArgs_returnsFindOrderCommand() {","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"weixue123"},"content":"        // Inputting a valid phone argument, e,g, findorder p/22222222","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicate\u003cOrder\u003e predicate \u003d new CompositeFieldPredicateBuilder\u003cOrder\u003e()","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderPhonePredicate(splitToKeywordsList(VALID_PHONE_BOB), customerList))","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"weixue123"},"content":"                .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_PHONE + VALID_PHONE_BOB,","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"weixue123"},"content":"                new FindOrderCommand(predicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"weixue123"},"content":"    public void parse_validCompletionStatusArgs_returnsFindOrderCommand() {","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"weixue123"},"content":"        // Inputting a \"complete\" status argument","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicate\u003cOrder\u003e completeStatusPredicate \u003d new CompositeFieldPredicateBuilder\u003cOrder\u003e()","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderCompletionStatusPredicate(VALID_ORDER_COMPLETE_STATUS))","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"weixue123"},"content":"                .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_ORDER_COMPLETION_STATUS + VALID_ORDER_COMPLETE_STATUS,","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"weixue123"},"content":"                new FindOrderCommand(completeStatusPredicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"weixue123"},"content":"        // Inputting an \"incomplete\" status argument","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicate\u003cOrder\u003e incompleteStatusPredicate \u003d new CompositeFieldPredicateBuilder\u003cOrder\u003e()","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderCompletionStatusPredicate(VALID_ORDER_INCOMPLETE_STATUS))","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"weixue123"},"content":"                .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_ORDER_COMPLETION_STATUS + VALID_ORDER_INCOMPLETE_STATUS,","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"weixue123"},"content":"                new FindOrderCommand(incompleteStatusPredicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"weixue123"},"content":"    public void parse_validAllArgs_returnsFindOrderCommand() {","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"weixue123"},"content":"        CompositeFieldPredicate\u003cOrder\u003e predicate \u003d new CompositeFieldPredicateBuilder\u003cOrder\u003e()","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderCheeseTypePredicate(Collections.singletonList(VALID_CHEESE_TYPE_BRIE)))","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderNamePredicate(splitToKeywordsList(VALID_NAME_BOB), customerList))","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderPhonePredicate(splitToKeywordsList(VALID_PHONE_BOB), customerList))","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"weixue123"},"content":"                .compose(new OrderCompletionStatusPredicate(VALID_ORDER_COMPLETE_STATUS))","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"weixue123"},"content":"                .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"weixue123"},"content":"        String arg \u003d \" \"","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"weixue123"},"content":"                + PREFIX_CHEESE_TYPE + VALID_CHEESE_TYPE_BRIE + \" \"","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"weixue123"},"content":"                + PREFIX_NAME + VALID_NAME_BOB + \" \"","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"weixue123"},"content":"                + PREFIX_PHONE + VALID_PHONE_BOB + \" \"","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"weixue123"},"content":"                + PREFIX_ORDER_COMPLETION_STATUS + VALID_ORDER_COMPLETE_STATUS;","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"weixue123"},"content":"        assertParseSuccess(parser, arg, new FindOrderCommand(predicate));","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"weixue123"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"weixue123"},"content":"        // Empty argument following cheese type prefix","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_CHEESE_TYPE,","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"weixue123"},"content":"                OrderCheeseTypePredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"weixue123"},"content":"        // Empty argument following name prefix","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_NAME,","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"weixue123"},"content":"                OrderNamePredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"weixue123"},"content":"        // Empty argument following phone prefix","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_PHONE,","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"weixue123"},"content":"                OrderPhonePredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"weixue123"},"content":"        // Empty or invalid argument following completion status prefix","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_ORDER_COMPLETION_STATUS,","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"weixue123"},"content":"                OrderCompletionStatusPredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"weixue123"},"content":"        assertParseFailure(","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"weixue123"},"content":"                parser,","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"weixue123"},"content":"                \" \" + PREFIX_ORDER_COMPLETION_STATUS + \"an invalid string\",","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"weixue123"},"content":"                OrderCompletionStatusPredicate.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"weixue123"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"weixue123":192}},{"path":"src/test/java/chim/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.logic.parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ExpiryDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ManufactureDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Address;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Email;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Name;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"    private static final String INVALID_CHEESE_TYPE \u003d \"123%@can\";","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"    private static final String INVALID_QUANTITY \u003d \"-1\";","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"    private static final String INVALID_ORDER_DATE \u003d \"03-20-2020\";","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"    private static final String INVALID_MANUFACTURE_DATE \u003d \"2020/02/12\";","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"    private static final String INVALID_EXPIRY_DATE \u003d \"2020-30-12\";","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"    private static final String INVALID_INTEGER \u003d \"-4\";","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"    private static final String VALID_CHEESE_TYPE \u003d \"Parmesan\";","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"    private static final String VALID_QUANTITY \u003d \"8\";","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"    private static final String VALID_ORDER_DATE \u003d \"2020-02-12\";","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"    private static final String VALID_MANUFACTURE_DATE \u003d \"2021-12-30\";","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"    private static final String VALID_EXPIRY_DATE \u003d \"2021-08-31\";","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"    private static final String VALID_INTEGER \u003d \"3\";","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(INDEX_FIRST_CUSTOMER, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(INDEX_FIRST_CUSTOMER, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":214,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":215,"author":{"gitId":"aaronsms"},"content":"    public void parseCheeseType_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":216,"author":{"gitId":"aaronsms"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCheeseType(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":217,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":218,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":219,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":220,"author":{"gitId":"aaronsms"},"content":"    public void parseCheeseType_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":221,"author":{"gitId":"aaronsms"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCheeseType(INVALID_CHEESE_TYPE));","lastModifiedDate":"2021-03-16"},{"lineNumber":222,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":223,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":224,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":225,"author":{"gitId":"aaronsms"},"content":"    public void parseCheeseType_validValueWithoutWhitespace_returnsCheeseType() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":226,"author":{"gitId":"aaronsms"},"content":"        CheeseType expectedCheeseType \u003d CheeseType.getCheeseType(VALID_CHEESE_TYPE);","lastModifiedDate":"2021-03-16"},{"lineNumber":227,"author":{"gitId":"aaronsms"},"content":"        assertEquals(expectedCheeseType, ParserUtil.parseCheeseType(VALID_CHEESE_TYPE));","lastModifiedDate":"2021-03-16"},{"lineNumber":228,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":229,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":230,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":231,"author":{"gitId":"aaronsms"},"content":"    public void parseCheeseType_validValueWithWhitespace_returnsTrimmedCheeseType() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":232,"author":{"gitId":"aaronsms"},"content":"        String cheeseTypeWithWhitespace \u003d WHITESPACE + VALID_CHEESE_TYPE + WHITESPACE;","lastModifiedDate":"2021-03-16"},{"lineNumber":233,"author":{"gitId":"aaronsms"},"content":"        CheeseType expectedCheeseType \u003d CheeseType.getCheeseType(VALID_CHEESE_TYPE);","lastModifiedDate":"2021-03-16"},{"lineNumber":234,"author":{"gitId":"aaronsms"},"content":"        assertEquals(expectedCheeseType, ParserUtil.parseCheeseType(cheeseTypeWithWhitespace));","lastModifiedDate":"2021-03-16"},{"lineNumber":235,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":236,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":237,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":238,"author":{"gitId":"aaronsms"},"content":"    public void parseQuantity_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":239,"author":{"gitId":"aaronsms"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseQuantity(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":240,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":241,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":242,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":243,"author":{"gitId":"aaronsms"},"content":"    public void parseQuantity_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":244,"author":{"gitId":"aaronsms"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseQuantity(INVALID_QUANTITY));","lastModifiedDate":"2021-03-16"},{"lineNumber":245,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":246,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":247,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":248,"author":{"gitId":"aaronsms"},"content":"    public void parseQuantity_validValueWithoutWhitespace_returnsQuantity() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":249,"author":{"gitId":"aaronsms"},"content":"        Quantity expectedQuantity \u003d new Quantity(Integer.parseInt(VALID_QUANTITY));","lastModifiedDate":"2021-03-16"},{"lineNumber":250,"author":{"gitId":"aaronsms"},"content":"        assertEquals(expectedQuantity, ParserUtil.parseQuantity(VALID_QUANTITY));","lastModifiedDate":"2021-03-16"},{"lineNumber":251,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":252,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":253,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":254,"author":{"gitId":"aaronsms"},"content":"    public void parseQuantity_validValueWithWhitespace_returnsTrimmedQuantity() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":255,"author":{"gitId":"aaronsms"},"content":"        String quantityWithWhitespace \u003d WHITESPACE + VALID_QUANTITY + WHITESPACE;","lastModifiedDate":"2021-03-16"},{"lineNumber":256,"author":{"gitId":"aaronsms"},"content":"        Quantity expectedQuantity \u003d new Quantity(Integer.parseInt(VALID_QUANTITY));","lastModifiedDate":"2021-03-16"},{"lineNumber":257,"author":{"gitId":"aaronsms"},"content":"        assertEquals(expectedQuantity, ParserUtil.parseQuantity(quantityWithWhitespace));","lastModifiedDate":"2021-03-16"},{"lineNumber":258,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":259,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":260,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":261,"author":{"gitId":"aaronsms"},"content":"    public void parseOrderDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":262,"author":{"gitId":"aaronsms"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOrderDate(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":263,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":264,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":265,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":266,"author":{"gitId":"aaronsms"},"content":"    public void parseOrderDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":267,"author":{"gitId":"aaronsms"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOrderDate(INVALID_ORDER_DATE));","lastModifiedDate":"2021-03-16"},{"lineNumber":268,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":269,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":270,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":271,"author":{"gitId":"aaronsms"},"content":"    public void parseOrderDate_validValueWithoutWhitespace_returnsOrderDate() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":272,"author":{"gitId":"aaronsms"},"content":"        OrderDate expectedOrderDate \u003d new OrderDate(VALID_ORDER_DATE);","lastModifiedDate":"2021-03-16"},{"lineNumber":273,"author":{"gitId":"aaronsms"},"content":"        assertEquals(expectedOrderDate, ParserUtil.parseOrderDate(VALID_ORDER_DATE));","lastModifiedDate":"2021-03-16"},{"lineNumber":274,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":275,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":276,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":277,"author":{"gitId":"aaronsms"},"content":"    public void parseOrderDate_validValueWithWhitespace_returnsTrimmedOrderDate() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":278,"author":{"gitId":"aaronsms"},"content":"        String orderDateWithWhitespace \u003d WHITESPACE + VALID_ORDER_DATE + WHITESPACE;","lastModifiedDate":"2021-03-16"},{"lineNumber":279,"author":{"gitId":"aaronsms"},"content":"        OrderDate expectedOrderDate \u003d new OrderDate(VALID_ORDER_DATE);","lastModifiedDate":"2021-03-16"},{"lineNumber":280,"author":{"gitId":"aaronsms"},"content":"        assertEquals(expectedOrderDate, ParserUtil.parseOrderDate(orderDateWithWhitespace));","lastModifiedDate":"2021-03-16"},{"lineNumber":281,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":282,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":283,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":284,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":285,"author":{"gitId":"aaronsms"},"content":"    public void parseInteger_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":286,"author":{"gitId":"aaronsms"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseInteger(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":287,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":288,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":289,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":290,"author":{"gitId":"aaronsms"},"content":"    public void parseInteger_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":291,"author":{"gitId":"aaronsms"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInteger(INVALID_INTEGER));","lastModifiedDate":"2021-03-16"},{"lineNumber":292,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":293,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":294,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":295,"author":{"gitId":"aaronsms"},"content":"    public void parseInteger_validValueWithoutWhitespace_returnsInteger() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":296,"author":{"gitId":"aaronsms"},"content":"        int expectedInteger \u003d Integer.parseInt(VALID_INTEGER);","lastModifiedDate":"2021-03-16"},{"lineNumber":297,"author":{"gitId":"aaronsms"},"content":"        assertEquals(expectedInteger, ParserUtil.parseInteger(VALID_INTEGER));","lastModifiedDate":"2021-03-16"},{"lineNumber":298,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":299,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":300,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":301,"author":{"gitId":"aaronsms"},"content":"    public void parseInteger_validValueWithWhitespace_returnsTrimmedInteger() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":302,"author":{"gitId":"aaronsms"},"content":"        String integerWithWhitespace \u003d WHITESPACE + VALID_INTEGER + WHITESPACE;","lastModifiedDate":"2021-03-16"},{"lineNumber":303,"author":{"gitId":"aaronsms"},"content":"        int expectedInteger \u003d Integer.parseInt(VALID_INTEGER);","lastModifiedDate":"2021-03-16"},{"lineNumber":304,"author":{"gitId":"aaronsms"},"content":"        assertEquals(expectedInteger, ParserUtil.parseInteger(integerWithWhitespace));","lastModifiedDate":"2021-03-16"},{"lineNumber":305,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":306,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":307,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":308,"author":{"gitId":"aaronsms"},"content":"    public void parseManufactureDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":309,"author":{"gitId":"aaronsms"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseManufactureDate(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":310,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":311,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":312,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":313,"author":{"gitId":"aaronsms"},"content":"    public void parseManufactureDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":314,"author":{"gitId":"aaronsms"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseManufactureDate(INVALID_MANUFACTURE_DATE));","lastModifiedDate":"2021-03-16"},{"lineNumber":315,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":316,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":317,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":318,"author":{"gitId":"aaronsms"},"content":"    public void parseManufactureDate_validValueWithoutWhitespace_returnsManufactureDate() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":319,"author":{"gitId":"aaronsms"},"content":"        ManufactureDate expectedManufactureDate \u003d new ManufactureDate(VALID_MANUFACTURE_DATE);","lastModifiedDate":"2021-03-16"},{"lineNumber":320,"author":{"gitId":"aaronsms"},"content":"        assertEquals(expectedManufactureDate, ParserUtil.parseManufactureDate(VALID_MANUFACTURE_DATE));","lastModifiedDate":"2021-03-16"},{"lineNumber":321,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":322,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":323,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":324,"author":{"gitId":"aaronsms"},"content":"    public void parseManufactureDate_validValueWithWhitespace_returnsTrimmedManufactureDate() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":325,"author":{"gitId":"aaronsms"},"content":"        String manufactureDateWithWhitespace \u003d WHITESPACE + VALID_MANUFACTURE_DATE + WHITESPACE;","lastModifiedDate":"2021-03-16"},{"lineNumber":326,"author":{"gitId":"aaronsms"},"content":"        ManufactureDate expectedManufactureDate \u003d new ManufactureDate(VALID_MANUFACTURE_DATE);","lastModifiedDate":"2021-03-16"},{"lineNumber":327,"author":{"gitId":"aaronsms"},"content":"        assertEquals(expectedManufactureDate, ParserUtil.parseManufactureDate(manufactureDateWithWhitespace));","lastModifiedDate":"2021-03-16"},{"lineNumber":328,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":329,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":330,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":331,"author":{"gitId":"aaronsms"},"content":"    public void parseExpiryDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":332,"author":{"gitId":"aaronsms"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseExpiryDate(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":333,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":334,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":335,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":336,"author":{"gitId":"aaronsms"},"content":"    public void parseExpiryDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":337,"author":{"gitId":"aaronsms"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseExpiryDate(INVALID_EXPIRY_DATE));","lastModifiedDate":"2021-03-16"},{"lineNumber":338,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":339,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":340,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":341,"author":{"gitId":"aaronsms"},"content":"    public void parseExpiryDate_validValueWithoutWhitespace_returnsExpiryDate() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":342,"author":{"gitId":"aaronsms"},"content":"        ExpiryDate expectedExpiryDate \u003d new ExpiryDate(VALID_EXPIRY_DATE);","lastModifiedDate":"2021-03-16"},{"lineNumber":343,"author":{"gitId":"aaronsms"},"content":"        assertEquals(expectedExpiryDate, ParserUtil.parseExpiryDate(VALID_EXPIRY_DATE));","lastModifiedDate":"2021-03-16"},{"lineNumber":344,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":345,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":346,"author":{"gitId":"aaronsms"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":347,"author":{"gitId":"aaronsms"},"content":"    public void parseExpiryDate_validValueWithWhitespace_returnsTrimmedExpiryDate() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":348,"author":{"gitId":"aaronsms"},"content":"        String expiryDateWithWhitespace \u003d WHITESPACE + VALID_EXPIRY_DATE + WHITESPACE;","lastModifiedDate":"2021-03-16"},{"lineNumber":349,"author":{"gitId":"aaronsms"},"content":"        ExpiryDate expectedExpiryDate \u003d new ExpiryDate(VALID_EXPIRY_DATE);","lastModifiedDate":"2021-03-16"},{"lineNumber":350,"author":{"gitId":"aaronsms"},"content":"        assertEquals(expectedExpiryDate, ParserUtil.parseExpiryDate(expiryDateWithWhitespace));","lastModifiedDate":"2021-03-16"},{"lineNumber":351,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"laurenlhy":2,"weixue123":15,"-":184,"aaronsms":151}},{"path":"src/test/java/chim/model/AbstractDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"public class AbstractDateTest {","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"    public static class ImplementedAbstractDate extends AbstractDate {","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"        public ImplementedAbstractDate(String date) {","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"            super(date);","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ImplementedAbstractDate(null));","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"    public void constructor_invalidExpiryDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ImplementedAbstractDate(invalidDate));","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    public void parseDate() {","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"        // Valid Dates","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy HHmm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"        LocalDateTime validDate \u003d LocalDateTime.of(2020, 02, 06, 8, 1, 0);","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"06/2/2020 08:01\"), validDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"6/02/2020 08:01\"), validDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"        validDate \u003d LocalDateTime.of(2020, 07, 01, 0, 0, 0);","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"1/07/2020\"), validDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"01/7/2020\"), validDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-M-d] format","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"        validDate \u003d LocalDateTime.of(2020, 02, 10, 0, 0, 0);","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-02-10\"), validDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-2-10\"), validDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-M-d HH:mm]","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"        validDate \u003d LocalDateTime.of(2020, 02, 10, 8, 1, 0);","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-02-10 08:01\"), validDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-2-10 08:01\"), validDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"        validDate \u003d LocalDateTime.of(2020, 03, 8, 9, 10, 0);","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Mar 8 2020 09:10\"), validDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Mar 08 2020 09:10\"), validDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"        validDate \u003d LocalDateTime.of(2020, 06, 8, 0, 0, 0);","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Jun 8 2020\"), validDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Jun 08 2020\"), validDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"        // Invalid Dates","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"        // Missing information","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"        // Missing Day","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy HHmm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"/23/2020 08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"/-10/2020\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-M-d HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-2- 08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-m-d] format","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-12-\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Feb  2020 09:10\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Feb  2020\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"        // Missing Month","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy HHmm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"10//2020 08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"10//2020\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-M-d HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-10 08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-m-d] format","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-10\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\" 2 2020 09:10\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\" 10 2020\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"daniellau88"},"content":"        // Missing Year","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy HHmm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"3/12/ 08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"13/10/\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-M-d HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"-2-23 08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-m-d] format","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"12-40\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Mar 2  09:10\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Feb 10 \"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"        // Missing Hour","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy HHmm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"6/02/2020 :01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-M-d HH:mm]","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-2-10 01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Mar 08 2020 :10\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"daniellau88"},"content":"        // Missing Minutes","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy HHmm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"6/02/2020 08:\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":122,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-M-d HH:mm]","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-2-10 08\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":125,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Mar 08 2020 09:\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":128,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":129,"author":{"gitId":"daniellau88"},"content":"        // Additional information","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2019-05-07 08:01am\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2019-05-07 08:01pm\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2019-5-07 08:01EXTRA\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"EXTRA2019-5-07 08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":134,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2019-5-07EXTRA08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"daniellau88"},"content":"        // Invalid day","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy HHmm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":138,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"-23/23/2020 08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":140,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"99/-10/2020\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":141,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-M-d HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":142,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-2-0 08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":143,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-m-d] format","lastModifiedDate":"2021-03-08"},{"lineNumber":144,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-12-40\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":145,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":146,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Feb 561 2020 09:10\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":147,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":148,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Feb -40 2020\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":149,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":150,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":151,"author":{"gitId":"daniellau88"},"content":"        // Invalid month","lastModifiedDate":"2021-03-08"},{"lineNumber":152,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy HHmm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":153,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"10/23/2020 08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":154,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":155,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"10/-10/2020\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":156,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-M-d HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":157,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-13-10 08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":158,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-m-d] format","lastModifiedDate":"2021-03-08"},{"lineNumber":159,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-0-10\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":160,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":161,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"ASD 2 2020 09:10\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":162,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":163,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Q 10 2020\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":164,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":165,"author":{"gitId":"daniellau88"},"content":"        // Invalid year","lastModifiedDate":"2021-03-08"},{"lineNumber":166,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy HHmm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":167,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"3/12/-234 08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":168,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":169,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"13/10/23\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":170,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-M-d HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":171,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"0-2-23 08:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":172,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-m-d] format","lastModifiedDate":"2021-03-08"},{"lineNumber":173,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"12341-12-40\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":174,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":175,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Mar 2 -135 09:10\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":176,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy] format","lastModifiedDate":"2021-03-08"},{"lineNumber":177,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Feb 10 21\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":178,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":179,"author":{"gitId":"daniellau88"},"content":"        // Invalid Hour","lastModifiedDate":"2021-03-08"},{"lineNumber":180,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy HHmm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":181,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"6/02/2020 63:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":182,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":183,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-M-d HH:mm]","lastModifiedDate":"2021-03-08"},{"lineNumber":184,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-2-10 -10:01\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":185,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":186,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":187,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Mar 08 2020 25:10\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":188,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":189,"author":{"gitId":"daniellau88"},"content":"        // Invalid Minutes","lastModifiedDate":"2021-03-08"},{"lineNumber":190,"author":{"gitId":"daniellau88"},"content":"        // [d/M/yyyy HHmm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":191,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"6/02/2020 08:-94\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":192,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":193,"author":{"gitId":"daniellau88"},"content":"        // [yyyy-M-d HH:mm]","lastModifiedDate":"2021-03-08"},{"lineNumber":194,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"2020-2-10 08:-\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":195,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":196,"author":{"gitId":"daniellau88"},"content":"        // [MMM d yyyy HH:mm] format","lastModifiedDate":"2021-03-08"},{"lineNumber":197,"author":{"gitId":"daniellau88"},"content":"        assertEquals(AbstractDate.parseDate(\"Mar 08 2020 09:68\"), null);","lastModifiedDate":"2021-03-08"},{"lineNumber":198,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":199,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":200,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"weixue123":2,"daniellau88":198}},{"path":"src/test/java/chim/model/CheeseIdStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"public class CheeseIdStub extends CheeseId {","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"     * @param id A valid id.","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"    private CheeseIdStub(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"        super(id);","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"    public static CheeseIdStub getNextId() {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"        return getNextId(getNextIdValue());","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"    public static CheeseIdStub getNextId(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"        return new CheeseIdStub(id);","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"weixue123":2,"aaronsms":20}},{"path":"src/test/java/chim/model/ChimTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCheese.CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCheese.FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCheese.GOUDA;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalOrder.ORDER_BRIE;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalOrder.ORDER_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalOrder.ORDER_CAMEMBERT_2;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalOrder.ORDER_FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalOrder.ORDER_GOUDA;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.Messages;","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CheeseBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CustomerBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"import chim.testutil.OrderBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"public class ChimTest {","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"    private final Chim chim \u003d new Chim();","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"        assertEquals(Collections.emptyList(), chim.getCustomerList());","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"        assertThrows(NullPointerException.class, () -\u003e chim.resetData(null));","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"    public void resetData_withValidReadOnlyChim_replacesData() {","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"        Chim newData \u003d getTypicalChim();","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"        chim.resetData(newData);","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"        assertEquals(newData, chim);","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"laurenlhy"},"content":"    public void resetData_withDuplicateCustomers_throwsDuplicateCustomerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"laurenlhy"},"content":"        // Two customers with the same identity fields","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"laurenlhy"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"laurenlhy"},"content":"        List\u003cCustomer\u003e newCustomers \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"        ChimStub newData \u003d new ChimStub(newCustomers);","lastModifiedDate":"2021-04-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e chim.resetData(newData));","lastModifiedDate":"2021-04-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"laurenlhy"},"content":"    public void hasCustomer_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"        assertThrows(NullPointerException.class, () -\u003e chim.hasCustomer(null));","lastModifiedDate":"2021-04-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"weixue123"},"content":"    public void hasCustomer_customerNotInChim_returnsFalse() {","lastModifiedDate":"2021-04-08"},{"lineNumber":79,"author":{"gitId":"weixue123"},"content":"        assertFalse(chim.hasCustomer(ALICE));","lastModifiedDate":"2021-04-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"weixue123"},"content":"    public void hasCustomer_customerInChim_returnsTrue() {","lastModifiedDate":"2021-04-08"},{"lineNumber":84,"author":{"gitId":"weixue123"},"content":"        chim.addCustomer(ALICE);","lastModifiedDate":"2021-04-08"},{"lineNumber":85,"author":{"gitId":"weixue123"},"content":"        assertTrue(chim.hasCustomer(ALICE));","lastModifiedDate":"2021-04-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"weixue123"},"content":"    public void hasCustomer_customerWithSameIdentityFieldsInChim_returnsTrue() {","lastModifiedDate":"2021-04-08"},{"lineNumber":90,"author":{"gitId":"weixue123"},"content":"        chim.addCustomer(ALICE);","lastModifiedDate":"2021-04-08"},{"lineNumber":91,"author":{"gitId":"laurenlhy"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"weixue123"},"content":"        assertTrue(chim.hasCustomer(editedAlice));","lastModifiedDate":"2021-04-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"laurenlhy"},"content":"    public void getCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"weixue123"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e chim.getCustomerList().remove(0));","lastModifiedDate":"2021-04-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"weixue123"},"content":"    public void checkChim_addOrderWithoutCustomer_throwsIllegalArgumentException() {","lastModifiedDate":"2021-04-08"},{"lineNumber":103,"author":{"gitId":"weixue123"},"content":"        chim.addOrder(ORDER_BRIE);","lastModifiedDate":"2021-04-08"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"            String.format(","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"                Messages.MESSAGE_INVALID_ORDER_CUSTOMER_ID,","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"daniellau88"},"content":"                ORDER_BRIE.getOrderId().value","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"weixue123"},"content":"            ), () -\u003e chim.checkChim());","lastModifiedDate":"2021-04-08"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"weixue123"},"content":"    public void checkChim_addOrderWithoutCheese_throwsIllegalArgumentException() {","lastModifiedDate":"2021-04-08"},{"lineNumber":113,"author":{"gitId":"weixue123"},"content":"        chim.addCustomer(ALICE);","lastModifiedDate":"2021-04-08"},{"lineNumber":114,"author":{"gitId":"weixue123"},"content":"        chim.addOrder(ORDER_CAMEMBERT);","lastModifiedDate":"2021-04-08"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"daniellau88"},"content":"            String.format(","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"daniellau88"},"content":"                Messages.MESSAGE_INVALID_ORDER_CHEESE_ID,","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"daniellau88"},"content":"                ORDER_CAMEMBERT.getOrderId().value","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"weixue123"},"content":"            ), () -\u003e chim.checkChim());","lastModifiedDate":"2021-04-08"},{"lineNumber":120,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"weixue123"},"content":"    public void checkChim_addSameCheeseToMultipleOrder_throwsIllegalArgumentException() {","lastModifiedDate":"2021-04-08"},{"lineNumber":124,"author":{"gitId":"weixue123"},"content":"        chim.addCustomer(ALICE);","lastModifiedDate":"2021-04-08"},{"lineNumber":125,"author":{"gitId":"weixue123"},"content":"        chim.addCustomer(BENSON);","lastModifiedDate":"2021-04-08"},{"lineNumber":126,"author":{"gitId":"weixue123"},"content":"        chim.addCheese(CAMEMBERT);","lastModifiedDate":"2021-04-08"},{"lineNumber":127,"author":{"gitId":"weixue123"},"content":"        chim.addOrder(new OrderBuilder(ORDER_CAMEMBERT).withCheeses(Set.of(CAMEMBERT.getCheeseId())).build());","lastModifiedDate":"2021-04-08"},{"lineNumber":128,"author":{"gitId":"weixue123"},"content":"        chim.addOrder(new OrderBuilder(ORDER_CAMEMBERT_2).withCheeses(Set.of(CAMEMBERT.getCheeseId())).build());","lastModifiedDate":"2021-04-08"},{"lineNumber":129,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"daniellau88"},"content":"            String.format(","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"daniellau88"},"content":"                Messages.MESSAGE_INVALID_CHEESE_MULTIPLE_ORDER,","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"daniellau88"},"content":"                ORDER_CAMEMBERT_2.getOrderId().value,","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"daniellau88"},"content":"                CAMEMBERT.getCheeseId().value","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"weixue123"},"content":"            ), () -\u003e chim.checkChim());","lastModifiedDate":"2021-04-08"},{"lineNumber":135,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"weixue123"},"content":"    public void checkChim_cheeseNotAssigned_throwsIllegalArgumentException() {","lastModifiedDate":"2021-04-08"},{"lineNumber":139,"author":{"gitId":"weixue123"},"content":"        chim.addCustomer(BENSON);","lastModifiedDate":"2021-04-08"},{"lineNumber":140,"author":{"gitId":"weixue123"},"content":"        chim.addCheese(new CheeseBuilder(FETA).withAssignStatus(false).build());","lastModifiedDate":"2021-04-08"},{"lineNumber":141,"author":{"gitId":"weixue123"},"content":"        chim.addOrder(ORDER_FETA);","lastModifiedDate":"2021-04-08"},{"lineNumber":142,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"daniellau88"},"content":"            String.format(","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"daniellau88"},"content":"                Messages.MESSAGE_INVALID_CHEESE_NOT_ASSIGNED,","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"daniellau88"},"content":"                ORDER_FETA.getOrderId().value,","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"daniellau88"},"content":"                FETA.getCheeseId().value","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"weixue123"},"content":"            ), () -\u003e chim.checkChim());","lastModifiedDate":"2021-04-08"},{"lineNumber":148,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"weixue123"},"content":"    public void checkChim_cheeseOrderTypeMismatch_throwsIllegalArgumentException() {","lastModifiedDate":"2021-04-08"},{"lineNumber":152,"author":{"gitId":"weixue123"},"content":"        chim.addCustomer(BENSON);","lastModifiedDate":"2021-04-08"},{"lineNumber":153,"author":{"gitId":"weixue123"},"content":"        chim.addCheese(new CheeseBuilder(GOUDA).withAssignStatus(true).build());","lastModifiedDate":"2021-04-08"},{"lineNumber":154,"author":{"gitId":"weixue123"},"content":"        chim.addOrder(new OrderBuilder(ORDER_CAMEMBERT_2).withCheeses(Set.of(GOUDA.getCheeseId())).build());","lastModifiedDate":"2021-04-08"},{"lineNumber":155,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"daniellau88"},"content":"            String.format(","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"daniellau88"},"content":"                Messages.MESSAGE_INVALID_ORDER_CHEESE_CHEESE_TYPE,","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"daniellau88"},"content":"                ORDER_CAMEMBERT_2.getOrderId().value,","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"daniellau88"},"content":"                GOUDA.getCheeseId().value","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"weixue123"},"content":"            ), () -\u003e chim.checkChim());","lastModifiedDate":"2021-04-08"},{"lineNumber":161,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"weixue123"},"content":"    public void checkChim_invalidAssignedCheese_throwsIllegalArgumentException() {","lastModifiedDate":"2021-04-08"},{"lineNumber":165,"author":{"gitId":"weixue123"},"content":"        chim.addCustomer(BENSON);","lastModifiedDate":"2021-04-08"},{"lineNumber":166,"author":{"gitId":"weixue123"},"content":"        chim.addCheese(new CheeseBuilder(GOUDA).withAssignStatus(true).build());","lastModifiedDate":"2021-04-08"},{"lineNumber":167,"author":{"gitId":"weixue123"},"content":"        chim.addOrder(ORDER_GOUDA);","lastModifiedDate":"2021-04-08"},{"lineNumber":168,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"daniellau88"},"content":"            String.format(","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"daniellau88"},"content":"                Messages.MESSAGE_INVALID_ASSIGNED_CHEESE,","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"daniellau88"},"content":"                GOUDA.getCheeseId().value","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"weixue123"},"content":"            ), () -\u003e chim.checkChim());","lastModifiedDate":"2021-04-08"},{"lineNumber":173,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":176,"author":{"gitId":"weixue123"},"content":"     * A stub ReadOnlyChim whose customers list can violate interface constraints.","lastModifiedDate":"2021-04-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":178,"author":{"gitId":"weixue123"},"content":"    private static class ChimStub implements ReadOnlyChim {","lastModifiedDate":"2021-04-08"},{"lineNumber":179,"author":{"gitId":"laurenlhy"},"content":"        private final ObservableList\u003cCustomer\u003e customers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-07"},{"lineNumber":180,"author":{"gitId":"daniellau88"},"content":"        private final ObservableList\u003cOrder\u003e orders \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-08"},{"lineNumber":181,"author":{"gitId":"daniellau88"},"content":"        private final ObservableList\u003cCheese\u003e cheeses \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":183,"author":{"gitId":"weixue123"},"content":"        ChimStub(Collection\u003cCustomer\u003e customers) {","lastModifiedDate":"2021-04-08"},{"lineNumber":184,"author":{"gitId":"laurenlhy"},"content":"            this.customers.setAll(customers);","lastModifiedDate":"2021-03-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":188,"author":{"gitId":"laurenlhy"},"content":"        public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":189,"author":{"gitId":"laurenlhy"},"content":"            return customers;","lastModifiedDate":"2021-03-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":191,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":192,"author":{"gitId":"daniellau88"},"content":"        @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":193,"author":{"gitId":"daniellau88"},"content":"        public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":194,"author":{"gitId":"daniellau88"},"content":"            return orders;","lastModifiedDate":"2021-03-08"},{"lineNumber":195,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":196,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":197,"author":{"gitId":"daniellau88"},"content":"        @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":198,"author":{"gitId":"daniellau88"},"content":"        public ObservableList\u003cCheese\u003e getCheeseList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":199,"author":{"gitId":"daniellau88"},"content":"            return cheeses;","lastModifiedDate":"2021-03-08"},{"lineNumber":200,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"laurenlhy":11,"weixue123":75,"daniellau88":58,"-":59}},{"path":"src/test/java/chim/model/CustomerIdStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"public class CustomerIdStub extends CustomerId {","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"     * @param id A valid id.","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"    private CustomerIdStub(int id) {","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"        super(id);","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    public static CustomerIdStub getNextId() {","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"        return getNextId(getNextIdValue());","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"    public static CustomerIdStub getNextId(int id) {","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"        return new CustomerIdStub(id);","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"weixue123":2,"daniellau88":20}},{"path":"src/test/java/chim/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings.PanelToShow;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerNamePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.testutil.ChimBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"        assertEquals(new Chim(), new Chim(modelManager.getChim()));","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"        userPrefs.setChimFilePath(Paths.get(\"chim/file/path\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"        userPrefs.setGuiSettings(new GuiSettings(PanelToShow.CUSTOMER_LIST, 1, 2, 3, 4));","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"        userPrefs.setChimFilePath(Paths.get(\"new/chim/file/path\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(PanelToShow.CUSTOMER_LIST, 1, 2, 3, 4);","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"    public void setChimFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setChimFilePath(null));","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"    public void setChimFilePath_validPath_setsChimFilePath() {","lastModifiedDate":"2021-04-08"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"        Path path \u003d Paths.get(\"chim/file/path\");","lastModifiedDate":"2021-04-08"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"        modelManager.setChimFilePath(path);","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"        assertEquals(path, modelManager.getChimFilePath());","lastModifiedDate":"2021-04-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"laurenlhy"},"content":"    public void hasCustomer_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasCustomer(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"weixue123"},"content":"    public void hasCustomer_customerNotInChim_returnsFalse() {","lastModifiedDate":"2021-04-08"},{"lineNumber":83,"author":{"gitId":"laurenlhy"},"content":"        assertFalse(modelManager.hasCustomer(ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"weixue123"},"content":"    public void hasCustomer_customerInChim_returnsTrue() {","lastModifiedDate":"2021-04-08"},{"lineNumber":88,"author":{"gitId":"laurenlhy"},"content":"        modelManager.addCustomer(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(modelManager.hasCustomer(ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"laurenlhy"},"content":"    public void getFilteredCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredCustomerList().remove(0));","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"weixue123"},"content":"        Chim chim \u003d new ChimBuilder().withCustomer(ALICE).withCustomer(BENSON).build();","lastModifiedDate":"2021-04-08"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"        Chim differentChim \u003d new Chim();","lastModifiedDate":"2021-04-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"weixue123"},"content":"        modelManager \u003d new ModelManager(chim, userPrefs);","lastModifiedDate":"2021-04-08"},{"lineNumber":105,"author":{"gitId":"weixue123"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(chim, userPrefs);","lastModifiedDate":"2021-04-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"weixue123"},"content":"        // different CHIM -\u003e returns false","lastModifiedDate":"2021-04-08"},{"lineNumber":118,"author":{"gitId":"weixue123"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentChim, userPrefs)));","lastModifiedDate":"2021-04-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"daniellau88"},"content":"        modelManager.updateFilteredCustomerList(new CustomerNamePredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"weixue123"},"content":"        assertFalse(modelManager.equals(new ModelManager(chim, userPrefs)));","lastModifiedDate":"2021-04-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"laurenlhy"},"content":"        modelManager.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"weixue123"},"content":"        differentUserPrefs.setChimFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":131,"author":{"gitId":"weixue123"},"content":"        assertFalse(modelManager.equals(new ModelManager(chim, differentUserPrefs)));","lastModifiedDate":"2021-04-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"laurenlhy":8,"weixue123":31,"daniellau88":1,"-":93}},{"path":"src/test/java/chim/model/OrderIdStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderId;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"public class OrderIdStub extends OrderId {","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"     * @param id A valid id.","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"    private OrderIdStub(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"        super(id);","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"    public static OrderIdStub getNextId() {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"        return getNextId(getNextIdValue());","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"    public static OrderIdStub getNextId(int id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"        return new OrderIdStub(id);","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"weixue123":2,"aaronsms":20}},{"path":"src/test/java/chim/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"    public void setChimFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setChimFilePath(null));","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"weixue123":4,"-":17}},{"path":"src/test/java/chim/model/cheese/CheeseIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"public class CheeseIdTest {","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"    public void constructor_invalidId_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"        int invalidId \u003d -1;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CheeseId(invalidId));","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    public void getNextId_autoincrement_success() {","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"        CheeseId cheeseId \u003d CheeseId.getNextId();","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"        CheeseId cheeseId2 \u003d CheeseId.getNextId();","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"        assertEquals(cheeseId.value + 1, cheeseId2.value);","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    public void getNextId_maxAutoincrement_success() {","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"        // Creates a cheese id with the given large value","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"        final int largeValue \u003d 1000;","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"        CheeseId.getNextId(largeValue);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        CheeseId orderId2 \u003d CheeseId.getNextId();","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"        assertEquals(largeValue + 1, orderId2.value);","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"weixue123":2,"daniellau88":28,"aaronsms":1}},{"path":"src/test/java/chim/model/cheese/CheeseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_EXPIRY_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_2;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_MANUFACTURE_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_MANUFACTURE_DATE_2;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCheese.CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCheese.FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CheeseBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"public class CheeseTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CheeseBuilder().withCheeseType(null).build());","lastModifiedDate":"2021-03-04"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    public void constructor_expiryDateBeforeManufactureDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        CheeseBuilder cheeseBuilder \u003d new CheeseBuilder().withExpiryDate(INVALID_EXPIRY_DATE_1);","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"            \"The expiry date of the cheese should be after the manufacture date.\", () -\u003e cheeseBuilder.build());","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    public void idAutoIncrement() {","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"        final int cheeseId \u003d 10;","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"        Cheese cheese \u003d new CheeseBuilder().withCheeseId(cheeseId).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"        Cheese cheese2 \u003d new CheeseBuilder().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        assertTrue(cheese.getCheeseId().compareTo(cheese2.getCheeseId()) \u003c 0);","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"    public void isSameCheese() {","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"        // Same object -\u003e return true","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"        assertTrue(CAMEMBERT.isSameCheese(CAMEMBERT));","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"        // Null -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"        assertFalse(CAMEMBERT.isSameCheese(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"        // Same id, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"        Cheese editedCamembert \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"            new CheeseBuilder(CAMEMBERT).withExpiryDate(VALID_EXPIRY_DATE_2)","lastModifiedDate":"2021-03-04"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"                .withCheeseType(VALID_CHEESE_TYPE_FETA)","lastModifiedDate":"2021-03-04"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"                .withManufactureDate(VALID_MANUFACTURE_DATE_2).build();","lastModifiedDate":"2021-03-04"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"        assertTrue(CAMEMBERT.isSameCheese(editedCamembert));","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"        // Different id, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"        Cheese newSimilarCamembert \u003d","lastModifiedDate":"2021-03-04"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"            new CheeseBuilder().withCheeseType(VALID_CHEESE_TYPE_CAMEMBERT)","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_1)","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"                .withManufactureDate(VALID_MANUFACTURE_DATE_1)","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"                .build();","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"        assertFalse(CAMEMBERT.isSameCheese(newSimilarCamembert));","lastModifiedDate":"2021-03-04"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"    public void equals() {","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"        // Same values -\u003e returns true","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"        Cheese camembertCopy \u003d new CheeseBuilder(CAMEMBERT).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"        assertTrue(CAMEMBERT.equals(camembertCopy));","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"        // Same object -\u003e returns true","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"        assertTrue(CAMEMBERT.equals(CAMEMBERT));","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"AhQuanz"},"content":"        // Null -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"        assertFalse(CAMEMBERT.equals(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"AhQuanz"},"content":"        // Different type -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"        assertFalse(CAMEMBERT.equals(5));","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"AhQuanz"},"content":"        // Different cheese -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(CAMEMBERT.equals(FETA));","lastModifiedDate":"2021-03-04"},{"lineNumber":83,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"        // Different id --\u003e return false","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"        Cheese editedCamembert \u003d new CheeseBuilder()","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"                .withCheeseType(VALID_CHEESE_TYPE_CAMEMBERT)","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"                .withManufactureDate(VALID_MANUFACTURE_DATE_1)","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_1).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(CAMEMBERT.equals(editedCamembert));","lastModifiedDate":"2021-03-04"},{"lineNumber":90,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":91,"author":{"gitId":"AhQuanz"},"content":"        // Different cheese type -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"AhQuanz"},"content":"        editedCamembert \u003d new CheeseBuilder(CAMEMBERT)","lastModifiedDate":"2021-03-04"},{"lineNumber":93,"author":{"gitId":"AhQuanz"},"content":"                .withCheeseType(VALID_CHEESE_TYPE_FETA).build();","lastModifiedDate":"2021-03-04"},{"lineNumber":94,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(CAMEMBERT.equals(editedCamembert));","lastModifiedDate":"2021-03-04"},{"lineNumber":95,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":96,"author":{"gitId":"AhQuanz"},"content":"        // Different manufacturing date -\u003e return false","lastModifiedDate":"2021-03-07"},{"lineNumber":97,"author":{"gitId":"AhQuanz"},"content":"        editedCamembert \u003d new CheeseBuilder(CAMEMBERT)","lastModifiedDate":"2021-03-04"},{"lineNumber":98,"author":{"gitId":"AhQuanz"},"content":"                .withManufactureDate(VALID_MANUFACTURE_DATE_2).build();","lastModifiedDate":"2021-03-04"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"        assertFalse(CAMEMBERT.equals(editedCamembert));","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"        // Different expire date -\u003e returns false","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"        editedCamembert \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"            new CheeseBuilder(CAMEMBERT).withExpiryDate(VALID_EXPIRY_DATE_2).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"        assertFalse(CAMEMBERT.equals(editedCamembert));","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"AhQuanz":24,"weixue123":12,"daniellau88":70}},{"path":"src/test/java/chim/model/cheese/CheeseTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_BRIE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"public class CheeseTypeTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"        assertThrows(NullPointerException.class, () -\u003e CheeseType.getCheeseType(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"    public void constructor_emptyString_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e CheeseType.getCheeseType(invalidName));","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    public void constructor_validCheeseName_returnsTrue() {","lastModifiedDate":"2021-03-04"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"        CheeseType brieCheeseType \u003d CheeseType.getCheeseType(VALID_CHEESE_TYPE_BRIE);","lastModifiedDate":"2021-03-04"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        assertEquals(brieCheeseType.value, VALID_CHEESE_TYPE_BRIE);","lastModifiedDate":"2021-03-04"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    public void constructor_verifySameCheeseType_returnsTrue() {","lastModifiedDate":"2021-03-04"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"        CheeseType fetaCheeseType \u003d CheeseType.getCheeseType(VALID_CHEESE_TYPE_FETA);","lastModifiedDate":"2021-03-04"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"        assertEquals(fetaCheeseType.value, VALID_CHEESE_TYPE_FETA);","lastModifiedDate":"2021-03-04"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"        // Creates new string with same value as Feta","lastModifiedDate":"2021-03-04"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"        String newFetaString \u003d new String(VALID_CHEESE_TYPE_FETA);","lastModifiedDate":"2021-03-04"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        CheeseType newFetaCheeseType \u003d CheeseType.getCheeseType(newFetaString);","lastModifiedDate":"2021-03-04"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"        assertTrue(fetaCheeseType \u003d\u003d newFetaCheeseType);","lastModifiedDate":"2021-03-04"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"    public void isValidName() {","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"        // Null name","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"        assertThrows(NullPointerException.class, () -\u003e CheeseType.getCheeseType(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"        // Invalid name","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(CheeseType.isValidType(\"\")); // empty string","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(CheeseType.isValidType(\" \")); // spaces only","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(CheeseType.isValidType(\"      \")); // multiple spaces only","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"        // Valid name","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(CheeseType.isValidType(VALID_CHEESE_TYPE_FETA));","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(CheeseType.isValidType(VALID_CHEESE_TYPE_CAMEMBERT));","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(CheeseType.isValidType(VALID_CHEESE_TYPE_BRIE));","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":"        // Numbers only","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(CheeseType.isValidType(\"10241982\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"        // Alphanumeric characters","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(CheeseType.isValidType(\"Cheese Type 1\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"        // Long names","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(CheeseType.isValidType(\"Aged Cashew \u0026     Blue Green Algae Cheese\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"AhQuanz":32,"weixue123":5,"daniellau88":29}},{"path":"src/test/java/chim/model/customer/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"weixue123":2,"-":34}},{"path":"src/test/java/chim/model/customer/CustomerIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.CustomerIdStub;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"public class CustomerIdTest {","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"    public void constructor_invalidId_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"        int invalidId \u003d -1;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e CustomerId.getNextId(invalidId));","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    public void getNextId_autoincrement_success() {","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"        CustomerId customerId \u003d CustomerId.getNextId();","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"        CustomerId customerId2 \u003d CustomerId.getNextId();","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"        assertEquals(customerId.value + 1, customerId2.value);","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    public void getNextId_maxAutoincrement_success() {","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"        // Creates an customer id with the given large value","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"        final int largeValue \u003d 1000;","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        CustomerId.getNextId(largeValue);","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"        CustomerId nextCustomerId \u003d CustomerId.getNextId();","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"        assertEquals(largeValue + 1, nextCustomerId.value);","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    // Ensures that Customer stub is working as intended","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"    public void getNextIdStub_maxNoAutoincrement_success() {","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"        // Creates an customer stub with the given large value","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        final int largeValue \u003d CustomerIdStub.getNextIdValue() + 10;","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"        CustomerId.getNextId(largeValue);","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"        CustomerId nextCustomerStubId \u003d CustomerIdStub.getNextId();","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"        assertEquals(largeValue + 1, nextCustomerStubId.value);","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"weixue123":3,"daniellau88":41}},{"path":"src/test/java/chim/model/customer/CustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CustomerBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"public class CustomerTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e customer.getTags().remove(0));","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"    public void isSameCustomer() {","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(ALICE.isSameCustomer(ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"        assertFalse(ALICE.isSameCustomer(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"        // same phone, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(ALICE.isSameCustomer(editedAlice));","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"        // different phone, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"        assertFalse(ALICE.isSameCustomer(editedAlice));","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"        Customer aliceCopy \u003d new CustomerBuilder(ALICE).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"laurenlhy"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"laurenlhy"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"laurenlhy"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"laurenlhy"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":79,"author":{"gitId":"laurenlhy"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"laurenlhy":15,"weixue123":10,"-":53,"aaronsms":4}},{"path":"src/test/java/chim/model/customer/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example\")); // no suffix in domain name","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starting with hyphen (before suffix)","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example-.com\")); // domain name ending with hyphen (before suffix)","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // suffix in domain name shorter than 2 alphabets","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.1com\")); // suffix in domain name contains numbers","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\"));","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost.com\")); // alphabets only","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"        assertTrue(Email.isValidEmail(\"peterjack@nus.edu.sg\")); // multiple suffixes in domain name","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\")); // special characters local part","lastModifiedDate":"2018-02-09"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"        assertTrue(Email.isValidEmail(\"123@145.com\")); // numeric local part and domain name","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be!@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"weixue123":10,"-":55}},{"path":"src/test/java/chim/model/customer/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"        // Null name","lastModifiedDate":"2021-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"        // Invalid name","lastModifiedDate":"2021-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"        // Valid name","lastModifiedDate":"2021-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"weixue123":2,"daniellau88":3,"-":35}},{"path":"src/test/java/chim/model/customer/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"weixue123":2,"-":38}},{"path":"src/test/java/chim/model/customer/UniqueCustomerListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"import java.util.List;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.exceptions.CustomerNotFoundException;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.testutil.CustomerBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"public class UniqueCustomerListTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"    private final UniqueCustomerList uniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"    public void contains_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.contains(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"    public void contains_customerNotInList_returnsFalse() {","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"        assertFalse(uniqueCustomerList.contains(ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"    public void contains_customerInList_returnsTrue() {","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(uniqueCustomerList.contains(ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"    public void contains_customerWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"laurenlhy"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"                .build();","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"        assertTrue(uniqueCustomerList.contains(editedAlice));","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"    public void add_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.add(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"    public void add_duplicateCustomer_throwsDuplicateCustomerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e uniqueCustomerList.add(ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomer_nullTargetCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomer(null, ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomer_nullEditedCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomer(ALICE, null));","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomer_targetCustomerNotInList_throwsCustomerNotFoundException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(CustomerNotFoundException.class, () -\u003e uniqueCustomerList.setCustomer(ALICE, ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomer_editedCustomerIsSameCustomer_success() {","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.setCustomer(ALICE, ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"laurenlhy"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"laurenlhy"},"content":"        expectedUniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomer_editedCustomerHasSameIdentity_success() {","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"laurenlhy"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"laurenlhy"},"content":"                .build();","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.setCustomer(ALICE, editedAlice);","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"laurenlhy"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"laurenlhy"},"content":"        expectedUniqueCustomerList.add(editedAlice);","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":97,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomer_editedCustomerHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.setCustomer(ALICE, BOB);","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"laurenlhy"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-07"},{"lineNumber":101,"author":{"gitId":"laurenlhy"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-07"},{"lineNumber":103,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomer_editedCustomerHasNonUniqueIdentity_throwsDuplicateCustomerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.add(BOB);","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e uniqueCustomerList.setCustomer(ALICE, BOB));","lastModifiedDate":"2021-03-07"},{"lineNumber":110,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":112,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":113,"author":{"gitId":"laurenlhy"},"content":"    public void remove_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":114,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.delete(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":116,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":117,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":118,"author":{"gitId":"laurenlhy"},"content":"    public void remove_customerDoesNotExist_throwsCustomerNotFoundException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":119,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(CustomerNotFoundException.class, () -\u003e uniqueCustomerList.delete(ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":121,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":122,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":123,"author":{"gitId":"laurenlhy"},"content":"    public void remove_existingCustomer_removesCustomer() {","lastModifiedDate":"2021-03-07"},{"lineNumber":124,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":125,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.delete(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"laurenlhy"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-07"},{"lineNumber":128,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":129,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":130,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":131,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomers_nullUniqueCustomerList_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":132,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomers((UniqueCustomerList) null));","lastModifiedDate":"2021-03-07"},{"lineNumber":133,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":134,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":135,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":136,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomers_uniqueCustomerList_replacesOwnListWithProvidedUniqueCustomerList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":137,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":138,"author":{"gitId":"laurenlhy"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"laurenlhy"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.setCustomers(expectedUniqueCustomerList);","lastModifiedDate":"2021-03-07"},{"lineNumber":141,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-07"},{"lineNumber":142,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":143,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":144,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":145,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomers_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":146,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomers((List\u003cCustomer\u003e) null));","lastModifiedDate":"2021-03-07"},{"lineNumber":147,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":148,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":149,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":150,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomers_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":151,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":152,"author":{"gitId":"laurenlhy"},"content":"        List\u003cCustomer\u003e customerList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-03-07"},{"lineNumber":153,"author":{"gitId":"laurenlhy"},"content":"        uniqueCustomerList.setCustomers(customerList);","lastModifiedDate":"2021-03-07"},{"lineNumber":154,"author":{"gitId":"laurenlhy"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-07"},{"lineNumber":155,"author":{"gitId":"laurenlhy"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2021-03-07"},{"lineNumber":156,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-07"},{"lineNumber":157,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":158,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":159,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":160,"author":{"gitId":"laurenlhy"},"content":"    public void setCustomers_listWithDuplicateCustomers_throwsDuplicateCustomerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":161,"author":{"gitId":"laurenlhy"},"content":"        List\u003cCustomer\u003e listWithDuplicateCustomers \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":162,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e uniqueCustomerList","lastModifiedDate":"2021-03-07"},{"lineNumber":163,"author":{"gitId":"laurenlhy"},"content":"                .setCustomers(listWithDuplicateCustomers));","lastModifiedDate":"2021-03-07"},{"lineNumber":164,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":165,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":166,"author":{"gitId":"laurenlhy"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":167,"author":{"gitId":"laurenlhy"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":168,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-07"},{"lineNumber":169,"author":{"gitId":"laurenlhy"},"content":"            -\u003e uniqueCustomerList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-07"},{"lineNumber":170,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":171,"author":{"gitId":"laurenlhy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"laurenlhy":162,"weixue123":9}},{"path":"src/test/java/chim/model/order/OrderIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"public class OrderIdTest {","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"    public void constructor_invalidId_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"        int invalidId \u003d -1;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new OrderId(invalidId));","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    public void getNextId_autoincrement_success() {","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"        OrderId orderId \u003d OrderId.getNextId();","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"        OrderId orderId2 \u003d OrderId.getNextId();","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"        assertEquals(orderId.value + 1, orderId2.value);","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    public void getNextId_maxAutoincrement_success() {","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"        // Creates an order id with the given large value","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"        final int largeValue \u003d 1000;","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"        OrderId.getNextId(largeValue);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        OrderId orderId2 \u003d OrderId.getNextId();","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"        assertEquals(largeValue + 1, orderId2.value);","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"weixue123":2,"daniellau88":28,"aaronsms":1}},{"path":"src/test/java/chim/model/order/OrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.INVALID_COMPLETED_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_BRIE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_COMPLETED_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_COMPLETED_DATE_2;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_DATE_2;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_DATE_3;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_QUANTITY_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCheese.CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCheese.FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalOrder.ORDER_BRIE;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalOrder.ORDER_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"import chim.testutil.OrderBuilder;","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"public class OrderTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"        assertThrows(NullPointerException.class, () -\u003e new OrderBuilder().withOrderDate(null).build());","lastModifiedDate":"2021-03-04"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"    public void constructor_incompleteOrderNonEmptyCheeseSet_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"        OrderBuilder orderBuilder \u003d new OrderBuilder().withCheeses(Set.of(FETA.getCheeseId()));","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"            \"The cheese set for an incomplete order should be empty.\", () -\u003e orderBuilder.build());","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"    public void constructor_completedDateBeforeOrderDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"        OrderBuilder orderBuilder \u003d new OrderBuilder().withCompletedDate(INVALID_COMPLETED_DATE_1)","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"                                            .withOrderDate(VALID_ORDER_DATE_3);","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"            \"The completed date of an order should be after the order date.\", () -\u003e orderBuilder.build());","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"    public void constructor_completedOrderInsufficientCheese_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"        OrderBuilder orderBuilder \u003d new OrderBuilder().withCompletedDate(VALID_COMPLETED_DATE_1);","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"            \"The number of cheeses in the order does not match the specified quantity.\", () -\u003e orderBuilder.build());","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"    public void idAutoIncrement() {","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"        final int orderId \u003d 10;","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"        Order order \u003d new OrderBuilder().withOrderId(orderId).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"        Order order2 \u003d new OrderBuilder().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"        assertTrue(order.getOrderId().compareTo(order2.getOrderId()) \u003c 0);","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"    public void isComplete() {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(ORDER_CAMEMBERT.isComplete());","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":"        assertFalse(ORDER_BRIE.isComplete());","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"    public void isSameOrder() {","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"        // Same object -\u003e return true","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"        assertTrue(ORDER_CAMEMBERT.isSameOrder(ORDER_CAMEMBERT));","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"AhQuanz"},"content":"        // Null -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"        assertFalse(ORDER_CAMEMBERT.isSameOrder(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"        // Same OrderId, Same customerId, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"        Order editedOrder \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"            new OrderBuilder(ORDER_CAMEMBERT).withCheeseType(VALID_CHEESE_TYPE_BRIE)","lastModifiedDate":"2021-03-04"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"                .withOrderId(ORDER_CAMEMBERT.getOrderId())","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"                .withQuantity(VALID_QUANTITY_1)","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"                .withOrderDate(VALID_ORDER_DATE_2)","lastModifiedDate":"2021-03-04"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"                .withCompletedDate(VALID_COMPLETED_DATE_2)","lastModifiedDate":"2021-03-04"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"                .withCustomerId(ALICE.getId())","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"                .withCheeses(Set.of(CAMEMBERT.getCheeseId()))","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"                .build();","lastModifiedDate":"2021-03-04"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"        assertTrue(ORDER_CAMEMBERT.isSameOrder(editedOrder));","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"daniellau88"},"content":"        // Different orderId, Same customerId, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"daniellau88"},"content":"        Order newSimilarOrder \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"daniellau88"},"content":"            new OrderBuilder().withCheeseType(VALID_CHEESE_TYPE_CAMEMBERT)","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"daniellau88"},"content":"                .withQuantity(VALID_QUANTITY_1)","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"daniellau88"},"content":"                .withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"daniellau88"},"content":"                .withCompletedDate(VALID_COMPLETED_DATE_1)","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"                .withCustomerId(ALICE.getId())","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"daniellau88"},"content":"                .withCheeses(Set.of(CAMEMBERT.getCheeseId()))","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"                .build();","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"        assertFalse(ORDER_CAMEMBERT.isSameOrder(newSimilarOrder));","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"        // Same Orderid, Different customerId, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"        newSimilarOrder \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"                new OrderBuilder().withCheeseType(VALID_CHEESE_TYPE_CAMEMBERT)","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"                        .withOrderId(ORDER_CAMEMBERT.getOrderId())","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"                        .withQuantity(VALID_QUANTITY_1)","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"                        .withOrderDate(VALID_ORDER_DATE_1)","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"daniellau88"},"content":"                        .withCompletedDate(VALID_COMPLETED_DATE_1)","lastModifiedDate":"2021-03-02"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"                        .withCustomerId(BENSON.getId())","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"                        .withCheeses(Set.of(CAMEMBERT.getCheeseId()))","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"daniellau88"},"content":"                        .build();","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"        assertFalse(ORDER_CAMEMBERT.isSameOrder(newSimilarOrder));","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"    public void equals() {","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"AhQuanz"},"content":"        // Same values -\u003e returns true","lastModifiedDate":"2021-03-07"},{"lineNumber":117,"author":{"gitId":"daniellau88"},"content":"        Order camembertOrderCopy \u003d new OrderBuilder(ORDER_CAMEMBERT).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"daniellau88"},"content":"        assertTrue(ORDER_CAMEMBERT.equals(camembertOrderCopy));","lastModifiedDate":"2021-03-02"},{"lineNumber":119,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"AhQuanz"},"content":"        // Same object -\u003e returns true","lastModifiedDate":"2021-03-07"},{"lineNumber":121,"author":{"gitId":"daniellau88"},"content":"        assertTrue(ORDER_CAMEMBERT.equals(ORDER_CAMEMBERT));","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"AhQuanz"},"content":"        // Null -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":124,"author":{"gitId":"daniellau88"},"content":"        assertFalse(ORDER_CAMEMBERT.equals(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"AhQuanz"},"content":"        // Different type -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"daniellau88"},"content":"        assertFalse(ORDER_CAMEMBERT.equals(5));","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":129,"author":{"gitId":"daniellau88"},"content":"        // Different OrderId --\u003e returns false","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"daniellau88"},"content":"        final int orderId \u003d 99;","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"daniellau88"},"content":"        Order editedCamembertOrder \u003d new OrderBuilder(ORDER_CAMEMBERT)","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"daniellau88"},"content":"                .withOrderId(orderId)","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"daniellau88"},"content":"                .build();","lastModifiedDate":"2021-03-08"},{"lineNumber":134,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"daniellau88"},"content":"        assertFalse(ORDER_CAMEMBERT.equals(editedCamembertOrder));","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"daniellau88"},"content":"        // Different customerId --\u003e returns false","lastModifiedDate":"2021-03-08"},{"lineNumber":138,"author":{"gitId":"daniellau88"},"content":"        editedCamembertOrder \u003d new OrderBuilder(ORDER_CAMEMBERT)","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"daniellau88"},"content":"                .withCustomerId(BENSON.getId())","lastModifiedDate":"2021-03-08"},{"lineNumber":140,"author":{"gitId":"daniellau88"},"content":"                .build();","lastModifiedDate":"2021-03-08"},{"lineNumber":141,"author":{"gitId":"daniellau88"},"content":"        assertFalse(ORDER_CAMEMBERT.equals(editedCamembertOrder));","lastModifiedDate":"2021-03-08"},{"lineNumber":142,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":143,"author":{"gitId":"daniellau88"},"content":"        // Different cheese type -\u003e returns false","lastModifiedDate":"2021-03-08"},{"lineNumber":144,"author":{"gitId":"daniellau88"},"content":"        editedCamembertOrder \u003d new OrderBuilder(ORDER_CAMEMBERT)","lastModifiedDate":"2021-03-08"},{"lineNumber":145,"author":{"gitId":"daniellau88"},"content":"                .withCheeseType(VALID_CHEESE_TYPE_BRIE)","lastModifiedDate":"2021-03-08"},{"lineNumber":146,"author":{"gitId":"daniellau88"},"content":"                .build();","lastModifiedDate":"2021-03-08"},{"lineNumber":147,"author":{"gitId":"daniellau88"},"content":"        assertFalse(ORDER_CAMEMBERT.equals(editedCamembertOrder));","lastModifiedDate":"2021-03-08"},{"lineNumber":148,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":149,"author":{"gitId":"AhQuanz"},"content":"        // Different order date -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":150,"author":{"gitId":"daniellau88"},"content":"        editedCamembertOrder \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":151,"author":{"gitId":"daniellau88"},"content":"            new OrderBuilder(ORDER_CAMEMBERT)","lastModifiedDate":"2021-03-04"},{"lineNumber":152,"author":{"gitId":"daniellau88"},"content":"                .withOrderDate(VALID_ORDER_DATE_2)","lastModifiedDate":"2021-03-04"},{"lineNumber":153,"author":{"gitId":"daniellau88"},"content":"                .build();","lastModifiedDate":"2021-03-04"},{"lineNumber":154,"author":{"gitId":"daniellau88"},"content":"        assertFalse(ORDER_CAMEMBERT.equals(editedCamembertOrder));","lastModifiedDate":"2021-03-02"},{"lineNumber":155,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":156,"author":{"gitId":"daniellau88"},"content":"        // Different completed date -\u003e returns false","lastModifiedDate":"2021-03-08"},{"lineNumber":157,"author":{"gitId":"daniellau88"},"content":"        editedCamembertOrder \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":158,"author":{"gitId":"daniellau88"},"content":"                new OrderBuilder(ORDER_CAMEMBERT)","lastModifiedDate":"2021-03-08"},{"lineNumber":159,"author":{"gitId":"daniellau88"},"content":"                        .withCompletedDate(VALID_COMPLETED_DATE_2)","lastModifiedDate":"2021-03-08"},{"lineNumber":160,"author":{"gitId":"daniellau88"},"content":"                        .build();","lastModifiedDate":"2021-03-08"},{"lineNumber":161,"author":{"gitId":"daniellau88"},"content":"        assertFalse(ORDER_CAMEMBERT.equals(editedCamembertOrder));","lastModifiedDate":"2021-03-08"},{"lineNumber":162,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":163,"author":{"gitId":"daniellau88"},"content":"        // TODO: Add test for different cheese IDs","lastModifiedDate":"2021-03-08"},{"lineNumber":164,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":165,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"AhQuanz":13,"weixue123":18,"daniellau88":134}},{"path":"src/test/java/chim/model/order/QuantityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.order;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"public class QuantityTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"    public void constructor_invalidQuantity_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Quantity(-1));","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    public void isValidQuantity() {","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"        // Negative Quantity","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"        assertFalse(Quantity.isValidQuantity(-1));","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"        // Zero Quantity","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"        assertFalse(Quantity.isValidQuantity(0));","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"        // Positive Quantity","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"        assertTrue(Quantity.isValidQuantity(138));","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"AhQuanz":5,"weixue123":2,"daniellau88":19}},{"path":"src/test/java/chim/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"weixue123":2,"-":24}},{"path":"src/test/java/chim/model/util/predicate/CompositeFieldPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.util.predicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.DANIEL;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.getTypicalCustomers;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerAddressPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerEmailPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerNamePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"public class CompositeFieldPredicateTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"        // Check that composites are still equal after performing compose","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"        final List\u003cString\u003e keywords \u003d Arrays.asList(\"key1\", \"key2\");","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"        CompositeFieldPredicateBuilder\u003cCustomer\u003e composite \u003d new CompositeFieldPredicateBuilder\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        composite.compose(new CustomerEmailPredicate(keywords));","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"        CompositeFieldPredicate\u003cCustomer\u003e actualPredicate \u003d composite.build();","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"        CompositeFieldPredicate\u003cCustomer\u003e expectedPredicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"            new CompositeFieldPredicate\u003c\u003e(Set.of(new CustomerEmailPredicate(keywords)));","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"        assertEquals(expectedPredicate, actualPredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"        composite.compose(new CustomerAddressPredicate(keywords));","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        actualPredicate \u003d composite.build();","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"        expectedPredicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"            new CompositeFieldPredicate\u003c\u003e(Set.of(","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"                new CustomerEmailPredicate(keywords),","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"                new CustomerAddressPredicate(keywords)","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"            ));","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"        assertEquals(expectedPredicate, actualPredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"        composite.compose(new CustomerNamePredicate(keywords));","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"        actualPredicate \u003d composite.build();","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"        expectedPredicate \u003d new CompositeFieldPredicate\u003c\u003e(Set.of(","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"            new CustomerEmailPredicate(keywords),","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"            new CustomerAddressPredicate(keywords),","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"            new CustomerNamePredicate(keywords)","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"        ));","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"        assertEquals(expectedPredicate, actualPredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"    public void testCustomerCompositeFieldPredicate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"        List\u003cCustomer\u003e customerList \u003d getTypicalCustomers();","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"        FieldPredicate\u003cCustomer\u003e emailExamplePredicate \u003d new CustomerEmailPredicate(Arrays.asList(\"example\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"        FieldPredicate\u003cCustomer\u003e addressStreetPredicate \u003d new CustomerAddressPredicate(Arrays.asList(\"street\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"        FieldPredicate\u003cCustomer\u003e nameMePredicate \u003d new CustomerNamePredicate(Arrays.asList(\"me\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"        CompositeFieldPredicate\u003cCustomer\u003e compositeCustomerPredicate \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"            new CompositeFieldPredicate\u003c\u003e(Set.of(","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"                emailExamplePredicate,","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"                addressStreetPredicate,","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"                nameMePredicate","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"            ));","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"        List\u003cCustomer\u003e expectedList \u003d Arrays.asList(DANIEL);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"        List\u003cCustomer\u003e filteredList \u003d applyFieldPredicateToList(customerList, compositeCustomerPredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"        assertEquals(expectedList, filteredList);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"    private static \u003cU\u003e List\u003cU\u003e applyFieldPredicateToList(List\u003cU\u003e list, FieldPredicate\u003cU\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"        return list.stream().filter(predicate).sorted(predicate).collect(Collectors.toList());","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"weixue123":7,"daniellau88":75}},{"path":"src/test/java/chim/model/util/predicate/FieldPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.model.util.predicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.CARL;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.DANIEL;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.ELLE;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.FIONA;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.GEORGE;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.getTypicalCustomers;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerAddressPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerNamePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.predicates.CustomerPhonePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"public class FieldPredicateTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    public void testDefaultPredicate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        FieldPredicate\u003cCustomer\u003e customerDefault \u003d FieldPredicate.getDefaultPredicate();","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"        List\u003cCustomer\u003e customerList \u003d getTypicalCustomers();","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"        List\u003cCustomer\u003e expectedList \u003d customerList;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"        List\u003cCustomer\u003e filteredList \u003d applyFieldPredicateToList(customerList, customerDefault);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"        assertEquals(expectedList, filteredList);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"    public void testEmptyPredicate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        FieldPredicate\u003cCustomer\u003e customerEmpty \u003d FieldPredicate.getEmptyPredicate();","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"        List\u003cCustomer\u003e customerList \u003d getTypicalCustomers();","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"        List\u003cCustomer\u003e expectedList \u003d Arrays.asList();","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"        List\u003cCustomer\u003e filteredList \u003d applyFieldPredicateToList(customerList, customerEmpty);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"        assertEquals(expectedList, filteredList);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"    public void testCustomerFieldPredicate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"        List\u003cCustomer\u003e customerList \u003d getTypicalCustomers();","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"        // Compare by name","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"        FieldPredicate\u003cCustomer\u003e nameAlicePredicate \u003d new CustomerNamePredicate(Arrays.asList(\"Alice\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"        List\u003cCustomer\u003e expectedList \u003d Arrays.asList(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"        List\u003cCustomer\u003e filteredList \u003d applyFieldPredicateToList(customerList, nameAlicePredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"        assertEquals(expectedList, filteredList);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"        // Compare by address","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"        FieldPredicate\u003cCustomer\u003e addressStreetPredicate \u003d new CustomerAddressPredicate(Arrays.asList(\"street\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"        expectedList \u003d Arrays.asList(CARL, DANIEL, GEORGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"        filteredList \u003d applyFieldPredicateToList(customerList, addressStreetPredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"        assertEquals(expectedList, filteredList);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"        // Compare by phone (prefix)","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"        FieldPredicate\u003cCustomer\u003e phonePredicate \u003d new CustomerPhonePredicate(Arrays.asList(\"9482\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"        expectedList \u003d Arrays.asList(ELLE, FIONA, GEORGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"        filteredList \u003d applyFieldPredicateToList(customerList, phonePredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"        assertEquals(expectedList, filteredList);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"        // Compare by name (order relevance","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"        FieldPredicate\u003cCustomer\u003e nameMeDanielPredicate \u003d new CustomerNamePredicate(Arrays.asList(\"Me\", \"Daniel\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"        // Must be in exact order (most relevant results on top)","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"        expectedList \u003d Arrays.asList(DANIEL, BENSON, ELLE);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"        filteredList \u003d applyFieldPredicateToList(customerList, nameMeDanielPredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"        assertEquals(expectedList, filteredList);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"    private static \u003cU\u003e List\u003cU\u003e applyFieldPredicateToList(List\u003cU\u003e list, FieldPredicate\u003cU\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"        return list.stream().filter(predicate).sorted(predicate).collect(Collectors.toList());","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"weixue123":14,"daniellau88":78}},{"path":"src/test/java/chim/storage/JsonAdaptedCustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.storage.JsonAdaptedCustomer.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Address;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Email;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Name;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"public class JsonAdaptedCustomerTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    private static final Integer VALID_CUSTOMER_ID \u003d BENSON.getId().value;","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"    public void toModelType_validCustomerDetails_returnsCustomer() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(BENSON);","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"        assertEquals(BENSON, customer.toModelType());","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"                new JsonAdaptedCustomer(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"                        VALID_ADDRESS, VALID_CUSTOMER_ID, VALID_TAGS);","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"laurenlhy"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"                VALID_ADDRESS, VALID_CUSTOMER_ID, VALID_TAGS);","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"laurenlhy"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"                new JsonAdaptedCustomer(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"                        VALID_ADDRESS, VALID_CUSTOMER_ID, VALID_TAGS);","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"laurenlhy"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"                VALID_ADDRESS, VALID_CUSTOMER_ID, VALID_TAGS);","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"laurenlhy"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"                        VALID_ADDRESS, VALID_CUSTOMER_ID, VALID_TAGS);","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"laurenlhy"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"                VALID_CUSTOMER_ID, VALID_TAGS);","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"laurenlhy"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"daniellau88"},"content":"                        INVALID_ADDRESS, VALID_CUSTOMER_ID, VALID_TAGS);","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"                null, VALID_CUSTOMER_ID, VALID_TAGS);","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"laurenlhy"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"daniellau88"},"content":"                        VALID_ADDRESS, VALID_CUSTOMER_ID, invalidTags);","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"laurenlhy"},"content":"        assertThrows(IllegalValueException.class, customer::toModelType);","lastModifiedDate":"2021-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"laurenlhy":21,"weixue123":9,"daniellau88":16,"-":74}},{"path":"src/test/java/chim/storage/JsonChimStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.HOON;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalCustomers.IDA;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import java.io.IOException;","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"public class JsonChimStorageTest {","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonChimStorageTest\");","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"    @TempDir","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"    public Path testFolder;","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"    public void readChim_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"        assertThrows(NullPointerException.class, () -\u003e readChim(null));","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"    private java.util.Optional\u003cReadOnlyChim\u003e readChim(String filePath) throws Exception {","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"        return new JsonChimStorage(Paths.get(filePath)).readChim(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"                : null;","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"        assertFalse(readChim(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"        assertThrows(DataConversionException.class, () -\u003e readChim(\"notJsonFormatChim.json\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"    public void readChim_invalidCustomerChim_throwDataConversionException() {","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"        assertThrows(DataConversionException.class, () -\u003e readChim(\"invalidCustomerChim.json\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"    public void readChim_invalidAndValidCustomerChim_throwDataConversionException() {","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"        assertThrows(DataConversionException.class, () -\u003e readChim(\"invalidAndValidCustomerChim.json\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"    public void readAndSaveChim_allInOrder_success() throws Exception {","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"        Path filePath \u003d testFolder.resolve(\"TempChim.json\");","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"        Chim original \u003d getTypicalChim();","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"        JsonChimStorage jsonChimStorage \u003d new JsonChimStorage(filePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-04-08"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"        jsonChimStorage.saveChim(original, filePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"        ReadOnlyChim readBack \u003d jsonChimStorage.readChim(filePath).get();","lastModifiedDate":"2021-04-08"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"        assertEquals(original, new Chim(readBack));","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":74,"author":{"gitId":"weixue123"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-04-08"},{"lineNumber":75,"author":{"gitId":"weixue123"},"content":"        original.addCustomer(HOON);","lastModifiedDate":"2021-04-08"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"        original.deleteCustomer(ALICE);","lastModifiedDate":"2021-04-08"},{"lineNumber":77,"author":{"gitId":"weixue123"},"content":"        jsonChimStorage.saveChim(original, filePath);","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"weixue123"},"content":"        readBack \u003d jsonChimStorage.readChim(filePath).get();","lastModifiedDate":"2021-04-08"},{"lineNumber":79,"author":{"gitId":"weixue123"},"content":"        assertEquals(original, new Chim(readBack));","lastModifiedDate":"2021-04-08"},{"lineNumber":80,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":81,"author":{"gitId":"weixue123"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-04-08"},{"lineNumber":82,"author":{"gitId":"weixue123"},"content":"        original.addCustomer(IDA);","lastModifiedDate":"2021-04-08"},{"lineNumber":83,"author":{"gitId":"weixue123"},"content":"        jsonChimStorage.saveChim(original); // file path not specified","lastModifiedDate":"2021-04-08"},{"lineNumber":84,"author":{"gitId":"weixue123"},"content":"        readBack \u003d jsonChimStorage.readChim().get(); // file path not specified","lastModifiedDate":"2021-04-08"},{"lineNumber":85,"author":{"gitId":"weixue123"},"content":"        assertEquals(original, new Chim(readBack));","lastModifiedDate":"2021-04-08"},{"lineNumber":86,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":87,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":88,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":89,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":90,"author":{"gitId":"weixue123"},"content":"    public void saveChim_nullChim_throwsNullPointerException() {","lastModifiedDate":"2021-04-08"},{"lineNumber":91,"author":{"gitId":"weixue123"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveChim(null, \"SomeFile.json\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":92,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":93,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":94,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":95,"author":{"gitId":"weixue123"},"content":"     * Saves {@code Chim} at the specified {@code filePath}.","lastModifiedDate":"2021-04-08"},{"lineNumber":96,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":97,"author":{"gitId":"weixue123"},"content":"    private void saveChim(ReadOnlyChim chim, String filePath) {","lastModifiedDate":"2021-04-08"},{"lineNumber":98,"author":{"gitId":"weixue123"},"content":"        try {","lastModifiedDate":"2021-04-08"},{"lineNumber":99,"author":{"gitId":"weixue123"},"content":"            new JsonChimStorage(Paths.get(filePath))","lastModifiedDate":"2021-04-08"},{"lineNumber":100,"author":{"gitId":"weixue123"},"content":"                    .saveChim(chim, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-04-08"},{"lineNumber":101,"author":{"gitId":"weixue123"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-04-08"},{"lineNumber":102,"author":{"gitId":"weixue123"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-04-08"},{"lineNumber":103,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":104,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":105,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":106,"author":{"gitId":"weixue123"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":107,"author":{"gitId":"weixue123"},"content":"    public void saveChim_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-04-08"},{"lineNumber":108,"author":{"gitId":"weixue123"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveChim(new Chim(), null));","lastModifiedDate":"2021-04-08"},{"lineNumber":109,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":110,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"weixue123":110}},{"path":"src/test/java/chim/storage/JsonSerializableChimTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.commons.util.JsonUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.testutil.TypicalModels;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"public class JsonSerializableChimTest {","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableChimTest\");","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"    private static final Path TYPICAL_CUSTOMERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalChim.json\");","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"    private static final Path INVALID_CUSTOMER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidCustomerChim.json\");","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    private static final Path DUPLICATE_CUSTOMER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateCustomerChim.json\");","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"    public void toModelType_typicalFile_success() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"        JsonSerializableChim dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CUSTOMERS_FILE,","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"                JsonSerializableChim.class).get();","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"        Chim chimFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"        Chim typicalCustomersChim \u003d TypicalModels.getTypicalChim();","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"        assertEquals(chimFromFile, typicalCustomersChim);","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"    public void toModelType_invalidCustomerFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"        JsonSerializableChim dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CUSTOMER_FILE,","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"                JsonSerializableChim.class).get();","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"    public void toModelType_duplicateCustomers_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"        JsonSerializableChim dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CUSTOMER_FILE,","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"                JsonSerializableChim.class).get();","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableChim.MESSAGE_DUPLICATE_CUSTOMER,","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"laurenlhy":2,"weixue123":21,"daniellau88":1,"-":23}},{"path":"src/test/java/chim/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings.PanelToShow;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"weixue123"},"content":"        userPrefs.setGuiSettings(new GuiSettings(PanelToShow.CUSTOMER_LIST, 1000, 500, 300, 100));","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"weixue123"},"content":"        userPrefs.setChimFilePath(Paths.get(\"chim.json\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"weixue123"},"content":"        original.setGuiSettings(new GuiSettings(PanelToShow.CUSTOMER_LIST, 1200, 200, 0, 2));","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"weixue123"},"content":"        original.setGuiSettings(new GuiSettings(PanelToShow.CUSTOMER_LIST, 5, 5, 5, 5));","lastModifiedDate":"2021-03-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"weixue123":10,"-":114}},{"path":"src/test/java/chim/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.storage;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.TypicalModels.getTypicalChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.GuiSettings.PanelToShow;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import chim.model.ReadOnlyChim;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import chim.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"        JsonChimStorage chimStorage \u003d new JsonChimStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"        storageManager \u003d new StorageManager(chimStorage, userPrefsStorage);","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"        original.setGuiSettings(new GuiSettings(PanelToShow.CUSTOMER_LIST, 300, 600, 4, 6));","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"    public void chimReadSave() throws Exception {","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"         * {@link JsonChimStorage} class.","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonChimStorageTest} class.","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"        Chim original \u003d getTypicalChim();","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"        storageManager.saveChim(original);","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"        ReadOnlyChim retrieved \u003d storageManager.readChim().get();","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"        assertEquals(original, new Chim(retrieved));","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"    public void getChimFilePath() {","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"        assertNotNull(storageManager.getChimFilePath());","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":19,"-":50}},{"path":"src/test/java/chim/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"weixue123":1,"-":33}},{"path":"src/test/java/chim/testutil/CheeseBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ExpiryDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ManufactureDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-04"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":" * A utility class to help with building Cheese objects.","lastModifiedDate":"2021-03-04"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"public class CheeseBuilder {","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"    public static final String DEFAULT_CHEESE_TYPE \u003d \"Brie\";","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    public static final String DEFAULT_MANUFACTURE_DATE \u003d \"2020-08-05 08:00\";","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    public static final String DEFAULT_EXPIRY_DATE \u003d \"2023-08-05 00:00\";","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    private CheeseType cheeseType;","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"    private ManufactureDate manufactureDate;","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    private ExpiryDate expiryDate;","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    private CheeseId cheeseId;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"    private boolean isAssigned;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"     * Creates a {@code CheeseBuilder} with the default details.","lastModifiedDate":"2021-03-04"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    public CheeseBuilder() {","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        cheeseType \u003d CheeseType.getCheeseType(DEFAULT_CHEESE_TYPE);","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"        manufactureDate \u003d new ManufactureDate(DEFAULT_MANUFACTURE_DATE);","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"        expiryDate \u003d new ExpiryDate(DEFAULT_EXPIRY_DATE);","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"        cheeseId \u003d null;","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"        isAssigned \u003d false;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"     * Initializes the CheeseBuilder with the data of {@code cheeseToCopy}.","lastModifiedDate":"2021-03-04"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"     * Makes an exact copy (with the same ID) of the {@code cheeseToCopy}.","lastModifiedDate":"2021-03-04"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"    public CheeseBuilder(Cheese cheeseToCopy) {","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        cheeseType \u003d cheeseToCopy.getCheeseType();","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"        manufactureDate \u003d cheeseToCopy.getManufactureDate();","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"        expiryDate \u003d cheeseToCopy.getExpiryDate().orElse(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"        cheeseId \u003d cheeseToCopy.getCheeseId();","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"        isAssigned \u003d cheeseToCopy.isCheeseAssigned();","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"     * Sets the {@code CheeseType} of the {@code Cheese} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"    public CheeseBuilder withCheeseType(String cheeseType) {","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"        this.cheeseType \u003d CheeseType.getCheeseType(cheeseType);","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"     * Sets the {@code ManufactureDate} of the {@code Cheese} that we are building.","lastModifiedDate":"2021-03-04"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"    public CheeseBuilder withManufactureDate(String manufactureDate) {","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"        this.manufactureDate \u003d new ManufactureDate(manufactureDate);","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"     * Sets the {@code ExpiryDate} of the {@code Cheese} that we are building.","lastModifiedDate":"2021-03-04"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"    public CheeseBuilder withExpiryDate(String expiryDate) {","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"        if (expiryDate \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"            this.expiryDate \u003d null;","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"            this.expiryDate \u003d new ExpiryDate(expiryDate);","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"     * Sets the {@code CheeseId} of the {@code Cheese} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"    public CheeseBuilder withCheeseId(int id) {","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"        this.cheeseId \u003d CheeseId.getNextId(id);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"     * Sets the {@code CheeseId} of the {@code Cheese} explicitly that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"    public CheeseBuilder withId(CheeseId id) {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"        this.cheeseId \u003d id;","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"AhQuanz"},"content":"     * Sets the {@code isAssigned} of the {@code Cheese} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"AhQuanz"},"content":"    public CheeseBuilder withAssignStatus(boolean isAssigned) {","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"AhQuanz"},"content":"        this.isAssigned \u003d isAssigned;","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"AhQuanz"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"     * Returns the immutable {@code Cheese} object representing the data we have.","lastModifiedDate":"2021-03-04"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"     * @return an {@code Cheese} representation of data","lastModifiedDate":"2021-03-04"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"    public Cheese build() {","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"        if (cheeseId \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"            return new Cheese(cheeseType, manufactureDate, expiryDate);","lastModifiedDate":"2021-04-05"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"        } else {","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"daniellau88"},"content":"            return new Cheese(cheeseType, manufactureDate, expiryDate, cheeseId, isAssigned);","lastModifiedDate":"2021-04-05"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"AhQuanz":11,"weixue123":7,"daniellau88":77,"aaronsms":16}},{"path":"src/test/java/chim/testutil/CheeseUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_MANUFACTURE_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":" * A utility class for Cheese.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"public class CheeseUtil {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"     * Returns an add command string for adding the {@code cheese}.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"    public static String getAddCommand(Cheese cheese, int numberOfCheeses) {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"        return AddCheeseCommand.COMMAND_WORD + \" \" + getOrderDetails(cheese, numberOfCheeses);","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"     * Returns the part of command string for the given {@code customer}\u0027s details.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"    public static String getOrderDetails(Cheese cheese, int numberOfCheeses) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"        sb.append(PREFIX_CHEESE_TYPE + cheese.getCheeseType().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"        sb.append(PREFIX_QUANTITY + Integer.toString(numberOfCheeses) + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"        sb.append(PREFIX_MANUFACTURE_DATE + cheese.getManufactureDate().toJsonString() + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"        cheese.getExpiryDate().ifPresent(x -\u003e sb.append(PREFIX_EXPIRY_DATE + x.toJsonString() + \" \"));","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"weixue123":7,"aaronsms":27}},{"path":"src/test/java/chim/testutil/ChimBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-04-08"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":" * A utility class to help with building Chim objects.","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":" *     {@code Chim c \u003d new ChimBuilder().withCustomer(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"public class ChimBuilder {","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"    private final Chim chim;","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"    public ChimBuilder() {","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"        chim \u003d new Chim();","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"    public ChimBuilder(Chim chim) {","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"        this.chim \u003d chim;","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"     * Adds a new {@code Customer} to the {@code Chim} that we are building.","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"    public ChimBuilder withCustomer(Customer customer) {","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"        chim.addCustomer(customer);","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":"        return this;","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"    public Chim build() {","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"        return chim;","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"weixue123":34}},{"path":"src/test/java/chim/testutil/CustomerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.CustomerIdStub;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Address;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Email;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Name;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.util.SampleDataUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":" * A utility class to help with building Customer objects.","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"public class CustomerBuilder {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"    private Name name;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"    private Phone phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"    private Email email;","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"    private Address address;","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    private CustomerId customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"     * Creates a {@code CustomerBuilder} with the default details.","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"    public CustomerBuilder() {","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"        customerId \u003d CustomerIdStub.getNextId();","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"     * Initializes the CustomerBuilder with the data of {@code customerToCopy}.","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"    public CustomerBuilder(Customer customerToCopy) {","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"laurenlhy"},"content":"        name \u003d customerToCopy.getName();","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"laurenlhy"},"content":"        phone \u003d customerToCopy.getPhone();","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"        email \u003d customerToCopy.getEmail();","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"laurenlhy"},"content":"        address \u003d customerToCopy.getAddress();","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"        customerId \u003d customerToCopy.getId();","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":"        tags \u003d new HashSet\u003c\u003e(customerToCopy.getTags());","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"laurenlhy"},"content":"     * Sets the {@code Name} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"laurenlhy"},"content":"    public CustomerBuilder withName(String name) {","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"laurenlhy"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"laurenlhy"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"laurenlhy"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Customer} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"    public CustomerBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"laurenlhy"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"laurenlhy"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"laurenlhy"},"content":"     * Sets the {@code Address} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"laurenlhy"},"content":"    public CustomerBuilder withAddress(String address) {","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"laurenlhy"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"laurenlhy"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"laurenlhy"},"content":"     * Sets the {@code Phone} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"laurenlhy"},"content":"    public CustomerBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"laurenlhy"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"laurenlhy"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"laurenlhy"},"content":"     * Sets the {@code Email} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"laurenlhy"},"content":"    public CustomerBuilder withEmail(String email) {","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"laurenlhy"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"laurenlhy"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":97,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"     * Sets the {@code customerId} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"    public CustomerBuilder withId(CustomerId customerId) {","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"laurenlhy"},"content":"    public Customer build() {","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"        return new Customer(name, phone, email, address, tags, customerId);","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"laurenlhy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"laurenlhy":87,"weixue123":10,"daniellau88":12}},{"path":"src/test/java/chim/testutil/CustomerUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":" * A utility class for Customer.","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"public class CustomerUtil {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"     * Returns an add command string for adding the {@code customer}.","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"    public static String getAddCommand(Customer customer) {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"        return AddCustomerCommand.COMMAND_WORD + \" \" + getCustomerDetails(customer);","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"     * Returns the part of command string for the given {@code customer}\u0027s details.","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"    public static String getCustomerDetails(Customer customer) {","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"        sb.append(PREFIX_NAME + customer.getName().fullName + \" \");","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"        sb.append(PREFIX_PHONE + customer.getPhone().value + \" \");","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"        sb.append(PREFIX_EMAIL + customer.getEmail().value + \" \");","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"        sb.append(PREFIX_ADDRESS + customer.getAddress().value + \" \");","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"        customer.getTags().stream().forEach(","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"     * Returns the part of command string for the given {@code EditCustomerDescriptor}\u0027s details.","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"    public static String getEditCustomerDescriptorDetails(EditCustomerCommand.EditCustomerDescriptor descriptor) {","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"laurenlhy":12,"weixue123":10,"-":38,"aaronsms":2}},{"path":"src/test/java/chim/testutil/EditCheeseDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCheeseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ExpiryDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.ManufactureDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":" * A utility class to help with building EditCheeseDescriptor objects.","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"public class EditCheeseDescriptorBuilder {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"    private EditCheeseCommand.EditCheeseDescriptor descriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"    public EditCheeseDescriptorBuilder() {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"        descriptor \u003d new EditCheeseCommand.EditCheeseDescriptor();","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"    public EditCheeseDescriptorBuilder(EditCheeseCommand.EditCheeseDescriptor descriptor) {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":"        this.descriptor \u003d new EditCheeseCommand.EditCheeseDescriptor(descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"     * Returns an {@code EditCheeseDescriptor} with fields containing {@code cheese}\u0027s details","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"    public EditCheeseDescriptorBuilder(Cheese cheese) {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"        descriptor \u003d new EditCheeseCommand.EditCheeseDescriptor();","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setCheeseType(cheese.getCheeseType());","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setManufactureDate(cheese.getManufactureDate());","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setExpiryDate(cheese.getExpiryDate().get());","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"     * Sets the {@code CheeseType} of the {@code EditCheeseDescriptor} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"    public EditCheeseDescriptorBuilder withCheeseType(CheeseType cheeseType) {","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setCheeseType(CheeseType.getCheeseType(cheeseType.toString()));","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"     * Sets the {@code ManufactureDate} of the {@code EditCheeseDescriptor} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"laurenlhy"},"content":"    public EditCheeseDescriptorBuilder withManufactureDate(String manufactureDate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setManufactureDate(new ManufactureDate(manufactureDate));","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"     * Sets the {@code ExpiryDate} of the {@code EditCheeseDescriptor} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"laurenlhy"},"content":"    public EditCheeseDescriptorBuilder withExpiryDate(String expiryDate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setExpiryDate(new ExpiryDate(expiryDate));","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"laurenlhy"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"laurenlhy"},"content":"    public EditCheeseCommand.EditCheeseDescriptor build() {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"        return descriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"laurenlhy"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"laurenlhy":54,"weixue123":7}},{"path":"src/test/java/chim/testutil/EditCustomerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCustomerCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Address;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Email;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Name;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import chim.model.tag.Tag;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":" * A utility class to help with building EditCustomerDescriptor objects.","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"public class EditCustomerDescriptorBuilder {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"    private EditCustomerCommand.EditCustomerDescriptor descriptor;","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"    public EditCustomerDescriptorBuilder() {","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"        descriptor \u003d new EditCustomerCommand.EditCustomerDescriptor();","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"    public EditCustomerDescriptorBuilder(EditCustomerDescriptor descriptor) {","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"        this.descriptor \u003d new EditCustomerCommand.EditCustomerDescriptor(descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"     * Returns an {@code EditCustomerDescriptor} with fields containing {@code customer}\u0027s details","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"    public EditCustomerDescriptorBuilder(Customer customer) {","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"        descriptor \u003d new EditCustomerCommand.EditCustomerDescriptor();","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setName(customer.getName());","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setPhone(customer.getPhone());","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setEmail(customer.getEmail());","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setAddress(customer.getAddress());","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setTags(customer.getTags());","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"     * Sets the {@code Name} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"    public EditCustomerDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"laurenlhy"},"content":"     * Sets the {@code Phone} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":"    public EditCustomerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"laurenlhy"},"content":"     * Sets the {@code Email} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"laurenlhy"},"content":"    public EditCustomerDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"laurenlhy"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"     * Sets the {@code Address} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"laurenlhy"},"content":"    public EditCustomerDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"laurenlhy"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"laurenlhy"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"laurenlhy"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditCustomerDescriptor}","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"laurenlhy"},"content":"     * that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"laurenlhy"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"laurenlhy"},"content":"    public EditCustomerDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"laurenlhy"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"laurenlhy"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"laurenlhy"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"    public EditCustomerCommand.EditCustomerDescriptor build() {","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"laurenlhy"},"content":"        return descriptor;","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"laurenlhy"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"laurenlhy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"laurenlhy":73,"weixue123":11,"aaronsms":4}},{"path":"src/test/java/chim/testutil/EditOrderDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.EditOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"public class EditOrderDescriptorBuilder {","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"    private EditOrderCommand.EditOrderDescriptor descriptor;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"    public EditOrderDescriptorBuilder() {","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"        descriptor \u003d new EditOrderCommand.EditOrderDescriptor();","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"     * Returns an {@code EditOrderDescriptorBuilder} with fields containing {@code order}\u0027s details","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"    public EditOrderDescriptorBuilder(Order order) {","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"        descriptor \u003d new EditOrderCommand.EditOrderDescriptor();","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"        descriptor.setOrderDate(order.getOrderDate());","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"        descriptor.setCheeseType(order.getCheeseType());","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"        descriptor.setQuantity(order.getQuantity());","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"    public EditOrderDescriptorBuilder(EditOrderCommand.EditOrderDescriptor descriptor) {","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"        this.descriptor \u003d new EditOrderCommand.EditOrderDescriptor(descriptor);","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"     * Sets the {@code CheeseType} of the {@code EditOrderDescriptorBuilder} that we are building.","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"    public EditOrderDescriptorBuilder withCheeseType(String cheeseType) {","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"        descriptor.setCheeseType(CheeseType.getCheeseType(cheeseType));","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"        return this;","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"     * Sets the {@code Quantity} of the {@code EditOrderDescriptorBuilder} that we are building.","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"    public EditOrderDescriptorBuilder withQuantity (int quantity) {","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"        descriptor.setQuantity(new Quantity(quantity));","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"        return this;","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"     * Sets the {@code OrderDate} of the {@code EditOrderDescriptorBuilder} that we are building.","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"    public EditOrderDescriptorBuilder withOrderDate (String orderDate) {","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"        descriptor.setOrderDate(new OrderDate(orderDate));","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"        return this;","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"     * Sets the {@code Phone} of the {@code EditOrderDescriptorBuilder} that we are building.","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"    public EditOrderDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"        return this;","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"    public EditOrderCommand.EditOrderDescriptor build() {","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"        return descriptor;","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"}","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"AhQuanz":54,"weixue123":12}},{"path":"src/test/java/chim/testutil/OrderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseType;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.CustomerId;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.order.CompletedDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderDate;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import chim.model.order.OrderId;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-04"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":" * A utility class to help with building Order objects.","lastModifiedDate":"2021-03-04"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-04"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"public class OrderBuilder {","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    public static final String DEFAULT_CHEESE_TYPE \u003d \"Feta\";","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"    public static final int DEFAULT_QUANTITY \u003d 1;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    public static final String DEFAULT_ORDER_DATE \u003d \"2021-02-03 12:00\";","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    public static final CustomerId DEFAULT_CUSTOMER_ID \u003d CustomerId.getNextId(1);","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    private CheeseType cheeseType;","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"    private Quantity quantity;","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"    private OrderDate orderDate;","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"    private CompletedDate completedDate;","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    private OrderId orderId;","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"    private CustomerId customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"    private Set\u003cCheeseId\u003e cheeses;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"     * Creates a {@code OrderBuilder} with the default details.","lastModifiedDate":"2021-03-04"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"    public OrderBuilder() {","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"        this.cheeseType \u003d CheeseType.getCheeseType(DEFAULT_CHEESE_TYPE);","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"        this.quantity \u003d new Quantity(DEFAULT_QUANTITY);","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"        this.orderDate \u003d new OrderDate(DEFAULT_ORDER_DATE);","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"daniellau88"},"content":"        // Set initial completed date to null","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"        this.completedDate \u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"        this.orderId \u003d null;","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"        this.customerId \u003d DEFAULT_CUSTOMER_ID;","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"        this.cheeses \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"     * Initializes the OrderBuilder with the data of {@code orderToCopy}.","lastModifiedDate":"2021-03-04"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"     * Makes an exact copy (with the same ID) of the {@code orderToCopy}.","lastModifiedDate":"2021-03-04"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"    public OrderBuilder(Order orderToCopy) {","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"        this.cheeseType \u003d orderToCopy.getCheeseType();","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"        this.quantity \u003d orderToCopy.getQuantity();","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"        this.orderDate \u003d orderToCopy.getOrderDate();","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"        this.completedDate \u003d orderToCopy.getCompletedDate().orElse(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"        this.orderId \u003d orderToCopy.getOrderId();","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"        this.customerId \u003d orderToCopy.getCustomerId();","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"        this.cheeses \u003d orderToCopy.getCheeses();","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"     * Sets the {@code CheeseType} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"    public OrderBuilder withCheeseType(String cheeseType) {","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"        this.cheeseType \u003d CheeseType.getCheeseType(cheeseType);","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"     * Sets the {@code Quantity} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"    public OrderBuilder withQuantity(int quantity) {","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"        this.quantity \u003d new Quantity(quantity);","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"     * Sets the {@code OrderDate} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-04"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"    public OrderBuilder withOrderDate(String orderDate) {","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"        this.orderDate \u003d new OrderDate(orderDate);","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"     * Sets the {@code CompletedDate} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-04"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"    public OrderBuilder withCompletedDate(String completedDate) {","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"        if (completedDate \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"daniellau88"},"content":"            this.completedDate \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"daniellau88"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"daniellau88"},"content":"            this.completedDate \u003d new CompletedDate(completedDate);","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"daniellau88"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"     * Sets the {@code OrderId} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"    public OrderBuilder withOrderId(int id) {","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"aaronsms"},"content":"        this.orderId \u003d OrderId.getNextId(id);","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"     * Sets the {@code OrderId} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"    public OrderBuilder withOrderId(OrderId id) {","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"        this.orderId \u003d id;","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"daniellau88"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"daniellau88"},"content":"     * Sets the {@code OrderId} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"daniellau88"},"content":"    public OrderBuilder withCustomerId(CustomerId customerId) {","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"daniellau88"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"daniellau88"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":119,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"AhQuanz"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"AhQuanz"},"content":"     * Sets the {@code cheeses} of the {@code Order} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"AhQuanz"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"AhQuanz"},"content":"    public OrderBuilder withCheeses(Set\u003cCheeseId\u003e cheeses) {","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"AhQuanz"},"content":"        this.cheeses \u003d cheeses;","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"AhQuanz"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"AhQuanz"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"daniellau88"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":130,"author":{"gitId":"daniellau88"},"content":"     * Returns the immutable {@code Order} object representing the data we have.","lastModifiedDate":"2021-03-04"},{"lineNumber":131,"author":{"gitId":"daniellau88"},"content":"     * @return an {@code Order} representation of data","lastModifiedDate":"2021-03-04"},{"lineNumber":132,"author":{"gitId":"daniellau88"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":133,"author":{"gitId":"daniellau88"},"content":"    public Order build() {","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"daniellau88"},"content":"        if (orderId \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"daniellau88"},"content":"            return new Order(cheeseType, quantity, orderDate, completedDate, cheeses, customerId);","lastModifiedDate":"2021-03-22"},{"lineNumber":136,"author":{"gitId":"daniellau88"},"content":"        } else {","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"AhQuanz"},"content":"            return new Order(cheeseType, quantity, orderDate, completedDate, cheeses, orderId, customerId);","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"daniellau88"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":140,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":141,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"AhQuanz":15,"weixue123":9,"daniellau88":116,"aaronsms":1}},{"path":"src/test/java/chim/testutil/OrderUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_CHEESE_TYPE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_ORDER_DATE;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.logic.commands.AddOrderCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Phone;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":" * A utility class for Order.","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"public class OrderUtil {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"     * Returns an add command string for adding the {@code order}.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"    public static String getAddCommand(Order order, Phone phone) {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"        return AddOrderCommand.COMMAND_WORD + \" \" + getOrderDetails(order, phone);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"     * Returns the part of command string for the given {@code customer}\u0027s details.","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"    public static String getOrderDetails(Order order, Phone phone) {","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"        sb.append(PREFIX_CHEESE_TYPE + order.getCheeseType().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"        sb.append(PREFIX_PHONE + phone.value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"        sb.append(PREFIX_QUANTITY + order.getQuantity().toString() + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"        sb.append(PREFIX_ORDER_DATE + order.getOrderDate().toJsonString() + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"weixue123":8,"aaronsms":28}},{"path":"src/test/java/chim/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weixue123":1,"-":71}},{"path":"src/test/java/chim/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import chim.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"     * Returns the middle index of the customer in the {@code model}\u0027s customer list.","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"        return Index.fromOneBased(model.getFilteredCustomerList().size() / 2);","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"     * Returns the last index of the customer in the {@code model}\u0027s customer list.","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"        return Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"laurenlhy"},"content":"     * Returns the customer in the {@code model}\u0027s customer list at {@code index}.","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"laurenlhy"},"content":"    public static Customer getCustomer(Model model, Index index) {","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"laurenlhy"},"content":"        return model.getFilteredCustomerList().get(index.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"laurenlhy":7,"weixue123":4,"-":44}},{"path":"src/test/java/chim/testutil/TypicalCheese.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_BRIE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_GOUDA;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_MOZZARELLA;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_2;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_3;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_4;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_5;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_MANUFACTURE_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_MANUFACTURE_DATE_2;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_MANUFACTURE_DATE_3;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_MANUFACTURE_DATE_4;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_MANUFACTURE_DATE_5;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"/**","lastModifiedDate":"2021-03-04"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":" * A utility class containing a list of {@code Cheese} objects to be used in tests.","lastModifiedDate":"2021-03-04"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":" */","lastModifiedDate":"2021-03-04"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"public class TypicalCheese {","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"    public static final Cheese CAMEMBERT \u003d new CheeseBuilder().withCheeseType(VALID_CHEESE_TYPE_CAMEMBERT)","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"            .withManufactureDate(VALID_MANUFACTURE_DATE_1)","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"            .withExpiryDate(VALID_EXPIRY_DATE_1).withCheeseId(1)","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"            .withAssignStatus(true)","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"            .build();","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"    public static final Cheese FETA \u003d new CheeseBuilder().withCheeseType(VALID_CHEESE_TYPE_FETA)","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"            .withManufactureDate(VALID_MANUFACTURE_DATE_2)","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"daniellau88"},"content":"            .withExpiryDate(VALID_EXPIRY_DATE_2).withCheeseId(2)","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"            .withAssignStatus(true)","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"            .build();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"    public static final Cheese BRIE \u003d new CheeseBuilder().withCheeseType(VALID_CHEESE_TYPE_BRIE)","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"            .withManufactureDate(VALID_MANUFACTURE_DATE_3)","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"            .withExpiryDate(VALID_EXPIRY_DATE_3).withCheeseId(3)","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"            .withAssignStatus(false)","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"            .build();","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"    public static final Cheese MOZZARELLA \u003d new CheeseBuilder().withCheeseType(VALID_CHEESE_TYPE_MOZZARELLA)","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"            .withManufactureDate(VALID_MANUFACTURE_DATE_4).withExpiryDate(VALID_EXPIRY_DATE_4)","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"            .withCheeseId(4).withAssignStatus(false)","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"            .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"laurenlhy"},"content":"    public static final Cheese CAMEMBERT_2 \u003d new CheeseBuilder().withCheeseType(VALID_CHEESE_TYPE_CAMEMBERT)","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":"            .withManufactureDate(VALID_MANUFACTURE_DATE_1).withExpiryDate(VALID_EXPIRY_DATE_1)","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"            .withCheeseId(5).withAssignStatus(true)","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"laurenlhy"},"content":"            .build();","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"    public static final Cheese GOUDA \u003d new CheeseBuilder().withCheeseType(VALID_CHEESE_TYPE_GOUDA)","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"            .withManufactureDate(VALID_MANUFACTURE_DATE_5).withExpiryDate(VALID_EXPIRY_DATE_5)","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"            .withCheeseId(6).withAssignStatus(false)","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"            .build();","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"    public static List\u003cCheese\u003e getTypicalCheeses() {","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CAMEMBERT, FETA, BRIE, MOZZARELLA, CAMEMBERT_2, GOUDA));","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"AhQuanz":10,"laurenlhy":5,"weixue123":17,"daniellau88":34}},{"path":"src/test/java/chim/testutil/TypicalCustomers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_PHONE_CARL;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import chim.model.CustomerIdStub;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":" * A utility class containing a list of {@code Customer} objects to be used in tests.","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"public class TypicalCustomers {","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"    public static final Customer ALICE \u003d new CustomerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"            .withId(CustomerIdStub.getNextId(1)).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"    public static final Customer BENSON \u003d new CustomerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"daniellau88"},"content":"            .withId(CustomerIdStub.getNextId(2)).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"    public static final Customer CARL \u003d new CustomerBuilder().withName(\"Carl Kurz\").withPhone(VALID_PHONE_CARL)","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"daniellau88"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"daniellau88"},"content":"            .withId(CustomerIdStub.getNextId(3)).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"    public static final Customer DANIEL \u003d new CustomerBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"daniellau88"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":"            .withId(CustomerIdStub.getNextId(4)).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"    public static final Customer ELLE \u003d new CustomerBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"            .withId(CustomerIdStub.getNextId(5)).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"    public static final Customer FIONA \u003d new CustomerBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"            .withId(CustomerIdStub.getNextId(6)).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"laurenlhy"},"content":"    public static final Customer GEORGE \u003d new CustomerBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"            .withId(CustomerIdStub.getNextId(7)).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":"    public static final Customer HOON \u003d new CustomerBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"            .withId(CustomerIdStub.getNextId(8)).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"    public static final Customer IDA \u003d new CustomerBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"            .withId(CustomerIdStub.getNextId(9)).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"laurenlhy"},"content":"    // Manually added - Customer\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"laurenlhy"},"content":"    public static final Customer AMY \u003d new CustomerBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"            .withId(CustomerIdStub.getNextId(10)).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"laurenlhy"},"content":"    public static final Customer BOB \u003d new CustomerBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"            .withId(CustomerIdStub.getNextId(11)).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"laurenlhy"},"content":"    private TypicalCustomers() {} // prevents instantiation","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"laurenlhy"},"content":"    public static List\u003cCustomer\u003e getTypicalCustomers() {","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"AhQuanz":1,"laurenlhy":15,"weixue123":14,"daniellau88":21,"-":25}},{"path":"src/test/java/chim/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":"    public static final Index INDEX_FIRST_CHEESE \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":"    public static final Index INDEX_SECOND_CHEESE \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"    public static final Index INDEX_THIRD_CHEESE \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"    public static final Index INDEX_FOURTH_CHEESE \u003d Index.fromOneBased(4);","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"    public static final Index INDEX_FILTERED_CHEESE \u003d Index.fromZeroBased(0);","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"    public static final Index INDEX_FIRST_CUSTOMER \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"    public static final Index INDEX_SECOND_CUSTOMER \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"    public static final Index INDEX_THIRD_CUSTOMER \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":"    public static final Index INDEX_TYPICAL_CUSTOMER \u003d Index.fromOneBased(6);","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"    public static final Index INDEX_FIRST_ORDER \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"    public static final Index INDEX_SECOND_ORDER \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"    public static final Index INDEX_UNCOMPLETED_ORDER \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"    public static final Index INDEX_SECOND_UNCOMPLETED_ORDER \u003d Index.fromOneBased(4);","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"    public static final Index INDEX_FILTERED_ORDER \u003d Index.fromZeroBased(0);","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"    public static final Index INDEX_COMPLETED_ORDER \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"    public static final Index INDEX_INSUFFICENT_CHEESE_ORDER \u003d Index.fromOneBased(4);","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"    public static final Index INDEX_LAST_ORDER \u003d Index.fromOneBased(TypicalOrder.getTypicalOrders().size());","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"AhQuanz":6,"laurenlhy":10,"weixue123":2,"daniellau88":1,"-":7}},{"path":"src/test/java/chim/testutil/TypicalModels.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import chim.model.Chim;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.Cheese;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import chim.model.customer.Customer;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"public class TypicalModels {","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"    /**","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"     * Returns a {@code Chim} with all the typical customers, orders and cheeses.","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"     */","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"    public static Chim getTypicalChim() {","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"        Chim ab \u003d new Chim();","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"        for (Customer customer : TypicalCustomers.getTypicalCustomers()) {","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"            ab.addCustomer(customer);","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"        for (Cheese cheese : TypicalCheese.getTypicalCheeses()) {","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"            ab.addCheese(cheese);","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"        for (Order order : TypicalOrder.getTypicalOrders()) {","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"            ab.addOrder(order);","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"        return ab;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"weixue123":27}},{"path":"src/test/java/chim/testutil/TypicalOrder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.testutil;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_BRIE;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_CAMEMBERT;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_FETA;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_GOUDA;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_CHEESE_TYPE_MOZZARELLA;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_COMPLETED_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_COMPLETED_DATE_2;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_DATE_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_DATE_2;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_DATE_3;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_DATE_4;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_ORDER_DATE_5;","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_QUANTITY_1;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"weixue123"},"content":"import static chim.logic.commands.CommandTestUtil.VALID_QUANTITY_2;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"weixue123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"weixue123"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"weixue123"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"weixue123"},"content":"import java.util.List;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"weixue123"},"content":"import chim.model.cheese.CheeseId;","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"weixue123"},"content":"import chim.model.order.Order;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"weixue123"},"content":"/**","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"weixue123"},"content":" * A utility class containing a list of {@code Order} objects to be used in tests.","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"weixue123"},"content":" */","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"weixue123"},"content":"public class TypicalOrder {","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"weixue123"},"content":"    public static final Order ORDER_BRIE \u003d new OrderBuilder()","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"weixue123"},"content":"            .withCheeseType(VALID_CHEESE_TYPE_BRIE).withQuantity(VALID_QUANTITY_1)","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"weixue123"},"content":"            .withOrderDate(VALID_ORDER_DATE_3).withCompletedDate(null)","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"weixue123"},"content":"            .withCustomerId(TypicalCustomers.CARL.getId()).withOrderId(1)","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"weixue123"},"content":"            .build();","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"weixue123"},"content":"    public static final Order ORDER_CAMEMBERT \u003d new OrderBuilder()","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"weixue123"},"content":"            .withCheeseType(VALID_CHEESE_TYPE_CAMEMBERT).withQuantity(VALID_QUANTITY_1)","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"weixue123"},"content":"            .withOrderDate(VALID_ORDER_DATE_1).withCompletedDate(VALID_COMPLETED_DATE_1)","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"weixue123"},"content":"            .withCustomerId(TypicalCustomers.ALICE.getId()).withOrderId(2)","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"weixue123"},"content":"            .withCheeses(new HashSet\u003c\u003e(Arrays.asList(TypicalCheese.CAMEMBERT.getCheeseId())))","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"weixue123"},"content":"            .build();","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"weixue123"},"content":"    public static final Order ORDER_FETA \u003d new OrderBuilder()","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"weixue123"},"content":"            .withCheeseType(VALID_CHEESE_TYPE_FETA).withQuantity(VALID_QUANTITY_1)","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"weixue123"},"content":"            .withOrderDate(VALID_ORDER_DATE_2).withCompletedDate(VALID_COMPLETED_DATE_2)","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"weixue123"},"content":"            .withCustomerId(TypicalCustomers.BENSON.getId()).withOrderId(3)","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"weixue123"},"content":"            .withCheeses(new HashSet\u003c\u003e(Arrays.asList(TypicalCheese.FETA.getCheeseId())))","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"weixue123"},"content":"            .build();","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"weixue123"},"content":"    public static final Order ORDER_MOZZARELLA \u003d new OrderBuilder()","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"weixue123"},"content":"            .withCheeseType(VALID_CHEESE_TYPE_MOZZARELLA).withQuantity(VALID_QUANTITY_2)","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"weixue123"},"content":"            .withOrderDate(VALID_ORDER_DATE_4).withCompletedDate(null)","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"weixue123"},"content":"            .withCustomerId(TypicalCustomers.DANIEL.getId()).withOrderId(4)","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"weixue123"},"content":"            .build();","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"weixue123"},"content":"    public static final Order ORDER_CAMEMBERT_2 \u003d new OrderBuilder()","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"weixue123"},"content":"            .withCheeseType(VALID_CHEESE_TYPE_CAMEMBERT).withQuantity(VALID_QUANTITY_1)","lastModifiedDate":"2021-04-09"},{"lineNumber":58,"author":{"gitId":"weixue123"},"content":"            .withOrderDate(VALID_ORDER_DATE_2).withCompletedDate(VALID_COMPLETED_DATE_2)","lastModifiedDate":"2021-04-09"},{"lineNumber":59,"author":{"gitId":"weixue123"},"content":"            .withCustomerId(TypicalCustomers.BENSON.getId()).withOrderId(5)","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"weixue123"},"content":"            .withCheeses(new HashSet\u003cCheeseId\u003e(Arrays.asList(TypicalCheese.CAMEMBERT_2.getCheeseId())))","lastModifiedDate":"2021-04-09"},{"lineNumber":61,"author":{"gitId":"weixue123"},"content":"            .build();","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"weixue123"},"content":"    public static final Order ORDER_GOUDA \u003d new OrderBuilder()","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"weixue123"},"content":"        .withCheeseType(VALID_CHEESE_TYPE_GOUDA).withQuantity(VALID_QUANTITY_1)","lastModifiedDate":"2021-04-09"},{"lineNumber":65,"author":{"gitId":"weixue123"},"content":"        .withOrderDate(VALID_ORDER_DATE_5).withCompletedDate(null)","lastModifiedDate":"2021-04-09"},{"lineNumber":66,"author":{"gitId":"weixue123"},"content":"        .withCustomerId(TypicalCustomers.BENSON.getId()).withOrderId(6)","lastModifiedDate":"2021-04-09"},{"lineNumber":67,"author":{"gitId":"weixue123"},"content":"        .build();","lastModifiedDate":"2021-04-09"},{"lineNumber":68,"author":{"gitId":"weixue123"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":69,"author":{"gitId":"weixue123"},"content":"    public static List\u003cOrder\u003e getTypicalOrders() {","lastModifiedDate":"2021-04-09"},{"lineNumber":70,"author":{"gitId":"weixue123"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ORDER_BRIE, ORDER_CAMEMBERT, ORDER_FETA,","lastModifiedDate":"2021-04-09"},{"lineNumber":71,"author":{"gitId":"weixue123"},"content":"                ORDER_MOZZARELLA, ORDER_CAMEMBERT_2, ORDER_GOUDA));","lastModifiedDate":"2021-04-09"},{"lineNumber":72,"author":{"gitId":"weixue123"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":73,"author":{"gitId":"weixue123"},"content":"}","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"weixue123":73}},{"path":"src/test/java/chim/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"weixue123":1,"-":34}},{"path":"src/test/java/chim/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weixue123"},"content":"package chim.ui;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"import static chim.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"weixue123"},"content":"import chim.MainApp;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"weixue123":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"\u003c?import chim.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"weixue123":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"weixue123"},"content":"\u003cfx:root type\u003d\"chim.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"weixue123":1,"-":5}}]
