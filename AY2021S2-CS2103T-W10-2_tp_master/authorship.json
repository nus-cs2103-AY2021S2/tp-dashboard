[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-23"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W10-2/tp/actions)","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"* This is the CS2103T Project for **Team CS2103T-W10-2**, the name of the project is StoreMando.","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"* This product is a centralized inventory manager that helps to track the location of items in a household, their","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"  individual quantities and respective expiry dates (if applicable). \u003cbr\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"  The usage of this product can eventually extend to other places outside households, however the core of our","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"  development will surround the usage in a household.","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"* It is named `StoreMando`, a combination of the words Storage and Commando, the goal of our product is to make it the","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"  go-to product to track inventory.","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"* For the detailed documentation of this project, see","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"  the **[StoreMando Product Website](https://ay2021s2-cs2103t-w10-2.github.io/tp/)**.","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"JayChenYJ":15,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"You can reach us at the email `e0406389@u.nus.edu`","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## StoreMando Project Team","lastModifiedDate":"2021-02-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"### Chen Yan Jia Jay","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"\u003cimg src\u003d\"images/jaychenyj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"[[github](https://github.com/JayChenYJ)]","lastModifiedDate":"2021-02-23"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"[[portfolio](team/jaychenyj.md)]","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"* Role \u0026 Responsibilities: Team Lead, Scheduling and tracking, Deliverables and deadlines","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"### Chew Wei Hao","lastModifiedDate":"2021-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"\u003cimg src\u003d\"images/chewwh09.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"[[github](http://github.com/chewwh09)]","lastModifiedDate":"2021-02-23"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"[[portfolio](team/chewwh09.md)]","lastModifiedDate":"2021-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"* Roles and Responsibilities: Logic expert, Code Quality, Documentation","lastModifiedDate":"2021-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"### Mohamed Fazil","lastModifiedDate":"2021-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"\u003cimg src\u003d\"images/md-fazil.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"[[github](http://github.com/Md-Fazil)] [[portfolio](team/mohamedfazil.md)]","lastModifiedDate":"2021-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"* Roles \u0026 Responsibilities: In charge of documentation and integration. Git Expert.","lastModifiedDate":"2021-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"kumsssss"},"content":"### Kumaran S/O Selvvaratnam","lastModifiedDate":"2021-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"kumsssss"},"content":"\u003cimg src\u003d\"images/kumsssss.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"kumsssss"},"content":"[[github](http://github.com/kumsssss)]","lastModifiedDate":"2021-02-23"},{"lineNumber":43,"author":{"gitId":"kumsssss"},"content":"[[portfolio](team/kumaran.md)]","lastModifiedDate":"2021-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"* Role \u0026 Responsibilities: In charge of Code Quality and Model, Testing Expert","lastModifiedDate":"2021-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"github-amanda"},"content":"### Amanda Ang Yee Min","lastModifiedDate":"2021-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"github-amanda"},"content":"\u003cimg src\u003d\"images/github-amanda.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"github-amanda"},"content":"[[github](http://github.com/github-amanda)]","lastModifiedDate":"2021-02-23"},{"lineNumber":52,"author":{"gitId":"github-amanda"},"content":"[[portfolio](team/amandaang.md)]","lastModifiedDate":"2021-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"github-amanda"},"content":"* Roles \u0026 Responsibilities: UI Expert, Testing Expert \u0026 SourceTree Expert","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"kumsssss":4,"github-amanda":5,"JayChenYJ":7,"Md-Fazil":4,"chewwh09":5,"-":29}},{"path":"docs/Configuration.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-06-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Configuration guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"Certain properties of the application can be controlled (e.g. user preferences file location, logging level) through the configuration file (default: `config.json`).","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"JayChenYJ":1,"-":5}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to create a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need, and the CI will do the rest.","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/location/MainApp.java).","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadow`).","lastModifiedDate":"2020-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"JayChenYJ":3,"-":76}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"each component.","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"the [diagrams](https://github.com/AY2021S2-CS2103T-W10-2/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"diagrams.","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"**`Main`** has two classes","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"called [`Main`](https://github.com/AY2021S2-CS2103T-W10-2/tp/blob/master/src/main/java/seedu/storemando/Main.java)","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"and [`MainApp`](https://github.com/AY2021S2-CS2103T-W10-2/tp/blob/master/src/main/java/seedu/storemando/MainApp.java).","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"It is responsible for,","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"* [**`UI`**](#ui-component) The UI of the App.","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"* [**`Logic`**](#logic-component) The command executor.","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"* [**`Model`**](#model-component) Holds the data of the App in memory.","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"* [**`Storage`**](#storage-component) Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"  API `interface` mentioned in the previous point).","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"the command `delete 1`.","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103T-W10-2/tp/blob/master/src/main/java/seedu/storemando/ui/Ui.java)","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":", `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":"in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"JayChenYJ"},"content":"the [`MainWindow`](https://github.com/AY2021S2-CS2103T-W10-2/tp/blob/master/src/main/java/seedu/storemando/ui/MainWindow.java)","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"is specified","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"in [`MainWindow.fxml`](https://github.com/AY2021S2-CS2103T-W10-2/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"JayChenYJ"},"content":"[`Logic.java`](https://github.com/AY2021S2-CS2103T-W10-2/tp/blob/master/src/main/java/seedu/storemando/logic/Logic.java)","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"JayChenYJ"},"content":"1. The command execution can affect the `Model` (e.g. adding an item).","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"JayChenYJ"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"JayChenYJ"},"content":"   help to the user.","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"JayChenYJ"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":"call.","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"JayChenYJ"},"content":"**","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"JayChenYJ"},"content":"API** : [`Model.java`](https://github.com/AY2021S2-CS2103T-W10-2/tp/blob/master/src/main/java/seedu/storemando/model/Model.java)","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"JayChenYJ"},"content":"* stores the location book data.","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"JayChenYJ"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"JayChenYJ"},"content":"  the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"JayChenYJ"},"content":"**","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"JayChenYJ"},"content":"API** : [`Storage.java`](https://github.com/AY2021S2-CS2103T-W10-2/tp/blob/master/src/main/java/seedu/storemando/storage/Storage.java)","lastModifiedDate":"2021-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"JayChenYJ"},"content":"* can save the location book data in json format and read it back.","lastModifiedDate":"2021-03-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"JayChenYJ"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with undo/redo","lastModifiedDate":"2021-03-11"},{"lineNumber":161,"author":{"gitId":"JayChenYJ"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2021-03-08"},{"lineNumber":162,"author":{"gitId":"JayChenYJ"},"content":"following operations:","lastModifiedDate":"2021-03-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"JayChenYJ"},"content":"* `VersionedAddressBook#commit()` — Saves the current location book state in its history.","lastModifiedDate":"2021-03-08"},{"lineNumber":165,"author":{"gitId":"JayChenYJ"},"content":"* `VersionedAddressBook#undo()` — Restores the previous location book state from its history.","lastModifiedDate":"2021-03-08"},{"lineNumber":166,"author":{"gitId":"JayChenYJ"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone location book state from its history.","lastModifiedDate":"2021-03-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"JayChenYJ"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2021-03-08"},{"lineNumber":169,"author":{"gitId":"JayChenYJ"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2021-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"JayChenYJ"},"content":"Given below is an example usage scenario and how undo/redo mechanism behaves at each step.","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"JayChenYJ"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2021-03-08"},{"lineNumber":174,"author":{"gitId":"JayChenYJ"},"content":"initial location book state, and the `currentStatePointer` pointing to that single location book state.","lastModifiedDate":"2021-03-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"JayChenYJ"},"content":"Step 2. The user executes `delete 5` command to delete the 5th item in the address book. The `delete` command","lastModifiedDate":"2021-03-08"},{"lineNumber":179,"author":{"gitId":"JayChenYJ"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2021-03-08"},{"lineNumber":180,"author":{"gitId":"JayChenYJ"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2021-03-08"},{"lineNumber":181,"author":{"gitId":"JayChenYJ"},"content":"state.","lastModifiedDate":"2021-03-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"JayChenYJ"},"content":"Step 3. The user executes `add n/David …​` to add a new item. The `add` command also calls `Model#commitAddressBook()`,","lastModifiedDate":"2021-03-08"},{"lineNumber":186,"author":{"gitId":"JayChenYJ"},"content":"causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-03-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"JayChenYJ"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the location book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2021-03-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"JayChenYJ"},"content":"Step 4. The user now decides that adding the item was a mistake, and decides to undo that action by executing the `undo`","lastModifiedDate":"2021-03-08"},{"lineNumber":195,"author":{"gitId":"JayChenYJ"},"content":"command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the","lastModifiedDate":"2021-03-08"},{"lineNumber":196,"author":{"gitId":"JayChenYJ"},"content":"left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-03-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"JayChenYJ"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2021-03-08"},{"lineNumber":214,"author":{"gitId":"JayChenYJ"},"content":"to the right, pointing to the previously undone state, and restores the location book to that state.","lastModifiedDate":"2021-03-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"JayChenYJ"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest location book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-03-01"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"JayChenYJ"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the location book, such","lastModifiedDate":"2021-03-08"},{"lineNumber":221,"author":{"gitId":"JayChenYJ"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2021-03-08"},{"lineNumber":222,"author":{"gitId":"JayChenYJ"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2021-03-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"JayChenYJ"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2021-03-08"},{"lineNumber":227,"author":{"gitId":"JayChenYJ"},"content":"pointing at the end of the `addressBookStateList`, all location book states after the `currentStatePointer` will be","lastModifiedDate":"2021-03-08"},{"lineNumber":228,"author":{"gitId":"JayChenYJ"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2021-03-08"},{"lineNumber":229,"author":{"gitId":"JayChenYJ"},"content":"desktop applications follow.","lastModifiedDate":"2021-03-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"JayChenYJ"},"content":"* **Alternative 1 (current choice):** Saves the entire location book.","lastModifiedDate":"2021-03-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"JayChenYJ"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","lastModifiedDate":"2021-03-08"},{"lineNumber":246,"author":{"gitId":"kumsssss"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the item being deleted).","lastModifiedDate":"2021-03-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"github-amanda"},"content":"* residents in a household","lastModifiedDate":"2021-02-26"},{"lineNumber":275,"author":{"gitId":"github-amanda"},"content":"* has a need to manage a significant number of household items","lastModifiedDate":"2021-02-27"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"JayChenYJ"},"content":"**Value proposition**: A centralized inventory manager that helps to track the location of items in a household, their","lastModifiedDate":"2021-03-08"},{"lineNumber":282,"author":{"gitId":"JayChenYJ"},"content":"individual quantities and respective expiry dates.","lastModifiedDate":"2021-03-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"chewwh09"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":289,"author":{"gitId":"-"},"content":"| Priority | As a …​                          | I want to …​                    | So that I can…​                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"JayChenYJ"},"content":"| -------- | ---------------------------------   | ---------------------------------- | --------------------------------------------------------- |","lastModifiedDate":"2021-03-11"},{"lineNumber":291,"author":{"gitId":"github-amanda"},"content":"| `* * *`  | user                                | delete an item                     | remove it when it is expired or used up                   |","lastModifiedDate":"2021-02-27"},{"lineNumber":292,"author":{"gitId":"github-amanda"},"content":"| `* * *`  | impulsive buyer                     | add a new item                     | keep track of it                                          |","lastModifiedDate":"2021-02-27"},{"lineNumber":293,"author":{"gitId":"JayChenYJ"},"content":"| `* * *`  | user with many items                | list down all items                | know in one glance all the items I have                   |","lastModifiedDate":"2021-03-11"},{"lineNumber":294,"author":{"gitId":"JayChenYJ"},"content":"| `* * *`  | forgetful user with many items      | search for an item quickly         | locate them easily                                        |","lastModifiedDate":"2021-03-07"},{"lineNumber":295,"author":{"gitId":"github-amanda"},"content":"| `*`      | user who stocks up items daily      | update my items                    | change the items\u0027 expiry dates and quantities accordingly |","lastModifiedDate":"2021-02-26"},{"lineNumber":296,"author":{"gitId":"JayChenYJ"},"content":"| `* *`    | user who likes to tidy up my room   | see all items in the same location | see what items I have in that particular location         |","lastModifiedDate":"2021-03-11"},{"lineNumber":297,"author":{"gitId":"JayChenYJ"},"content":"| `* *`    | user who tags my items meaningfully | see all items with the same tag    | see what items I have with that particular tag            |","lastModifiedDate":"2021-03-11"},{"lineNumber":298,"author":{"gitId":"chewwh09"},"content":"| \u0027* *\u0027    | forgetful user                      | be aware of my expiring items      | replace them before it is expired                         |","lastModifiedDate":"2021-03-16"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":300,"author":{"gitId":"github-amanda"},"content":"_**(more to be added)**_","lastModifiedDate":"2021-02-27"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"JayChenYJ"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified","lastModifiedDate":"2021-03-08"},{"lineNumber":305,"author":{"gitId":"JayChenYJ"},"content":"otherwise)","lastModifiedDate":"2021-03-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"chewwh09"},"content":"**Use case: UC1 - Add an item**","lastModifiedDate":"2021-02-27"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"chewwh09"},"content":"1. User requests for the storage list.","lastModifiedDate":"2021-02-27"},{"lineNumber":312,"author":{"gitId":"chewwh09"},"content":"2. StoreMando displays the storage list.","lastModifiedDate":"2021-02-27"},{"lineNumber":313,"author":{"gitId":"chewwh09"},"content":"3. User input the add command with the item details.","lastModifiedDate":"2021-02-27"},{"lineNumber":314,"author":{"gitId":"chewwh09"},"content":"4. StoreMando adds the item into the storage and displays the updated list.","lastModifiedDate":"2021-02-27"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"chewwh09"},"content":"* 3a. The command has invalid date-time format.","lastModifiedDate":"2021-02-27"},{"lineNumber":319,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":320,"author":{"gitId":"chewwh09"},"content":"    * 3a1. StoreMando shows an error message.","lastModifiedDate":"2021-02-27"},{"lineNumber":321,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":322,"author":{"gitId":"chewwh09"},"content":"    * 3a2. StoreMando prompt the user for a correct input.","lastModifiedDate":"2021-02-27"},{"lineNumber":323,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":324,"author":{"gitId":"chewwh09"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-02-27"},{"lineNumber":325,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":326,"author":{"gitId":"chewwh09"},"content":"**Use case: UC2 - Delete an item in a specific area**","lastModifiedDate":"2021-02-27"},{"lineNumber":327,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":328,"author":{"gitId":"chewwh09"},"content":"**MSS**","lastModifiedDate":"2021-02-27"},{"lineNumber":329,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":330,"author":{"gitId":"chewwh09"},"content":"1. User wants to \u003cu\u003e list all items in a specific location (UC3). \u003c/u\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":331,"author":{"gitId":"chewwh09"},"content":"2. StoreMando displays all items in the location.","lastModifiedDate":"2021-02-27"},{"lineNumber":332,"author":{"gitId":"chewwh09"},"content":"3. User deletes the item in the location.","lastModifiedDate":"2021-02-27"},{"lineNumber":333,"author":{"gitId":"chewwh09"},"content":"4. StoreMando displays the updated storage.","lastModifiedDate":"2021-02-27"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"chewwh09"},"content":"**Extensions**","lastModifiedDate":"2021-02-27"},{"lineNumber":338,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":339,"author":{"gitId":"chewwh09"},"content":"* 3a. The item details don\u0027t match any item in the storage.","lastModifiedDate":"2021-02-27"},{"lineNumber":340,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":341,"author":{"gitId":"chewwh09"},"content":"    * 3a1. StoreMando shows an error message.","lastModifiedDate":"2021-02-27"},{"lineNumber":342,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":343,"author":{"gitId":"chewwh09"},"content":"    * 3a2. StoreMando prompt the user for a correct input.","lastModifiedDate":"2021-02-27"},{"lineNumber":344,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":345,"author":{"gitId":"chewwh09"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-02-27"},{"lineNumber":346,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":347,"author":{"gitId":"chewwh09"},"content":"* 3b. The command has an out-of-range index.","lastModifiedDate":"2021-02-27"},{"lineNumber":348,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":349,"author":{"gitId":"chewwh09"},"content":"    * 3b1. StoreMando shows an error message.","lastModifiedDate":"2021-02-27"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"chewwh09"},"content":"    * 3b2. StoreMando prompt the user for a correct input.","lastModifiedDate":"2021-02-27"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"chewwh09"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-02-27"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"kumsssss"},"content":"**Use case: UC3 - List all items in a specific location**","lastModifiedDate":"2021-02-27"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"kumsssss"},"content":"1. User requests to display all items in that specific location.","lastModifiedDate":"2021-02-27"},{"lineNumber":360,"author":{"gitId":"JayChenYJ"},"content":"2. StoreMando displays all items in that specific location, can be 0 item.","lastModifiedDate":"2021-03-11"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"kumsssss"},"content":"**Use case: UC4 - Find an item**","lastModifiedDate":"2021-02-27"},{"lineNumber":365,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":366,"author":{"gitId":"kumsssss"},"content":"**MSS**","lastModifiedDate":"2021-02-27"},{"lineNumber":367,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":368,"author":{"gitId":"kumsssss"},"content":"1. User wants to find a particular item with the item’s name.","lastModifiedDate":"2021-02-27"},{"lineNumber":369,"author":{"gitId":"kumsssss"},"content":"2. StoreMando returns a list of all items whose name contains the given keyword.","lastModifiedDate":"2021-02-27"},{"lineNumber":370,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":371,"author":{"gitId":"kumsssss"},"content":"   Use case ends.","lastModifiedDate":"2021-02-27"},{"lineNumber":372,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":373,"author":{"gitId":"kumsssss"},"content":"**Use case: UC5 - Update an item**","lastModifiedDate":"2021-02-27"},{"lineNumber":374,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":375,"author":{"gitId":"kumsssss"},"content":"**MSS**","lastModifiedDate":"2021-02-27"},{"lineNumber":376,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":377,"author":{"gitId":"kumsssss"},"content":"1. User finds a \u003cu\u003especific item (UC4)\u003c/u\u003e that he wants to update.","lastModifiedDate":"2021-02-27"},{"lineNumber":378,"author":{"gitId":"kumsssss"},"content":"2. StoreMando returns a list of all items whose name contains the given keyword.","lastModifiedDate":"2021-02-27"},{"lineNumber":379,"author":{"gitId":"kumsssss"},"content":"3. User requests to update that particular item with the new values.","lastModifiedDate":"2021-02-27"},{"lineNumber":380,"author":{"gitId":"kumsssss"},"content":"4. StoreMando updates and stores the new data, then displays it.","lastModifiedDate":"2021-02-27"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-02-27"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":386,"author":{"gitId":"kumsssss"},"content":"* 3a. The item details do not match any item in the storage.","lastModifiedDate":"2021-02-27"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":388,"author":{"gitId":"kumsssss"},"content":"    * 3a1. StoreMando shows an error message.","lastModifiedDate":"2021-02-27"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"kumsssss"},"content":"    * 3a2. StoreMando prompt the user for a correct input.","lastModifiedDate":"2021-02-27"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"kumsssss"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-02-27"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"chewwh09"},"content":"**Use case: UC6 - Check for expiring items**","lastModifiedDate":"2021-03-15"},{"lineNumber":395,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":396,"author":{"gitId":"chewwh09"},"content":"**MSS**","lastModifiedDate":"2021-03-15"},{"lineNumber":397,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":398,"author":{"gitId":"chewwh09"},"content":"1. User wants to look for items that are expiring soon.","lastModifiedDate":"2021-03-15"},{"lineNumber":399,"author":{"gitId":"chewwh09"},"content":"2. StoreMando returns a list of expiring items.","lastModifiedDate":"2021-03-15"},{"lineNumber":400,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":401,"author":{"gitId":"chewwh09"},"content":"    Use case ends.","lastModifiedDate":"2021-03-15"},{"lineNumber":402,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":403,"author":{"gitId":"chewwh09"},"content":"**Use case: UC7 - List all items**","lastModifiedDate":"2021-03-16"},{"lineNumber":404,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":405,"author":{"gitId":"JayChenYJ"},"content":"**MSS**","lastModifiedDate":"2021-03-11"},{"lineNumber":406,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":407,"author":{"gitId":"JayChenYJ"},"content":"1. User requests to display all items.","lastModifiedDate":"2021-03-11"},{"lineNumber":408,"author":{"gitId":"JayChenYJ"},"content":"2. StoreMando displays all items, can be 0 item.","lastModifiedDate":"2021-03-11"},{"lineNumber":409,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":410,"author":{"gitId":"JayChenYJ"},"content":"   Use case ends.","lastModifiedDate":"2021-03-11"},{"lineNumber":411,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":412,"author":{"gitId":"chewwh09"},"content":"**Use case: UC8 - List all items with a specific tag**","lastModifiedDate":"2021-03-16"},{"lineNumber":413,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":414,"author":{"gitId":"JayChenYJ"},"content":"**MSS**","lastModifiedDate":"2021-03-11"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":416,"author":{"gitId":"JayChenYJ"},"content":"1. User requests to display all items with that specific tag.","lastModifiedDate":"2021-03-11"},{"lineNumber":417,"author":{"gitId":"JayChenYJ"},"content":"2. StoreMando displays all items with that specific tag, can be 0 item.","lastModifiedDate":"2021-03-11"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":419,"author":{"gitId":"JayChenYJ"},"content":"   Use case ends.","lastModifiedDate":"2021-03-11"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":421,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"kumsssss"},"content":"1. Should be able to hold up to 1000 line items in the house without any sluggish performance for typical usage.","lastModifiedDate":"2021-02-26"},{"lineNumber":426,"author":{"gitId":"kumsssss"},"content":"2. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2021-02-26"},{"lineNumber":427,"author":{"gitId":"JayChenYJ"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2021-03-08"},{"lineNumber":428,"author":{"gitId":"JayChenYJ"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-03-08"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":430,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"JayChenYJ"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2021-03-08"},{"lineNumber":454,"author":{"gitId":"JayChenYJ"},"content":"       optimum.","lastModifiedDate":"2021-03-08"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"JayChenYJ"},"content":"### Deleting an item","lastModifiedDate":"2021-03-02"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"JayChenYJ"},"content":"1. Deleting an item while all items are being shown","lastModifiedDate":"2021-03-02"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"github-amanda"},"content":"    1. Prerequisites: List all household items using the `list` command. Multiple items in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"JayChenYJ"},"content":"       Expected: First item is deleted from the list. Details of the deleted item shown in the status message. Timestamp","lastModifiedDate":"2021-03-15"},{"lineNumber":473,"author":{"gitId":"JayChenYJ"},"content":"       in the status bar is updated.","lastModifiedDate":"2021-03-15"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"kumsssss"},"content":"       Expected: No item is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-03-01"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kumsssss":27,"github-amanda":7,"JayChenYJ":110,"chewwh09":49,"-":296}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Documentation guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"* The `docs/` folder is used for the documentation.","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2020-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2020-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2020-06-07"}],"authorContributionMap":{"JayChenYJ":1,"-":24}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"   JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"   project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"   IDEA.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    1. Run the `seedu.location.Main` and try a few commands.","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"   style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"   ours.","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"   Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"   e.g., to report problems _as_ you write code.","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"   files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"   required.","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"   about [StoreMando’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"JayChenYJ":19,"-":38}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"   e.g. `seedu.location.commons.StringUtilTest`","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"   e.g. `seedu.location.storage.StorageManagerTest`","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how they are connected together.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"   e.g. `seedu.location.logic.LogicManagerTest`","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"JayChenYJ":4,"-":32}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"StoreMando is a **desktop app for managing inventory, optimized for use via a Command Line Interface** (CLI) while still","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, StoreMando can get your inventory","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"1. Download the latest `storemando.jar` from [here](https://github.com/AY2021S2-CS2103T-W10-2/tp) **(link not yet","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"   available)**.","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your StoreMando.","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"   contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"1. Type the command in the command box and press Enter to execute it.\u003cbr\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"  e.g. in `add n/ITEM_NAME`, `ITEM_NAME` is a parameter which can be used as `add n/Chocolate Milk`.","lastModifiedDate":"2021-02-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"  e.g. `n/ITEM_NAME [e/EXPIRY_DATE]` can be used as `n/Olive Oil e/2020-10-10` or as `n/Olive Oil`.","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/favourite`, `t/favourite t/drink` etc.","lastModifiedDate":"2021-02-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"  e.g. if the command specifies `n/ITEM_NAME l/LOCATION`, `l/LOCATION n/ITEM_NAME` is also acceptable.","lastModifiedDate":"2021-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"  e.g. if you specify `e/2020-10-10 e/2020-08-08`, only `e/2020-08-08` will be taken.","lastModifiedDate":"2021-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Md-Fazil"},"content":"### Adding an item: `add`","lastModifiedDate":"2021-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"Md-Fazil"},"content":"Adds an item to the inventory.","lastModifiedDate":"2021-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"Md-Fazil"},"content":"Format: `add n/ITEM_NAME l/LOCATION q/QUANTITY [e/EXPIRY_DATE] [t/TAG]…​`","lastModifiedDate":"2021-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"Md-Fazil"},"content":"An item can have any number of tags (including 0)","lastModifiedDate":"2021-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"kumsssss"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"kumsssss"},"content":"Expiry date of an item is optional.","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Md-Fazil"},"content":"* `add n/Chocolate Milk l/Kitchen Refrigerator q/2`","lastModifiedDate":"2021-02-25"},{"lineNumber":80,"author":{"gitId":"Md-Fazil"},"content":"* `add n/Sunshine Bread l/Bedroom q/10 e/2020-01-01 t/favourite`","lastModifiedDate":"2021-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Md-Fazil"},"content":"### Listing all items : `list`","lastModifiedDate":"2021-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Md-Fazil"},"content":"Shows a list of all items in the inventory.","lastModifiedDate":"2021-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"Format: `list` `list [l/LOCATION]` `list [t/TAG]`","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"* You can view all items in the inventory by typing \u0027list\u0027 without specifying location/tag.","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"chewwh09"},"content":"* The search is case-insensitive. e.g \u0027room\u0027 will match \u0027Room\u0027.","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"* The order of keywords for location search does not matter. e.g. \u0027Room Living\u0027 will match \u0027Living Room\u0027.","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"JayChenYJ"},"content":"* Tag keyword only can contain one single word.","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"chewwh09"},"content":"* Only full words will be matched e.g. \u0027Room\u0027 will not match \u0027Bedroom\u0027.","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"JayChenYJ"},"content":"* Only location/tag can be searched.","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"JayChenYJ"},"content":"* Location matching uses each word in the String to do \u0027AND\u0027 search e.g. \u0027Room\u0027 will match \u0027Living room\u0027 but \u0027Living","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"JayChenYJ"},"content":"  room 1\u0027 will not match \u0027Living room\u0027","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"Md-Fazil"},"content":"### Editing an item\u0027s details : `edit`","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"Md-Fazil"},"content":"Editing an existing item in the inventory.","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"Md-Fazil"},"content":"Format: `edit INDEX [n/ITEM_NAME] [l/LOCATION] [q/QUANTITY] [e/EXPIRY_DATE] [t/TAG]…​`","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"JayChenYJ"},"content":"* Edits the item at the specified `INDEX`. The index refers to the index number shown in the displayed item list. The","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"JayChenYJ"},"content":"  index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"Md-Fazil"},"content":"* Existing values will be updated to the input values **only if input values differ from the existing values**.","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":"* When editing tags, the existing tags of the item will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"JayChenYJ"},"content":"* You can remove all the items’ tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"JayChenYJ"},"content":"* `edit 1 q/10 e/2020-10-11` Edits the quantity of the 1st item to be `10` and expiry date of the 1st item to","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"JayChenYJ"},"content":"  be `2020-10-11`","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"Md-Fazil"},"content":"  if the existing quantity and expiry date of the 1st item are both not `10` and `2020-10-11` respectively.","lastModifiedDate":"2021-03-07"},{"lineNumber":115,"author":{"gitId":"Md-Fazil"},"content":"* `edit 2 n/Chocolate Bread t/` Edits the name of the 2nd item to be `Chocolate Bread` and clears all existing tags if","lastModifiedDate":"2021-03-07"},{"lineNumber":116,"author":{"gitId":"Md-Fazil"},"content":"  there are existing tags and/or existing name of the 2nd item is not `Chocolate Bread`.","lastModifiedDate":"2021-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"Md-Fazil"},"content":"### Locating items by name: `find`","lastModifiedDate":"2021-02-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"JayChenYJ"},"content":"Finds items whose names contain any of the given keywords, either in full or partially.","lastModifiedDate":"2021-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"JayChenYJ"},"content":"* The search is case-insensitive. e.g. `milk` will match `Milk`","lastModifiedDate":"2021-03-07"},{"lineNumber":123,"author":{"gitId":"JayChenYJ"},"content":"* The order of the keywords does not matter. e.g. `Bread Chocolate` will match `Chocolate Bread`","lastModifiedDate":"2021-03-07"},{"lineNumber":124,"author":{"gitId":"JayChenYJ"},"content":"* Only the item name is searched.","lastModifiedDate":"2021-03-07"},{"lineNumber":125,"author":{"gitId":"JayChenYJ"},"content":"* Items matching at least one keyword will be returned (i.e. `OR` search). e.g. `Chocolate Milk` will","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"JayChenYJ"},"content":"  return `Cadbury Chocolate`, `Almond Milk`","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":128,"author":{"gitId":"JayChenYJ"},"content":"Format 1: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":130,"author":{"gitId":"JayChenYJ"},"content":"* Only full words will be matched e.g. `Chocolate` will not match `Chocolates`","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"JayChenYJ"},"content":"Format 2: `find */KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":134,"author":{"gitId":"JayChenYJ"},"content":"* Partial words will be matched e.g. `Choco` will match `Chocolates`","lastModifiedDate":"2021-03-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"Md-Fazil"},"content":"* `find Chocolate` returns `chocolate` and `Chocolate Milk`","lastModifiedDate":"2021-02-25"},{"lineNumber":139,"author":{"gitId":"JayChenYJ"},"content":"* `find potato chip` returns `Potato Biscuit` and `chocolate chip`","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"JayChenYJ"},"content":"* `find */Burger` returns `CheeseBurger` and `fishburger`","lastModifiedDate":"2021-03-12"},{"lineNumber":141,"author":{"gitId":"JayChenYJ"},"content":"* `find */cheese egg` returns `MacAndCheese` and `eggs`","lastModifiedDate":"2021-03-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"Md-Fazil"},"content":"### Deleting an item : `delete`","lastModifiedDate":"2021-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"Md-Fazil"},"content":"Deletes the specified item from the inventory.","lastModifiedDate":"2021-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"Md-Fazil"},"content":"* Deletes the item at the specified `INDEX`.","lastModifiedDate":"2021-02-25"},{"lineNumber":150,"author":{"gitId":"Md-Fazil"},"content":"* The index refers to the index number shown in the displayed item list.","lastModifiedDate":"2021-02-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"github-amanda"},"content":"* `list` followed by `delete 2` deletes the second item in the entire inventory.","lastModifiedDate":"2021-03-08"},{"lineNumber":156,"author":{"gitId":"github-amanda"},"content":"* `find Chocolate` followed by `delete 1` deletes the first item in the result of the `find` command.","lastModifiedDate":"2021-03-08"},{"lineNumber":157,"author":{"gitId":"github-amanda"},"content":"* `list Room 2` followed by `delete 3` deletes the third item in the recorded list of items in Room 2.","lastModifiedDate":"2021-03-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"chewwh09"},"content":"### Reminding user of expiring items: `reminder`","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"chewwh09"},"content":"Shows items that are expiring soon.","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"chewwh09"},"content":"Format 1: `reminder numOfDays`","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"chewwh09"},"content":"* `reminder 7` will give you a list containing all items that are expiring within the next 7 days.","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"chewwh09"},"content":"*  Items without expiry date will not be shown.","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"chewwh09"},"content":"*  The numOfDays **must be a positive integer** 1, 2, 3, …​ ","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"chewwh09"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"chewwh09"},"content":"* Given today is 2020-03-10, and the inventory has 2 items: chocolate with expiry date of 2020-03-16 and banana with expiry date of 2020-03-19.","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"chewwh09"},"content":"    * `reminder 7` returns chocolate with expiry date of 2020-03-16 only.","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"chewwh09"},"content":"    * `reminder 10` returns both chocolate with expiry date of 2020-03-16 and banana with expiry date of 2020-03-19.","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"chewwh09"},"content":"    ","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"chewwh09"},"content":"Format 2: `reminder numOfDays [TIME_UNIT]`","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"chewwh09"},"content":"* `reminder 2 weeks` will give you a list containing all items that are expiring within the next 2 weeks.","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"chewwh09"},"content":"*  Items without expiry date will not be shown.","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"chewwh09"},"content":"*  The numOfDays **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"chewwh09"},"content":"*  The time unit **must be days or weeks**","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"chewwh09"},"content":"Examples:","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"chewwh09"},"content":"* Given today is 2020-03-10, and the inventory has 2 items: chocolate with expiry date of 2020-03-23 and banana with expiry date of 2020-03-26.","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"chewwh09"},"content":"    * `reminder 2 weeks` returns chocolate with expiry date of 2020-03-23 only.","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"chewwh09"},"content":"    * `reminder 3 weeks` returns both chocolate with expiry date of 2020-03-23 and banana with expiry date of 2020-03-26.","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"chewwh09"},"content":"  ","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"kumsssss"},"content":"### sorting the inventory: `sort`","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"kumsssss"},"content":"Sorts the items from the inventory based on quantity or expiry date.","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"kumsssss"},"content":"Format 1: `sort quantity`","lastModifiedDate":"2021-03-13"},{"lineNumber":191,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"kumsssss"},"content":"* `sort quantity` display the items in the inventory in ascending order of quantity","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":194,"author":{"gitId":"kumsssss"},"content":"Format 2: `sort expiryDate`","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"kumsssss"},"content":"* `sort expiryDate` displays items in the inventory from the earliest expiry date to the latest.","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"JayChenYJ"},"content":"* Items without expiry date will be pushed to the back of the sorted list.","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"kumsssss"},"content":"Examples:","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"kumsssss"},"content":"* `find Chocolate` followed by `sort quantity` sorts the items from the result of the `find` command.","lastModifiedDate":"2021-03-13"},{"lineNumber":202,"author":{"gitId":"kumsssss"},"content":"* `list Room 2` followed by `sort expiryDate` sorts the recorded list of items in Room 2 by expiry date.","lastModifiedDate":"2021-03-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"JayChenYJ"},"content":"Clears all entries from the location book.","lastModifiedDate":"2021-03-01"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"JayChenYJ"},"content":"StoreMando data are saved in the hard disk automatically after any command that changes the data. There is no need to","lastModifiedDate":"2021-03-15"},{"lineNumber":219,"author":{"gitId":"JayChenYJ"},"content":"save manually.","lastModifiedDate":"2021-03-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":223,"author":{"gitId":"JayChenYJ"},"content":"StoreMando data are saved as a JSON file `[JAR file location]/data/storemando.json`. Advanced users are welcome to","lastModifiedDate":"2021-03-15"},{"lineNumber":224,"author":{"gitId":"JayChenYJ"},"content":"update data directly by editing that data file.","lastModifiedDate":"2021-03-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":227,"author":{"gitId":"Md-Fazil"},"content":"If your changes to the data file makes its format invalid, StoreMando will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-25"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"Md-Fazil"},"content":"### Sorting items `[coming in v2.0]`","lastModifiedDate":"2021-02-25"},{"lineNumber":235,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":236,"author":{"gitId":"Md-Fazil"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-25"},{"lineNumber":237,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":238,"author":{"gitId":"Md-Fazil"},"content":"### Filtering by item category`[coming in v2.0]`","lastModifiedDate":"2021-02-25"},{"lineNumber":239,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":240,"author":{"gitId":"Md-Fazil"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-25"},{"lineNumber":241,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":242,"author":{"gitId":"Md-Fazil"},"content":"### Viewing reminders `[coming in v2.0]`","lastModifiedDate":"2021-02-25"},{"lineNumber":243,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":244,"author":{"gitId":"Md-Fazil"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-25"},{"lineNumber":245,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":246,"author":{"gitId":"Md-Fazil"},"content":"### Viewing help`[coming in v2.0]`","lastModifiedDate":"2021-02-25"},{"lineNumber":247,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":248,"author":{"gitId":"JayChenYJ"},"content":"Opens user guide of StoreMando on a browser or displays the URL of user guide on help window.","lastModifiedDate":"2021-03-15"},{"lineNumber":249,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":250,"author":{"gitId":"Md-Fazil"},"content":"Format: `help`","lastModifiedDate":"2021-03-13"},{"lineNumber":251,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":252,"author":{"gitId":"JayChenYJ"},"content":"* Opens user guide on a browser only if there is a supporting browser **and** internet connection.","lastModifiedDate":"2021-03-15"},{"lineNumber":253,"author":{"gitId":"Md-Fazil"},"content":"* Otherwise, displays a help window containing the URL of StoreMando\u0027s user guide.","lastModifiedDate":"2021-03-13"},{"lineNumber":254,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"JayChenYJ"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2021-03-15"},{"lineNumber":261,"author":{"gitId":"JayChenYJ"},"content":"the data of your previous StoreMando home folder.","lastModifiedDate":"2021-03-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"JayChenYJ"},"content":"**Q**: What if I want to have more features implemented in the product?","lastModifiedDate":"2021-02-25"},{"lineNumber":264,"author":{"gitId":"JayChenYJ"},"content":"**A**: Feel free to contact us at e0406389@u.nus.edu!","lastModifiedDate":"2021-02-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":266,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"Md-Fazil"},"content":"**Add** | `add n/ITEM_NAME l/LOCATION q/QUANTITY [e/EXPIRY_DATE] [t/TAG]…​` \u003cbr\u003e e.g., `add n/koko krunch l/fridge q/1 e/2021-05-27 t/favourite`","lastModifiedDate":"2021-03-07"},{"lineNumber":273,"author":{"gitId":"JayChenYJ"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 2`","lastModifiedDate":"2021-02-25"},{"lineNumber":274,"author":{"gitId":"Md-Fazil"},"content":"**Edit** | `edit INDEX [n/ITEM_NAME] [e/EXPIRY_DATE] [l/LOCATION] [q/QUANTITY] [t/TAG]…​`\u003cbr\u003e e.g.,`update 1 l/freezer q/2 `","lastModifiedDate":"2021-03-07"},{"lineNumber":275,"author":{"gitId":"JayChenYJ"},"content":"**List** | `list` `list [l/LOCATION]` `list [t/TAG]`\u003cbr\u003e e.g., `list` `list l/fridge` `list t/favourite`","lastModifiedDate":"2021-03-11"},{"lineNumber":276,"author":{"gitId":"JayChenYJ"},"content":"**Find** | `find [*/]KEYWORD [MORE KEYWORDS]`\u003cbr\u003e e.g, `find koko krunch` `find */choco`","lastModifiedDate":"2021-03-12"},{"lineNumber":277,"author":{"gitId":"chewwh09"},"content":"**Reminder** | `reminder numOfDays [TIMEUNIT]`\u003cbr\u003e e.g., `reminder 7` `reminder 2 weeks`","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"kumsssss":18,"github-amanda":3,"JayChenYJ":59,"Md-Fazil":47,"chewwh09":30,"-":120}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(storeMando)","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"JayChenYJ":1,"-":37}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"kumsssss"},"content":"ecp -\u003e ec ++: index, editItemDescriptor","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"kumsssss":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"title: StoreMando","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W10-2/tp/actions)","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W10-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-W10-2/tp)","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"**StoreMando is a **desktop app for managing inventory, optimized for use via a Command Line Interface** (CLI) while","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"still having the benefits of a Graphical User Interface (GUI). If you can type fast, StoreMando can get your inventory","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"* If you are interested in using StoreMando, head over to the [_Quick Start_ section of the **User","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"  Guide**](UserGuide.md#quick-start).","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"* If you are interested about developing StoreMando, the [**Developer Guide**](DeveloperGuide.md) is a good place to","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"  start.","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson),","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"  [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"JayChenYJ":12,"-":11}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"AddressBook - Level 3 is a desktop location book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JayChenYJ":1,"-":45}},{"path":"src/main/java/seedu/storemando/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.util.FileUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"JayChenYJ":3,"-":61}},{"path":"src/main/java/seedu/storemando/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-02-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-02-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"JayChenYJ":1,"-":24}},{"path":"src/main/java/seedu/storemando/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.Config;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.Version;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.util.ConfigUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.util.StringUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.Logic;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.LogicManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ModelManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.storage.JsonStoreMandoStorage;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.storage.Storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.storage.StorageManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.storage.StoreMandoStorage;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.ui.Ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.ui.UiManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2017-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing StoreMando ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"        StoreMandoStorage storeMandoStorage \u003d new JsonStoreMandoStorage(userPrefs.getStoreMandoFilePath());","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"        storage \u003d new StorageManager(storeMandoStorage, userPrefsStorage);","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s storemando and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"     * The data from the sample storemando will be used instead if {@code storage}\u0027s storemando is not found,","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"     * or an empty storemando will be used instead if errors occur when reading {@code storage}\u0027s storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"        Optional\u003cReadOnlyStoreMando\u003e storeMandoOptional;","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"        ReadOnlyStoreMando initialData;","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"            storeMandoOptional \u003d storage.readStoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"            if (!storeMandoOptional.isPresent()) {","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":"                logger.info(\"Data file not found. Will be starting with a sample StoreMando\");","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"            initialData \u003d storeMandoOptional.orElseGet(SampleDataUtil::getSampleStoreMando);","lastModifiedDate":"2021-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty StoreMando\");","lastModifiedDate":"2021-03-06"},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":"            initialData \u003d new StoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"JayChenYJ"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty StoreMando\");","lastModifiedDate":"2021-03-06"},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"            initialData \u003d new StoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"JayChenYJ"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty StoreMando\");","lastModifiedDate":"2021-03-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"JayChenYJ"},"content":"        logger.info(\"Starting StoreMando \" + MainApp.VERSION);","lastModifiedDate":"2021-03-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"JayChenYJ"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping StoreMando ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":43,"-":140}},{"path":"src/main/java/seedu/storemando/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":1,"-":62}},{"path":"src/main/java/seedu/storemando/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2021-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":1,"-":78}},{"path":"src/main/java/seedu/storemando/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    private static final String LOG_FILE \u003d \"storemando.log\";","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":2,"-":111}},{"path":"src/main/java/seedu/storemando/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"kumsssss"},"content":"    public static final String MESSAGE_INVALID_ITEM_DISPLAYED_INDEX \u003d \"The item index provided is invalid\";","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    public static final String MESSAGE_MORE_THAN_ONE_ITEM_LISTED_OVERVIEW \u003d \"%1$d items listed!\";","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    public static final String MESSAGE_LESS_THAN_TWO_ITEMS_LISTED_OVERVIEW \u003d \"%1$d item listed!\";","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"    public static final String MESSAGE_NUMBER_OF_ITEMS_EXPIRING \u003d \"%1$d item(s) are expiring!\";","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kumsssss":1,"JayChenYJ":3,"chewwh09":1,"-":9}},{"path":"src/main/java/seedu/storemando/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"            versionMatcher.group(4) !\u003d null);","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":2,"-":115}},{"path":"src/main/java/seedu/storemando/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.core.index;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    private final int zeroBasedIndex;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JayChenYJ":2,"-":52}},{"path":"src/main/java/seedu/storemando/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.exceptions;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":1,"-":10}},{"path":"src/main/java/seedu/storemando/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.exceptions;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause   of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JayChenYJ":1,"-":20}},{"path":"src/main/java/seedu/storemando/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.MainApp;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JayChenYJ":2,"-":40}},{"path":"src/main/java/seedu/storemando/commons/util/BrowserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Md-Fazil"},"content":"package seedu.storemando.commons.util;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"import java.net.URI;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"import java.net.URL;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"import java.net.URLConnection;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":" * A container for Browser specific utility functions","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"public class BrowserUtil {","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w10-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"     * Checks if the user has a browser installed.","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"     * @return true if the user has a browser installed, false otherwise.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"    public static boolean isBrowserAccessible() {","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"        return Desktop.isDesktopSupported() \u0026\u0026 Desktop.getDesktop().isSupported(Desktop.Action.BROWSE);","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"     * Checks if the user is connected to the internet.","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"     * @return true if the user is connected to the internet, false otherwise.","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"    public static boolean isConnectedToInternet() {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"            URL url \u003d new URL(USERGUIDE_URL);","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"            URLConnection connection \u003d url.openConnection();","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"            connection.connect();","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"     * Opens the specified url in user\u0027s browser.","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"Md-Fazil"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"    public static void displayUserGuideWebsite() {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"            Desktop.getDesktop().browse(new URI(USERGUIDE_URL));","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"        } catch (IOException | URISyntaxException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"            //This exceptions will only be raised when the supplied url is invalid.","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"     * Checks if the desktop is supported and there is internet connection.","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Md-Fazil"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"    public static boolean canOpenBrowser() {","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Md-Fazil"},"content":"        return isBrowserAccessible() \u0026\u0026 isConnectedToInternet();","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"Md-Fazil"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"JayChenYJ":4,"Md-Fazil":58}},{"path":"src/main/java/seedu/storemando/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2021-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JayChenYJ":1,"-":36}},{"path":"src/main/java/seedu/storemando/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.Config;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JayChenYJ":3,"-":20}},{"path":"src/main/java/seedu/storemando/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":1,"-":84}},{"path":"src/main/java/seedu/storemando/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    private static final ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":4,"-":142}},{"path":"src/main/java/seedu/storemando/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"        String[] wordsInPreppedSentence \u003d sentence.split(\"\\\\s+\");","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"        return Arrays.stream(wordsInPreppedSentence).anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"     * Ignores case, a full word match is also not required.","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"    public static boolean containsPartialWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"        requireNonNull(word);","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"        String[] wordsInPreppedSentence \u003d sentence.split(\"\\\\s+\");","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"            .anyMatch(currentWord -\u003e currentWord.toLowerCase().contains(preppedWord.toLowerCase()));","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":26,"-":68}},{"path":"src/main/java/seedu/storemando/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.CommandResult;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"     * Returns the StoreMando.","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"     * @see seedu.storemando.model.Model#getStoreMando()","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    ReadOnlyStoreMando getStoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-15"},{"lineNumber":35,"author":{"gitId":"kumsssss"},"content":"     * Returns an unmodifiable view of the filtered list of items","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-15"},{"lineNumber":37,"author":{"gitId":"kumsssss"},"content":"    ObservableList\u003cItem\u003e getFilteredItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"     * Returns the user prefs\u0027 storemando file path.","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"    Path getStoreMandoFilePath();","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kumsssss":2,"JayChenYJ":12,"-":39}},{"path":"src/main/java/seedu/storemando/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.Command;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.CommandResult;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.StoreMandoParser;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.storage.Storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    private final StoreMandoParser storeMandoParser;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"        storeMandoParser \u003d new StoreMandoParser();","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"        Command command \u003d storeMandoParser.parseCommand(commandText);","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"            storage.saveStoreMando(model.getStoreMando());","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"    public ReadOnlyStoreMando getStoreMando() {","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"        return model.getStoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"kumsssss"},"content":"    public ObservableList\u003cItem\u003e getFilteredItemList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"kumsssss"},"content":"        return model.getFilteredItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"    public Path getStoreMandoFilePath() {","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"        return model.getStoreMandoFilePath();","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kumsssss":2,"JayChenYJ":20,"-":59}},{"path":"src/main/java/seedu/storemando/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_EXPIRYDATE;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":" * Adds a item to the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an item to the storemando. \"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"        + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2021-03-04"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"        + PREFIX_QUANTITY + \"QUANTITY \"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"kumsssss"},"content":"        + \"[\" + PREFIX_EXPIRYDATE + \"EXPIRYDATE] \"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"        + PREFIX_NAME + \"Banana \"","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"        + PREFIX_QUANTITY + \"2 \"","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"        + PREFIX_EXPIRYDATE + \"2023-10-10 \"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"        + PREFIX_LOCATION + \"Kitchen \"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"        + PREFIX_TAG + \"favourite \"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"        + PREFIX_TAG + \"expiring\";","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"kumsssss"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New item added: %1$s\";","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"    public static final String MESSAGE_DUPLICATE_ITEM \u003d \"This item already exists in the storemando\";","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"    public static final String MESSAGE_ITEM_EXPIRED_WARNING \u003d \"\\nWarning: Item has already expired!\";","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"    private final Item itemToAdd;","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"kumsssss"},"content":"     * Creates an AddCommand to add the specified {@code Item}","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"kumsssss"},"content":"    public AddCommand(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"kumsssss"},"content":"        requireNonNull(item);","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"        itemToAdd \u003d item;","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"        if (model.hasItem(itemToAdd)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"kumsssss"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"        model.addItem(itemToAdd);","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"Md-Fazil"},"content":"        String feedback \u003d String.format(MESSAGE_SUCCESS, itemToAdd);","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"Md-Fazil"},"content":"        if (itemToAdd.isExpired()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Md-Fazil"},"content":"            feedback +\u003d MESSAGE_ITEM_EXPIRED_WARNING;","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"Md-Fazil"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"Md-Fazil"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"Md-Fazil"},"content":"            \u0026\u0026 itemToAdd.equals(((AddCommand) other).itemToAdd));","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kumsssss":7,"JayChenYJ":11,"Md-Fazil":20,"-":35}},{"path":"src/main/java/seedu/storemando/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":" * Clears the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"github-amanda"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Inventory has been cleared!\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"        model.setStoreMando(new StoreMando());","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"github-amanda":1,"JayChenYJ":5,"-":17}},{"path":"src/main/java/seedu/storemando/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JayChenYJ":3,"-":17}},{"path":"src/main/java/seedu/storemando/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2021-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The application should exit.","lastModifiedDate":"2021-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JayChenYJ":1,"-":74}},{"path":"src/main/java/seedu/storemando/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.Messages;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.index.Index;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":" * Deletes a item identified using it\u0027s displayed index from the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"kumsssss"},"content":"        + \": Deletes the item identified by the index number used in the displayed item list.\\n\"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"    public static final String MESSAGE_DELETE_ITEM_SUCCESS \u003d \"Deleted Item: %1$s\";","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"kumsssss"},"content":"        List\u003cItem\u003e lastShownList \u003d model.getFilteredItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"kumsssss"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"kumsssss"},"content":"        Item itemToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"kumsssss"},"content":"        model.deleteItem(itemToDelete);","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ITEM_SUCCESS, itemToDelete));","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kumsssss":7,"JayChenYJ":7,"-":39}},{"path":"src/main/java/seedu/storemando/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_EXPIRYDATE;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.model.Model.PREDICATE_SHOW_ALL_ITEMS;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.Messages;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.index.Index;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ExpiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemName;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Location;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Quantity;","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":" * Edits the details of an existing item in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"kumsssss"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the item identified \"","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"kumsssss"},"content":"        + \"by the index number used in the displayed item list. \"","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"        + \"Existing values will be overwritten by the input values as long as input values are \"","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"        + \"not all the same as existing values.\\n\"","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"        + \"[\" + PREFIX_NAME + \"ITEM NAME] \"","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"github-amanda"},"content":"        + \"[\" + PREFIX_QUANTITY + \"QUANTITY] \"","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"        + \"[\" + PREFIX_EXPIRYDATE + \"EXPIRYDATE] \"","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"        + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"        + PREFIX_QUANTITY + \"5 \"","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"        + PREFIX_EXPIRYDATE + \"2018-10-10\";","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"kumsssss"},"content":"    public static final String MESSAGE_EDIT_ITEM_SUCCESS \u003d \"Edited Item: %1$s\";","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"    public static final String MESSAGE_DUPLICATE_ITEM \u003d \"This item already exists in storemando.\";","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d \"Item not edited! Specified change in item details same as \"","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"        + \"original.\";","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"    public static final String MESSAGE_ITEM_EXPIRED_WARNING \u003d \"\\nWarning: Item has already expired!\";","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"kumsssss"},"content":"    private final EditItemDescriptor editItemDescriptor;","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"kumsssss"},"content":"     * @param index              of the item in the filtered item list to edit","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"kumsssss"},"content":"     * @param editItemDescriptor details to edit the item with","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"kumsssss"},"content":"    public EditCommand(Index index, EditItemDescriptor editItemDescriptor) {","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"kumsssss"},"content":"        requireNonNull(editItemDescriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"kumsssss"},"content":"        this.editItemDescriptor \u003d new EditItemDescriptor(editItemDescriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"kumsssss"},"content":"        List\u003cItem\u003e lastShownList \u003d model.getFilteredItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"kumsssss"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"kumsssss"},"content":"        Item itemToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"kumsssss"},"content":"        Item editedItem \u003d createEditedItem(itemToEdit, editItemDescriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"kumsssss"},"content":"        if (!itemToEdit.isSameItem(editedItem) \u0026\u0026 model.hasItem(editedItem)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"kumsssss"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"Md-Fazil"},"content":"        if (itemToEdit.equals(editedItem)) { //if edited item has the same fields as original item","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"Md-Fazil"},"content":"            throw new CommandException(MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"Md-Fazil"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"kumsssss"},"content":"        model.setItem(itemToEdit, editedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"kumsssss"},"content":"        model.updateFilteredItemList(PREDICATE_SHOW_ALL_ITEMS);","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"Md-Fazil"},"content":"        String feedback \u003d String.format(MESSAGE_EDIT_ITEM_SUCCESS, editedItem);","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"Md-Fazil"},"content":"        if (editedItem.isExpired()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"Md-Fazil"},"content":"            feedback +\u003d MESSAGE_ITEM_EXPIRED_WARNING;","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"Md-Fazil"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"Md-Fazil"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"kumsssss"},"content":"     * Creates and returns a {@code Item} with the details of {@code itemToEdit}","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"kumsssss"},"content":"     * edited with {@code editItemDescriptor}.","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"kumsssss"},"content":"    private static Item createEditedItem(Item itemToEdit, EditItemDescriptor editItemDescriptor) {","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"kumsssss"},"content":"        assert itemToEdit !\u003d null;","lastModifiedDate":"2021-03-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"chewwh09"},"content":"        ItemName updatedName \u003d editItemDescriptor.getItemName().orElse(itemToEdit.getItemName());","lastModifiedDate":"2021-03-05"},{"lineNumber":109,"author":{"gitId":"github-amanda"},"content":"        Quantity updatedQuantity \u003d editItemDescriptor.getQuantity().orElse(itemToEdit.getQuantity());","lastModifiedDate":"2021-03-05"},{"lineNumber":110,"author":{"gitId":"Md-Fazil"},"content":"        ExpiryDate updatedExpiryDate \u003d editItemDescriptor.getExpiryDate().orElse(itemToEdit.getExpiryDate());","lastModifiedDate":"2021-03-04"},{"lineNumber":111,"author":{"gitId":"JayChenYJ"},"content":"        Location updatedLocation \u003d editItemDescriptor.getLocation().orElse(itemToEdit.getLocation());","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"kumsssss"},"content":"        Set\u003cTag\u003e updatedTags \u003d editItemDescriptor.getTags().orElse(itemToEdit.getTags());","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"github-amanda"},"content":"        return new Item(updatedName, updatedQuantity, updatedExpiryDate, updatedLocation, updatedTags);","lastModifiedDate":"2021-03-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"kumsssss"},"content":"            \u0026\u0026 editItemDescriptor.equals(e.editItemDescriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"kumsssss"},"content":"     * Stores the details to edit the item with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-01"},{"lineNumber":137,"author":{"gitId":"kumsssss"},"content":"     * corresponding field value of the item.","lastModifiedDate":"2021-03-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"kumsssss"},"content":"    public static class EditItemDescriptor {","lastModifiedDate":"2021-03-01"},{"lineNumber":140,"author":{"gitId":"chewwh09"},"content":"        private ItemName name;","lastModifiedDate":"2021-03-01"},{"lineNumber":141,"author":{"gitId":"github-amanda"},"content":"        private Quantity quantity;","lastModifiedDate":"2021-03-01"},{"lineNumber":142,"author":{"gitId":"Md-Fazil"},"content":"        private ExpiryDate expiryDate;","lastModifiedDate":"2021-03-01"},{"lineNumber":143,"author":{"gitId":"JayChenYJ"},"content":"        private Location location;","lastModifiedDate":"2021-03-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"kumsssss"},"content":"        public EditItemDescriptor() {","lastModifiedDate":"2021-03-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-02-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"kumsssss"},"content":"        public EditItemDescriptor(EditItemDescriptor toCopy) {","lastModifiedDate":"2021-03-01"},{"lineNumber":154,"author":{"gitId":"chewwh09"},"content":"            setItemName(toCopy.name);","lastModifiedDate":"2021-03-01"},{"lineNumber":155,"author":{"gitId":"github-amanda"},"content":"            setQuantity(toCopy.quantity);","lastModifiedDate":"2021-03-01"},{"lineNumber":156,"author":{"gitId":"Md-Fazil"},"content":"            setExpiryDate(toCopy.expiryDate);","lastModifiedDate":"2021-03-01"},{"lineNumber":157,"author":{"gitId":"JayChenYJ"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2021-03-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"github-amanda"},"content":"            return CollectionUtil.isAnyNonNull(name, quantity, expiryDate, location, tags);","lastModifiedDate":"2021-03-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"chewwh09"},"content":"        public void setItemName(ItemName name) {","lastModifiedDate":"2021-03-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"chewwh09"},"content":"        public Optional\u003cItemName\u003e getItemName() {","lastModifiedDate":"2021-03-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"github-amanda"},"content":"        public void setQuantity(Quantity quantity) {","lastModifiedDate":"2021-03-01"},{"lineNumber":177,"author":{"gitId":"github-amanda"},"content":"            this.quantity \u003d quantity;","lastModifiedDate":"2021-03-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"github-amanda"},"content":"        public Optional\u003cQuantity\u003e getQuantity() {","lastModifiedDate":"2021-03-05"},{"lineNumber":181,"author":{"gitId":"github-amanda"},"content":"            return Optional.ofNullable(quantity);","lastModifiedDate":"2021-03-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"Md-Fazil"},"content":"        public void setExpiryDate(ExpiryDate expiryDate) {","lastModifiedDate":"2021-03-01"},{"lineNumber":185,"author":{"gitId":"Md-Fazil"},"content":"            this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-03-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"Md-Fazil"},"content":"        public Optional\u003cExpiryDate\u003e getExpiryDate() {","lastModifiedDate":"2021-03-01"},{"lineNumber":189,"author":{"gitId":"Md-Fazil"},"content":"            return Optional.ofNullable(expiryDate);","lastModifiedDate":"2021-03-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"JayChenYJ"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2021-03-01"},{"lineNumber":193,"author":{"gitId":"JayChenYJ"},"content":"            this.location \u003d location;","lastModifiedDate":"2021-03-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"JayChenYJ"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2021-03-01"},{"lineNumber":197,"author":{"gitId":"JayChenYJ"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2021-03-01"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"kumsssss"},"content":"            if (!(other instanceof EditItemDescriptor)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"kumsssss"},"content":"            EditItemDescriptor e \u003d (EditItemDescriptor) other;","lastModifiedDate":"2021-03-01"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"chewwh09"},"content":"            return getItemName().equals(e.getItemName())","lastModifiedDate":"2021-03-01"},{"lineNumber":233,"author":{"gitId":"github-amanda"},"content":"                \u0026\u0026 getQuantity().equals(e.getQuantity())","lastModifiedDate":"2021-03-01"},{"lineNumber":234,"author":{"gitId":"Md-Fazil"},"content":"                \u0026\u0026 getExpiryDate().equals(e.getExpiryDate())","lastModifiedDate":"2021-03-01"},{"lineNumber":235,"author":{"gitId":"JayChenYJ"},"content":"                \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2021-03-01"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"kumsssss":30,"github-amanda":11,"JayChenYJ":28,"Md-Fazil":28,"chewwh09":7,"-":135}},{"path":"src/main/java/seedu/storemando/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Location Book as requested ...\";","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"JayChenYJ":3,"-":16}},{"path":"src/main/java/seedu/storemando/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.Messages;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemNameContainsPartialKeywordsPredicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":" * Finds and lists all items in storemando whose item name contains any of the argument keywords.","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all items whose names contain any of \"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"        + \"Parameters: [*/]KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"        + \"Examples:\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"github-amanda"},"content":"        + \"1. \" + COMMAND_WORD + \" potato chip \\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"github-amanda"},"content":"        + \"2. \" + COMMAND_WORD + \" */cheese egg\";","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    private final Predicate\u003cItem\u003e predicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    public FindCommand(ItemNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"    public FindCommand(ItemNameContainsPartialKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"kumsssss"},"content":"        model.updateFilteredItemList(predicate);","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"        int numberOfItems \u003d model.getFilteredItemList().size();","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"        if (numberOfItems \u003e 1) {","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"                String.format(Messages.MESSAGE_MORE_THAN_ONE_ITEM_LISTED_OVERVIEW, numberOfItems));","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        } else {","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"            return new CommandResult(","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"                String.format(Messages.MESSAGE_LESS_THAN_TWO_ITEMS_LISTED_OVERVIEW, numberOfItems));","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"github-amanda":2,"kumsssss":1,"JayChenYJ":25,"-":30}},{"path":"src/main/java/seedu/storemando/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened user guide information.\";","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JayChenYJ":2,"Md-Fazil":1,"-":18}},{"path":"src/main/java/seedu/storemando/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import static seedu.storemando.model.Model.PREDICATE_SHOW_ALL_ITEMS;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.model.item.LocationContainsKeywordsPredicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":" * Lists all items in the storemando to the user.","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all items\";","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": List items in the storemando. \"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"        + \"Parameters: \"","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"        + \"[\" + PREFIX_LOCATION + \"LOCATION] \" + \"/ [\" + PREFIX_TAG + \"TAG]\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"        + \"Example:\\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"        + \"1. \" + COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"        + \"2. \" + COMMAND_WORD + \" l/bedroom\\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        + \"3. \" + COMMAND_WORD + \" t/favourite\\n\";","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"    private final Predicate\u003cItem\u003e predicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"    public ListCommand(LocationContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"    public ListCommand(TagContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"    public ListCommand() {","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"        this.predicate \u003d PREDICATE_SHOW_ALL_ITEMS;","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":"        model.updateFilteredItemList(predicate);","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"chewwh09"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"chewwh09"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"chewwh09"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"chewwh09"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"chewwh09"},"content":"            || (other instanceof ListCommand // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"chewwh09"},"content":"            \u0026\u0026 predicate.equals(((ListCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JayChenYJ":18,"chewwh09":25,"-":17}},{"path":"src/main/java/seedu/storemando/logic/commands/ReminderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.commons.core.Messages;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ItemExpiringPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":" * Finds and lists all items in storemando whose item\u0027s expiry date is within a certain days from today.","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"public class ReminderCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"    public static final String COMMAND_WORD \u003d \"reminder\";","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all items whose expiry date is within \"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"        + \"the user-specified number of days from the current date and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"        + \"Parameters: numOfDays (must be a positive integer) [timeUnit] (must either be days or weeks)\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"        + \"Example: \\\"\" + COMMAND_WORD + \" 3\\\" or \\\"\" + COMMAND_WORD + \" 2 weeks\\\"\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"    private final ItemExpiringPredicate predicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"    public ReminderCommand(ItemExpiringPredicate predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"        model.updateFilteredItemList(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"            String.format(Messages.MESSAGE_NUMBER_OF_ITEMS_EXPIRING, model.getFilteredItemList().size()));","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"            || (other instanceof ReminderCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"            \u0026\u0026 predicate.equals(((ReminderCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"JayChenYJ":1,"chewwh09":40}},{"path":"src/main/java/seedu/storemando/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kumsssss"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"kumsssss"},"content":"public abstract class SortCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"kumsssss"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"kumsssss"},"content":"    public static final String MESSAGE_USAGE \u003d \"sorts the items in StoreMando by quantity or expiry date.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"kumsssss"},"content":"        + \"Parameter: quantity OR expiryDate\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"kumsssss"},"content":"        + \"Examples: \\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"kumsssss"},"content":"        + \"1. \" + COMMAND_WORD + \" quantity\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"kumsssss"},"content":"        + \"2. \" + COMMAND_WORD + \" expiryDate\";","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"kumsssss"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"sorted all items\";","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"kumsssss"},"content":"    public static final String MESSAGE_NO_ITEMS_TO_SORT \u003d \"Empty list cannot be sorted\";","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"kumsssss"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"kumsssss"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"kumsssss"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kumsssss":24}},{"path":"src/main/java/seedu/storemando/logic/commands/SortExpiryDateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kumsssss"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kumsssss"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kumsssss"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.model.item.ItemComparatorByExpiryDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"kumsssss"},"content":"public class SortExpiryDateCommand extends SortCommand {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"kumsssss"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"kumsssss"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"        List\u003cItem\u003e lastShownList \u003d model.getFilteredItemList();","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"kumsssss"},"content":"            throw new CommandException(MESSAGE_NO_ITEMS_TO_SORT);","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"kumsssss"},"content":"        ItemComparatorByExpiryDate comparator \u003d new ItemComparatorByExpiryDate();","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"kumsssss"},"content":"        model.updateSortedItemList(comparator);","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"        model.setItems(model.getSortedItemList());","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"kumsssss"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"kumsssss"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"kumsssss"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"kumsssss"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"kumsssss"},"content":"            || (other instanceof SortExpiryDateCommand);","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"kumsssss"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kumsssss":34}},{"path":"src/main/java/seedu/storemando/logic/commands/SortQuantityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kumsssss"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kumsssss"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kumsssss"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.model.item.ItemComparatorByQuantity;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"kumsssss"},"content":"public class SortQuantityCommand extends SortCommand {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"kumsssss"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"kumsssss"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"        List\u003cItem\u003e lastShownList \u003d model.getFilteredItemList();","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"kumsssss"},"content":"            throw new CommandException(MESSAGE_NO_ITEMS_TO_SORT);","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"kumsssss"},"content":"        ItemComparatorByQuantity comparator \u003d new ItemComparatorByQuantity();","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"kumsssss"},"content":"        model.updateSortedItemList(comparator);","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"        model.setItems(model.getSortedItemList());","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"kumsssss"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"kumsssss"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"kumsssss"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"kumsssss"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"kumsssss"},"content":"            || (other instanceof SortQuantityCommand);","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"kumsssss"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kumsssss":34}},{"path":"src/main/java/seedu/storemando/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands.exceptions;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":" * Represents an error which occurs during execution of a {@link seedu.storemando.logic.commands.Command}.","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"JayChenYJ":2,"-":15}},{"path":"src/main/java/seedu/storemando/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_EXPIRYDATE;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.model.expirydate.ExpiryDate.NO_EXPIRY_DATE;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.AddCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ExpiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemName;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Location;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Quantity;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"github-amanda"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_QUANTITY, PREFIX_EXPIRYDATE, PREFIX_LOCATION,","lastModifiedDate":"2021-03-05"},{"lineNumber":37,"author":{"gitId":"github-amanda"},"content":"                PREFIX_TAG);","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"kumsssss"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_LOCATION, PREFIX_QUANTITY)","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"        ItemName name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"github-amanda"},"content":"        Quantity quantity \u003d ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_QUANTITY).get());","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"kumsssss"},"content":"        ExpiryDate expiryDate \u003d ParserUtil.parseExpiryDate(argMultimap.getValue(PREFIX_EXPIRYDATE)","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"kumsssss"},"content":"            .orElse(NO_EXPIRY_DATE));","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"github-amanda"},"content":"        Item item \u003d new Item(name, quantity, expiryDate, location, tagList);","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"kumsssss"},"content":"        return new AddCommand(item);","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"github-amanda":4,"kumsssss":4,"JayChenYJ":17,"chewwh09":1,"-":38}},{"path":"src/main/java/seedu/storemando/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2021-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2021-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"JayChenYJ":1,"-":61}},{"path":"src/main/java/seedu/storemando/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-02-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"JayChenYJ"},"content":"        private final int startPosition;","lastModifiedDate":"2021-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"JayChenYJ":2,"-":146}},{"path":"src/main/java/seedu/storemando/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"    public static final Prefix PREFIX_QUANTITY \u003d new Prefix(\"q/\");","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"    public static final Prefix PREFIX_EXPIRYDATE \u003d new Prefix(\"e/\");","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    public static final Prefix PREFIX_PARTIAL_NAME \u003d new Prefix(\"*/\");","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JayChenYJ":2,"Md-Fazil":3,"-":11}},{"path":"src/main/java/seedu/storemando/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.index.Index;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JayChenYJ":5,"-":25}},{"path":"src/main/java/seedu/storemando/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_EXPIRYDATE;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.model.expirydate.ExpiryDate.NO_EXPIRY_DATE;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.index.Index;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.EditCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"github-amanda"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_QUANTITY, PREFIX_EXPIRYDATE, PREFIX_LOCATION,","lastModifiedDate":"2021-03-05"},{"lineNumber":37,"author":{"gitId":"github-amanda"},"content":"                PREFIX_TAG);","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"kumsssss"},"content":"        EditCommand.EditItemDescriptor editItemDescriptor \u003d new EditCommand.EditItemDescriptor();","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":"            editItemDescriptor.setItemName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"github-amanda"},"content":"        if (argMultimap.getValue(PREFIX_QUANTITY).isPresent()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"github-amanda"},"content":"            editItemDescriptor.setQuantity(ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_QUANTITY).get()));","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"        if (argMultimap.getValue(PREFIX_EXPIRYDATE).isPresent()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"            editItemDescriptor.setExpiryDate(ParserUtil.parseExpiryDate(","lastModifiedDate":"2021-03-04"},{"lineNumber":55,"author":{"gitId":"kumsssss"},"content":"                argMultimap.getValue(PREFIX_EXPIRYDATE).orElse(NO_EXPIRY_DATE)));","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"            editItemDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"kumsssss"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editItemDescriptor::setTags);","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"kumsssss"},"content":"        if (!editItemDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"kumsssss"},"content":"        return new EditCommand(index, editItemDescriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"github-amanda":4,"kumsssss":5,"JayChenYJ":14,"Md-Fazil":2,"chewwh09":1,"-":58}},{"path":"src/main/java/seedu/storemando/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_PARTIAL_NAME;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.FindCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemName;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemNameContainsPartialKeywordsPredicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PARTIAL_NAME);","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"        if (argMultimap.getValue(PREFIX_PARTIAL_NAME).isPresent() \u0026\u0026 !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"        } else if (argMultimap.getValue(PREFIX_PARTIAL_NAME).isPresent()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"            ItemName name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_PARTIAL_NAME).get());","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"            String[] nameKeywords \u003d name.fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"            return new FindCommand(new ItemNameContainsPartialKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"        } else {","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"            String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"            return new FindCommand(new ItemNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JayChenYJ":26,"-":21}},{"path":"src/main/java/seedu/storemando/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.logic.commands.ListCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.model.item.LocationContainsKeywordsPredicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"     * @param args Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"     * @return a ListCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"            return new ListCommand();","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LOCATION, PREFIX_TAG);","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent() \u0026\u0026 argMultimap.getValue(PREFIX_TAG).isEmpty()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"            String locationKeywords \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()).toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"            String[] keywords \u003d locationKeywords.split(\"\\\\s+\");","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"            return new ListCommand(new LocationContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"        } else if (argMultimap.getValue(PREFIX_LOCATION).isEmpty() \u0026\u0026 argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"            String tagKeywords \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get()).tagName;","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"            String[] keywords \u003d tagKeywords.split(\"\\\\s+\");","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"            return new ListCommand(new TagContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"        } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"JayChenYJ":27,"chewwh09":21}},{"path":"src/main/java/seedu/storemando/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.Command;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"JayChenYJ":3,"-":14}},{"path":"src/main/java/seedu/storemando/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.index.Index;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.util.StringUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ExpiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemName;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Location;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Quantity;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"     * Parses a {@code String name} into a {@code ItemName}.","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"chewwh09"},"content":"    public static ItemName parseName(String name) throws ParseException {","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":"        if (!ItemName.isValidName(trimmedName)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"chewwh09"},"content":"            throw new ParseException(ItemName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"        return new ItemName(trimmedName);","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"github-amanda"},"content":"     * Parses a {@code String quantity} into a {@code Quantity}.","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"github-amanda"},"content":"     * @throws ParseException if the given {@code quantity} is invalid.","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"github-amanda"},"content":"    public static Quantity parseQuantity(String quantity) throws ParseException {","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"github-amanda"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"github-amanda"},"content":"        String trimmedQuantity \u003d quantity.trim();","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"github-amanda"},"content":"        if (!Quantity.isValidQuantity(trimmedQuantity)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"github-amanda"},"content":"            throw new ParseException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"github-amanda"},"content":"        return new Quantity(trimmedQuantity);","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"     * Parses a {@code String location} into an {@code Location}.","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"Md-Fazil"},"content":"     * Parses a {@code String expiryDate} into an {@code ExpiryDate}.","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"Md-Fazil"},"content":"     * @throws ParseException if the given {@code expiryDate} is invalid.","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"Md-Fazil"},"content":"    public static ExpiryDate parseExpiryDate(String expiryDate) throws ParseException {","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"Md-Fazil"},"content":"        requireNonNull(expiryDate);","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"Md-Fazil"},"content":"        String trimmedExpiryDate \u003d expiryDate.trim();","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"Md-Fazil"},"content":"        if (!ExpiryDate.isValidExpiryDate(trimmedExpiryDate)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"Md-Fazil"},"content":"            throw new ParseException(ExpiryDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"Md-Fazil"},"content":"        return new ExpiryDate(trimmedExpiryDate);","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"github-amanda":8,"JayChenYJ":17,"Md-Fazil":8,"chewwh09":5,"-":87}},{"path":"src/main/java/seedu/storemando/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"JayChenYJ":1,"-":38}},{"path":"src/main/java/seedu/storemando/logic/parser/ReminderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.logic.commands.ReminderCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ItemExpiringPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":" * Parses input arguments and creates a new ReminderCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"public class ReminderCommandParser implements Parser\u003cReminderCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"     * Convert the given number and the time unit to the number of days.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"     * @param num      The number use to covert to days","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"     * @param timeUnit The time unit in terms of days and weeks","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"     * @return The number of days","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"     * @throws ParseException if the user input does not conform the expected keyword","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"    private long timeConversation(long num, String timeUnit) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"        String timeUnitLowerCase \u003d timeUnit.toLowerCase();","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"        switch (timeUnitLowerCase) {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"        case \"days\":","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"            return num;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"        case \"weeks\":","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"            return num * 7;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"        default:","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"     * Parses the given {@code String} of arguments in the context of the ReminderCommand","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"     * and returns a ReminderCommand object for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"    public ReminderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"            long numOfDayFromToday \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"chewwh09"},"content":"            String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"            String[] stringArgsArr \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"chewwh09"},"content":"            if (stringArgsArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"chewwh09"},"content":"                numOfDayFromToday \u003d Long.parseLong(stringArgsArr[0]);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"chewwh09"},"content":"            } else if (stringArgsArr.length \u003d\u003d 2) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":"                Long timeValue \u003d Long.parseLong(stringArgsArr[0]);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"chewwh09"},"content":"                String timeUnit \u003d stringArgsArr[1];","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"chewwh09"},"content":"                numOfDayFromToday \u003d timeConversation(timeValue, timeUnit);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"chewwh09"},"content":"            if (trimmedArgs.isEmpty() || stringArgsArr.length \u003e 2 || numOfDayFromToday \u003c\u003d 0) {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"chewwh09"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"chewwh09"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"chewwh09"},"content":"            return new ReminderCommand(new ItemExpiringPredicate(numOfDayFromToday));","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"chewwh09"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"chewwh09"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"chewwh09"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"chewwh09"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"JayChenYJ":2,"chewwh09":61}},{"path":"src/main/java/seedu/storemando/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kumsssss"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.logic.commands.SortCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.logic.commands.SortExpiryDateCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.logic.commands.SortQuantityCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"kumsssss"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"kumsssss"},"content":"    public static final String QUANTITY_KEYWORD \u003d \"quantity\";","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"kumsssss"},"content":"    public static final String EXPIRYDATE_KEYWORD \u003d \"expirydate\";","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"kumsssss"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"kumsssss"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"kumsssss"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"kumsssss"},"content":"        if (!trimmedArgs.equalsIgnoreCase(QUANTITY_KEYWORD)","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"kumsssss"},"content":"            \u0026\u0026 !trimmedArgs.equalsIgnoreCase(EXPIRYDATE_KEYWORD)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"kumsssss"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"kumsssss"},"content":"        } else if (trimmedArgs.equalsIgnoreCase(QUANTITY_KEYWORD)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"            return new SortQuantityCommand();","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"kumsssss"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"            return new SortExpiryDateCommand();","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"kumsssss"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kumsssss":30}},{"path":"src/main/java/seedu/storemando/logic/parser/StoreMandoParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.AddCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.Command;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.EditCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.FindCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.ListCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.logic.commands.ReminderCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.logic.commands.SortCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"public class StoreMandoParser {","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"chewwh09"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":73,"author":{"gitId":"chewwh09"},"content":"        case ReminderCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"chewwh09"},"content":"            return new ReminderCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"kumsssss"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"kumsssss"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kumsssss":4,"JayChenYJ":14,"chewwh09":5,"-":61}},{"path":"src/main/java/seedu/storemando/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser.exceptions;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"JayChenYJ":2,"-":15}},{"path":"src/main/java/seedu/storemando/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"kumsssss"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kumsssss"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-15"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":"    Predicate\u003cItem\u003e PREDICATE_SHOW_ALL_ITEMS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"     * Returns the user prefs\u0027 storemando file path.","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"    Path getStoreMandoFilePath();","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"     * Sets the user prefs\u0027 storemando file path.","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"    void setStoreMandoFilePath(Path storeMandoFilePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"     * Replaces storemando data with the data in {@code storeMando}.","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"    void setStoreMando(ReadOnlyStoreMando storeMando);","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-15"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"     * Returns the StoreMando","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-15"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"    ReadOnlyStoreMando getStoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"     * Returns true if a item with the same identity as {@code item} exists in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"kumsssss"},"content":"    boolean hasItem(Item item);","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"kumsssss"},"content":"     * Deletes the given item.","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"     * The item must exist in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"kumsssss"},"content":"    void deleteItem(Item target);","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"kumsssss"},"content":"     * Adds the given item.","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"     * {@code item} must not already exist in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"kumsssss"},"content":"    void addItem(Item item);","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"kumsssss"},"content":"     * Replaces the given item {@code target} with {@code editedItem}.","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"     * {@code target} must exist in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"kumsssss"},"content":"    void setItem(Item target, Item editedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"kumsssss"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"kumsssss"},"content":"     * Replaces every item in StoreMando\u0027s uniqueItemList with items in {@code itemList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"kumsssss"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"kumsssss"},"content":"    void setItems(List\u003cItem\u003e itemList);","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-15"},{"lineNumber":91,"author":{"gitId":"kumsssss"},"content":"     * Returns an unmodifiable view of the filtered item list","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-15"},{"lineNumber":93,"author":{"gitId":"kumsssss"},"content":"    ObservableList\u003cItem\u003e getFilteredItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"kumsssss"},"content":"     * Updates the filter of the filtered item list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"kumsssss"},"content":"    void updateFilteredItemList(Predicate\u003cItem\u003e predicate);","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"kumsssss"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"kumsssss"},"content":"     * Returns an unmodifiable view of the sorted item list","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"kumsssss"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"kumsssss"},"content":"    ObservableList\u003cItem\u003e getSortedItemList();","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"kumsssss"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"kumsssss"},"content":"     * Sorts the list","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"kumsssss"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"kumsssss"},"content":"     * @param comparator","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"kumsssss"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"kumsssss"},"content":"    void updateSortedItemList(Comparator\u003cItem\u003e comparator);","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kumsssss":31,"JayChenYJ":16,"-":66}},{"path":"src/main/java/seedu/storemando/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"kumsssss"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"kumsssss"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"kumsssss"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":" * Represents the in-memory model of the storemando data.","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"    private final StoreMando storeMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"    private final FilteredList\u003cItem\u003e filteredItems;","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"kumsssss"},"content":"    private final SortedList\u003cItem\u003e sortedItems;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"     * Initializes a ModelManager with the given storeMando and userPrefs.","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    public ModelManager(ReadOnlyStoreMando storeMando, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"        requireAllNonNull(storeMando, userPrefs);","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"        logger.fine(\"Initializing with storemando: \" + storeMando + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"        this.storeMando \u003d new StoreMando(storeMando);","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"        filteredItems \u003d new FilteredList\u003c\u003e(this.storeMando.getItemList());","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"kumsssss"},"content":"        sortedItems \u003d new SortedList\u003c\u003e(this.storeMando.getItemList());","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        this(new StoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"    public Path getStoreMandoFilePath() {","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"        return userPrefs.getStoreMandoFilePath();","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"    public void setStoreMandoFilePath(Path storeMandoFilePath) {","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"        requireNonNull(storeMandoFilePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"        userPrefs.setStoreMandoFilePath(storeMandoFilePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StoreMando \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":"    public void setStoreMando(ReadOnlyStoreMando storeMando) {","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"        this.storeMando.resetData(storeMando);","lastModifiedDate":"2021-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"JayChenYJ"},"content":"    public ReadOnlyStoreMando getStoreMando() {","lastModifiedDate":"2021-03-06"},{"lineNumber":93,"author":{"gitId":"JayChenYJ"},"content":"        return storeMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"kumsssss"},"content":"    public boolean hasItem(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"kumsssss"},"content":"        requireNonNull(item);","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"JayChenYJ"},"content":"        return storeMando.hasItem(item);","lastModifiedDate":"2021-03-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"kumsssss"},"content":"    public void deleteItem(Item target) {","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"JayChenYJ"},"content":"        storeMando.removeItem(target);","lastModifiedDate":"2021-03-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"kumsssss"},"content":"    public void addItem(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"JayChenYJ"},"content":"        storeMando.addItem(item);","lastModifiedDate":"2021-03-06"},{"lineNumber":110,"author":{"gitId":"kumsssss"},"content":"        updateFilteredItemList(PREDICATE_SHOW_ALL_ITEMS);","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"kumsssss"},"content":"    public void setItem(Item target, Item editedItem) {","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"kumsssss"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"JayChenYJ"},"content":"        storeMando.setItem(target, editedItem);","lastModifiedDate":"2021-03-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"kumsssss"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"kumsssss"},"content":"    public void setItems(List\u003cItem\u003e itemList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"kumsssss"},"content":"        storeMando.setItems(itemList);","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"kumsssss"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Item List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"kumsssss"},"content":"     * Returns an unmodifiable view of the list of {@code Item} backed by the internal list of","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"JayChenYJ"},"content":"     * {@code versionedstoreMando}","lastModifiedDate":"2021-03-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"kumsssss"},"content":"    public ObservableList\u003cItem\u003e getFilteredItemList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"kumsssss"},"content":"        return filteredItems;","lastModifiedDate":"2021-03-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"kumsssss"},"content":"    public void updateFilteredItemList(Predicate\u003cItem\u003e predicate) {","lastModifiedDate":"2021-03-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"kumsssss"},"content":"        filteredItems.setPredicate(predicate);","lastModifiedDate":"2021-03-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"kumsssss"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Sorted Item List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"kumsssss"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"kumsssss"},"content":"     * Returns an unmodifiable view of the list of {@code Item} backed by the internal list of","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"kumsssss"},"content":"     * {@code versionedstoreMando}","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"kumsssss"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"kumsssss"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"kumsssss"},"content":"    public ObservableList\u003cItem\u003e getSortedItemList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"kumsssss"},"content":"        return sortedItems;","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"kumsssss"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":155,"author":{"gitId":"kumsssss"},"content":"    public void updateSortedItemList(Comparator\u003cItem\u003e cmp) {","lastModifiedDate":"2021-03-13"},{"lineNumber":156,"author":{"gitId":"kumsssss"},"content":"        requireNonNull(cmp);","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"kumsssss"},"content":"        sortedItems.setComparator(cmp);","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":159,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"JayChenYJ"},"content":"        return storeMando.equals(other.storeMando)","lastModifiedDate":"2021-03-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"kumsssss"},"content":"            \u0026\u0026 filteredItems.equals(other.filteredItems);","lastModifiedDate":"2021-03-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kumsssss":43,"JayChenYJ":30,"-":106}},{"path":"src/main/java/seedu/storemando/model/ReadOnlyStoreMando.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":" * Unmodifiable view of an storemando","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"public interface ReadOnlyStoreMando {","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"kumsssss"},"content":"     * Returns an unmodifiable view of the items list.","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"kumsssss"},"content":"     * This list will not contain any duplicate items.","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":"    ObservableList\u003cItem\u003e getItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kumsssss":3,"JayChenYJ":4,"-":10}},{"path":"src/main/java/seedu/storemando/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    Path getStoreMandoFilePath();","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"JayChenYJ":3,"-":13}},{"path":"src/main/java/seedu/storemando/model/StoreMando.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.UniqueItemList;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":" * Wraps all data at the storemando level","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"kumsssss"},"content":" * Duplicates are not allowed (by .isSameItem comparison)","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"public class StoreMando implements ReadOnlyStoreMando {","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"    private final UniqueItemList items;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-02-23"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"        items \u003d new UniqueItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    public StoreMando() {","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"     * Creates an StoreMando using the Items in the {@code toBeCopied}","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"    public StoreMando(ReadOnlyStoreMando toBeCopied) {","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"     * Replaces the contents of the item list with {@code items}.","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"kumsssss"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"kumsssss"},"content":"    public void setItems(List\u003cItem\u003e items) {","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"kumsssss"},"content":"        this.items.setItems(items);","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"     * Resets the existing data of this {@code StoreMando} with {@code newData}.","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"    public void resetData(ReadOnlyStoreMando newData) {","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"        setItems(newData.getItemList());","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"kumsssss"},"content":"    //// item-level operations","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"     * Returns true if a item with the same identity as {@code item} exists in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"kumsssss"},"content":"    public boolean hasItem(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"kumsssss"},"content":"        requireNonNull(item);","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"kumsssss"},"content":"        return items.contains(item);","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"     * Adds a item to the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"     * The item must not already exist in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"kumsssss"},"content":"    public void addItem(Item p) {","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"kumsssss"},"content":"        items.add(p);","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"kumsssss"},"content":"     * Replaces the given item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"     * {@code target} must exist in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"kumsssss"},"content":"    public void setItem(Item target, Item editedItem) {","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"kumsssss"},"content":"        requireNonNull(editedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"kumsssss"},"content":"        items.setItem(target, editedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"     * Removes {@code key} from this {@code StoreMando}.","lastModifiedDate":"2021-03-06"},{"lineNumber":91,"author":{"gitId":"JayChenYJ"},"content":"     * {@code key} must exist in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"kumsssss"},"content":"    public void removeItem(Item key) {","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"kumsssss"},"content":"        items.remove(key);","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"kumsssss"},"content":"        return items.asUnmodifiableObservableList().size() + \" items\";","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"kumsssss"},"content":"    public ObservableList\u003cItem\u003e getItemList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":107,"author":{"gitId":"kumsssss"},"content":"        return items.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"JayChenYJ"},"content":"            || (other instanceof StoreMando // instanceof handles nulls","lastModifiedDate":"2021-03-06"},{"lineNumber":114,"author":{"gitId":"JayChenYJ"},"content":"            \u0026\u0026 items.equals(((StoreMando) other).items));","lastModifiedDate":"2021-03-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"kumsssss"},"content":"        return items.hashCode();","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kumsssss":24,"JayChenYJ":21,"-":76}},{"path":"src/main/java/seedu/storemando/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    private Path storeMandoFilePath \u003d Paths.get(\"data\", \"storemando.json\");","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {","lastModifiedDate":"2021-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"        setStoreMandoFilePath(newUserPrefs.getStoreMandoFilePath());","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"    public Path getStoreMandoFilePath() {","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"        return storeMandoFilePath;","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"    public void setStoreMandoFilePath(Path storeMandoFilePath) {","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        requireNonNull(storeMandoFilePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"        this.storeMandoFilePath \u003d storeMandoFilePath;","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"            \u0026\u0026 storeMandoFilePath.equals(o.storeMandoFilePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"        return Objects.hash(guiSettings, storeMandoFilePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"        sb.append(\"\\nLocal data file location : \" + storeMandoFilePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":12,"-":76}},{"path":"src/main/java/seedu/storemando/model/expirydate/ExpiryDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.expirydate;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"kumsssss"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"kumsssss"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"kumsssss"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":" * Represents an Item\u0027s expiry date in the inventory manager.","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidExpiryDate(String)}","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"public class ExpiryDate {","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"kumsssss"},"content":"    public static final String NO_EXPIRY_DATE \u003d \"No Expiry Date\";","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\";","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"kumsssss"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"-\";","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Expiry dates should be of the format YYYY-MM-DD \"","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"kumsssss"},"content":"        + \"1. YYYY, MM and DD should only contain numeric characters and must be separated by a \"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"kumsssss"},"content":"        + SPECIAL_CHARACTERS","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"kumsssss"},"content":"        + \" character.\\n\"","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"kumsssss"},"content":"        + \"2. YYYY must:\\n\"","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"        + \"    - be exactly 4 digits long\\n\"","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"kumsssss"},"content":"        + \"    - be a valid year\\n\"","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"        + \"3. MM must:\\n\"","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"kumsssss"},"content":"        + \"    - be exactly 2 digits long\\n\"","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"kumsssss"},"content":"        + \"    - be within the range [01, 12]\\n\"","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"kumsssss"},"content":"        + \"4. DD must:\\n\"","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"kumsssss"},"content":"        + \"    - be exactly 2 digits long\\n\"","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"kumsssss"},"content":"        + \"    - be a valid expiry date\\n\";","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"kumsssss"},"content":"    public final LocalDate expiryDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"     * Constructs an {@code ExpiryDate}.","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"     * @param expiryDate A valid expiryDate.","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Md-Fazil"},"content":"    public ExpiryDate(String expiryDate) {","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"Md-Fazil"},"content":"        requireNonNull(expiryDate);","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"Md-Fazil"},"content":"        checkArgument(isValidExpiryDate(expiryDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"kumsssss"},"content":"        if (expiryDate.equals(NO_EXPIRY_DATE)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"kumsssss"},"content":"            this.expiryDate \u003d null;","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"kumsssss"},"content":"        } else {","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"kumsssss"},"content":"            this.expiryDate \u003d LocalDate.parse(expiryDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"        value \u003d expiryDate;","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"kumsssss"},"content":"    public LocalDate getExpiryDate() {","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"kumsssss"},"content":"        return this.expiryDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"Md-Fazil"},"content":"     * Returns if a given string is a valid expiryDate.","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"Md-Fazil"},"content":"    public static boolean isValidExpiryDate(String test) {","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"kumsssss"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"kumsssss"},"content":"            if (test.equals(NO_EXPIRY_DATE)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"kumsssss"},"content":"                return true;","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"kumsssss"},"content":"            }","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"kumsssss"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"kumsssss"},"content":"            return true;","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"kumsssss"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"kumsssss"},"content":"            return false;","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"Md-Fazil"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"Md-Fazil"},"content":"     * Checks if the current expiryDate is past current date","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"Md-Fazil"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"Md-Fazil"},"content":"    public boolean isPastCurrentDate() {","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"Md-Fazil"},"content":"        return expiryDate !\u003d null \u0026\u0026 expiryDate.isBefore(LocalDate.now());","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"kumsssss"},"content":"        return value;","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"kumsssss"},"content":"    public String toFormattedString() {","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"kumsssss"},"content":"        return expiryDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"Md-Fazil"},"content":"            || (other instanceof ExpiryDate // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"Md-Fazil"},"content":"            \u0026\u0026 value.equals(((ExpiryDate) other).value)); // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"kumsssss"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"kumsssss"},"content":"     * Compares between 2 ExpiryDate objects by seeing which item expires earlier","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"kumsssss"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"kumsssss"},"content":"     * @param anotherExpiryDate ExpiryDate object to be compared to this","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"kumsssss"},"content":"     * @return an integer to show which ExpiryDate is greater","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"kumsssss"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"kumsssss"},"content":"    public int compare(ExpiryDate anotherExpiryDate) {","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"kumsssss"},"content":"        if (this.expiryDate \u003d\u003d null \u0026\u0026 anotherExpiryDate.expiryDate \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"kumsssss"},"content":"            return 0;","lastModifiedDate":"2021-03-09"},{"lineNumber":110,"author":{"gitId":"kumsssss"},"content":"        } else if (this.expiryDate \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":111,"author":{"gitId":"kumsssss"},"content":"            return 1;","lastModifiedDate":"2021-03-09"},{"lineNumber":112,"author":{"gitId":"kumsssss"},"content":"        } else if (anotherExpiryDate.expiryDate \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":113,"author":{"gitId":"kumsssss"},"content":"            return -1;","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"kumsssss"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"kumsssss"},"content":"            return this.expiryDate.compareTo(anotherExpiryDate.expiryDate);","lastModifiedDate":"2021-03-09"},{"lineNumber":116,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":117,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kumsssss":60,"JayChenYJ":2,"Md-Fazil":21,"-":35}},{"path":"src/main/java/seedu/storemando/model/expirydate/ItemExpiringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.expirydate;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import static java.time.temporal.ChronoUnit.DAYS;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":" * Tests that a {@code Item}\u0027s {@code expiry date} is within the stipulated days from today.","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"public class ItemExpiringPredicate implements Predicate\u003cItem\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"    private final Long numOfDays;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"    public ItemExpiringPredicate(Long numOfDays) {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"        this.numOfDays \u003d numOfDays;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"    public boolean test(Item item) {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"            LocalDate itemExpiryDate \u003d item.getExpiryDate().expiryDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"            LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"            Long daysDifference \u003d DAYS.between(today, itemExpiryDate);","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"            return daysDifference \u003c\u003d numOfDays;","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"        } catch (NullPointerException ex) {","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"            || (other instanceof ItemExpiringPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"            \u0026\u0026 numOfDays \u003d\u003d ((ItemExpiringPredicate) other).numOfDays); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"JayChenYJ":3,"chewwh09":35}},{"path":"src/main/java/seedu/storemando/model/item/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ExpiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":" * Represents a Item in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"public class Item {","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"    private final ItemName name;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"github-amanda"},"content":"    private final Quantity quantity;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"    private final ExpiryDate expiryDate;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"    private final Location location;","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"github-amanda"},"content":"    public Item(ItemName name, Quantity quantity, ExpiryDate expiryDate, Location location, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-05"},{"lineNumber":32,"author":{"gitId":"kumsssss"},"content":"        requireAllNonNull(name, quantity, expiryDate, location, tags);","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"github-amanda"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"    public ItemName getItemName() {","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"github-amanda"},"content":"    public Quantity getQuantity() {","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"github-amanda"},"content":"        return quantity;","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"    public ExpiryDate getExpiryDate() {","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"        return expiryDate;","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"    public Location getLocation() {","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"        return location;","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"Md-Fazil"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"Md-Fazil"},"content":"     * Checks if the current item is expired.","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"Md-Fazil"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"Md-Fazil"},"content":"    public boolean isExpired() {","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"Md-Fazil"},"content":"        return expiryDate.isPastCurrentDate();","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"kumsssss"},"content":"     * Returns true if both items have the same name.","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"kumsssss"},"content":"     * This defines a weaker notion of equality between two items.","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"kumsssss"},"content":"    public boolean isSameItem(Item otherItem) {","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"kumsssss"},"content":"        if (otherItem \u003d\u003d this) {","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"kumsssss"},"content":"        return otherItem !\u003d null","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"kumsssss"},"content":"            \u0026\u0026 otherItem.getItemName().equals(this.getItemName())","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"kumsssss"},"content":"            \u0026\u0026 otherItem.getLocation().equals(this.getLocation());","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"kumsssss"},"content":"     * Returns true if both items have the same identity and data fields.","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"kumsssss"},"content":"     * This defines a stronger notion of equality between two items.","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"kumsssss"},"content":"        if (!(other instanceof Item)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"kumsssss"},"content":"        Item otherItem \u003d (Item) other;","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"chewwh09"},"content":"        return otherItem.getItemName().equals(getItemName())","lastModifiedDate":"2021-03-05"},{"lineNumber":101,"author":{"gitId":"github-amanda"},"content":"            \u0026\u0026 otherItem.getQuantity().equals(getQuantity())","lastModifiedDate":"2021-03-05"},{"lineNumber":102,"author":{"gitId":"Md-Fazil"},"content":"            \u0026\u0026 otherItem.getExpiryDate().equals(getExpiryDate())","lastModifiedDate":"2021-03-04"},{"lineNumber":103,"author":{"gitId":"JayChenYJ"},"content":"            \u0026\u0026 otherItem.getLocation().equals(getLocation())","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"kumsssss"},"content":"            \u0026\u0026 otherItem.getTags().equals(getTags());","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"kumsssss"},"content":"        return Objects.hash(name, quantity, location, expiryDate, tags);","lastModifiedDate":"2021-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"chewwh09"},"content":"        builder.append(getItemName())","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"github-amanda"},"content":"            .append(\"; Quantity: \")","lastModifiedDate":"2021-03-05"},{"lineNumber":118,"author":{"gitId":"github-amanda"},"content":"            .append(getQuantity())","lastModifiedDate":"2021-03-01"},{"lineNumber":119,"author":{"gitId":"JayChenYJ"},"content":"            .append(\"; Location: \")","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"JayChenYJ"},"content":"            .append(getLocation());","lastModifiedDate":"2021-03-01"},{"lineNumber":121,"author":{"gitId":"kumsssss"},"content":"        if (getExpiryDate().getExpiryDate() !\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":122,"author":{"gitId":"kumsssss"},"content":"            builder.append(\"; ExpiryDate: \")","lastModifiedDate":"2021-03-06"},{"lineNumber":123,"author":{"gitId":"kumsssss"},"content":"                .append(getExpiryDate().toFormattedString());","lastModifiedDate":"2021-03-09"},{"lineNumber":124,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"kumsssss"},"content":"    public int compareByItemName(Item anotherItem) {","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"kumsssss"},"content":"        return this.getItemName().compare(anotherItem.getItemName());","lastModifiedDate":"2021-03-09"},{"lineNumber":136,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"kumsssss"},"content":"    public int compareByLocation(Item anotherItem) {","lastModifiedDate":"2021-03-09"},{"lineNumber":139,"author":{"gitId":"kumsssss"},"content":"        return this.getLocation().compare(anotherItem.getLocation());","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"kumsssss"},"content":"    public int compareByQuantity(Item anotherItem) {","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"kumsssss"},"content":"        return this.getQuantity().compare(anotherItem.getQuantity());","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":145,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":146,"author":{"gitId":"kumsssss"},"content":"    public int compareByExpiryDate(Item anotherItem) {","lastModifiedDate":"2021-03-09"},{"lineNumber":147,"author":{"gitId":"kumsssss"},"content":"        return this.getExpiryDate().compare(anotherItem.getExpiryDate());","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kumsssss":35,"github-amanda":8,"JayChenYJ":12,"Md-Fazil":12,"chewwh09":4,"-":79}},{"path":"src/main/java/seedu/storemando/model/item/ItemComparatorByExpiryDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kumsssss"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kumsssss"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kumsssss"},"content":"public class ItemComparatorByExpiryDate implements Comparator\u003cItem\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"kumsssss"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"kumsssss"},"content":"    public int compare(Item firstItem, Item secondItem) {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kumsssss"},"content":"        if (firstItem.compareByExpiryDate(secondItem) !\u003d 0) {","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"kumsssss"},"content":"            return firstItem.compareByExpiryDate(secondItem);","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"kumsssss"},"content":"        } else if (firstItem.compareByQuantity(secondItem) !\u003d 0) {","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"kumsssss"},"content":"            return firstItem.compareByQuantity(secondItem);","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"kumsssss"},"content":"        } else if (firstItem.compareByLocation(secondItem) !\u003d 0) {","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"kumsssss"},"content":"            return firstItem.compareByLocation(secondItem);","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"kumsssss"},"content":"            return firstItem.compareByItemName(secondItem);","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kumsssss":19}},{"path":"src/main/java/seedu/storemando/model/item/ItemComparatorByQuantity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kumsssss"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kumsssss"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kumsssss"},"content":"public class ItemComparatorByQuantity implements Comparator\u003cItem\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"kumsssss"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"kumsssss"},"content":"    public int compare(Item firstItem, Item secondItem) {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kumsssss"},"content":"        if (firstItem.compareByQuantity(secondItem) !\u003d 0) {","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"kumsssss"},"content":"            return firstItem.compareByQuantity(secondItem);","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"kumsssss"},"content":"        } else if (firstItem.compareByLocation(secondItem) !\u003d 0) {","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"kumsssss"},"content":"            return firstItem.compareByLocation(secondItem);","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"kumsssss"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"kumsssss"},"content":"            return firstItem.compareByItemName(secondItem);","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kumsssss":17}},{"path":"src/main/java/seedu/storemando/model/item/ItemName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":" * Represents a Item\u0027s name in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"public class ItemName {","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"     * The first character of the location must not be a whitespace,","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"     * @param name A valid item name.","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"    public ItemName(String name) {","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"chewwh09"},"content":"            || (other instanceof ItemName // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"            \u0026\u0026 fullName.equals(((ItemName) other).fullName)); // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"kumsssss"},"content":"    public int compare(ItemName anotherItemName) {","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"kumsssss"},"content":"        return this.fullName.compareTo(anotherItemName.fullName);","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kumsssss":3,"JayChenYJ":4,"chewwh09":5,"-":50}},{"path":"src/main/java/seedu/storemando/model/item/ItemNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.util.StringUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"kumsssss"},"content":" * Tests that a {@code Item}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"public class ItemNameContainsKeywordsPredicate implements Predicate\u003cItem\u003e {","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     * @param keywords a list of words to check","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    public ItemNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"kumsssss"},"content":"    public boolean test(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"            .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(item.getItemName().fullName, keyword));","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"            || (other instanceof ItemNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"            \u0026\u0026 keywords.equals(((ItemNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kumsssss":2,"JayChenYJ":9,"chewwh09":1,"-":22}},{"path":"src/main/java/seedu/storemando/model/item/ItemNameContainsPartialKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import java.util.List;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.util.StringUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":" * Tests that a {@code Item}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"public class ItemNameContainsPartialKeywordsPredicate implements Predicate\u003cItem\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     * @param keywords a list of words to check","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    public ItemNameContainsPartialKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    public boolean test(Item item) {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"            .anyMatch(keyword -\u003e StringUtil.containsPartialWordIgnoreCase(item.getItemName().fullName, keyword));","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"            || (other instanceof ItemNameContainsPartialKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"            \u0026\u0026 keywords.equals(((ItemNameContainsPartialKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"JayChenYJ":37}},{"path":"src/main/java/seedu/storemando/model/item/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":" * Represents an Item\u0027s Location in StoreMando.","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"public class Location {","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Locations can take any values, and it should not be blank\";","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     * The first character of the location must not be a whitespace,","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"     * Constructs an {@code Location}.","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"     * @param location A valid location.","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    public Location(String location) {","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"        value \u003d location;","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"     * Returns true if a given string is a valid location.","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"            || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"            \u0026\u0026 value.equals(((Location) other).value)); // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"    public int compare(Location anotherLocation) {","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"kumsssss"},"content":"        return this.value.compareTo(anotherLocation.value);","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kumsssss":4,"JayChenYJ":17,"-":40}},{"path":"src/main/java/seedu/storemando/model/item/LocationContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import java.util.List;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.commons.util.StringUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":" * Tests that a {@code Item}\u0027s {@code location} matches any of the keywords given.","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"public class LocationContainsKeywordsPredicate implements Predicate\u003cItem\u003e {","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"    public LocationContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"    public boolean test(Item item) {","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"            .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(item.getLocation().value, keyword));","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"            || (other instanceof LocationContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"            \u0026\u0026 keywords.equals(((LocationContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"chewwh09":31}},{"path":"src/main/java/seedu/storemando/model/item/Quantity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":" * Represents a Item\u0027s quantity number in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"github-amanda"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidQuantity(String)}","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":" * \u003e\u003e\u003e\u003e\u003e\u003e\u003e mid-1.2-base-refactor:src/main/java/seedu/storemando/model/item/Quantity.java","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"github-amanda"},"content":"public class Quantity {","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":"        \"Quantity should only contain numbers, and it should be a positive integer greater than 0\";","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"github-amanda"},"content":"     * Constructs a {@code Quantity}.","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"github-amanda"},"content":"     * @param quantity A valid quantity number.","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"github-amanda"},"content":"    public Quantity(String quantity) {","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"github-amanda"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"github-amanda"},"content":"        checkArgument(isValidQuantity(quantity), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"github-amanda"},"content":"        value \u003d quantity;","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"github-amanda"},"content":"     * Returns true if a given string is a valid quantity number.","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"github-amanda"},"content":"    public static boolean isValidQuantity(String test) {","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 Long.valueOf(test) \u003e 0;","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"github-amanda"},"content":"            || (other instanceof Quantity // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"github-amanda"},"content":"            \u0026\u0026 value.equals(((Quantity) other).value)); // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"kumsssss"},"content":"    public int compare(Quantity anotherQuantity) {","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"kumsssss"},"content":"        return Integer.parseInt(this.value) - Integer.parseInt(anotherQuantity.value);","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"github-amanda":12,"kumsssss":5,"JayChenYJ":4,"Md-Fazil":2,"-":35}},{"path":"src/main/java/seedu/storemando/model/item/UniqueItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":" * A list of items that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"kumsssss"},"content":" * A item is considered unique by comparing using {@code Item#isSameItem(Item)}. As such, adding and updating of","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":" * items uses Item#isSameItem(Item) for equality so as to ensure that the item being added or updated is","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"kumsssss"},"content":" * unique in terms of identity in the UniqueItemList. However, the removal of a item uses Item#equals(Object) so","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":" * as to ensure that the item with exactly the same fields will be removed.","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"kumsssss"},"content":" * @see Item#isSameItem(Item)","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"public class UniqueItemList implements Iterable\u003cItem\u003e {","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"    private final ObservableList\u003cItem\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"kumsssss"},"content":"    private final ObservableList\u003cItem\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"kumsssss"},"content":"     * Returns true if the list contains an equivalent item as the given argument.","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"kumsssss"},"content":"    public boolean contains(Item toCheck) {","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"kumsssss"},"content":"        return internalList.stream().anyMatch(toCheck::isSameItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"kumsssss"},"content":"     * Adds a item to the list.","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"kumsssss"},"content":"     * The item must not already exist in the list.","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"kumsssss"},"content":"    public void add(Item toAdd) {","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"kumsssss"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"kumsssss"},"content":"     * Replaces the item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"kumsssss"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the list.","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"kumsssss"},"content":"    public void setItem(Item target, Item editedItem) {","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"kumsssss"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"kumsssss"},"content":"        if (!target.isSameItem(editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"kumsssss"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"kumsssss"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"kumsssss"},"content":"     * Removes the equivalent item from the list.","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"kumsssss"},"content":"     * The item must exist in the list.","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"kumsssss"},"content":"    public void remove(Item toRemove) {","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"kumsssss"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"kumsssss"},"content":"    public void setItems(UniqueItemList replacement) {","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"kumsssss"},"content":"     * Replaces the contents of this list with {@code items}.","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"kumsssss"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"kumsssss"},"content":"    public void setItems(List\u003cItem\u003e items) {","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"kumsssss"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"kumsssss"},"content":"        if (!itemsAreUnique(items)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"kumsssss"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"kumsssss"},"content":"        internalList.setAll(items);","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"kumsssss"},"content":"    public ObservableList\u003cItem\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"kumsssss"},"content":"    public Iterator\u003cItem\u003e iterator() {","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"kumsssss"},"content":"            || (other instanceof UniqueItemList // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"kumsssss"},"content":"            \u0026\u0026 internalList.equals(((UniqueItemList) other).internalList));","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"kumsssss"},"content":"     * Returns true if {@code items} contains only unique items.","lastModifiedDate":"2021-03-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"kumsssss"},"content":"    private boolean itemsAreUnique(List\u003cItem\u003e items) {","lastModifiedDate":"2021-03-01"},{"lineNumber":128,"author":{"gitId":"kumsssss"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"kumsssss"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2021-03-01"},{"lineNumber":130,"author":{"gitId":"kumsssss"},"content":"                if (items.get(i).isSameItem(items.get(j))) {","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kumsssss":45,"JayChenYJ":4,"-":88}},{"path":"src/main/java/seedu/storemando/model/item/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item.exceptions;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"kumsssss"},"content":" * Signals that the operation will result in duplicate Items (Items are considered duplicates if they have the same","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"kumsssss"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"kumsssss"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"kumsssss"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kumsssss":4,"JayChenYJ":1,"-":6}},{"path":"src/main/java/seedu/storemando/model/item/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item.exceptions;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"kumsssss"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"kumsssss"},"content":" * Signals that the operation is unable to find the specified item.","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"kumsssss"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"kumsssss"},"content":"public class ItemNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"kumsssss"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"kumsssss":6,"JayChenYJ":1}},{"path":"src/main/java/seedu/storemando/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":" * Represents a Tag in the storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JayChenYJ":3,"-":51}},{"path":"src/main/java/seedu/storemando/model/tag/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.tag;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.util.StringUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cItem\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    public boolean test(Item item) {","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"        Set\u003cTag\u003e tagSet \u003d item.getTags();","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"        StringBuilder fullTags \u003d new StringBuilder();","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"        for (Tag tag : tagSet) {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"            String tagName \u003d tag.tagName;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"            fullTags.append(\" \").append(tagName);","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"        String finalFullTags \u003d fullTags.toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"            .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(finalFullTags, keyword));","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"            || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"            \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"JayChenYJ":36}},{"path":"src/main/java/seedu/storemando/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ExpiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemName;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Location;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Quantity;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":" * Contains utility methods for populating {@code StoreMando} with sample data.","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"kumsssss"},"content":"    public static Item[] getSampleItems() {","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"kumsssss"},"content":"        return new Item[]{","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"github-amanda"},"content":"            new Item(new ItemName(\"Cooking Oil\"), new Quantity(\"10\"), new ExpiryDate(\"2023-10-10\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"github-amanda"},"content":"                new Location(\"Cupboard 3\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"github-amanda"},"content":"                getTagSet(\"essential\")),","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"github-amanda"},"content":"            new Item(new ItemName(\"Pail\"), new Quantity(\"4\"), new ExpiryDate(\"No Expiry Date\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"github-amanda"},"content":"                new Location(\"Toilet\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"github-amanda"},"content":"                getTagSet(\"cleaning\")),","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"github-amanda"},"content":"            new Item(new ItemName(\"Beer\"), new Quantity(\"10\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"github-amanda"},"content":"                new ExpiryDate(\"2021-09-10\"), new Location(\"Room 2\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"github-amanda"},"content":"                getTagSet(\"favourite\", \"guests\")),","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"            new Item(new ItemName(\"Chilli Sauce\"), new Quantity(\"2\"), new ExpiryDate(\"2023-10-10\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"github-amanda"},"content":"                new Location(\"Cupboard 1\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"github-amanda"},"content":"                getTagSet(\"sauces\")),","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"github-amanda"},"content":"            new Item(new ItemName(\"Tomato Sauce\"), new Quantity(\"1\"), new ExpiryDate(\"2023-09-10\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"github-amanda"},"content":"                new Location(\"Cupboard 1\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"github-amanda"},"content":"                getTagSet(\"sauces\")),","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"github-amanda"},"content":"            new Item(new ItemName(\"Mahjong Table\"), new Quantity(\"2\"), new ExpiryDate(\"No Expiry Date\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"github-amanda"},"content":"                new Location(\"Storeroom\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"github-amanda"},"content":"                getTagSet(\"guests\")),","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"github-amanda"},"content":"            new Item(new ItemName(\"Chair\"), new Quantity(\"5\"), new ExpiryDate(\"No Expiry Date\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"github-amanda"},"content":"                new Location(\"Storeroom\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"github-amanda"},"content":"                getTagSet(\"guests\"))","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"    public static ReadOnlyStoreMando getSampleStoreMando() {","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"        StoreMando sampleAb \u003d new StoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"kumsssss"},"content":"        for (Item sampleItem : getSampleItems()) {","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"kumsssss"},"content":"            sampleAb.addItem(sampleItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"kumsssss":4,"github-amanda":20,"JayChenYJ":12,"Md-Fazil":1,"-":26}},{"path":"src/main/java/seedu/storemando/storage/JsonAdaptedItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ExpiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemName;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Location;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Quantity;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"kumsssss"},"content":" * Jackson-friendly version of {@link Item}.","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"kumsssss"},"content":"class JsonAdaptedItem {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Item\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"github-amanda"},"content":"    private final String quantity;","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"    private final String expiryDate;","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    private final String location;","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"kumsssss"},"content":"     * Constructs a {@code JsonAdaptedItem} with the given item details.","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"github-amanda"},"content":"    public JsonAdaptedItem(@JsonProperty(\"name\") String name, @JsonProperty(\"quantity\") String quantity,","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"                           @JsonProperty(\"expiryDate\") String expiryDate, @JsonProperty(\"location\") String location,","lastModifiedDate":"2021-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"github-amanda"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"Md-Fazil"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"kumsssss"},"content":"     * Converts a given {@code Item} into this class for Jackson use.","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"kumsssss"},"content":"    public JsonAdaptedItem(Item source) {","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"chewwh09"},"content":"        name \u003d source.getItemName().fullName;","lastModifiedDate":"2021-03-05"},{"lineNumber":54,"author":{"gitId":"github-amanda"},"content":"        quantity \u003d source.getQuantity().value;","lastModifiedDate":"2021-03-05"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"        expiryDate \u003d source.getExpiryDate().toString();","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        location \u003d source.getLocation().value;","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"kumsssss"},"content":"     * Converts this Jackson-friendly adapted item object into the model\u0027s {@code Item} object.","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"kumsssss"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted item.","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"kumsssss"},"content":"    public Item toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"kumsssss"},"content":"        final List\u003cTag\u003e itemTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"kumsssss"},"content":"            itemTags.add(tag.toModelType());","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"chewwh09"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-05"},{"lineNumber":75,"author":{"gitId":"chewwh09"},"content":"                ItemName.class.getSimpleName()));","lastModifiedDate":"2021-03-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"chewwh09"},"content":"        if (!ItemName.isValidName(name)) {","lastModifiedDate":"2021-03-05"},{"lineNumber":78,"author":{"gitId":"chewwh09"},"content":"            throw new IllegalValueException(ItemName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"chewwh09"},"content":"        final ItemName modelName \u003d new ItemName(name);","lastModifiedDate":"2021-03-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"github-amanda"},"content":"        if (quantity \u003d\u003d null) {","lastModifiedDate":"2021-03-05"},{"lineNumber":83,"author":{"gitId":"github-amanda"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-05"},{"lineNumber":84,"author":{"gitId":"github-amanda"},"content":"                Quantity.class.getSimpleName()));","lastModifiedDate":"2021-03-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"github-amanda"},"content":"        if (!Quantity.isValidQuantity(quantity)) {","lastModifiedDate":"2021-03-05"},{"lineNumber":87,"author":{"gitId":"github-amanda"},"content":"            throw new IllegalValueException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"github-amanda"},"content":"        final Quantity modelQuantity \u003d new Quantity(quantity);","lastModifiedDate":"2021-03-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"Md-Fazil"},"content":"        if (expiryDate \u003d\u003d null) {","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"Md-Fazil"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"Md-Fazil"},"content":"                ExpiryDate.class.getSimpleName()));","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"Md-Fazil"},"content":"        if (!ExpiryDate.isValidExpiryDate(expiryDate)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"Md-Fazil"},"content":"            throw new IllegalValueException(ExpiryDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"Md-Fazil"},"content":"        final ExpiryDate modelExpiryDate \u003d new ExpiryDate(expiryDate);","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"JayChenYJ"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"JayChenYJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"JayChenYJ"},"content":"                Location.class.getSimpleName()));","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"JayChenYJ"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"JayChenYJ"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":"        final Location modelLocation \u003d new Location(location);","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"kumsssss"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(itemTags);","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"github-amanda"},"content":"        return new Item(modelName, modelQuantity, modelExpiryDate, modelLocation, modelTags);","lastModifiedDate":"2021-03-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kumsssss":12,"github-amanda":11,"JayChenYJ":17,"Md-Fazil":10,"chewwh09":6,"-":57}},{"path":"src/main/java/seedu/storemando/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JayChenYJ":3,"-":45}},{"path":"src/main/java/seedu/storemando/storage/JsonSerializableStoreMando.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import java.util.List;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":" * An Immutable StoreMando that is serializable to JSON format.","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"@JsonRootName(value \u003d \"storemando\")","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"class JsonSerializableStoreMando {","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    public static final String MESSAGE_DUPLICATE_ITEM \u003d \"items list contains duplicate item(s).\";","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    private final List\u003cJsonAdaptedItem\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"     * Constructs a {@code JsonSerializableStoreMando} with the given items.","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    public JsonSerializableStoreMando(@JsonProperty(\"items\") List\u003cJsonAdaptedItem\u003e items) {","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"        this.items.addAll(items);","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"     * Converts a given {@code ReadOnlyStoreMando} into this class for Jackson use.","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableStoreMando}.","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    public JsonSerializableStoreMando(ReadOnlyStoreMando source) {","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"        items.addAll(source.getItemList().stream().map(JsonAdaptedItem::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"     * Converts this storemando into the model\u0027s {@code StoreMando} object.","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"    public StoreMando toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"        StoreMando storeMando \u003d new StoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"        for (JsonAdaptedItem jsonAdaptedItem : items) {","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"            Item item \u003d jsonAdaptedItem.toModelType();","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"            if (storeMando.hasItem(item)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"            }","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"            storeMando.addItem(item);","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"        return storeMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"JayChenYJ":60}},{"path":"src/main/java/seedu/storemando/storage/JsonStoreMandoStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.util.FileUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.util.JsonUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":" * A class to access StoreMando data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"public class JsonStoreMandoStorage implements StoreMandoStorage {","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonStoreMandoStorage.class);","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    private final Path filePath;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    public JsonStoreMandoStorage(Path filePath) {","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    public Path getStoreMandoFilePath() {","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"        return filePath;","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    public Optional\u003cReadOnlyStoreMando\u003e readStoreMando() throws DataConversionException {","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        return readStoreMando(filePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"     * Similar to {@link #readStoreMando()}.","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"    public Optional\u003cReadOnlyStoreMando\u003e readStoreMando(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"        Optional\u003cJsonSerializableStoreMando\u003e jsonStoreMando \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"            filePath, JsonSerializableStoreMando.class);","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"        if (!jsonStoreMando.isPresent()) {","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"        try {","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"            return Optional.of(jsonStoreMando.get().toModelType());","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"    public void saveStoreMando(ReadOnlyStoreMando storeMando) throws IOException {","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"        saveStoreMando(storeMando, filePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"     * Similar to {@link #saveStoreMando(ReadOnlyStoreMando)}.","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"    public void saveStoreMando(ReadOnlyStoreMando storeMando, Path filePath) throws IOException {","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"        requireNonNull(storeMando);","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableStoreMando(storeMando), filePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"JayChenYJ":80}},{"path":"src/main/java/seedu/storemando/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.util.JsonUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    private final Path filePath;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JayChenYJ":6,"-":42}},{"path":"src/main/java/seedu/storemando/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":" * API of the Storage component","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"public interface Storage extends StoreMandoStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    Path getStoreMandoFilePath();","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    Optional\u003cReadOnlyStoreMando\u003e readStoreMando() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    void saveStoreMando(ReadOnlyStoreMando storeMando) throws IOException;","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"JayChenYJ":32}},{"path":"src/main/java/seedu/storemando/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":" * Manages storage of StoreMando data in local storage.","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    private final StoreMandoStorage storeMandoStorage;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"     * Creates a {@code StorageManager} with the given {@code StoreMandoStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    public StorageManager(StoreMandoStorage storeMandoStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"        super();","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"        this.storeMandoStorage \u003d storeMandoStorage;","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StoreMando methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"    public Path getStoreMandoFilePath() {","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"        return storeMandoStorage.getStoreMandoFilePath();","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"    public Optional\u003cReadOnlyStoreMando\u003e readStoreMando() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"        return readStoreMando(storeMandoStorage.getStoreMandoFilePath());","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"    public Optional\u003cReadOnlyStoreMando\u003e readStoreMando(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"        return storeMandoStorage.readStoreMando(filePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"    public void saveStoreMando(ReadOnlyStoreMando storeMando) throws IOException {","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"        saveStoreMando(storeMando, storeMandoStorage.getStoreMandoFilePath());","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"    public void saveStoreMando(ReadOnlyStoreMando storeMando, Path filePath) throws IOException {","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"        storeMandoStorage.saveStoreMando(storeMando, filePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"JayChenYJ":79}},{"path":"src/main/java/seedu/storemando/storage/StoreMandoStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":" * Represents a storage for {@link StoreMando}.","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"public interface StoreMandoStorage {","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    Path getStoreMandoFilePath();","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"     * Returns StoreMando data as a {@link ReadOnlyStoreMando}.","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    Optional\u003cReadOnlyStoreMando\u003e readStoreMando() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"     * @see #getStoreMandoFilePath()","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    Optional\u003cReadOnlyStoreMando\u003e readStoreMando(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"     * Saves the given {@link ReadOnlyStoreMando} to the storage.","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"     * @param storeMando cannot be null.","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"    void saveStoreMando(ReadOnlyStoreMando storeMando) throws IOException;","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"     * @see #saveStoreMando(ReadOnlyStoreMando)","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"    void saveStoreMando(ReadOnlyStoreMando storeMando, Path filePath) throws IOException;","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"JayChenYJ":48}},{"path":"src/main/java/seedu/storemando/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":" * Represents a storage for {@link seedu.storemando.model.UserPrefs}.","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"     * Saves the given {@link seedu.storemando.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JayChenYJ":6,"-":32}},{"path":"src/main/java/seedu/storemando/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.CommandResult;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"         * @see seedu.storemando.logic.Logic#execute(String)","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"JayChenYJ":5,"-":80}},{"path":"src/main/java/seedu/storemando/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w10-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-02-23"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *                               if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *                               if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"Md-Fazil"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"Md-Fazil"},"content":"     * Opens the help window if it is not already open. If the help window is already open, focuses on the help window.","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"Md-Fazil"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"Md-Fazil"},"content":"    public void displayUrl() {","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"Md-Fazil"},"content":"        if (!isShowing()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"Md-Fazil"},"content":"            show();","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"Md-Fazil"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"Md-Fazil"},"content":"            focus();","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"Md-Fazil"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JayChenYJ":5,"Md-Fazil":11,"-":97}},{"path":"src/main/java/seedu/storemando/ui/ItemCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"kumsssss"},"content":" * An UI component that displays information of a {@code Item}.","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":"public class ItemCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"    private static final String FXML \u003d \"ItemListCard.fxml\";","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/storeMando-level4/issues/336\"\u003eThe issue on StoreMando level 4\u003c/a\u003e","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"    public final Item item;","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"github-amanda"},"content":"    private Label quantity;","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"    private Label locations;","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"    private Label expiryDate;","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"     * Creates a {@code ItemCode} with the given {@code Item} and index to display.","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"kumsssss"},"content":"    public ItemCard(Item item, int displayedIndex) {","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"kumsssss"},"content":"        this.item \u003d item;","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"        name.setText(item.getItemName().fullName);","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"        locations.setText(item.getLocation().value);","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"github-amanda"},"content":"        quantity.setText(\"Quantity: \" + item.getQuantity().value);","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"kumsssss"},"content":"        if (item.getExpiryDate().getExpiryDate() !\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"github-amanda"},"content":"            expiryDate.setText(\"Expiry Date: \" + item.getExpiryDate().toFormattedString());","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"        item.getTags().stream()","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"kumsssss"},"content":"        if (!(other instanceof ItemCard)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"kumsssss"},"content":"        ItemCard card \u003d (ItemCard) other;","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"kumsssss"},"content":"            \u0026\u0026 item.equals(card.item);","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"kumsssss":12,"github-amanda":4,"JayChenYJ":6,"Md-Fazil":1,"chewwh09":1,"-":56}},{"path":"src/main/java/seedu/storemando/ui/ItemListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"kumsssss"},"content":" * Panel containing the list of items.","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"kumsssss"},"content":"public class ItemListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"    private static final String FXML \u003d \"ItemListPanel.fxml\";","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"kumsssss"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ItemListPanel.class);","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"kumsssss"},"content":"    private ListView\u003cItem\u003e itemListView;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"kumsssss"},"content":"     * Creates a {@code ItemListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"kumsssss"},"content":"    public ItemListPanel(ObservableList\u003cItem\u003e itemList) {","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"kumsssss"},"content":"        itemListView.setItems(itemList);","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"kumsssss"},"content":"        itemListView.setCellFactory(listView -\u003e new ItemListViewCell());","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"kumsssss"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Item} using a {@code ItemCard}.","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"kumsssss"},"content":"    class ItemListViewCell extends ListCell\u003cItem\u003e {","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"kumsssss"},"content":"        protected void updateItem(Item item, boolean empty) {","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"kumsssss"},"content":"            super.updateItem(item, empty);","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"kumsssss"},"content":"            if (empty || item \u003d\u003d null) {","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"                setGraphic(new ItemCard(item, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kumsssss":15,"JayChenYJ":3,"-":31}},{"path":"src/main/java/seedu/storemando/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"github-amanda"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"import seedu.storemando.commons.util.BrowserUtil;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.Logic;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.CommandResult;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    private final Logic logic;","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"kumsssss"},"content":"    private ItemListPanel itemListPanel;","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"kumsssss"},"content":"    private StackPane itemListPanelPlaceholder;","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"kumsssss"},"content":"        itemListPanel \u003d new ItemListPanel(logic.getFilteredItemList());","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"kumsssss"},"content":"        itemListPanelPlaceholder.getChildren().add(itemListPanel.getRoot());","lastModifiedDate":"2021-03-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"JayChenYJ"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getStoreMandoFilePath());","lastModifiedDate":"2021-03-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"github-amanda"},"content":"     * Resizes the resultDisplayPlaceholder vertical size based on text","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"github-amanda"},"content":"     * @param text the message displayed","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"github-amanda"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"github-amanda"},"content":"    private void setResultDisplayPlaceholderVerticalSize(Text text) {","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"github-amanda"},"content":"        resultDisplayPlaceholder.setMinHeight(text.getBoundsInLocal().getHeight() * 2.5);","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"github-amanda"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"Md-Fazil"},"content":"     * Opens storemando\u0027s user guide on user\u0027s browser if user\u0027s desktop supports it.","lastModifiedDate":"2021-03-09"},{"lineNumber":152,"author":{"gitId":"Md-Fazil"},"content":"     * Otherwise, opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-03-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":156,"author":{"gitId":"Md-Fazil"},"content":"        if (BrowserUtil.canOpenBrowser()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"Md-Fazil"},"content":"            BrowserUtil.displayUserGuideWebsite();","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"Md-Fazil"},"content":"            helpWindow.displayUrl();","lastModifiedDate":"2021-03-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"kumsssss"},"content":"    public ItemListPanel getItemListPanel() {","lastModifiedDate":"2021-03-01"},{"lineNumber":180,"author":{"gitId":"kumsssss"},"content":"        return itemListPanel;","lastModifiedDate":"2021-03-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"JayChenYJ"},"content":"     * @see seedu.storemando.logic.Logic#execute(String)","lastModifiedDate":"2021-03-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"github-amanda"},"content":"            setResultDisplayPlaceholderVerticalSize(new Text(commandResult.getFeedbackToUser()));","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"github-amanda"},"content":"            setResultDisplayPlaceholderVerticalSize(new Text(e.getMessage()));","lastModifiedDate":"2021-03-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"github-amanda":10,"kumsssss":6,"JayChenYJ":13,"Md-Fazil":6,"-":175}},{"path":"src/main/java/seedu/storemando/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JayChenYJ":1,"-":27}},{"path":"src/main/java/seedu/storemando/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":1,"-":27}},{"path":"src/main/java/seedu/storemando/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2021-02-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"JayChenYJ":1,"-":14}},{"path":"src/main/java/seedu/storemando/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.MainApp;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.util.StringUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.Logic;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/storemando_32.png\";","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"    private final Logic logic;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JayChenYJ":7,"-":82}},{"path":"src/main/java/seedu/storemando/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.MainApp;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2021-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param root     Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JayChenYJ":2,"-":91}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"github-amanda"},"content":"   background-color: #ffffff; /* Used in the default.html file */","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"   -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"github-amanda"},"content":"   -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"   -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"github-amanda"},"content":"   -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"github-amanda"},"content":"   -fx-font-weight: bold;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"github-amanda"},"content":"   -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"github-amanda"},"content":"   -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"github-amanda"},"content":"   -fx-font-weight: bold;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"       transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"       transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"       derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"       transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"   -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"github-amanda"},"content":"   -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"   -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"   -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"   -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"   -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"   -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"   -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"   -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"github-amanda"},"content":"   -fx-padding: 10 0 10 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"github-amanda"},"content":"   -fx-background-radius: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: derive(#F6AE2D, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: derive(#F6AE2D, 60%);","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: #F07167;","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"github-amanda"},"content":"/*","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"github-amanda"},"content":"   -fx-border-color: white;","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"   -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"github-amanda"},"content":"} */","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"github-amanda"},"content":"   -fx-text-fill: black;","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"github-amanda"},"content":"   -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"github-amanda"},"content":"   -fx-font-weight: bold;","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"   -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"   -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"github-amanda"},"content":"   -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":141,"author":{"gitId":"github-amanda"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"github-amanda"},"content":"/* outline background */","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":146,"author":{"gitId":"github-amanda"},"content":"    -fx-background-color: derive(#86BBD8, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"github-amanda"},"content":"    -fx-border-color: derive(#86BBD8, 10%);","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"   -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"github-amanda"},"content":"   -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"github-amanda"},"content":"   -fx-font-size: 11pt;","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"   -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"github-amanda"},"content":"   -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"   -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"   -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"github-amanda"},"content":"   -fx-text-fill: black;","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"   -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"   -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"   -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"github-amanda"},"content":"   -fx-font-size: 11pt;","lastModifiedDate":"2021-03-15"},{"lineNumber":207,"author":{"gitId":"github-amanda"},"content":"   -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2021-03-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"   -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"   -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"* Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"* Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"* http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"*/","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"   -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"github-amanda"},"content":"   -fx-border-color: white;","lastModifiedDate":"2021-03-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"   -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"   -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: white;","lastModifiedDate":"2021-03-15"},{"lineNumber":227,"author":{"gitId":"github-amanda"},"content":"   -fx-font-family: \"Comic Sans MS\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2021-03-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"   -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"   -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":" -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":" -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"   -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"   -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"   -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"   -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"   -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"   -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"   -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"   -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"   -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"   -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"   -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"   -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"   -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"   -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"   -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":291,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: derive(#053C5E, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: derive(#053C5E, 80%);","lastModifiedDate":"2021-03-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"   -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"   -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"   -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"   -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"   -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"   -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"   -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"   -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"   -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"   -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: white;","lastModifiedDate":"2021-03-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"   -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"   -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"   -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"github-amanda"},"content":"   -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2021-03-15"},{"lineNumber":332,"author":{"gitId":"github-amanda"},"content":"   -fx-font-size: 11pt;","lastModifiedDate":"2021-03-15"},{"lineNumber":333,"author":{"gitId":"github-amanda"},"content":"   -fx-text-fill: black;","lastModifiedDate":"2021-03-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"JayChenYJ"},"content":"#filterField, #itemListPanel, #itemWebpage {","lastModifiedDate":"2021-03-06"},{"lineNumber":337,"author":{"gitId":"-"},"content":"   -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"   -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: #053C5E;","lastModifiedDate":"2021-03-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"   -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"   -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"   -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"github-amanda"},"content":"   -fx-background-color: #0075C4;","lastModifiedDate":"2021-03-15"},{"lineNumber":353,"author":{"gitId":"github-amanda"},"content":"   -fx-padding: 2 3 2 3;","lastModifiedDate":"2021-03-15"},{"lineNumber":354,"author":{"gitId":"github-amanda"},"content":"   -fx-background-radius: 6;","lastModifiedDate":"2021-03-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"   -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"github-amanda"},"content":"   -fx-font-family: \"Comic Sans MS\";","lastModifiedDate":"2021-03-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"github-amanda":50,"JayChenYJ":1,"-":306}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"github-amanda"},"content":"   -fx-text-fill: #f22727 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"   /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"   -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"github-amanda":1,"-":19}},{"path":"src/main/resources/view/ItemListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"            \u003cLabel fx:id\u003d\"locations\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$location\"/\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"github-amanda"},"content":"            \u003cLabel fx:id\u003d\"quantity\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$quantity\"/\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"kumsssss"},"content":"            \u003cLabel fx:id\u003d\"expiryDate\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"github-amanda":1,"kumsssss":1,"JayChenYJ":1,"-":32}},{"path":"src/main/resources/view/ItemListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"kumsssss"},"content":"    \u003cListView fx:id\u003d\"itemListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kumsssss":1,"-":6}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-02-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-02-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"         title\u003d\"STOREMANDO\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"        \u003cImage url\u003d\"@/images/storemando_32.png\"/\u003e","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"github-amanda"},"content":"                \u003cVBox fx:id\u003d\"itemList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"github-amanda"},"content":"                      VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"github-amanda"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"github-amanda"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"github-amanda"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"github-amanda"},"content":"                    \u003cStackPane fx:id\u003d\"itemListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"github-amanda"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"github-amanda":8,"JayChenYJ":2,"-":50}},{"path":"src/test/data/JsonSerializableStoreMandoTest/duplicateItemStoreMando.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"  \"items\": [","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"github-amanda"},"content":"      \"name\": \"Apples\",","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"      \"quantity\": \"10\",","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"github-amanda"},"content":"      \"expiryDate\": \"2021-10-10\",","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"github-amanda"},"content":"      \"location\": \"Kitchen Basket\",","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"      \"tagged\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"Md-Fazil"},"content":"        \"favourite\"","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"      ]","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"github-amanda"},"content":"      \"name\": \"Apples\",","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"      \"quantity\": \"10\",","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"github-amanda"},"content":"      \"expiryDate\": \"2021-10-10\",","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"github-amanda"},"content":"      \"location\": \"Kitchen Basket\"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"  ]","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"github-amanda":6,"JayChenYJ":8,"Md-Fazil":3,"-":2}},{"path":"src/test/data/JsonSerializableStoreMandoTest/invalidItemStoreMando.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"  \"items\": [","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"      \"name\": \"Mustard\",","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"Md-Fazil"},"content":"      \"quantity\": \"9\",","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"      \"expirydate\": \"20010-1-1\",","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"      \"location\": \"Refrigerator\"","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"  ]","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JayChenYJ":4,"Md-Fazil":4,"-":2}},{"path":"src/test/data/JsonSerializableStoreMandoTest/typicalItemsStoreMando.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"  \"_comment\": \"StoreMando save file which contains the same item values as in TypicalItems#getTypicalStoreMando()\",","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"  \"items\": [","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"github-amanda"},"content":"      \"name\": \"Apples\",","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"github-amanda"},"content":"      \"quantity\": \"9\",","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"github-amanda"},"content":"      \"expiryDate\": \"2021-04-08\",","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"github-amanda"},"content":"      \"location\": \"Kitchen Basket\",","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"      \"tagged\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"        \"Expiring\"","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"      ]","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"      \"name\": \"Bread\",","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"      \"quantity\": \"1\",","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"github-amanda"},"content":"      \"expiryDate\": \"2021-04-08\",","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"      \"location\": \"Dining Table\",","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"      \"tagged\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"        \"Expiring\",","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"        \"Favourite\"","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"      ]","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"github-amanda"},"content":"      \"name\": \"Cream Cheese\",","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"      \"quantity\": \"1\",","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"      \"expiryDate\": \"2023-10-10\",","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"github-amanda"},"content":"      \"location\": \"Kitchen Drawer\",","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \"tagged\": []","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"github-amanda"},"content":"      \"name\": \"Donut\",","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"github-amanda"},"content":"      \"quantity\": \"5\",","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"github-amanda"},"content":"      \"expiryDate\": \"2021-10-10\",","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"github-amanda"},"content":"      \"location\": \"Refrigerator\",","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"      \"tagged\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"github-amanda"},"content":"        \"Favourite\"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"      ]","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"github-amanda"},"content":"      \"name\": \"Eggs\",","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"github-amanda"},"content":"      \"quantity\": \"10\",","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"github-amanda"},"content":"      \"expiryDate\": \"2021-10-10\",","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"github-amanda"},"content":"      \"location\": \"Kitchen Drawer\",","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \"tagged\": []","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"github-amanda"},"content":"      \"name\": \"Flour\",","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"github-amanda"},"content":"      \"quantity\": \"3\",","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"github-amanda"},"content":"      \"expiryDate\": \"2021-10-09\",","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"      \"location\": \"Kitchen Cabinet\",","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \"tagged\": []","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"github-amanda"},"content":"      \"name\": \"Ginger\",","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"      \"quantity\": \"20\",","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"Md-Fazil"},"content":"      \"expiryDate\": \"2021-10-08\",","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"github-amanda"},"content":"      \"location\": \"Kitchen Basket\",","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"      \"tagged\": []","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"  ]","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"github-amanda":21,"JayChenYJ":23,"Md-Fazil":12,"-":5}},{"path":"src/test/data/JsonStoreMandoStorageTest/invalidAndValidItemStoreMando.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"  \"items\": [","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"kumsssss"},"content":"      \"name\": \"Valid Item\",","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"github-amanda"},"content":"      \"quantity\": \"9482424\",","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"      \"expiryDate\": \"hans@example.com\",","lastModifiedDate":"2021-03-04"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"      \"location\": \"4th street\"","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"    },","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"github-amanda"},"content":"      \"name\": \"Item With Invalid Quantity Field\",","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"github-amanda"},"content":"      \"quantity\": \"948asdf2424\",","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"      \"expiryDate\": \"hans@example.com\",","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"      \"location\": \"4th street\"","lastModifiedDate":"2021-03-04"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"  ]","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kumsssss":1,"github-amanda":3,"JayChenYJ":6,"Md-Fazil":4,"-":2}},{"path":"src/test/data/JsonStoreMandoStorageTest/invalidItemStoreMando.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"  \"items\": [","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"    {","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"      \"itemName\": \"Item with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"github-amanda"},"content":"      \"quantity\": \"9482424\",","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"      \"expirydate\": \"hans@example.com\",","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"      \"location\": \"4th street\"","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"  ]","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"github-amanda":1,"JayChenYJ":6,"chewwh09":1,"-":2}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\": {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\": 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\": 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\": \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\": {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\": 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\": 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\": 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"  \"storeMandoFilePath\": \"storemando.json\"","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JayChenYJ":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\": {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\": 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\": 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\": {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\": 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\": 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"  \"storeMandoFilePath\": \"storemando.json\"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JayChenYJ":1,"-":10}},{"path":"src/test/java/seedu/storemando/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"        private final Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"JayChenYJ":2,"-":56}},{"path":"src/test/java/seedu/storemando/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"JayChenYJ":1,"-":26}},{"path":"src/test/java/seedu/storemando/commons/core/MessagesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.core;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"class MessagesTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    public void unknownCommandMessage_correctString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"        String message \u003d \"Unknown command\";","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(message, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    public void invalidCommandFormatMessage_correctString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"        String message \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(message, Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    public void invalidItemDisplayedIndexMessage_correctString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"        String message \u003d \"The item index provided is invalid\";","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(message, Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    public void moreThanOneItemListedMessage_correctString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        String message \u003d \"%1$d items listed!\";","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(message, Messages.MESSAGE_MORE_THAN_ONE_ITEM_LISTED_OVERVIEW);","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"    public void lessThanTwoItemsMessage_correctString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"        String message \u003d \"%1$d item listed!\";","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(message, Messages.MESSAGE_LESS_THAN_TWO_ITEMS_LISTED_OVERVIEW);","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"JayChenYJ":38}},{"path":"src/test/java/seedu/storemando/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                                              int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":2,"-":133}},{"path":"src/test/java/seedu/storemando/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.core.index;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"        final Index fifthItemIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(fifthItemIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(fifthItemIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(fifthItemIndex.equals(fifthItemIndex));","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(fifthItemIndex.equals(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(fifthItemIndex.equals(5.0f));","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(fifthItemIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JayChenYJ":9,"-":51}},{"path":"src/test/java/seedu/storemando/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"        assertNotNull(AppUtil.getImage(\"/images/storemando_32.png\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"JayChenYJ":3,"-":33}},{"path":"src/test/java/seedu/storemando/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"JayChenYJ":3,"-":105}},{"path":"src/test/java/seedu/storemando/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.Config;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JayChenYJ":4,"-":112}},{"path":"src/test/java/seedu/storemando/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":2,"-":21}},{"path":"src/test/java/seedu/storemando/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.SerializableTestClass;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.TestUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":3,"-":42}},{"path":"src/test/java/seedu/storemando/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"JayChenYJ"},"content":"    //---------------- Tests for containsPartialWordIgnoreCase --------------------------------------","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":128,"author":{"gitId":"JayChenYJ"},"content":"    /*","lastModifiedDate":"2021-03-07"},{"lineNumber":129,"author":{"gitId":"JayChenYJ"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2021-03-07"},{"lineNumber":130,"author":{"gitId":"JayChenYJ"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2021-03-07"},{"lineNumber":131,"author":{"gitId":"JayChenYJ"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2021-03-07"},{"lineNumber":132,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":133,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":134,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":135,"author":{"gitId":"JayChenYJ"},"content":"    public void containsPartialWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":136,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"JayChenYJ"},"content":"            StringUtil.containsPartialWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2021-03-08"},{"lineNumber":138,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":141,"author":{"gitId":"JayChenYJ"},"content":"    public void containsPartialWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":142,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2021-03-07"},{"lineNumber":143,"author":{"gitId":"JayChenYJ"},"content":"            -\u003e StringUtil.containsPartialWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2021-03-07"},{"lineNumber":144,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":145,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":146,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":147,"author":{"gitId":"JayChenYJ"},"content":"    public void containsPartialWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":148,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2021-03-07"},{"lineNumber":149,"author":{"gitId":"JayChenYJ"},"content":"            -\u003e StringUtil.containsPartialWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":150,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":151,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":152,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":153,"author":{"gitId":"JayChenYJ"},"content":"    public void containsPartialWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":154,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsPartialWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":155,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":156,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":157,"author":{"gitId":"JayChenYJ"},"content":"    /*","lastModifiedDate":"2021-03-07"},{"lineNumber":158,"author":{"gitId":"JayChenYJ"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2021-03-07"},{"lineNumber":159,"author":{"gitId":"JayChenYJ"},"content":"     *   - any word","lastModifiedDate":"2021-03-07"},{"lineNumber":160,"author":{"gitId":"JayChenYJ"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2021-03-07"},{"lineNumber":161,"author":{"gitId":"JayChenYJ"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2021-03-07"},{"lineNumber":162,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":163,"author":{"gitId":"JayChenYJ"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2021-03-07"},{"lineNumber":164,"author":{"gitId":"JayChenYJ"},"content":"     *   - empty string","lastModifiedDate":"2021-03-07"},{"lineNumber":165,"author":{"gitId":"JayChenYJ"},"content":"     *   - one word","lastModifiedDate":"2021-03-07"},{"lineNumber":166,"author":{"gitId":"JayChenYJ"},"content":"     *   - multiple words","lastModifiedDate":"2021-03-07"},{"lineNumber":167,"author":{"gitId":"JayChenYJ"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2021-03-07"},{"lineNumber":168,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":169,"author":{"gitId":"JayChenYJ"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2021-03-07"},{"lineNumber":170,"author":{"gitId":"JayChenYJ"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2021-03-07"},{"lineNumber":171,"author":{"gitId":"JayChenYJ"},"content":"     *   - last word in sentence","lastModifiedDate":"2021-03-07"},{"lineNumber":172,"author":{"gitId":"JayChenYJ"},"content":"     *   - middle word in sentence","lastModifiedDate":"2021-03-07"},{"lineNumber":173,"author":{"gitId":"JayChenYJ"},"content":"     *   - matches multiple words","lastModifiedDate":"2021-03-07"},{"lineNumber":174,"author":{"gitId":"JayChenYJ"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2021-03-07"},{"lineNumber":175,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":176,"author":{"gitId":"JayChenYJ"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2021-03-07"},{"lineNumber":177,"author":{"gitId":"JayChenYJ"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2021-03-07"},{"lineNumber":178,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":179,"author":{"gitId":"JayChenYJ"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2021-03-07"},{"lineNumber":180,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":181,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":182,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":183,"author":{"gitId":"JayChenYJ"},"content":"    public void containsPartialWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2021-03-07"},{"lineNumber":184,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":185,"author":{"gitId":"JayChenYJ"},"content":"        // Empty sentence","lastModifiedDate":"2021-03-07"},{"lineNumber":186,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2021-03-07"},{"lineNumber":187,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":188,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":189,"author":{"gitId":"JayChenYJ"},"content":"        // Sentence word matches part of the query word","lastModifiedDate":"2021-03-07"},{"lineNumber":190,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence","lastModifiedDate":"2021-03-07"},{"lineNumber":191,"author":{"gitId":"JayChenYJ"},"content":"        // word","lastModifiedDate":"2021-03-07"},{"lineNumber":192,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":193,"author":{"gitId":"JayChenYJ"},"content":"        // Query word matches part of a sentence word","lastModifiedDate":"2021-03-07"},{"lineNumber":194,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query","lastModifiedDate":"2021-03-07"},{"lineNumber":195,"author":{"gitId":"JayChenYJ"},"content":"        // word","lastModifiedDate":"2021-03-07"},{"lineNumber":196,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":197,"author":{"gitId":"JayChenYJ"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2021-03-07"},{"lineNumber":198,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2021-03-07"},{"lineNumber":199,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2021-03-07"},{"lineNumber":200,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2021-03-07"},{"lineNumber":201,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2021-03-07"},{"lineNumber":202,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2021-03-07"},{"lineNumber":203,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":204,"author":{"gitId":"JayChenYJ"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2021-03-07"},{"lineNumber":205,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":206,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":207,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"JayChenYJ":84,"-":141}},{"path":"src/test/java/seedu/storemando/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.EXPIRYDATE_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.LOCATION_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.NAME_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.QUANTITY_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.AddCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.CommandResult;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.ListCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ModelManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.storage.JsonStoreMandoStorage;","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.storage.StorageManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.ItemBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        JsonStoreMandoStorage storeMandoStorage \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"            new JsonStoreMandoStorage(temporaryFolder.resolve(\"storeMando.json\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"        StorageManager storage \u003d new StorageManager(storeMandoStorage, userPrefsStorage);","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"kumsssss"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"        // Setup LogicManager with JsonStoreMandoIoExceptionThrowingStub","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"        JsonStoreMandoStorage storeMandoStorage \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"            new JsonStoreMandoIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionStoreMando.json\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"        StorageManager storage \u003d new StorageManager(storeMandoStorage, userPrefsStorage);","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"github-amanda"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_CHEESE + QUANTITY_DESC_CHEESE + EXPIRYDATE_DESC_CHEESE","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"github-amanda"},"content":"            + LOCATION_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"github-amanda"},"content":"        Item expectedItem \u003d new ItemBuilder(CHEESE).withTags().build();","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"kumsssss"},"content":"        expectedModel.addItem(expectedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"kumsssss"},"content":"    public void getFilteredItemList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"kumsssss"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredItemList().remove(0));","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"JayChenYJ"},"content":"        Model expectedModel \u003d new ModelManager(model.getStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"JayChenYJ"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"JayChenYJ"},"content":"    private static class JsonStoreMandoIoExceptionThrowingStub extends JsonStoreMandoStorage {","lastModifiedDate":"2021-03-06"},{"lineNumber":158,"author":{"gitId":"JayChenYJ"},"content":"        private JsonStoreMandoIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"JayChenYJ"},"content":"        public void saveStoreMando(ReadOnlyStoreMando storeMando, Path filePath) throws IOException {","lastModifiedDate":"2021-03-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"github-amanda":8,"kumsssss":4,"JayChenYJ":35,"-":120}},{"path":"src/test/java/seedu/storemando/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ModelManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.ItemBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"        model \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"kumsssss"},"content":"    public void execute_newItem_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"kumsssss"},"content":"        Item validItem \u003d new ItemBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"        Model expectedModel \u003d new ModelManager(model.getStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"kumsssss"},"content":"        expectedModel.addItem(validItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"kumsssss"},"content":"        assertCommandSuccess(new AddCommand(validItem), model,","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"kumsssss"},"content":"            String.format(AddCommand.MESSAGE_SUCCESS, validItem), expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"kumsssss"},"content":"    public void execute_duplicateItem_throwsCommandException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"        Item itemInList \u003d model.getStoreMando().getItemList().get(0);","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"kumsssss"},"content":"        assertCommandFailure(new AddCommand(itemInList), model, AddCommand.MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kumsssss":7,"JayChenYJ":12,"-":26}},{"path":"src/test/java/seedu/storemando/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.model.expirydate.ExpiryDate.NO_EXPIRY_DATE;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"kumsssss"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"kumsssss"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.ItemBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"kumsssss"},"content":"    public void constructor_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"Md-Fazil"},"content":"    public void execute_itemAcceptedByModel_addSuccessful() throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"kumsssss"},"content":"        ModelStubAcceptingItemAdded modelStub \u003d new ModelStubAcceptingItemAdded();","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"kumsssss"},"content":"        Item validItem \u003d new ItemBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"kumsssss"},"content":"        CommandResult commandResult \u003d new AddCommand(validItem).execute(modelStub);","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"kumsssss"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validItem), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"        assertEquals(Arrays.asList(validItem), modelStub.itemsAdded);","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"Md-Fazil"},"content":"    public void execute_itemAcceptedByModel_addExpiredSuccessful() throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Md-Fazil"},"content":"        ModelStubAcceptingItemAdded modelStub \u003d new ModelStubAcceptingItemAdded();","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"        Item validItem \u003d new ItemBuilder().withExpiryDate(\"2010-10-10\").build();","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"Md-Fazil"},"content":"        CommandResult commandResult \u003d new AddCommand(validItem).execute(modelStub);","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS + AddCommand.MESSAGE_ITEM_EXPIRED_WARNING, validItem),","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(Arrays.asList(validItem), modelStub.itemsAdded);","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"kumsssss"},"content":"    public void execute_duplicateItem_throwsCommandException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"kumsssss"},"content":"        Item validItem \u003d new ItemBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"kumsssss"},"content":"        AddCommand addCommand \u003d new AddCommand(validItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"kumsssss"},"content":"        ModelStub modelStub \u003d new ModelStubWithItem(validItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":66,"author":{"gitId":"kumsssss"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_ITEM, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":69,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"kumsssss"},"content":"    public void execute_itemWithoutExpiryDate_success() throws CommandException {","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"kumsssss"},"content":"        ModelStubAcceptingItemAdded modelStub \u003d new ModelStubAcceptingItemAdded();","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"kumsssss"},"content":"        Item validItem \u003d new ItemBuilder().withExpiryDate(NO_EXPIRY_DATE).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"kumsssss"},"content":"        CommandResult commandResult \u003d new AddCommand(validItem).execute(modelStub);","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"kumsssss"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validItem), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"kumsssss"},"content":"        assertEquals(Arrays.asList(validItem), modelStub.itemsAdded);","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"kumsssss"},"content":"        Item alice \u003d new ItemBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"kumsssss"},"content":"        Item bob \u003d new ItemBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"kumsssss"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"JayChenYJ"},"content":"        public Path getStoreMandoFilePath() {","lastModifiedDate":"2021-03-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"JayChenYJ"},"content":"        public void setStoreMandoFilePath(Path storeMandoFilePath) {","lastModifiedDate":"2021-03-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"kumsssss"},"content":"        public void addItem(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"JayChenYJ"},"content":"        public void setStoreMando(ReadOnlyStoreMando newData) {","lastModifiedDate":"2021-03-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"JayChenYJ"},"content":"        public ReadOnlyStoreMando getStoreMando() {","lastModifiedDate":"2021-03-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"kumsssss"},"content":"        public boolean hasItem(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"kumsssss"},"content":"        public void deleteItem(Item target) {","lastModifiedDate":"2021-03-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"kumsssss"},"content":"        public void setItem(Item target, Item editedItem) {","lastModifiedDate":"2021-03-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"kumsssss"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"kumsssss"},"content":"        public void setItems(List\u003cItem\u003e itemList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"kumsssss"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"kumsssss"},"content":"        public ObservableList\u003cItem\u003e getFilteredItemList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"kumsssss"},"content":"        public void updateFilteredItemList(Predicate\u003cItem\u003e predicate) {","lastModifiedDate":"2021-03-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"kumsssss"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"kumsssss"},"content":"        public ObservableList\u003cItem\u003e getSortedItemList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"kumsssss"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"kumsssss"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"kumsssss"},"content":"        public void updateSortedItemList(Comparator\u003cItem\u003e comparator) {","lastModifiedDate":"2021-03-13"},{"lineNumber":191,"author":{"gitId":"kumsssss"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"kumsssss"},"content":"     * A Model stub that contains a single item.","lastModifiedDate":"2021-03-01"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"kumsssss"},"content":"    private class ModelStubWithItem extends ModelStub {","lastModifiedDate":"2021-03-01"},{"lineNumber":200,"author":{"gitId":"kumsssss"},"content":"        private final Item item;","lastModifiedDate":"2021-03-01"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"kumsssss"},"content":"        ModelStubWithItem(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":203,"author":{"gitId":"kumsssss"},"content":"            requireNonNull(item);","lastModifiedDate":"2021-03-01"},{"lineNumber":204,"author":{"gitId":"kumsssss"},"content":"            this.item \u003d item;","lastModifiedDate":"2021-03-01"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"kumsssss"},"content":"        public boolean hasItem(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":209,"author":{"gitId":"kumsssss"},"content":"            requireNonNull(item);","lastModifiedDate":"2021-03-01"},{"lineNumber":210,"author":{"gitId":"kumsssss"},"content":"            return this.item.isSameItem(item);","lastModifiedDate":"2021-03-01"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"kumsssss"},"content":"     * A Model stub that always accept the item being added.","lastModifiedDate":"2021-03-01"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"kumsssss"},"content":"    private class ModelStubAcceptingItemAdded extends ModelStub {","lastModifiedDate":"2021-03-01"},{"lineNumber":218,"author":{"gitId":"kumsssss"},"content":"        final ArrayList\u003cItem\u003e itemsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-02"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"kumsssss"},"content":"        public boolean hasItem(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":222,"author":{"gitId":"kumsssss"},"content":"            requireNonNull(item);","lastModifiedDate":"2021-03-01"},{"lineNumber":223,"author":{"gitId":"kumsssss"},"content":"            return itemsAdded.stream().anyMatch(item::isSameItem);","lastModifiedDate":"2021-03-02"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"kumsssss"},"content":"        public void addItem(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":228,"author":{"gitId":"kumsssss"},"content":"            requireNonNull(item);","lastModifiedDate":"2021-03-01"},{"lineNumber":229,"author":{"gitId":"kumsssss"},"content":"            itemsAdded.add(item);","lastModifiedDate":"2021-03-02"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"JayChenYJ"},"content":"        public ReadOnlyStoreMando getStoreMando() {","lastModifiedDate":"2021-03-06"},{"lineNumber":234,"author":{"gitId":"JayChenYJ"},"content":"            return new StoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"kumsssss":68,"JayChenYJ":17,"Md-Fazil":14,"-":139}},{"path":"src/test/java/seedu/storemando/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ModelManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"public class ClearCommandTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    public void execute_emptyStoreMando_success() {","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    public void execute_nonEmptyStoreMando_success() {","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"        Model model \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"        expectedModel.setStoreMando(new StoreMando());","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"JayChenYJ":32}},{"path":"src/test/java/seedu/storemando/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"JayChenYJ":1,"-":53}},{"path":"src/test/java/seedu/storemando/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_EXPIRYDATE;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.index.Index;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.EditItemDescriptorBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"github-amanda"},"content":"    public static final String VALID_NAME_CHEESE \u003d \"Cheese\";","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"github-amanda"},"content":"    public static final String VALID_NAME_BANANA \u003d \"Banana\";","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"github-amanda"},"content":"    public static final String VALID_QUANTITY_CHEESE \u003d \"1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"github-amanda"},"content":"    public static final String VALID_QUANTITY_BANANA \u003d \"2\";","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"github-amanda"},"content":"    public static final String VALID_EXPIRED_EXPIRYDATE_BANANA \u003d \"2017-10-11\";","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"github-amanda"},"content":"    public static final String VALID_EXPIRYDATE_CHEESE \u003d \"2020-10-11\";","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"github-amanda"},"content":"    public static final String VALID_EXPIRYDATE_BANANA \u003d \"2019-08-10\";","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"github-amanda"},"content":"    public static final String VALID_LOCATION_CHEESE \u003d \"Refrigerator\";","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"github-amanda"},"content":"    public static final String VALID_LOCATION_BANANA \u003d \"Kitchen\";","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"Essential\";","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"Md-Fazil"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"Favourite\";","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"github-amanda"},"content":"    public static final String NAME_DESC_CHEESE \u003d \" \" + PREFIX_NAME + VALID_NAME_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"github-amanda"},"content":"    public static final String NAME_DESC_BANANA \u003d \" \" + PREFIX_NAME + VALID_NAME_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"github-amanda"},"content":"    public static final String QUANTITY_DESC_CHEESE \u003d \" \" + PREFIX_QUANTITY + VALID_QUANTITY_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"github-amanda"},"content":"    public static final String QUANTITY_DESC_BANANA \u003d \" \" + PREFIX_QUANTITY + VALID_QUANTITY_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"github-amanda"},"content":"    public static final String EXPIRYDATE_DESC_CHEESE \u003d \" \" + PREFIX_EXPIRYDATE + VALID_EXPIRYDATE_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"github-amanda"},"content":"    public static final String EXPIRYDATE_DESC_BANANA \u003d \" \" + PREFIX_EXPIRYDATE + VALID_EXPIRYDATE_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"github-amanda"},"content":"    public static final String LOCATION_DESC_CHEESE \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"github-amanda"},"content":"    public static final String LOCATION_DESC_BANANA \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"github-amanda"},"content":"    public static final String INVALID_QUANTITY_DESC \u003d \" \" + PREFIX_QUANTITY + \"911a\"; // \u0027a\u0027 not allowed in quantities","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"    public static final String INVALID_EXPIRYDATE_DESC \u003d \" \" + PREFIX_EXPIRYDATE + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"    public static final String INVALID_LOCATION_DESC \u003d \" \" + PREFIX_LOCATION; // empty string not allowed for locations","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"Md-Fazil"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"github-amanda"},"content":"    public static final EditCommand.EditItemDescriptor DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"github-amanda"},"content":"    public static final EditCommand.EditItemDescriptor DESC_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"github-amanda"},"content":"        DESC_CHEESE \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_CHEESE)","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"github-amanda"},"content":"            .withQuantity(VALID_QUANTITY_CHEESE).withExpiryDate(VALID_EXPIRYDATE_CHEESE)","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"github-amanda"},"content":"            .withLocation(VALID_LOCATION_CHEESE)","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"Md-Fazil"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"github-amanda"},"content":"        DESC_BANANA \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_BANANA)","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"github-amanda"},"content":"            .withQuantity(VALID_QUANTITY_BANANA).withExpiryDate(VALID_EXPIRYDATE_BANANA)","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"github-amanda"},"content":"            .withLocation(VALID_LOCATION_BANANA)","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"Md-Fazil"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"JayChenYJ"},"content":"     * - the storemando, filtered item list and selected item in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"JayChenYJ"},"content":"        StoreMando expectedStoreMando \u003d new StoreMando(actualModel.getStoreMando());","lastModifiedDate":"2021-03-06"},{"lineNumber":112,"author":{"gitId":"kumsssss"},"content":"        List\u003cItem\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredItemList());","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":115,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(expectedStoreMando, actualModel.getStoreMando());","lastModifiedDate":"2021-03-06"},{"lineNumber":116,"author":{"gitId":"kumsssss"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredItemList());","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"kumsssss"},"content":"     * Updates {@code model}\u0027s filtered list to show only the item at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-01"},{"lineNumber":121,"author":{"gitId":"JayChenYJ"},"content":"     * {@code model}\u0027s storemando.","lastModifiedDate":"2021-03-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"kumsssss"},"content":"    public static void showItemAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-01"},{"lineNumber":124,"author":{"gitId":"kumsssss"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredItemList().size());","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"kumsssss"},"content":"        Item item \u003d model.getFilteredItemList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":127,"author":{"gitId":"chewwh09"},"content":"        final String[] splitName \u003d item.getItemName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-05"},{"lineNumber":128,"author":{"gitId":"JayChenYJ"},"content":"        model.updateFilteredItemList(new ItemNameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"kumsssss"},"content":"        assertEquals(1, model.getFilteredItemList().size());","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"kumsssss"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"kumsssss"},"content":"     * Updates {@code model}\u0027s filtered list to show an empty list based on the given {@code item}","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"kumsssss"},"content":"     * which is not in the {@code model}\u0027s StoreMando.","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"kumsssss"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"kumsssss"},"content":"    public static void showEmptyListAfterFind(Model model, Item item) {","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"kumsssss"},"content":"        final String[] splitName \u003d item.getItemName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"JayChenYJ"},"content":"        model.updateFilteredItemList(new ItemNameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"kumsssss"},"content":"        assertEquals(0, model.getFilteredItemList().size());","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"github-amanda":27,"kumsssss":17,"JayChenYJ":23,"Md-Fazil":9,"chewwh09":1,"-":67}},{"path":"src/test/java/seedu/storemando/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.showItemAtIndex;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.Messages;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.index.Index;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ModelManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    private final Model model \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"kumsssss"},"content":"        Item itemToDelete \u003d model.getFilteredItemList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"kumsssss"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"kumsssss"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_ITEM_SUCCESS, itemToDelete);","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"kumsssss"},"content":"        expectedModel.deleteItem(itemToDelete);","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredItemList().size() + 1);","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"kumsssss"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"kumsssss"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"kumsssss"},"content":"        Item itemToDelete \u003d model.getFilteredItemList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"kumsssss"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_ITEM_SUCCESS, itemToDelete);","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"        Model expectedModel \u003d new ModelManager(model.getStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"kumsssss"},"content":"        expectedModel.deleteItem(itemToDelete);","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"kumsssss"},"content":"        showNoItem(expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"kumsssss"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"kumsssss"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"        // ensures that outOfBoundIndex is still in bounds of storemando list","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStoreMando().getItemList().size());","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"kumsssss"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"kumsssss"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"kumsssss"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"kumsssss"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"kumsssss"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"kumsssss"},"content":"    private void showNoItem(Model model) {","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"kumsssss"},"content":"        model.updateFilteredItemList(p -\u003e false);","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"kumsssss"},"content":"        assertTrue(model.getFilteredItemList().isEmpty());","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kumsssss":22,"JayChenYJ":18,"-":69}},{"path":"src/test/java/seedu/storemando/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.DESC_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_EXPIRED_EXPIRYDATE_BANANA;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_NAME_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_QUANTITY_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Md-Fazil"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.showItemAtIndex;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.Messages;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.index.Index;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.EditCommand.EditItemDescriptor;","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ModelManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.EditItemDescriptorBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.ItemBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"    private final Model model \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"kumsssss"},"content":"        Item editedItem \u003d new ItemBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"kumsssss"},"content":"        EditCommand.EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder(editedItem).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"kumsssss"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM, descriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ITEM_SUCCESS, editedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        Model expectedModel \u003d new ModelManager(new StoreMando(model.getStoreMando()), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"kumsssss"},"content":"        expectedModel.setItem(model.getFilteredItemList().get(0), editedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_unexpiredSuccess() {","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"kumsssss"},"content":"        Index indexLastItem \u003d Index.fromOneBased(model.getFilteredItemList().size());","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"kumsssss"},"content":"        Item lastItem \u003d model.getFilteredItemList().get(indexLastItem.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"kumsssss"},"content":"        ItemBuilder itemInList \u003d new ItemBuilder(lastItem);","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"github-amanda"},"content":"        Item editedItem \u003d itemInList.withName(VALID_NAME_BANANA).withQuantity(VALID_QUANTITY_BANANA)","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"            .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"github-amanda"},"content":"        EditCommand.EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_BANANA)","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"github-amanda"},"content":"            .withQuantity(VALID_QUANTITY_BANANA).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"kumsssss"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastItem, descriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"kumsssss"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ITEM_SUCCESS, editedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"        Model expectedModel \u003d new ModelManager(new StoreMando(model.getStoreMando()), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"kumsssss"},"content":"        expectedModel.setItem(lastItem, editedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"Md-Fazil"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"Md-Fazil"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_expiredSuccess() {","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"Md-Fazil"},"content":"        Index indexLastItem \u003d Index.fromOneBased(model.getFilteredItemList().size());","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"Md-Fazil"},"content":"        Item lastItem \u003d model.getFilteredItemList().get(indexLastItem.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"Md-Fazil"},"content":"        ItemBuilder itemInList \u003d new ItemBuilder(lastItem);","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"github-amanda"},"content":"        Item editedItem \u003d itemInList.withName(VALID_NAME_BANANA).withQuantity(VALID_QUANTITY_BANANA)","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"github-amanda"},"content":"            .withExpiryDate(VALID_EXPIRED_EXPIRYDATE_BANANA).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"github-amanda"},"content":"        EditCommand.EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_BANANA)","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"github-amanda"},"content":"            .withQuantity(VALID_QUANTITY_BANANA).withExpiryDate(VALID_EXPIRED_EXPIRYDATE_BANANA)","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"github-amanda"},"content":"            .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"Md-Fazil"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastItem, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"Md-Fazil"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ITEM_SUCCESS","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"Md-Fazil"},"content":"            + EditCommand.MESSAGE_ITEM_EXPIRED_WARNING, editedItem);","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"Md-Fazil"},"content":"        Model expectedModel \u003d new ModelManager(new StoreMando(model.getStoreMando()), new UserPrefs());","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"Md-Fazil"},"content":"        expectedModel.setItem(lastItem, editedItem);","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"Md-Fazil"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"Md-Fazil"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"kumsssss"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM, new EditCommand.EditItemDescriptor());","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"Md-Fazil"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"Md-Fazil"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"Md-Fazil"},"content":"    public void execute_filteredList_unexpiredsuccess() {","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"kumsssss"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"kumsssss"},"content":"        Item itemInFilteredList \u003d model.getFilteredItemList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"github-amanda"},"content":"        Item editedItem \u003d new ItemBuilder(itemInFilteredList).withName(VALID_NAME_BANANA).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"kumsssss"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM,","lastModifiedDate":"2021-03-01"},{"lineNumber":107,"author":{"gitId":"github-amanda"},"content":"            new EditItemDescriptorBuilder().withName(VALID_NAME_BANANA).build());","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"kumsssss"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ITEM_SUCCESS, editedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"JayChenYJ"},"content":"        Model expectedModel \u003d new ModelManager(new StoreMando(model.getStoreMando()), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":112,"author":{"gitId":"kumsssss"},"content":"        expectedModel.setItem(model.getFilteredItemList().get(0), editedItem);","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"Md-Fazil"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"Md-Fazil"},"content":"    public void execute_filteredList_expiredsuccess() {","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"Md-Fazil"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"Md-Fazil"},"content":"        Item itemInFilteredList \u003d model.getFilteredItemList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":121,"author":{"gitId":"github-amanda"},"content":"        Item editedItem \u003d new ItemBuilder(itemInFilteredList).withName(VALID_NAME_BANANA)","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"github-amanda"},"content":"            .withExpiryDate(VALID_EXPIRED_EXPIRYDATE_BANANA).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"Md-Fazil"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM,","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"github-amanda"},"content":"            new EditItemDescriptorBuilder().withName(VALID_NAME_BANANA).withExpiryDate(VALID_EXPIRED_EXPIRYDATE_BANANA)","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"Md-Fazil"},"content":"                .build());","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"Md-Fazil"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ITEM_SUCCESS","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"Md-Fazil"},"content":"            + EditCommand.MESSAGE_ITEM_EXPIRED_WARNING, editedItem);","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"Md-Fazil"},"content":"        Model expectedModel \u003d new ModelManager(new StoreMando(model.getStoreMando()), new UserPrefs());","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"Md-Fazil"},"content":"        expectedModel.setItem(model.getFilteredItemList().get(0), editedItem);","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"Md-Fazil"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"kumsssss"},"content":"    public void execute_duplicateItemUnfilteredList_failure() {","lastModifiedDate":"2021-03-01"},{"lineNumber":138,"author":{"gitId":"kumsssss"},"content":"        Item firstItem \u003d model.getFilteredItemList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":139,"author":{"gitId":"kumsssss"},"content":"        EditCommand.EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder(firstItem).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":140,"author":{"gitId":"kumsssss"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_ITEM, descriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":141,"author":{"gitId":"kumsssss"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"kumsssss"},"content":"    public void execute_duplicateItemFilteredList_failure() {","lastModifiedDate":"2021-03-01"},{"lineNumber":146,"author":{"gitId":"kumsssss"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"JayChenYJ"},"content":"        // edit item in filtered list into a duplicate in storemando","lastModifiedDate":"2021-03-06"},{"lineNumber":149,"author":{"gitId":"JayChenYJ"},"content":"        Item itemInList \u003d model.getStoreMando().getItemList().get(INDEX_SECOND_ITEM.getZeroBased());","lastModifiedDate":"2021-03-06"},{"lineNumber":150,"author":{"gitId":"kumsssss"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM,","lastModifiedDate":"2021-03-01"},{"lineNumber":151,"author":{"gitId":"kumsssss"},"content":"            new EditItemDescriptorBuilder(itemInList).build());","lastModifiedDate":"2021-03-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"kumsssss"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"Md-Fazil"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":157,"author":{"gitId":"Md-Fazil"},"content":"    public void execute_allSameFieldsSpecifiedUnfilteredList_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":158,"author":{"gitId":"Md-Fazil"},"content":"        Item firstItem \u003d model.getFilteredItemList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":159,"author":{"gitId":"Md-Fazil"},"content":"        EditCommand.EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder(firstItem).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":160,"author":{"gitId":"Md-Fazil"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM, descriptor);","lastModifiedDate":"2021-03-07"},{"lineNumber":161,"author":{"gitId":"Md-Fazil"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-03-07"},{"lineNumber":162,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":163,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":164,"author":{"gitId":"Md-Fazil"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":165,"author":{"gitId":"Md-Fazil"},"content":"    public void execute_someSameFieldsSpecifiedUnfilteredList_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":166,"author":{"gitId":"Md-Fazil"},"content":"        Index indexLastItem \u003d Index.fromOneBased(model.getFilteredItemList().size());","lastModifiedDate":"2021-03-07"},{"lineNumber":167,"author":{"gitId":"Md-Fazil"},"content":"        Item lastItem \u003d model.getFilteredItemList().get(indexLastItem.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":168,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":169,"author":{"gitId":"Md-Fazil"},"content":"        EditCommand.EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder()","lastModifiedDate":"2021-03-07"},{"lineNumber":170,"author":{"gitId":"Md-Fazil"},"content":"            .withName(lastItem.getItemName().toString()).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":171,"author":{"gitId":"Md-Fazil"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastItem, descriptor);","lastModifiedDate":"2021-03-07"},{"lineNumber":172,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":173,"author":{"gitId":"Md-Fazil"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-03-07"},{"lineNumber":174,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":175,"author":{"gitId":"Md-Fazil"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2021-03-07"},{"lineNumber":176,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":177,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":178,"author":{"gitId":"Md-Fazil"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":179,"author":{"gitId":"Md-Fazil"},"content":"    public void execute_allSameFieldsSpecifiedFilteredList_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":180,"author":{"gitId":"Md-Fazil"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-03-07"},{"lineNumber":181,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":182,"author":{"gitId":"Md-Fazil"},"content":"        // edit item in filtered list into a duplicate in storemando","lastModifiedDate":"2021-03-07"},{"lineNumber":183,"author":{"gitId":"Md-Fazil"},"content":"        Item itemInList \u003d model.getStoreMando().getItemList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":184,"author":{"gitId":"Md-Fazil"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM,","lastModifiedDate":"2021-03-07"},{"lineNumber":185,"author":{"gitId":"Md-Fazil"},"content":"            new EditItemDescriptorBuilder(itemInList).build());","lastModifiedDate":"2021-03-07"},{"lineNumber":186,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":187,"author":{"gitId":"Md-Fazil"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-03-07"},{"lineNumber":188,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":189,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":190,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":191,"author":{"gitId":"Md-Fazil"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":192,"author":{"gitId":"Md-Fazil"},"content":"    public void execute_someSameFieldsSpecifiedFilteredList_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":193,"author":{"gitId":"Md-Fazil"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-03-07"},{"lineNumber":194,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":195,"author":{"gitId":"Md-Fazil"},"content":"        // edit item in filtered list into a duplicate in storemando","lastModifiedDate":"2021-03-07"},{"lineNumber":196,"author":{"gitId":"Md-Fazil"},"content":"        Item itemInList \u003d model.getStoreMando().getItemList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":197,"author":{"gitId":"Md-Fazil"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM,","lastModifiedDate":"2021-03-07"},{"lineNumber":198,"author":{"gitId":"Md-Fazil"},"content":"            new EditItemDescriptorBuilder().withQuantity(itemInList.getQuantity().toString()).build());","lastModifiedDate":"2021-03-07"},{"lineNumber":199,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":200,"author":{"gitId":"Md-Fazil"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-03-07"},{"lineNumber":201,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":202,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":204,"author":{"gitId":"kumsssss"},"content":"    public void execute_invalidItemIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-01"},{"lineNumber":205,"author":{"gitId":"kumsssss"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredItemList().size() + 1);","lastModifiedDate":"2021-03-01"},{"lineNumber":206,"author":{"gitId":"github-amanda"},"content":"        EditCommand.EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_BANANA).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":209,"author":{"gitId":"kumsssss"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":214,"author":{"gitId":"JayChenYJ"},"content":"     * but smaller than size of storemando","lastModifiedDate":"2021-03-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":217,"author":{"gitId":"kumsssss"},"content":"    public void execute_invalidItemIndexFilteredList_failure() {","lastModifiedDate":"2021-03-01"},{"lineNumber":218,"author":{"gitId":"kumsssss"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":219,"author":{"gitId":"kumsssss"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2021-03-01"},{"lineNumber":220,"author":{"gitId":"JayChenYJ"},"content":"        // ensures that outOfBoundIndex is still in bounds of storemando list","lastModifiedDate":"2021-03-06"},{"lineNumber":221,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStoreMando().getItemList().size());","lastModifiedDate":"2021-03-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":224,"author":{"gitId":"github-amanda"},"content":"            new EditItemDescriptorBuilder().withName(VALID_NAME_BANANA).build());","lastModifiedDate":"2021-03-14"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":226,"author":{"gitId":"kumsssss"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":231,"author":{"gitId":"github-amanda"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_ITEM, DESC_CHEESE);","lastModifiedDate":"2021-03-14"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":234,"author":{"gitId":"github-amanda"},"content":"        EditItemDescriptor copyDescriptor \u003d new EditCommand.EditItemDescriptor(DESC_CHEESE);","lastModifiedDate":"2021-03-14"},{"lineNumber":235,"author":{"gitId":"kumsssss"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_ITEM, copyDescriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":248,"author":{"gitId":"github-amanda"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_ITEM, DESC_CHEESE)));","lastModifiedDate":"2021-03-14"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":251,"author":{"gitId":"github-amanda"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_ITEM, DESC_BANANA)));","lastModifiedDate":"2021-03-14"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"github-amanda":24,"kumsssss":35,"JayChenYJ":26,"Md-Fazil":87,"-":82}},{"path":"src/test/java/seedu/storemando/logic/commands/EditItemDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.DESC_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_EXPIRYDATE_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_LOCATION_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_NAME_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_QUANTITY_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.EditCommand.EditItemDescriptor;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.EditItemDescriptorBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"kumsssss"},"content":"public class EditItemDescriptorTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"github-amanda"},"content":"        EditItemDescriptor descriptorWithSameValues \u003d new EditCommand.EditItemDescriptor(DESC_CHEESE);","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"github-amanda"},"content":"        assertTrue(DESC_CHEESE.equals(descriptorWithSameValues));","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"github-amanda"},"content":"        assertTrue(DESC_CHEESE.equals(DESC_CHEESE));","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"github-amanda"},"content":"        assertFalse(DESC_CHEESE.equals(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"github-amanda"},"content":"        assertFalse(DESC_CHEESE.equals(5));","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"github-amanda"},"content":"        assertFalse(DESC_CHEESE.equals(DESC_BANANA));","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"github-amanda"},"content":"        EditItemDescriptor editedCheese \u003d new EditItemDescriptorBuilder(DESC_CHEESE)","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"github-amanda"},"content":"            .withName(VALID_NAME_BANANA).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"github-amanda"},"content":"        assertFalse(DESC_CHEESE.equals(editedCheese));","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"github-amanda"},"content":"        // different quantity -\u003e returns false","lastModifiedDate":"2021-03-05"},{"lineNumber":44,"author":{"gitId":"github-amanda"},"content":"        editedCheese \u003d new EditItemDescriptorBuilder(DESC_CHEESE).withQuantity(VALID_QUANTITY_BANANA).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"github-amanda"},"content":"        assertFalse(DESC_CHEESE.equals(editedCheese));","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"        // different expirydate -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"github-amanda"},"content":"        editedCheese \u003d new EditItemDescriptorBuilder(DESC_CHEESE).withExpiryDate(VALID_EXPIRYDATE_BANANA).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"github-amanda"},"content":"        assertFalse(DESC_CHEESE.equals(editedCheese));","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"github-amanda"},"content":"        editedCheese \u003d new EditItemDescriptorBuilder(DESC_CHEESE).withLocation(VALID_LOCATION_BANANA).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"github-amanda"},"content":"        assertFalse(DESC_CHEESE.equals(editedCheese));","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"github-amanda"},"content":"        editedCheese \u003d new EditItemDescriptorBuilder(DESC_CHEESE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"github-amanda"},"content":"        assertFalse(DESC_CHEESE.equals(editedCheese));","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"github-amanda":24,"kumsssss":1,"JayChenYJ":6,"-":28}},{"path":"src/test/java/seedu/storemando/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ModelManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"public class ExitCommandTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"JayChenYJ":20}},{"path":"src/test/java/seedu/storemando/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_LESS_THAN_TWO_ITEMS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_MORE_THAN_ONE_ITEM_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.CREAM;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.EGGS;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.FLOUR;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ModelManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemNameContainsPartialKeywordsPredicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    private final Model model \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    public void equalsKeywords() {","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"        ItemNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"            new ItemNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        ItemNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"            new ItemNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"    public void equalsPartialKeywords() {","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"        ItemNameContainsPartialKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"            new ItemNameContainsPartialKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"        ItemNameContainsPartialKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"            new ItemNameContainsPartialKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"kumsssss"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"kumsssss"},"content":"    public void execute_zeroKeywords_noItemFound() {","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_LESS_THAN_TWO_ITEMS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-06"},{"lineNumber":89,"author":{"gitId":"JayChenYJ"},"content":"        ItemNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"kumsssss"},"content":"        expectedModel.updateFilteredItemList(predicate);","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"kumsssss"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredItemList());","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"kumsssss"},"content":"    public void execute_multipleKeywords_multipleItemsFound() {","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"JayChenYJ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MORE_THAN_ONE_ITEM_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-06"},{"lineNumber":99,"author":{"gitId":"github-amanda"},"content":"        ItemNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Cream Eggs Flour\");","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"kumsssss"},"content":"        expectedModel.updateFilteredItemList(predicate);","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"github-amanda"},"content":"        assertEquals(Arrays.asList(CREAM, EGGS, FLOUR), model.getFilteredItemList());","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":"     * Parses {@code userInput} into a {@code ItemNameContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":109,"author":{"gitId":"JayChenYJ"},"content":"    private ItemNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-03-06"},{"lineNumber":110,"author":{"gitId":"JayChenYJ"},"content":"        return new ItemNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"github-amanda":5,"kumsssss":6,"JayChenYJ":48,"-":53}},{"path":"src/test/java/seedu/storemando/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ModelManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"public class HelpCommandTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    public void execute_help_success() {","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"JayChenYJ":20}},{"path":"src/test/java/seedu/storemando/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.showItemAtIndex;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ModelManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"        model \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"        expectedModel \u003d new ModelManager(model.getStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"kumsssss"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kumsssss":1,"JayChenYJ":10,"-":28}},{"path":"src/test/java/seedu/storemando/logic/commands/ReminderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import static seedu.storemando.testutil.TypicalItems.APPLE;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"import static seedu.storemando.testutil.TypicalItems.BREAD;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMando;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.model.ModelManager;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ItemExpiringPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"public class ReminderCommandTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"    public void equals() {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"        ItemExpiringPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"            new ItemExpiringPredicate((long) 3);","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"        ItemExpiringPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"            new ItemExpiringPredicate((long) 7);","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"        ReminderCommand reminderFirstCommand \u003d new ReminderCommand(firstPredicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"        ReminderCommand reminderSecondCommand \u003d new ReminderCommand(secondPredicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"        assertTrue(reminderFirstCommand.equals(reminderFirstCommand));","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"        ReminderCommand reminderFirstCommandCopy \u003d new ReminderCommand(firstPredicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"        assertTrue(reminderFirstCommand.equals(reminderFirstCommandCopy));","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"        assertFalse(reminderFirstCommand.equals(1));","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"chewwh09"},"content":"        assertFalse(reminderFirstCommand.equals(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"chewwh09"},"content":"        // different Item -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"chewwh09"},"content":"        assertFalse(reminderFirstCommand.equals(reminderSecondCommand));","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"chewwh09"},"content":"    public void execute_multipleItemsFound() {","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"        ItemExpiringPredicate predicate \u003d new ItemExpiringPredicate((long) 30);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"chewwh09"},"content":"        expectedModel.updateFilteredItemList(predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"chewwh09"},"content":"        assertEquals(Arrays.asList(APPLE, BREAD), expectedModel.getFilteredItemList());","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"chewwh09"},"content":"    public void execute_noItemsFound() {","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"chewwh09"},"content":"        ItemExpiringPredicate predicate \u003d new ItemExpiringPredicate(Long.MIN_VALUE);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"chewwh09"},"content":"        expectedModel.updateFilteredItemList(predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"chewwh09"},"content":"        assertEquals(Arrays.asList(), expectedModel.getFilteredItemList());","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"chewwh09"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JayChenYJ":1,"chewwh09":62}},{"path":"src/test/java/seedu/storemando/logic/commands/SortExpiryDateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kumsssss"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"kumsssss"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"kumsssss"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.showEmptyListAfterFind;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.HEATER;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMando;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMandoSortedByExpiryDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMandoSortedByQuantity;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"kumsssss"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.model.ModelManager;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":"class SortExpiryDateCommandTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"kumsssss"},"content":"    void execute_sortNonEmptyStoreMandoByExpiryDate_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"kumsssss"},"content":"        Model model \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"kumsssss"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"        expectedModel.setStoreMando(getTypicalStoreMandoSortedByExpiryDate());","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"        assertCommandSuccess(new SortExpiryDateCommand(), model,","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"kumsssss"},"content":"            SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"kumsssss"},"content":"    void execute_sortEmptyStoreMandoByExpiryDate_failure() {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"kumsssss"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"kumsssss"},"content":"        assertCommandFailure(new SortExpiryDateCommand(), model,","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"kumsssss"},"content":"            SortCommand.MESSAGE_NO_ITEMS_TO_SORT);","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"kumsssss"},"content":"    void execute_sortSortedStoreMando_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"kumsssss"},"content":"        Model model \u003d new ModelManager(getTypicalStoreMandoSortedByExpiryDate(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"kumsssss"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalStoreMandoSortedByExpiryDate(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"        assertCommandSuccess(new SortExpiryDateCommand(), model,","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"kumsssss"},"content":"            SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"kumsssss"},"content":"    void execute_sortStoreMandoSortedByQuantity_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"kumsssss"},"content":"        Model model \u003d new ModelManager(getTypicalStoreMandoSortedByQuantity(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"kumsssss"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalStoreMandoSortedByExpiryDate(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"kumsssss"},"content":"        assertCommandSuccess(new SortExpiryDateCommand(), model,","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"kumsssss"},"content":"            SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"kumsssss"},"content":"    void execute_sortEmptyFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"kumsssss"},"content":"        Model model \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"github-amanda"},"content":"        showEmptyListAfterFind(model, HEATER);","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"kumsssss"},"content":"        assertCommandFailure(new SortExpiryDateCommand(), model,","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"kumsssss"},"content":"            SortCommand.MESSAGE_NO_ITEMS_TO_SORT);","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"kumsssss"},"content":"    void equals() {","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"kumsssss"},"content":"        final SortExpiryDateCommand standardCommand \u003d new SortExpiryDateCommand();","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"kumsssss"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"kumsssss"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"kumsssss"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"kumsssss"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"kumsssss"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"kumsssss"},"content":"        assertFalse(standardCommand.equals(new SortQuantityCommand()));","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"kumsssss"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kumsssss":78,"github-amanda":2}},{"path":"src/test/java/seedu/storemando/logic/commands/SortQuantityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kumsssss"},"content":"package seedu.storemando.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"kumsssss"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"kumsssss"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.showEmptyListAfterFind;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.HEATER;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMando;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMandoSortedByExpiryDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMandoSortedByQuantity;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"kumsssss"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.model.ModelManager;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":"class SortQuantityCommandTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"kumsssss"},"content":"    void execute_sortNonEmptyStoreMandoByQuantity_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"kumsssss"},"content":"        Model model \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"kumsssss"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"        expectedModel.setStoreMando(getTypicalStoreMandoSortedByQuantity());","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"        assertCommandSuccess(new SortQuantityCommand(), model,","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"kumsssss"},"content":"            SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"kumsssss"},"content":"    void execute_sortEmptyStoreMandoByQuantity_throwsCommandException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"kumsssss"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"kumsssss"},"content":"        assertCommandFailure(new SortQuantityCommand(), model,","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"kumsssss"},"content":"            SortCommand.MESSAGE_NO_ITEMS_TO_SORT);","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"kumsssss"},"content":"    void execute_sortSortedStoreMando_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"kumsssss"},"content":"        Model model \u003d new ModelManager(getTypicalStoreMandoSortedByQuantity(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"kumsssss"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalStoreMandoSortedByQuantity(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"        assertCommandSuccess(new SortQuantityCommand(), model,","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"kumsssss"},"content":"            SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"kumsssss"},"content":"    void execute_sortStoreMandoSortedByExpiryDate_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"kumsssss"},"content":"        Model model \u003d new ModelManager(getTypicalStoreMandoSortedByExpiryDate(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"kumsssss"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalStoreMandoSortedByQuantity(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"kumsssss"},"content":"        assertCommandSuccess(new SortQuantityCommand(), model,","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"kumsssss"},"content":"            SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"kumsssss"},"content":"    void execute_sortEmptyFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"kumsssss"},"content":"        Model model \u003d new ModelManager(getTypicalStoreMando(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"github-amanda"},"content":"        showEmptyListAfterFind(model, HEATER);","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"kumsssss"},"content":"        assertCommandFailure(new SortQuantityCommand(), model,","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"kumsssss"},"content":"            SortCommand.MESSAGE_NO_ITEMS_TO_SORT);","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"kumsssss"},"content":"    void equals() {","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"kumsssss"},"content":"        final SortQuantityCommand standardCommand \u003d new SortQuantityCommand();","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"kumsssss"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"kumsssss"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"kumsssss"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"kumsssss"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"kumsssss"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"kumsssss"},"content":"        assertFalse(standardCommand.equals(new SortExpiryDateCommand()));","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"kumsssss"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kumsssss":77,"github-amanda":2}},{"path":"src/test/java/seedu/storemando/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.EXPIRYDATE_DESC_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.EXPIRYDATE_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.INVALID_EXPIRYDATE_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.INVALID_QUANTITY_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.LOCATION_DESC_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.LOCATION_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.NAME_DESC_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.NAME_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.QUANTITY_DESC_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.QUANTITY_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_EXPIRYDATE_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_LOCATION_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_NAME_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_QUANTITY_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.AddCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ExpiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemName;","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Location;","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Quantity;","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.ItemBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"github-amanda"},"content":"        Item expectedItem \u003d new ItemBuilder(BANANA).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"github-amanda"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BANANA + QUANTITY_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"github-amanda"},"content":"            + EXPIRYDATE_DESC_BANANA + LOCATION_DESC_BANANA + TAG_DESC_FRIEND, new AddCommand(expectedItem));","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"github-amanda"},"content":"        assertParseSuccess(parser, NAME_DESC_CHEESE + NAME_DESC_BANANA + QUANTITY_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"github-amanda"},"content":"            + EXPIRYDATE_DESC_BANANA + LOCATION_DESC_BANANA + TAG_DESC_FRIEND, new AddCommand(expectedItem));","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"github-amanda"},"content":"        // multiple quantities - last quantity accepted","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"github-amanda"},"content":"        assertParseSuccess(parser, NAME_DESC_BANANA + QUANTITY_DESC_CHEESE + QUANTITY_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"github-amanda"},"content":"            + EXPIRYDATE_DESC_BANANA + LOCATION_DESC_BANANA + TAG_DESC_FRIEND, new AddCommand(expectedItem));","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"        // multiple emails - last expirydate accepted","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"github-amanda"},"content":"        assertParseSuccess(parser, NAME_DESC_BANANA + QUANTITY_DESC_BANANA + EXPIRYDATE_DESC_CHEESE","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"github-amanda"},"content":"            + EXPIRYDATE_DESC_BANANA + LOCATION_DESC_BANANA + TAG_DESC_FRIEND, new AddCommand(expectedItem));","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"        // multiple addresses - last location accepted","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"github-amanda"},"content":"        assertParseSuccess(parser, NAME_DESC_BANANA + QUANTITY_DESC_BANANA + EXPIRYDATE_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"github-amanda"},"content":"            + LOCATION_DESC_CHEESE + LOCATION_DESC_BANANA + TAG_DESC_FRIEND, new AddCommand(expectedItem));","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"github-amanda"},"content":"        Item expectedItemMultipleTags \u003d new ItemBuilder(BANANA).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":74,"author":{"gitId":"github-amanda"},"content":"        assertParseSuccess(parser, NAME_DESC_BANANA + QUANTITY_DESC_BANANA + EXPIRYDATE_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"github-amanda"},"content":"            + LOCATION_DESC_BANANA + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedItemMultipleTags));","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"github-amanda"},"content":"        Item expectedItem \u003d new ItemBuilder(CHEESE).withTags().build();","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"github-amanda"},"content":"        assertParseSuccess(parser, NAME_DESC_CHEESE + QUANTITY_DESC_CHEESE + EXPIRYDATE_DESC_CHEESE","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"github-amanda"},"content":"                + LOCATION_DESC_CHEESE,","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"kumsssss"},"content":"            new AddCommand(expectedItem));","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, VALID_NAME_BANANA + QUANTITY_DESC_BANANA + EXPIRYDATE_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"github-amanda"},"content":"            + LOCATION_DESC_BANANA, expectedMessage);","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"github-amanda"},"content":"        // missing quantity prefix","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, NAME_DESC_BANANA + VALID_QUANTITY_BANANA + EXPIRYDATE_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"github-amanda"},"content":"            + LOCATION_DESC_BANANA, expectedMessage);","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"JayChenYJ"},"content":"        // missing location prefix","lastModifiedDate":"2021-03-06"},{"lineNumber":101,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, NAME_DESC_BANANA + QUANTITY_DESC_BANANA + EXPIRYDATE_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"github-amanda"},"content":"            + VALID_LOCATION_BANANA, expectedMessage);","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, VALID_NAME_BANANA + VALID_QUANTITY_BANANA + VALID_EXPIRYDATE_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"github-amanda"},"content":"            + VALID_LOCATION_BANANA, expectedMessage);","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + QUANTITY_DESC_BANANA + EXPIRYDATE_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"github-amanda"},"content":"            + LOCATION_DESC_BANANA + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, ItemName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"github-amanda"},"content":"        // invalid quantity","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, NAME_DESC_BANANA + INVALID_QUANTITY_DESC + EXPIRYDATE_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"github-amanda"},"content":"            + LOCATION_DESC_BANANA + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"JayChenYJ"},"content":"        // invalid expirydate","lastModifiedDate":"2021-03-06"},{"lineNumber":120,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, NAME_DESC_BANANA + QUANTITY_DESC_BANANA + INVALID_EXPIRYDATE_DESC","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"github-amanda"},"content":"            + LOCATION_DESC_BANANA + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, ExpiryDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"JayChenYJ"},"content":"        // invalid location","lastModifiedDate":"2021-03-06"},{"lineNumber":124,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, NAME_DESC_BANANA + QUANTITY_DESC_BANANA + EXPIRYDATE_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"github-amanda"},"content":"            + INVALID_LOCATION_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, NAME_DESC_BANANA + QUANTITY_DESC_BANANA + EXPIRYDATE_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"github-amanda"},"content":"            + LOCATION_DESC_BANANA + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + QUANTITY_DESC_BANANA + EXPIRYDATE_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"github-amanda"},"content":"            + INVALID_LOCATION_DESC, ItemName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BANANA + QUANTITY_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"github-amanda"},"content":"                + EXPIRYDATE_DESC_BANANA + LOCATION_DESC_BANANA + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"github-amanda":58,"kumsssss":1,"JayChenYJ":30,"-":51}},{"path":"src/test/java/seedu/storemando/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"JayChenYJ":1,"-":149}},{"path":"src/test/java/seedu/storemando/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.Command;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"JayChenYJ":3,"-":35}},{"path":"src/test/java/seedu/storemando/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    private final DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_ITEM));","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kumsssss":1,"JayChenYJ":7,"-":24}},{"path":"src/test/java/seedu/storemando/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.EXPIRYDATE_DESC_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.EXPIRYDATE_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.INVALID_EXPIRYDATE_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.INVALID_QUANTITY_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.LOCATION_DESC_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.LOCATION_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.NAME_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.QUANTITY_DESC_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.QUANTITY_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_EXPIRYDATE_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_EXPIRYDATE_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_LOCATION_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_LOCATION_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_NAME_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_QUANTITY_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_QUANTITY_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalIndexes.INDEX_THIRD_ITEM;","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.index.Index;","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.EditCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.EditCommand.EditItemDescriptor;","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ExpiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemName;","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Location;","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Quantity;","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.EditItemDescriptorBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, VALID_NAME_CHEESE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_CHEESE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_CHEESE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"chewwh09"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, ItemName.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, \"1\" + INVALID_QUANTITY_DESC, Quantity.MESSAGE_CONSTRAINTS); // invalid quantity","lastModifiedDate":"2021-03-05"},{"lineNumber":86,"author":{"gitId":"Md-Fazil"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EXPIRYDATE_DESC, ExpiryDate.MESSAGE_CONSTRAINTS); // invalid expirydate","lastModifiedDate":"2021-03-04"},{"lineNumber":87,"author":{"gitId":"Md-Fazil"},"content":"        assertParseFailure(parser, \"1\" + INVALID_LOCATION_DESC, Location.MESSAGE_CONSTRAINTS); // invalid location","lastModifiedDate":"2021-03-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"        // invalid quantity followed by valid expirydate","lastModifiedDate":"2021-03-06"},{"lineNumber":91,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, \"1\" + INVALID_QUANTITY_DESC + EXPIRYDATE_DESC_CHEESE,","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"github-amanda"},"content":"            Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"github-amanda"},"content":"        // valid quantity followed by invalid quantity. The test case for invalid quantity followed by valid quantity","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, \"1\" + QUANTITY_DESC_BANANA + INVALID_QUANTITY_DESC,","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"github-amanda"},"content":"            Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"kumsssss"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Item} being edited,","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"Md-Fazil"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"github-amanda"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":103,"author":{"gitId":"Md-Fazil"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"github-amanda"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":105,"author":{"gitId":"Md-Fazil"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"github-amanda"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"github-amanda"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EXPIRYDATE_DESC + VALID_LOCATION_CHEESE","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"github-amanda"},"content":"            + VALID_QUANTITY_CHEESE, ItemName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"kumsssss"},"content":"        Index targetIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"github-amanda"},"content":"        String userInput \u003d targetIndex.getOneBased() + QUANTITY_DESC_BANANA + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"github-amanda"},"content":"            + EXPIRYDATE_DESC_CHEESE + LOCATION_DESC_CHEESE + NAME_DESC_CHEESE + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"github-amanda"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_CHEESE)","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"github-amanda"},"content":"            .withQuantity(VALID_QUANTITY_BANANA).withExpiryDate(VALID_EXPIRYDATE_CHEESE)","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"github-amanda"},"content":"            .withLocation(VALID_LOCATION_CHEESE).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"kumsssss"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITEM;","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"github-amanda"},"content":"        String userInput \u003d targetIndex.getOneBased() + QUANTITY_DESC_BANANA + EXPIRYDATE_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"github-amanda"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withQuantity(VALID_QUANTITY_BANANA)","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"github-amanda"},"content":"            .withExpiryDate(VALID_EXPIRYDATE_CHEESE).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"kumsssss"},"content":"        Index targetIndex \u003d INDEX_THIRD_ITEM;","lastModifiedDate":"2021-03-01"},{"lineNumber":144,"author":{"gitId":"github-amanda"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"github-amanda"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_CHEESE).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"github-amanda"},"content":"        // quantity","lastModifiedDate":"2021-03-01"},{"lineNumber":150,"author":{"gitId":"github-amanda"},"content":"        userInput \u003d targetIndex.getOneBased() + QUANTITY_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"github-amanda"},"content":"        descriptor \u003d new EditItemDescriptorBuilder().withQuantity(VALID_QUANTITY_CHEESE).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"JayChenYJ"},"content":"        // expirydate","lastModifiedDate":"2021-03-06"},{"lineNumber":156,"author":{"gitId":"github-amanda"},"content":"        userInput \u003d targetIndex.getOneBased() + EXPIRYDATE_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"github-amanda"},"content":"        descriptor \u003d new EditItemDescriptorBuilder().withExpiryDate(VALID_EXPIRYDATE_CHEESE).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"JayChenYJ"},"content":"        // location","lastModifiedDate":"2021-03-06"},{"lineNumber":162,"author":{"gitId":"github-amanda"},"content":"        userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"github-amanda"},"content":"        descriptor \u003d new EditItemDescriptorBuilder().withLocation(VALID_LOCATION_CHEESE).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"Md-Fazil"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-08"},{"lineNumber":169,"author":{"gitId":"Md-Fazil"},"content":"        descriptor \u003d new EditItemDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":176,"author":{"gitId":"kumsssss"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITEM;","lastModifiedDate":"2021-03-01"},{"lineNumber":177,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":178,"author":{"gitId":"github-amanda"},"content":"        String userInput \u003d targetIndex.getOneBased() + QUANTITY_DESC_CHEESE + LOCATION_DESC_CHEESE","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"github-amanda"},"content":"            + EXPIRYDATE_DESC_CHEESE + TAG_DESC_FRIEND + QUANTITY_DESC_CHEESE + LOCATION_DESC_CHEESE","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"github-amanda"},"content":"            + EXPIRYDATE_DESC_CHEESE + TAG_DESC_FRIEND + QUANTITY_DESC_BANANA + LOCATION_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"github-amanda"},"content":"            + EXPIRYDATE_DESC_BANANA + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":183,"author":{"gitId":"github-amanda"},"content":"        EditCommand.EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withQuantity(VALID_QUANTITY_BANANA)","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"github-amanda"},"content":"            .withExpiryDate(VALID_EXPIRYDATE_BANANA).withLocation(VALID_LOCATION_BANANA).withTags(VALID_TAG_FRIEND,","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"Md-Fazil"},"content":"                VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"kumsssss"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITEM;","lastModifiedDate":"2021-03-01"},{"lineNumber":195,"author":{"gitId":"github-amanda"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_QUANTITY_DESC + QUANTITY_DESC_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"github-amanda"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withQuantity(VALID_QUANTITY_BANANA).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"github-amanda"},"content":"        userInput \u003d targetIndex.getOneBased() + EXPIRYDATE_DESC_BANANA + INVALID_QUANTITY_DESC + LOCATION_DESC_BANANA","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"github-amanda"},"content":"            + QUANTITY_DESC_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"github-amanda"},"content":"        descriptor \u003d new EditItemDescriptorBuilder().withQuantity(VALID_QUANTITY_BANANA)","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"github-amanda"},"content":"            .withExpiryDate(VALID_EXPIRYDATE_BANANA).withLocation(VALID_LOCATION_BANANA).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":211,"author":{"gitId":"kumsssss"},"content":"        Index targetIndex \u003d INDEX_THIRD_ITEM;","lastModifiedDate":"2021-03-01"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"kumsssss"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"github-amanda":57,"kumsssss":8,"JayChenYJ":27,"Md-Fazil":15,"chewwh09":1,"-":111}},{"path":"src/test/java/seedu/storemando/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.FindCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    public void parse_validArgs_nonGenericFindReturnsFindCommand() {","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"            new FindCommand(new ItemNameContainsKeywordsPredicate(Arrays.asList(\"Chocolate\", \"Tofu\")));","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        assertParseSuccess(parser, \"Chocolate Tofu\", expectedFindCommand);","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"        assertParseSuccess(parser, \" \\n Chocolate \\n \\t Tofu  \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"JayChenYJ":16,"-":18}},{"path":"src/test/java/seedu/storemando/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import static seedu.storemando.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.logic.commands.ListCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"    private final ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"        ListCommand expectedListCommand \u003d new ListCommand();","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"        assertParseSuccess(parser, \"     \", expectedListCommand);","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"chewwh09":18}},{"path":"src/test/java/seedu/storemando/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ExpiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemName;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Location;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Quantity;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    private static final String INVALID_QUANTITY \u003d \"+651234\";","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    private static final String INVALID_EXPIRYDATE \u003d \"12-12-11\";","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"    private static final String VALID_QUANTITY \u003d \"123456\";","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"    private static final String VALID_EXPIRYDATE \u003d \"2020-10-10\";","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"    private static final String VALID_LOCATION \u003d \"123 Main Street #0505\";","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"kumsssss"},"content":"        assertEquals(INDEX_FIRST_ITEM, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"        assertEquals(INDEX_FIRST_ITEM, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"chewwh09"},"content":"        ItemName expectedName \u003d new ItemName(VALID_NAME);","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"chewwh09"},"content":"        ItemName expectedName \u003d new ItemName(VALID_NAME);","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"github-amanda"},"content":"    public void parseQuantity_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseQuantity(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"github-amanda"},"content":"    public void parseQuantity_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"github-amanda"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseQuantity(INVALID_QUANTITY));","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"github-amanda"},"content":"    public void parseQuantity_validValueWithoutWhitespace_returnsQuantity() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"github-amanda"},"content":"        Quantity expectedQuantity \u003d new Quantity(VALID_QUANTITY);","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"github-amanda"},"content":"        assertEquals(expectedQuantity, ParserUtil.parseQuantity(VALID_QUANTITY));","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"github-amanda"},"content":"    public void parseQuantity_validValueWithWhitespace_returnsTrimmedQuantity() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"github-amanda"},"content":"        String quantityWithWhitespace \u003d WHITESPACE + VALID_QUANTITY + WHITESPACE;","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"github-amanda"},"content":"        Quantity expectedQuantity \u003d new Quantity(VALID_QUANTITY);","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"github-amanda"},"content":"        assertEquals(expectedQuantity, ParserUtil.parseQuantity(quantityWithWhitespace));","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":"    public void parseLocation_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"JayChenYJ"},"content":"    public void parseLocation_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(INVALID_LOCATION));","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"JayChenYJ"},"content":"    public void parseLocation_validValueWithoutWhitespace_returnsLocation() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":118,"author":{"gitId":"JayChenYJ"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2021-03-01"},{"lineNumber":119,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(VALID_LOCATION));","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"JayChenYJ"},"content":"    public void parseLocation_validValueWithWhitespace_returnsTrimmedLocation() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":124,"author":{"gitId":"JayChenYJ"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_LOCATION + WHITESPACE;","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"JayChenYJ"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2021-03-01"},{"lineNumber":126,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(addressWithWhitespace));","lastModifiedDate":"2021-03-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"Md-Fazil"},"content":"    public void parseExpiryDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseExpiryDate(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"Md-Fazil"},"content":"    public void parseExpiryDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":136,"author":{"gitId":"Md-Fazil"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseExpiryDate(INVALID_EXPIRYDATE));","lastModifiedDate":"2021-03-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"Md-Fazil"},"content":"    public void parseExpiryDate_validValueWithoutWhitespace_returnsExpiryDate() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":141,"author":{"gitId":"Md-Fazil"},"content":"        ExpiryDate expectedExpiryDate \u003d new ExpiryDate(VALID_EXPIRYDATE);","lastModifiedDate":"2021-03-01"},{"lineNumber":142,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(expectedExpiryDate, ParserUtil.parseExpiryDate(VALID_EXPIRYDATE));","lastModifiedDate":"2021-03-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"Md-Fazil"},"content":"    public void parseExpiryDate_validValueWithWhitespace_returnsTrimmedExpiryDate() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":147,"author":{"gitId":"Md-Fazil"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EXPIRYDATE + WHITESPACE;","lastModifiedDate":"2021-03-01"},{"lineNumber":148,"author":{"gitId":"Md-Fazil"},"content":"        ExpiryDate expectedExpiryDate \u003d new ExpiryDate(VALID_EXPIRYDATE);","lastModifiedDate":"2021-03-01"},{"lineNumber":149,"author":{"gitId":"Md-Fazil"},"content":"        assertEquals(expectedExpiryDate, ParserUtil.parseExpiryDate(emailWithWhitespace));","lastModifiedDate":"2021-03-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"kumsssss":2,"github-amanda":10,"JayChenYJ":25,"Md-Fazil":16,"chewwh09":2,"-":142}},{"path":"src/test/java/seedu/storemando/logic/parser/ReminderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import static seedu.storemando.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import static seedu.storemando.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.logic.commands.ReminderCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ItemExpiringPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"public class ReminderCommandParserTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"    private final ReminderCommandParser parser \u003d new ReminderCommandParser();","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"        assertParseFailure(parser, \"  \",","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"    public void parse_validSingleArg_returnsReminderCommand() {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"        long numOfDays \u003d 3;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"        ReminderCommand expectedReminderCommand \u003d new ReminderCommand(new ItemExpiringPredicate(numOfDays));","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"        assertParseSuccess(parser, \"3\", expectedReminderCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"    public void parse_validSMultipleArg_returnsReminderCommand() {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"        long numOfDays \u003d 14;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"        ReminderCommand expectedReminderCommand \u003d new ReminderCommand(new ItemExpiringPredicate(numOfDays));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"        assertParseSuccess(parser, \"2 weeks\", expectedReminderCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"    public void parse_inValidArgs_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"        assertParseFailure(parser, \"chocolate\",","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"        assertParseFailure(parser, \"2 chocolate\",","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"        assertParseFailure(parser, \"2 chocolate factory\",","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"chewwh09"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"chewwh09"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JayChenYJ":1,"chewwh09":46}},{"path":"src/test/java/seedu/storemando/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kumsssss"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"kumsssss"},"content":"import static seedu.storemando.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"kumsssss"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.logic.commands.SortCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.logic.commands.SortExpiryDateCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.logic.commands.SortQuantityCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"kumsssss"},"content":"class SortCommandParserTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"kumsssss"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"kumsssss"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":"        assertParseFailure(parser, \"     \", expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"kumsssss"},"content":"    public void parse_invalidArgument_throwsParseException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"kumsssss"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"kumsssss"},"content":"        assertParseFailure(parser, \"location\", expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"        assertParseFailure(parser, \"name\", expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"kumsssss"},"content":"        assertParseFailure(parser, \"item\", expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"kumsssss"},"content":"        assertParseFailure(parser, \"store\", expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"kumsssss"},"content":"        assertParseFailure(parser, \"expiry\", expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"kumsssss"},"content":"        assertParseFailure(parser, \"q\", expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"kumsssss"},"content":"        assertParseFailure(parser, \"quantities\", expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"kumsssss"},"content":"        assertParseFailure(parser, \"expirDate\", expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"kumsssss"},"content":"        assertParseFailure(parser, \"quant1ty\", expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"kumsssss"},"content":"        assertParseFailure(parser, \"room\", expectedMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"kumsssss"},"content":"    public void parse_validArgment_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"kumsssss"},"content":"        SortExpiryDateCommand expectedExpiryDateCommand \u003d new SortExpiryDateCommand();","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"kumsssss"},"content":"        SortQuantityCommand expectedQuantityCommand \u003d new SortQuantityCommand();","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"        //check for valid quantity user inputs","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"kumsssss"},"content":"        assertParseSuccess(parser, \"quantity\", expectedQuantityCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"kumsssss"},"content":"        assertParseSuccess(parser, \"QUANTITY\", expectedQuantityCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"kumsssss"},"content":"        assertParseSuccess(parser, \"QuanTITy\", expectedQuantityCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"kumsssss"},"content":"        assertParseSuccess(parser, \"qUaNtItY\", expectedQuantityCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"kumsssss"},"content":"        //check for valid expiryDate user inputs","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"kumsssss"},"content":"        assertParseSuccess(parser, \"expiryDate\", expectedExpiryDateCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"kumsssss"},"content":"        assertParseSuccess(parser, \"expirydate\", expectedExpiryDateCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"kumsssss"},"content":"        assertParseSuccess(parser, \"EXPIRYDATE\", expectedExpiryDateCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"kumsssss"},"content":"        assertParseSuccess(parser, \"EXPIRYdate\", expectedExpiryDateCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"kumsssss"},"content":"        assertParseSuccess(parser, \"ExPiRyDaTe\", expectedExpiryDateCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kumsssss":57}},{"path":"src/test/java/seedu/storemando/logic/parser/StoreMandoParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.AddCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.EditCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.FindCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.ListCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.logic.commands.ReminderCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.logic.commands.SortCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"import seedu.storemando.logic.commands.SortQuantityCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.EditItemDescriptorBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.ItemBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.ItemUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"public class StoreMandoParserTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    private final StoreMandoParser parser \u003d new StoreMandoParser();","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"kumsssss"},"content":"        Item item \u003d new ItemBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"kumsssss"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ItemUtil.getAddCommand(item));","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"kumsssss"},"content":"        assertEquals(new AddCommand(item), command);","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"kumsssss"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ITEM.getOneBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"kumsssss"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_ITEM), command);","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"kumsssss"},"content":"        Item item \u003d new ItemBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"kumsssss"},"content":"        EditCommand.EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder(item).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"kumsssss"},"content":"            + INDEX_FIRST_ITEM.getOneBased() + \" \" + ItemUtil.getEditItemDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"kumsssss"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_ITEM, descriptor), command);","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"            FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(new FindCommand(new ItemNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"kumsssss"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"kumsssss"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"kumsssss"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" expiryDate\") instanceof SortCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"kumsssss"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" quantity\") instanceof SortQuantityCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"chewwh09"},"content":"    public void parseCommand_reminder() throws Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"chewwh09"},"content":"        assertTrue(parser.parseCommand(ReminderCommand.COMMAND_WORD + \" 3\") instanceof ReminderCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"chewwh09"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"chewwh09"},"content":"            ReminderCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"reminder\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"chewwh09"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"chewwh09"},"content":"            ReminderCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"reminder xyz\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kumsssss":16,"JayChenYJ":25,"chewwh09":10,"-":66}},{"path":"src/test/java/seedu/storemando/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.model.Model.PREDICATE_SHOW_ALL_ITEMS;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.APPLE;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.BREAD;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.StoreMandoBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(new StoreMando(), new StoreMando(modelManager.getStoreMando()));","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"        userPrefs.setStoreMandoFilePath(Paths.get(\"storemando/book/file/path\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"        userPrefs.setStoreMandoFilePath(Paths.get(\"new/storemando/book/file/path\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"    public void setStoreMandoFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setStoreMandoFilePath(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"    public void setStoreMandoFilePath_validPath_setsStoreMandoFilePath() {","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"        Path path \u003d Paths.get(\"storemando/book/file/path\");","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"        modelManager.setStoreMandoFilePath(path);","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(path, modelManager.getStoreMandoFilePath());","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"kumsssss"},"content":"    public void hasItem_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"kumsssss"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasItem(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"    public void hasItem_itemNotInStoreMando_returnsFalse() {","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"github-amanda"},"content":"        assertFalse(modelManager.hasItem(APPLE));","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"    public void hasItem_itemInStoreMando_returnsTrue() {","lastModifiedDate":"2021-03-06"},{"lineNumber":87,"author":{"gitId":"github-amanda"},"content":"        modelManager.addItem(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"github-amanda"},"content":"        assertTrue(modelManager.hasItem(APPLE));","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"kumsssss"},"content":"    public void getFilteredItemList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"kumsssss"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredItemList().remove(0));","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"github-amanda"},"content":"        StoreMando storeMando \u003d new StoreMandoBuilder().withItem(APPLE).withItem(BREAD).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"JayChenYJ"},"content":"        StoreMando differentStoreMando \u003d new StoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"JayChenYJ"},"content":"        modelManager \u003d new ModelManager(storeMando, userPrefs);","lastModifiedDate":"2021-03-06"},{"lineNumber":104,"author":{"gitId":"JayChenYJ"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(storeMando, userPrefs);","lastModifiedDate":"2021-03-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"JayChenYJ"},"content":"        // different storeMando -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":117,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentStoreMando, userPrefs)));","lastModifiedDate":"2021-03-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"github-amanda"},"content":"        String[] keywords \u003d APPLE.getItemName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"JayChenYJ"},"content":"        modelManager.updateFilteredItemList(new ItemNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(modelManager.equals(new ModelManager(storeMando, userPrefs)));","lastModifiedDate":"2021-03-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"kumsssss"},"content":"        modelManager.updateFilteredItemList(PREDICATE_SHOW_ALL_ITEMS);","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"JayChenYJ"},"content":"        differentUserPrefs.setStoreMandoFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":131,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(modelManager.equals(new ModelManager(storeMando, differentUserPrefs)));","lastModifiedDate":"2021-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"github-amanda":8,"kumsssss":5,"JayChenYJ":26,"-":94}},{"path":"src/test/java/seedu/storemando/model/StoreMandoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_QUANTITY_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.APPLE;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import java.util.List;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.ItemBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"public class StoreMandoTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    private final StoreMando storeMando \u003d new StoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    public void constructor() {","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(Collections.emptyList(), storeMando.getItemList());","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e storeMando.resetData(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"    public void resetData_withValidReadOnlyStoreMando_replacesData() {","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"        StoreMando newData \u003d getTypicalStoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"        storeMando.resetData(newData);","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(newData, storeMando);","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"    public void resetData_withDuplicateItems_throwsDuplicateItemException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"        // Two items with the same identity fields","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"github-amanda"},"content":"        Item editedApple \u003d new ItemBuilder(APPLE).withQuantity(VALID_QUANTITY_BANANA).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"            .build();","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"github-amanda"},"content":"        List\u003cItem\u003e newItems \u003d Arrays.asList(APPLE, editedApple);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"        StoreMandoStub newData \u003d new StoreMandoStub(newItems);","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e storeMando.resetData(newData));","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"    public void hasItem_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e storeMando.hasItem(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"    public void hasItem_itemNotInStoreMando_returnsFalse() {","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"github-amanda"},"content":"        assertFalse(storeMando.hasItem(APPLE));","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"    public void hasItem_itemInStoreMando_returnsTrue() {","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"github-amanda"},"content":"        storeMando.addItem(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"github-amanda"},"content":"        assertTrue(storeMando.hasItem(APPLE));","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"    public void hasItem_itemWithSameIdentityFieldsInStoreMando_returnsTrue() {","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"github-amanda"},"content":"        storeMando.addItem(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"github-amanda"},"content":"        Item editedApple \u003d new ItemBuilder(APPLE).withQuantity(VALID_QUANTITY_BANANA).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"            .build();","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"github-amanda"},"content":"        assertTrue(storeMando.hasItem(editedApple));","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":"    public void getItemList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e storeMando.getItemList().remove(0));","lastModifiedDate":"2021-03-06"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":"     * A stub ReadOnlyStoreMando whose items list can violate interface constraints.","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":89,"author":{"gitId":"JayChenYJ"},"content":"    private static class StoreMandoStub implements ReadOnlyStoreMando {","lastModifiedDate":"2021-03-06"},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"        private final ObservableList\u003cItem\u003e items \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-06"},{"lineNumber":91,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":92,"author":{"gitId":"JayChenYJ"},"content":"        StoreMandoStub(Collection\u003cItem\u003e items) {","lastModifiedDate":"2021-03-06"},{"lineNumber":93,"author":{"gitId":"JayChenYJ"},"content":"            this.items.setAll(items);","lastModifiedDate":"2021-03-06"},{"lineNumber":94,"author":{"gitId":"JayChenYJ"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":95,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":96,"author":{"gitId":"JayChenYJ"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":97,"author":{"gitId":"JayChenYJ"},"content":"        public ObservableList\u003cItem\u003e getItemList() {","lastModifiedDate":"2021-03-06"},{"lineNumber":98,"author":{"gitId":"JayChenYJ"},"content":"            return items;","lastModifiedDate":"2021-03-06"},{"lineNumber":99,"author":{"gitId":"JayChenYJ"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":100,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":101,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":102,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"github-amanda":10,"JayChenYJ":92}},{"path":"src/test/java/seedu/storemando/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    public void setStoreMandoFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setStoreMandoFilePath(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"JayChenYJ":4,"-":17}},{"path":"src/test/java/seedu/storemando/model/item/ExpiryDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"Md-Fazil"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"Md-Fazil"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"Md-Fazil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ExpiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"public class ExpiryDateTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"Md-Fazil"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"Md-Fazil"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"Md-Fazil"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ExpiryDate(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"Md-Fazil"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    public void constructor_invalidExpiryDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"        String invalidExpiryDate \u003d \"\";","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ExpiryDate(invalidExpiryDate));","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"Md-Fazil"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"Md-Fazil"},"content":"    public void isValidExpiryDate() {","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"        // null expirydate","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"        assertThrows(NullPointerException.class, () -\u003e ExpiryDate.isValidExpiryDate(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        // blank expirydate","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"Md-Fazil"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"\")); // empty string","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\" \")); // spaces only","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"        // missing parts","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"2020-10\")); // missing DD","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"20201010\")); // missing \u0027-\u0027 symbol","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"10-10\")); // missing YYYY","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"2020-1-10\")); // missing digit for MM","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"20-11-01\")); // missing digit for YYYY","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"2020-11-1\")); // missing digit for DD","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"Md-Fazil"},"content":"        // invalid parts","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"2010-10-40\")); // invalid DD","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"2010-20-01\")); // invalid MM","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"2020-1 0-11\")); // spaces in DD","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"20 20-10-11\")); // spaces in YYYY","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\" 2020-10-10\")); // leading space","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"2021-10-10 \")); // trailing space","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"20a1-10-10\")); // alphabets in YYYY","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"2020-02-30\")); // Invalid expiryDate for february","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"20-20-10-10\")); // \u0027-\u0027 symbol in YYYY","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"10-02-2019\")); // expiryDate not in YYYY-MM-DD format","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"kumsssss"},"content":"        assertFalse(ExpiryDate.isValidExpiryDate(\"@2010-07-10\")); // expiryDate starts with symbol","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"kumsssss"},"content":"        // valid expiryDate","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"kumsssss"},"content":"        assertTrue(ExpiryDate.isValidExpiryDate(\"2020-10-10\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"        assertTrue(ExpiryDate.isValidExpiryDate(\"2020-01-01\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"kumsssss"},"content":"        assertTrue(ExpiryDate.isValidExpiryDate(\"0001-10-10\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"Md-Fazil"},"content":"        assertTrue(ExpiryDate.isValidExpiryDate(\"0000-10-10\"));","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"Md-Fazil"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"Md-Fazil"},"content":"    public void isExpiryDatePastCurrentDate() {","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"Md-Fazil"},"content":"        // no expiryDate","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Md-Fazil"},"content":"        assertFalse(new ExpiryDate(\"No Expiry Date\").isPastCurrentDate());","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"Md-Fazil"},"content":"        // expiryDates not past current date","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"Md-Fazil"},"content":"        assertFalse(new ExpiryDate(\"2021-12-02\").isPastCurrentDate());","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"Md-Fazil"},"content":"        assertFalse(new ExpiryDate(\"2023-10-10\").isPastCurrentDate());","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"Md-Fazil"},"content":"        assertFalse(new ExpiryDate(\"2021-11-21\").isPastCurrentDate());","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"Md-Fazil"},"content":"        assertFalse(new ExpiryDate(\"2021-10-09\").isPastCurrentDate());","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"Md-Fazil"},"content":"        assertFalse(new ExpiryDate(\"2022-11-01\").isPastCurrentDate());","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"Md-Fazil"},"content":"        // expiryDates past current date","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"Md-Fazil"},"content":"        assertTrue(new ExpiryDate(\"2012-01-01\").isPastCurrentDate());","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"Md-Fazil"},"content":"        assertTrue(new ExpiryDate(\"2017-11-20\").isPastCurrentDate());","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"Md-Fazil"},"content":"        assertTrue(new ExpiryDate(\"2021-03-11\").isPastCurrentDate());","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"Md-Fazil"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"kumsssss":23,"JayChenYJ":6,"Md-Fazil":51}},{"path":"src/test/java/seedu/storemando/model/item/ItemExpiringPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ItemExpiringPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.testutil.ItemBuilder;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"public class ItemExpiringPredicateTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"    public void equals() {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"        long firstPredicateNumOfDays \u003d 3;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"        long secondPredicateNumOfDays \u003d 7;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"        ItemExpiringPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"            new ItemExpiringPredicate((firstPredicateNumOfDays));","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"        ItemExpiringPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"            new ItemExpiringPredicate((secondPredicateNumOfDays));","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"        ItemExpiringPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"            new ItemExpiringPredicate(firstPredicateNumOfDays);","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"chewwh09"},"content":"    public void test_daysToExpiryDate() {","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"        // Item expiring in 3 days and search for items within 3 days","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"chewwh09"},"content":"        ItemExpiringPredicate predicate \u003d new ItemExpiringPredicate((long) 3);","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"chewwh09"},"content":"        LocalDate threeDayAfterToday \u003d LocalDate.now().plusDays(3);","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"chewwh09"},"content":"        assertTrue(predicate.test(new ItemBuilder().withExpiryDate(threeDayAfterToday.toString()).build()));","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"chewwh09"},"content":"        // Item expiring in 1 week and search for items within 3 days","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"chewwh09"},"content":"        LocalDate oneWeekAfterToday \u003d LocalDate.now().plusDays(7);","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"        assertFalse(predicate.test(new ItemBuilder().withExpiryDate(oneWeekAfterToday.toString()).build()));","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"chewwh09"},"content":"    public void test_itemWithoutExpiringDate() {","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"chewwh09"},"content":"        ItemExpiringPredicate predicate \u003d new ItemExpiringPredicate((long) 3);","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"chewwh09"},"content":"        assertFalse(predicate.test(new ItemBuilder().withExpiryDate(\"No Expiry Date\").build()));","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"chewwh09"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JayChenYJ":1,"chewwh09":58}},{"path":"src/test/java/seedu/storemando/model/item/ItemNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.ItemBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"public class ItemNameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"        ItemNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"            new ItemNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"        ItemNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"            new ItemNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"        ItemNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"            new ItemNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"kumsssss"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"        ItemNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"            new ItemNameContainsKeywordsPredicate(Collections.singletonList(\"Apple\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Banana\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"        predicate \u003d new ItemNameContainsKeywordsPredicate(Arrays.asList(\"Apple\", \"Banana\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Banana\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        predicate \u003d new ItemNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Cherry\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Cherry\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"        predicate \u003d new ItemNameContainsKeywordsPredicate(Arrays.asList(\"aPPle\", \"bANANA\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Banana\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"        // One keyword","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"        predicate \u003d new ItemNameContainsKeywordsPredicate(Collections.singletonList(\"Apple\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Banana\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"        predicate \u003d new ItemNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Banana\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Banana\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"        predicate \u003d new ItemNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Cherry\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Cherry\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"        predicate \u003d new ItemNameContainsKeywordsPredicate(Arrays.asList(\"aPPle\", \"bANANA\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Banana\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"JayChenYJ"},"content":"        ItemNameContainsKeywordsPredicate predicate \u003d new ItemNameContainsKeywordsPredicate(Collections.emptyList()","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"        );","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"kumsssss"},"content":"        assertFalse(predicate.test(new ItemBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"        predicate \u003d new ItemNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"kumsssss"},"content":"        assertFalse(predicate.test(new ItemBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"kumsssss"},"content":"        // Keywords match quantity, expiryDate and location, but does not match name","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"JayChenYJ"},"content":"        predicate \u003d new ItemNameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"2020-10-10\", \"Main\", \"Street\")","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"JayChenYJ"},"content":"        );","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"github-amanda"},"content":"        assertFalse(predicate.test(new ItemBuilder().withName(\"Alice\").withQuantity(\"12345\")","lastModifiedDate":"2021-03-05"},{"lineNumber":95,"author":{"gitId":"Md-Fazil"},"content":"            .withExpiryDate(\"2020-10-10\").withLocation(\"Main Street\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kumsssss":4,"github-amanda":1,"JayChenYJ":39,"Md-Fazil":1,"-":52}},{"path":"src/test/java/seedu/storemando/model/item/ItemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_EXPIRYDATE_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_LOCATION_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_NAME_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_QUANTITY_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.APPLE;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.ItemBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"kumsssss"},"content":"public class ItemTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"kumsssss"},"content":"        Item item \u003d new ItemBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"kumsssss"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e item.getTags().remove(0));","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"    public void isSameItem() {","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"github-amanda"},"content":"        assertTrue(APPLE.isSameItem(APPLE));","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"github-amanda"},"content":"        assertFalse(APPLE.isSameItem(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"kumsssss"},"content":"        // same name and location, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"github-amanda"},"content":"        Item editedApple \u003d new ItemBuilder(APPLE).withQuantity(VALID_QUANTITY_BANANA)","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"github-amanda"},"content":"            .withExpiryDate(VALID_EXPIRYDATE_BANANA).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"github-amanda"},"content":"        assertTrue(APPLE.isSameItem(editedApple));","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"kumsssss"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"github-amanda"},"content":"        editedApple \u003d new ItemBuilder(APPLE).withQuantity(VALID_QUANTITY_BANANA).withExpiryDate(VALID_EXPIRYDATE_BANANA)","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"github-amanda"},"content":"            .withLocation(VALID_LOCATION_BANANA).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"github-amanda"},"content":"        assertFalse(APPLE.isSameItem(editedApple));","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"github-amanda"},"content":"        editedApple \u003d new ItemBuilder(APPLE).withName(VALID_NAME_BANANA).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"github-amanda"},"content":"        assertFalse(APPLE.isSameItem(editedApple));","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"kumsssss"},"content":"        // different location, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"github-amanda"},"content":"        editedApple \u003d new ItemBuilder(APPLE).withLocation(VALID_LOCATION_BANANA).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"github-amanda"},"content":"        assertFalse(APPLE.isSameItem(editedApple));","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"github-amanda"},"content":"        Item editedBanana \u003d new ItemBuilder(BANANA).withName(VALID_NAME_BANANA.toLowerCase()).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"github-amanda"},"content":"        assertFalse(BANANA.isSameItem(editedBanana));","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"github-amanda"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BANANA + \" \";","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"github-amanda"},"content":"        editedBanana \u003d new ItemBuilder(BANANA).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"github-amanda"},"content":"        assertFalse(BANANA.isSameItem(editedBanana));","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"Md-Fazil"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"Md-Fazil"},"content":"    public void isExpiredItem() {","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"Md-Fazil"},"content":"        //Item with expired expiry date","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"github-amanda"},"content":"        Item editedApple \u003d new ItemBuilder(APPLE).withExpiryDate(\"2020-10-10\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"github-amanda"},"content":"        assertTrue(editedApple.isExpired());","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"Md-Fazil"},"content":"        //Item with non expired expiry date","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"github-amanda"},"content":"        Item editedBanana \u003d new ItemBuilder(BANANA).withExpiryDate(\"2021-10-10\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"github-amanda"},"content":"        assertFalse(editedBanana.isExpired());","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"Md-Fazil"},"content":"        //Item with no expiry date","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"Md-Fazil"},"content":"        Item item \u003d new ItemBuilder().withExpiryDate(\"No Expiry Date\").build();","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"Md-Fazil"},"content":"        assertFalse(item.isExpired());","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"Md-Fazil"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"github-amanda"},"content":"        Item appleCopy \u003d new ItemBuilder(APPLE).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"github-amanda"},"content":"        assertTrue(APPLE.equals(appleCopy));","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"github-amanda"},"content":"        assertTrue(APPLE.equals(APPLE));","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"github-amanda"},"content":"        assertFalse(APPLE.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"github-amanda"},"content":"        assertFalse(APPLE.equals(5));","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"kumsssss"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"github-amanda"},"content":"        assertFalse(APPLE.equals(BANANA));","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"github-amanda"},"content":"        Item editedApple \u003d new ItemBuilder(APPLE).withName(VALID_NAME_BANANA).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"github-amanda"},"content":"        assertFalse(APPLE.equals(editedApple));","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"github-amanda"},"content":"        // different quantity -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"github-amanda"},"content":"        editedApple \u003d new ItemBuilder(APPLE).withQuantity(VALID_QUANTITY_BANANA).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"github-amanda"},"content":"        assertFalse(APPLE.equals(editedApple));","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"JayChenYJ"},"content":"        // different expirydate -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":104,"author":{"gitId":"github-amanda"},"content":"        editedApple \u003d new ItemBuilder(APPLE).withExpiryDate(VALID_EXPIRYDATE_BANANA).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"github-amanda"},"content":"        assertFalse(APPLE.equals(editedApple));","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":108,"author":{"gitId":"github-amanda"},"content":"        editedApple \u003d new ItemBuilder(APPLE).withLocation(VALID_LOCATION_BANANA).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"github-amanda"},"content":"        assertFalse(APPLE.equals(editedApple));","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":112,"author":{"gitId":"github-amanda"},"content":"        editedApple \u003d new ItemBuilder(APPLE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"github-amanda"},"content":"        assertFalse(APPLE.equals(editedApple));","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"github-amanda":44,"kumsssss":9,"JayChenYJ":6,"Md-Fazil":11,"-":45}},{"path":"src/test/java/seedu/storemando/model/item/LocationContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"import java.util.List;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"import seedu.storemando.testutil.ItemBuilder;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"public class LocationContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"    public void equals() {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"        LocationContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"            new LocationContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"        LocationContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"            new LocationContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"        LocationContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"            new LocationContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"chewwh09"},"content":"    public void test_locationContainsKeywords() {","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"chewwh09"},"content":"        // One keyword","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"chewwh09"},"content":"        LocationContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":"            new LocationContainsKeywordsPredicate(Collections.singletonList(\"Apple\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"chewwh09"},"content":"        assertTrue(predicate.test(new ItemBuilder().withLocation(\"Apple Banana\").build()));","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"chewwh09"},"content":"        predicate \u003d new LocationContainsKeywordsPredicate(Arrays.asList(\"Apple\", \"Banana\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"chewwh09"},"content":"        assertTrue(predicate.test(new ItemBuilder().withLocation(\"Apple Banana\").build()));","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"chewwh09"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"chewwh09"},"content":"        predicate \u003d new LocationContainsKeywordsPredicate(Arrays.asList(\"Apple\", \"Cherry\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"chewwh09"},"content":"        assertTrue(predicate.test(new ItemBuilder().withLocation(\"Apple Cherry\").build()));","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"chewwh09"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"chewwh09"},"content":"        predicate \u003d new LocationContainsKeywordsPredicate(Arrays.asList(\"aPPle\", \"bANaNa\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"chewwh09"},"content":"        assertTrue(predicate.test(new ItemBuilder().withLocation(\"Apple Banana\").build()));","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"chewwh09"},"content":"        // Not all matching keywords","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"chewwh09"},"content":"        predicate \u003d new LocationContainsKeywordsPredicate(Arrays.asList(\"Apple\", \"Cherry\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"chewwh09"},"content":"        assertFalse(predicate.test(new ItemBuilder().withLocation(\"Apple\").build()));","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"chewwh09"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"chewwh09"},"content":"    public void test_locationDoesNotContainKeywords() {","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"chewwh09"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"chewwh09"},"content":"        LocationContainsKeywordsPredicate predicate \u003d new LocationContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"chewwh09"},"content":"        assertTrue(predicate.test(new ItemBuilder().withLocation(\"Apple\").build()));","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"chewwh09"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"chewwh09"},"content":"        predicate \u003d new LocationContainsKeywordsPredicate(Arrays.asList(\"Cherry\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"chewwh09"},"content":"        assertFalse(predicate.test(new ItemBuilder().withLocation(\"Apple Banana\").build()));","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"chewwh09"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"chewwh09"},"content":"        // Keywords match quantity, expirydate and name, but does not match location","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"chewwh09"},"content":"        predicate \u003d new LocationContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"2020-01-11\", \"Living\", \"Room\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"chewwh09"},"content":"        assertFalse(predicate.test(new ItemBuilder().withName(\"Alice\").withQuantity(\"12345\")","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"chewwh09"},"content":"            .withExpiryDate(\"2020-02-11\").withLocation(\"Living room\").build()));","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"chewwh09"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"chewwh09"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"chewwh09":83}},{"path":"src/test/java/seedu/storemando/model/item/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"public class LocationTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"        String invalidLocation \u003d \"\";","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidLocation));","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    public void isValidLocation() {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"        // null location","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"        // invalid addresses","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(Location.isValidLocation(\"\")); // empty string","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(Location.isValidLocation(\" \")); // spaces only","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"        // valid addresses","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(Location.isValidLocation(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(Location.isValidLocation(\"-\")); // one character","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"        assertTrue(Location.isValidLocation(\"Leng Inc; 1 Mark St; San Francis CA 2349879; US\")); // long location","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"JayChenYJ":36}},{"path":"src/test/java/seedu/storemando/model/item/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ItemName(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ItemName(invalidName));","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"        assertThrows(NullPointerException.class, () -\u003e ItemName.isValidName(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"        assertFalse(ItemName.isValidName(\"\")); // empty string","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"        assertFalse(ItemName.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"        assertFalse(ItemName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"        assertFalse(ItemName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"        assertTrue(ItemName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"        assertTrue(ItemName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"        assertTrue(ItemName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"        assertTrue(ItemName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"        assertTrue(ItemName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"JayChenYJ":2,"chewwh09":12,"-":26}},{"path":"src/test/java/seedu/storemando/model/item/QuantityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"github-amanda"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"github-amanda"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"github-amanda"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"github-amanda"},"content":"public class QuantityTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"github-amanda"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"github-amanda"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"github-amanda"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Quantity(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"github-amanda"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"github-amanda"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"github-amanda"},"content":"    public void constructor_invalidQuantity_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"github-amanda"},"content":"        String invalidQuantity \u003d \"\";","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"github-amanda"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Quantity(invalidQuantity));","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"github-amanda"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"github-amanda"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"github-amanda"},"content":"    public void isValidQuantity() {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"github-amanda"},"content":"        // null quantity number","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"github-amanda"},"content":"        assertThrows(NullPointerException.class, () -\u003e Quantity.isValidQuantity(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"github-amanda"},"content":"        // invalid quantity numbers","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"github-amanda"},"content":"        assertFalse(Quantity.isValidQuantity(\"\")); // empty string","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"github-amanda"},"content":"        assertFalse(Quantity.isValidQuantity(\" \")); // spaces only","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"github-amanda"},"content":"        assertFalse(Quantity.isValidQuantity(\"quantity\")); // non-numeric","lastModifiedDate":"2021-03-05"},{"lineNumber":31,"author":{"gitId":"github-amanda"},"content":"        assertFalse(Quantity.isValidQuantity(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"github-amanda"},"content":"        assertFalse(Quantity.isValidQuantity(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"github-amanda"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"github-amanda"},"content":"        // valid quantity numbers","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"Md-Fazil"},"content":"        assertTrue(Quantity.isValidQuantity(\"9\")); // exactly 1 number","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"github-amanda"},"content":"        assertTrue(Quantity.isValidQuantity(\"93121534\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"github-amanda"},"content":"        assertTrue(Quantity.isValidQuantity(\"124293842033123\")); // long quantity numbers","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"github-amanda"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"github-amanda"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"github-amanda":36,"JayChenYJ":2,"Md-Fazil":1}},{"path":"src/test/java/seedu/storemando/model/item/UniqueItemListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.item;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_LOCATION_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_QUANTITY_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.APPLE;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.ItemBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"kumsssss"},"content":"public class UniqueItemListTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"    private final UniqueItemList uniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"kumsssss"},"content":"    public void contains_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"kumsssss"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.contains(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"kumsssss"},"content":"    public void contains_itemNotInList_returnsFalse() {","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"github-amanda"},"content":"        assertFalse(uniqueItemList.contains(APPLE));","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"kumsssss"},"content":"    public void contains_itemInList_returnsTrue() {","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.add(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"github-amanda"},"content":"        assertTrue(uniqueItemList.contains(APPLE));","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"    public void contains_itemWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.add(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"github-amanda"},"content":"        Item editedApple \u003d new ItemBuilder(APPLE).withQuantity(VALID_QUANTITY_BANANA).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"github-amanda"},"content":"        assertTrue(uniqueItemList.contains(editedApple));","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"kumsssss"},"content":"    public void add_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"kumsssss"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.add(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"    public void add_duplicateItem_throwsDuplicateItemException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.add(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"github-amanda"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueItemList.add(APPLE));","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"kumsssss"},"content":"    public void setItem_nullTargetItem_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"github-amanda"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.setItem(null, APPLE));","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"kumsssss"},"content":"    public void setItem_nullEditedItem_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"github-amanda"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.setItem(APPLE, null));","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"kumsssss"},"content":"    public void setItem_targetItemNotInList_throwsItemNotFoundException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"github-amanda"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniqueItemList.setItem(APPLE, APPLE));","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"kumsssss"},"content":"    public void setItem_editedItemIsSameItem_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.add(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.setItem(APPLE, APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"kumsssss"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"github-amanda"},"content":"        expectedUniqueItemList.add(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"kumsssss"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"kumsssss"},"content":"    public void setItem_editedItemHasSameIdentity_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.add(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"github-amanda"},"content":"        Item editedApple \u003d new ItemBuilder(APPLE).withLocation(VALID_LOCATION_BANANA).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.setItem(APPLE, editedApple);","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"kumsssss"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"github-amanda"},"content":"        expectedUniqueItemList.add(editedApple);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"kumsssss"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"kumsssss"},"content":"    public void setItem_editedItemHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.add(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.setItem(APPLE, BANANA);","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"kumsssss"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"github-amanda"},"content":"        expectedUniqueItemList.add(BANANA);","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"kumsssss"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"kumsssss"},"content":"    public void setItem_editedItemHasNonUniqueIdentity_throwsDuplicateItemException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.add(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.add(BANANA);","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"github-amanda"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueItemList.setItem(APPLE, BANANA));","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"kumsssss"},"content":"    public void remove_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"kumsssss"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.remove(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"kumsssss"},"content":"    public void remove_itemDoesNotExist_throwsItemNotFoundException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"github-amanda"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniqueItemList.remove(APPLE));","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"kumsssss"},"content":"    public void remove_existingItem_removesItem() {","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.add(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.remove(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"kumsssss"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":128,"author":{"gitId":"kumsssss"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"kumsssss"},"content":"    public void setItems_nullUniqueItemList_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"kumsssss"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.setItems((UniqueItemList) null));","lastModifiedDate":"2021-03-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"kumsssss"},"content":"    public void setItems_uniqueItemList_replacesOwnListWithProvidedUniqueItemList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":138,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.add(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"kumsssss"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":140,"author":{"gitId":"github-amanda"},"content":"        expectedUniqueItemList.add(BANANA);","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"kumsssss"},"content":"        uniqueItemList.setItems(expectedUniqueItemList);","lastModifiedDate":"2021-03-01"},{"lineNumber":142,"author":{"gitId":"kumsssss"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-03-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"kumsssss"},"content":"    public void setItems_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":147,"author":{"gitId":"kumsssss"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.setItems((List\u003cItem\u003e) null));","lastModifiedDate":"2021-03-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"kumsssss"},"content":"    public void setItems_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":152,"author":{"gitId":"github-amanda"},"content":"        uniqueItemList.add(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"github-amanda"},"content":"        List\u003cItem\u003e itemList \u003d Collections.singletonList(BANANA);","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"kumsssss"},"content":"        uniqueItemList.setItems(itemList);","lastModifiedDate":"2021-03-01"},{"lineNumber":155,"author":{"gitId":"kumsssss"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-03-01"},{"lineNumber":156,"author":{"gitId":"github-amanda"},"content":"        expectedUniqueItemList.add(BANANA);","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"kumsssss"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-03-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"kumsssss"},"content":"    public void setItems_listWithDuplicateItems_throwsDuplicateItemException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":162,"author":{"gitId":"github-amanda"},"content":"        List\u003cItem\u003e listWithDuplicateItems \u003d Arrays.asList(APPLE, APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"kumsssss"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueItemList.setItems(listWithDuplicateItems));","lastModifiedDate":"2021-03-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"kumsssss"},"content":"            -\u003e uniqueItemList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"github-amanda":37,"kumsssss":44,"JayChenYJ":6,"-":84}},{"path":"src/test/java/seedu/storemando/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.model.tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"JayChenYJ":2,"-":24}},{"path":"src/test/java/seedu/storemando/storage/JsonAdaptedItemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.storage.JsonAdaptedItem.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.BREAD;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ExpiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemName;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Location;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Quantity;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"kumsssss"},"content":"public class JsonAdaptedItemTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"github-amanda"},"content":"    private static final String INVALID_QUANTITY \u003d \"+651234\";","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"Md-Fazil"},"content":"    private static final String INVALID_EXPIRYDATE \u003d \"example.com\";","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"github-amanda"},"content":"    private static final String VALID_NAME \u003d BREAD.getItemName().toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"github-amanda"},"content":"    private static final String VALID_QUANTITY \u003d BREAD.getQuantity().toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"github-amanda"},"content":"    private static final String VALID_EXPIRYDATE \u003d BREAD.getExpiryDate().toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"github-amanda"},"content":"    private static final String VALID_LOCATION \u003d BREAD.getLocation().toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"github-amanda"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BREAD.getTags().stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kumsssss"},"content":"    public void toModelType_validItemDetails_returnsItem() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"github-amanda"},"content":"        JsonAdaptedItem item \u003d new JsonAdaptedItem(BREAD);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"github-amanda"},"content":"        assertEquals(BREAD, item.toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"kumsssss"},"content":"        JsonAdaptedItem item \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"github-amanda"},"content":"            new JsonAdaptedItem(INVALID_NAME, VALID_QUANTITY, VALID_EXPIRYDATE, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2021-03-05"},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"        String expectedMessage \u003d ItemName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-05"},{"lineNumber":45,"author":{"gitId":"kumsssss"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, item::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"github-amanda"},"content":"        JsonAdaptedItem item \u003d new JsonAdaptedItem(null, VALID_QUANTITY, VALID_EXPIRYDATE, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2021-03-05"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ItemName.class.getSimpleName());","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"kumsssss"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, item::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"github-amanda"},"content":"    public void toModelType_invalidQuantity_throwsIllegalValueException() {","lastModifiedDate":"2021-03-05"},{"lineNumber":57,"author":{"gitId":"kumsssss"},"content":"        JsonAdaptedItem item \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"github-amanda"},"content":"            new JsonAdaptedItem(VALID_NAME, INVALID_QUANTITY, VALID_EXPIRYDATE, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2021-03-05"},{"lineNumber":59,"author":{"gitId":"github-amanda"},"content":"        String expectedMessage \u003d Quantity.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-05"},{"lineNumber":60,"author":{"gitId":"kumsssss"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, item::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"github-amanda"},"content":"    public void toModelType_nullQuantity_throwsIllegalValueException() {","lastModifiedDate":"2021-03-05"},{"lineNumber":65,"author":{"gitId":"Md-Fazil"},"content":"        JsonAdaptedItem item \u003d new JsonAdaptedItem(VALID_NAME, null, VALID_EXPIRYDATE, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2021-03-04"},{"lineNumber":66,"author":{"gitId":"github-amanda"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Quantity.class.getSimpleName());","lastModifiedDate":"2021-03-05"},{"lineNumber":67,"author":{"gitId":"kumsssss"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, item::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":72,"author":{"gitId":"Md-Fazil"},"content":"    public void toModelType_invalidExpiryDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"kumsssss"},"content":"        JsonAdaptedItem item \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"github-amanda"},"content":"            new JsonAdaptedItem(VALID_NAME, VALID_QUANTITY, INVALID_EXPIRYDATE, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2021-03-05"},{"lineNumber":75,"author":{"gitId":"Md-Fazil"},"content":"        String expectedMessage \u003d ExpiryDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"kumsssss"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, item::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"Md-Fazil"},"content":"    public void toModelType_nullExpiryDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"github-amanda"},"content":"        JsonAdaptedItem item \u003d new JsonAdaptedItem(VALID_NAME, VALID_QUANTITY, null, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2021-03-05"},{"lineNumber":82,"author":{"gitId":"Md-Fazil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ExpiryDate.class.getSimpleName());","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"kumsssss"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, item::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"kumsssss"},"content":"        JsonAdaptedItem item \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"github-amanda"},"content":"            new JsonAdaptedItem(VALID_NAME, VALID_QUANTITY, VALID_EXPIRYDATE, INVALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2021-03-05"},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"kumsssss"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, item::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"github-amanda"},"content":"        JsonAdaptedItem item \u003d new JsonAdaptedItem(VALID_NAME, VALID_QUANTITY, VALID_EXPIRYDATE, null, VALID_TAGS);","lastModifiedDate":"2021-03-05"},{"lineNumber":97,"author":{"gitId":"JayChenYJ"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Location.class.getSimpleName());","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"kumsssss"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, item::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"kumsssss"},"content":"        JsonAdaptedItem item \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"github-amanda"},"content":"            new JsonAdaptedItem(VALID_NAME, VALID_QUANTITY, VALID_EXPIRYDATE, VALID_LOCATION, invalidTags);","lastModifiedDate":"2021-03-05"},{"lineNumber":107,"author":{"gitId":"kumsssss"},"content":"        assertThrows(IllegalValueException.class, item::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"github-amanda":21,"kumsssss":16,"JayChenYJ":11,"Md-Fazil":7,"chewwh09":2,"-":53}},{"path":"src/test/java/seedu/storemando/storage/JsonSerializableStoreMandoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.util.JsonUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.testutil.TypicalItems;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"public class JsonSerializableStoreMandoTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableStoreMandoTest\");","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    private static final Path TYPICAL_ITEMS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalItemsStoreMando.json\");","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    private static final Path INVALID_ITEM_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidItemStoreMando.json\");","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    private static final Path DUPLICATE_ITEM_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateItemStoreMando.json\");","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    public void toModelType_typicalItemsFile_success() throws Exception {","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"        JsonSerializableStoreMando dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_ITEMS_FILE,","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"            JsonSerializableStoreMando.class).get();","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"        StoreMando storeMandoFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"        StoreMando typicalItemsStoreMando \u003d TypicalItems.getTypicalStoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(storeMandoFromFile, typicalItemsStoreMando);","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    public void toModelType_invalidItemFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"        JsonSerializableStoreMando dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ITEM_FILE,","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"            JsonSerializableStoreMando.class).get();","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"    public void toModelType_duplicateItems_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"        JsonSerializableStoreMando dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ITEM_FILE,","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"            JsonSerializableStoreMando.class).get();","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableStoreMando.MESSAGE_DUPLICATE_ITEM,","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"            dataFromFile::toModelType);","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"JayChenYJ":47}},{"path":"src/test/java/seedu/storemando/storage/JsonStoreMandoStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.APPLE;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.HEATER;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.testutil.TypicalItems.IRON;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"public class JsonStoreMandoStorageTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"github-amanda"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"github-amanda"},"content":"        \"JsonStoreMandoStorageTest\");","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    @TempDir","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    public void readStoreMando_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e readStoreMando(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"    private java.util.Optional\u003cReadOnlyStoreMando\u003e readStoreMando(String filePath) throws Exception {","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"        return new JsonStoreMandoStorage(Paths.get(filePath)).readStoreMando(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"            ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"            : null;","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        assertFalse(readStoreMando(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(DataConversionException.class, () -\u003e readStoreMando(\"notJsonFormatStoreMando.json\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"    public void readStoreMando_invalidItemStoreMando_throwDataConversionException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(DataConversionException.class, () -\u003e readStoreMando(\"invalidItemStoreMando.json\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"    public void readStoreMando_invalidAndValidItemStoreMando_throwDataConversionException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(DataConversionException.class, () -\u003e readStoreMando(\"invalidAndValidItemStoreMando.json\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"    public void readAndSaveStoreMando_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"        Path filePath \u003d testFolder.resolve(\"TempStoreMando.json\");","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"        StoreMando original \u003d getTypicalStoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"        JsonStoreMandoStorage jsonStoreMandoStorage \u003d new JsonStoreMandoStorage(filePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"        jsonStoreMandoStorage.saveStoreMando(original, filePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"        ReadOnlyStoreMando readBack \u003d jsonStoreMandoStorage.readStoreMando(filePath).get();","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(original, new StoreMando(readBack));","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"github-amanda"},"content":"        original.addItem(HEATER);","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"github-amanda"},"content":"        original.removeItem(APPLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"        jsonStoreMandoStorage.saveStoreMando(original, filePath);","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"        readBack \u003d jsonStoreMandoStorage.readStoreMando(filePath).get();","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(original, new StoreMando(readBack));","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"github-amanda"},"content":"        original.addItem(IRON);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"        jsonStoreMandoStorage.saveStoreMando(original); // file path not specified","lastModifiedDate":"2021-03-06"},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"        readBack \u003d jsonStoreMandoStorage.readStoreMando().get(); // file path not specified","lastModifiedDate":"2021-03-06"},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(original, new StoreMando(readBack));","lastModifiedDate":"2021-03-06"},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":89,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":91,"author":{"gitId":"JayChenYJ"},"content":"    public void saveStoreMando_nullStoreMando_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":92,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveStoreMando(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":93,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":94,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":95,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":96,"author":{"gitId":"JayChenYJ"},"content":"     * Saves {@code storeMando} at the specified {@code filePath}.","lastModifiedDate":"2021-03-06"},{"lineNumber":97,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":98,"author":{"gitId":"JayChenYJ"},"content":"    private void saveStoreMando(ReadOnlyStoreMando storeMando, String filePath) {","lastModifiedDate":"2021-03-06"},{"lineNumber":99,"author":{"gitId":"JayChenYJ"},"content":"        try {","lastModifiedDate":"2021-03-06"},{"lineNumber":100,"author":{"gitId":"JayChenYJ"},"content":"            new JsonStoreMandoStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-06"},{"lineNumber":101,"author":{"gitId":"JayChenYJ"},"content":"                .saveStoreMando(storeMando, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-06"},{"lineNumber":102,"author":{"gitId":"JayChenYJ"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-06"},{"lineNumber":103,"author":{"gitId":"JayChenYJ"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-03-06"},{"lineNumber":104,"author":{"gitId":"JayChenYJ"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":105,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":106,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":108,"author":{"gitId":"JayChenYJ"},"content":"    public void saveStoreMando_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":109,"author":{"gitId":"JayChenYJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveStoreMando(new StoreMando(), null));","lastModifiedDate":"2021-03-06"},{"lineNumber":110,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":111,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"github-amanda":8,"JayChenYJ":103}},{"path":"src/test/java/seedu/storemando/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"        userPrefs.setStoreMandoFilePath(Paths.get(\"storemando.json\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JayChenYJ":6,"-":117}},{"path":"src/test/java/seedu/storemando/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.TypicalItems.getTypicalStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.ReadOnlyStoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"        JsonStoreMandoStorage storeMandoStorage \u003d new JsonStoreMandoStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        storageManager \u003d new StorageManager(storeMandoStorage, userPrefsStorage);","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"    public void storeMandoReadSave() throws Exception {","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"         * {@link JsonStoreMandoStorage} class.","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonStoreMandoStorageTest} class.","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"        StoreMando original \u003d getTypicalStoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"        storageManager.saveStoreMando(original);","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"        ReadOnlyStoreMando retrieved \u003d storageManager.readStoreMando().get();","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(original, new StoreMando(retrieved));","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"    public void getStoreMandoFilePath() {","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"        assertNotNull(storageManager.getStoreMandoFilePath());","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":17,"-":51}},{"path":"src/test/java/seedu/storemando/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                                    Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"JayChenYJ":1,"-":33}},{"path":"src/test/java/seedu/storemando/testutil/EditItemDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.EditCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.EditCommand.EditItemDescriptor;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ExpiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemName;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Location;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Quantity;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":" * A utility class to help with building EditItemDescriptor objects.","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":"public class EditItemDescriptorBuilder {","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    private final EditCommand.EditItemDescriptor descriptor;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"kumsssss"},"content":"    public EditItemDescriptorBuilder() {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"kumsssss"},"content":"        descriptor \u003d new EditCommand.EditItemDescriptor();","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"kumsssss"},"content":"    public EditItemDescriptorBuilder(EditCommand.EditItemDescriptor descriptor) {","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"kumsssss"},"content":"        this.descriptor \u003d new EditCommand.EditItemDescriptor(descriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"kumsssss"},"content":"     * Returns an {@code EditItemDescriptor} with fields containing {@code item}\u0027s details","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"kumsssss"},"content":"    public EditItemDescriptorBuilder(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"kumsssss"},"content":"        descriptor \u003d new EditCommand.EditItemDescriptor();","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"        descriptor.setItemName(item.getItemName());","lastModifiedDate":"2021-03-05"},{"lineNumber":37,"author":{"gitId":"github-amanda"},"content":"        descriptor.setQuantity(item.getQuantity());","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"Md-Fazil"},"content":"        descriptor.setExpiryDate(item.getExpiryDate());","lastModifiedDate":"2021-03-04"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"        descriptor.setLocation(item.getLocation());","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"kumsssss"},"content":"        descriptor.setTags(item.getTags());","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"     * Sets the {@code Name} of the {@code EditItemDescriptor} that we are building.","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"kumsssss"},"content":"    public EditItemDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"chewwh09"},"content":"        descriptor.setItemName(new ItemName(name));","lastModifiedDate":"2021-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"github-amanda"},"content":"     * Sets the {@code Quantity} of the {@code EditItemDescriptor} that we are building.","lastModifiedDate":"2021-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"github-amanda"},"content":"    public EditItemDescriptorBuilder withQuantity(String quantity) {","lastModifiedDate":"2021-03-05"},{"lineNumber":55,"author":{"gitId":"github-amanda"},"content":"        descriptor.setQuantity(new Quantity(quantity));","lastModifiedDate":"2021-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"     * Sets the {@code ExpiryDate} of the {@code EditItemDescriptor} that we are building.","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"Md-Fazil"},"content":"    public EditItemDescriptorBuilder withExpiryDate(String expiryDate) {","lastModifiedDate":"2021-03-04"},{"lineNumber":63,"author":{"gitId":"Md-Fazil"},"content":"        descriptor.setExpiryDate(new ExpiryDate(expiryDate));","lastModifiedDate":"2021-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"     * Sets the {@code Location} of the {@code EditItemDescriptor} that we are building.","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"    public EditItemDescriptorBuilder withLocation(String location) {","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"        descriptor.setLocation(new Location(location));","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"kumsssss"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditItemDescriptor}","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"kumsssss"},"content":"    public EditItemDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"kumsssss"},"content":"    public EditItemDescriptor build() {","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kumsssss":15,"github-amanda":4,"JayChenYJ":15,"Md-Fazil":3,"chewwh09":2,"-":49}},{"path":"src/test/java/seedu/storemando/testutil/ItemBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.expirydate.ExpiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.ItemName;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Location;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Quantity;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"kumsssss"},"content":" * A utility class to help with building Item objects.","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":"public class ItemBuilder {","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"Md-Fazil"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"Md-Fazil"},"content":"    public static final String DEFAULT_QUANTITY \u003d \"85355255\";","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"Md-Fazil"},"content":"    public static final String DEFAULT_EXPIRYDATE \u003d \"2021-10-10\";","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Md-Fazil"},"content":"    public static final String DEFAULT_LOCATION \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"    private ItemName name;","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"github-amanda"},"content":"    private Quantity quantity;","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"Md-Fazil"},"content":"    private ExpiryDate expiryDate;","lastModifiedDate":"2021-03-04"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    private Location location;","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"kumsssss"},"content":"     * Creates a {@code ItemBuilder} with the default details.","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"kumsssss"},"content":"    public ItemBuilder() {","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"        name \u003d new ItemName(DEFAULT_NAME);","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"github-amanda"},"content":"        quantity \u003d new Quantity(DEFAULT_QUANTITY);","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"Md-Fazil"},"content":"        expiryDate \u003d new ExpiryDate(DEFAULT_EXPIRYDATE);","lastModifiedDate":"2021-03-04"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"        location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"kumsssss"},"content":"     * Initializes the ItemBuilder with the data of {@code itemToCopy}.","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"    public ItemBuilder(Item itemToCopy) {","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"chewwh09"},"content":"        name \u003d itemToCopy.getItemName();","lastModifiedDate":"2021-03-05"},{"lineNumber":46,"author":{"gitId":"github-amanda"},"content":"        quantity \u003d itemToCopy.getQuantity();","lastModifiedDate":"2021-03-05"},{"lineNumber":47,"author":{"gitId":"Md-Fazil"},"content":"        expiryDate \u003d itemToCopy.getExpiryDate();","lastModifiedDate":"2021-03-04"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"        location \u003d itemToCopy.getLocation();","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"kumsssss"},"content":"        tags \u003d new HashSet\u003c\u003e(itemToCopy.getTags());","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"kumsssss"},"content":"     * Sets the {@code Name} of the {@code Item} that we are building.","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"kumsssss"},"content":"    public ItemBuilder withName(String name) {","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"chewwh09"},"content":"        this.name \u003d new ItemName(name);","lastModifiedDate":"2021-03-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"kumsssss"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Item} that we are building.","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"kumsssss"},"content":"    public ItemBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"     * Sets the {@code Location} of the {@code Item} that we are building.","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"    public ItemBuilder withLocation(String location) {","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"github-amanda"},"content":"     * Sets the {@code Quantity} of the {@code Item} that we are building.","lastModifiedDate":"2021-03-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"github-amanda"},"content":"    public ItemBuilder withQuantity(String quantity) {","lastModifiedDate":"2021-03-05"},{"lineNumber":80,"author":{"gitId":"github-amanda"},"content":"        this.quantity \u003d new Quantity(quantity);","lastModifiedDate":"2021-03-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"     * Sets the {@code ExpiryDate} of the {@code Item} that we are building.","lastModifiedDate":"2021-03-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"Md-Fazil"},"content":"    public ItemBuilder withExpiryDate(String expiryDate) {","lastModifiedDate":"2021-03-04"},{"lineNumber":88,"author":{"gitId":"Md-Fazil"},"content":"        this.expiryDate \u003d new ExpiryDate(expiryDate);","lastModifiedDate":"2021-03-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"kumsssss"},"content":"    public Item build() {","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"github-amanda"},"content":"        return new Item(name, quantity, expiryDate, location, tags);","lastModifiedDate":"2021-03-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"kumsssss":12,"github-amanda":7,"JayChenYJ":15,"Md-Fazil":9,"chewwh09":4,"-":49}},{"path":"src/test/java/seedu/storemando/testutil/ItemUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_EXPIRYDATE;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.AddCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.logic.commands.EditCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"kumsssss"},"content":" * A utility class for Item.","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"kumsssss"},"content":"public class ItemUtil {","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"kumsssss"},"content":"     * Returns an add command string for adding the {@code item}.","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"kumsssss"},"content":"    public static String getAddCommand(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"kumsssss"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getItemDetails(item);","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"kumsssss"},"content":"     * Returns the part of command string for the given {@code item}\u0027s details.","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"kumsssss"},"content":"    public static String getItemDetails(Item item) {","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"        sb.append(PREFIX_NAME + item.getItemName().fullName + \" \");","lastModifiedDate":"2021-03-05"},{"lineNumber":34,"author":{"gitId":"github-amanda"},"content":"        sb.append(PREFIX_QUANTITY + item.getQuantity().value + \" \");","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"        sb.append(PREFIX_EXPIRYDATE + item.getExpiryDate().value + \" \");","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        sb.append(PREFIX_LOCATION + item.getLocation().value + \" \");","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"kumsssss"},"content":"        item.getTags().stream().forEach(","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"kumsssss"},"content":"     * Returns the part of command string for the given {@code EditItemDescriptor}\u0027s details.","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"kumsssss"},"content":"    public static String getEditItemDescriptorDetails(EditCommand.EditItemDescriptor descriptor) {","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":"        descriptor.getItemName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-03-05"},{"lineNumber":49,"author":{"gitId":"github-amanda"},"content":"        descriptor.getQuantity().ifPresent(quantity -\u003e sb.append(PREFIX_QUANTITY).append(quantity.value).append(\" \"));","lastModifiedDate":"2021-03-05"},{"lineNumber":50,"author":{"gitId":"Md-Fazil"},"content":"        descriptor.getExpiryDate().ifPresent(expiryDate -\u003e sb.append(PREFIX_EXPIRYDATE).append(expiryDate.value)","lastModifiedDate":"2021-03-04"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"            .append(\" \"));","lastModifiedDate":"2021-03-04"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"        descriptor.getLocation().ifPresent(location -\u003e sb.append(PREFIX_LOCATION).append(location.value).append(\" \"));","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"kumsssss":10,"github-amanda":2,"JayChenYJ":13,"Md-Fazil":2,"chewwh09":2,"-":34}},{"path":"src/test/java/seedu/storemando/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JayChenYJ":1,"-":71}},{"path":"src/test/java/seedu/storemando/testutil/StoreMandoBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":" * A utility class to help with building StoreMando objects.","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":" * \u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":" * {@code StoreMando ab \u003d new StoreMandoBuilder().withItem(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":" * \u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":" * {@code StoreMando ab \u003d new StoreMandoBuilder().withItem(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":" * \u003e\u003e\u003e\u003e\u003e\u003e\u003e mid-1.2-base-refactor","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"public class StoreMandoBuilder {","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    private final StoreMando storeMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    public StoreMandoBuilder() {","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"        storeMando \u003d new StoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    public StoreMandoBuilder(StoreMando storeMando) {","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"        this.storeMando \u003d storeMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"     * Adds a new {@code Item} to the {@code StoreMando} that we are building.","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    public StoreMandoBuilder withItem(Item item) {","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"        storeMando.addItem(item);","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"        return this;","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    public StoreMando build() {","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        return storeMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"JayChenYJ":38}},{"path":"src/test/java/seedu/storemando/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.index.Index;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"kumsssss"},"content":"     * Returns the middle index of the item in the {@code model}\u0027s item list.","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"kumsssss"},"content":"        return Index.fromOneBased(model.getFilteredItemList().size() / 2);","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"kumsssss"},"content":"     * Returns the last index of the item in the {@code model}\u0027s item list.","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"kumsssss"},"content":"        return Index.fromOneBased(model.getFilteredItemList().size());","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"kumsssss"},"content":"     * Returns the item in the {@code model}\u0027s item list at {@code index}.","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"kumsssss"},"content":"    public static Item getItem(Model model, Index index) {","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"kumsssss"},"content":"        return model.getFilteredItemList().get(index.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kumsssss":7,"JayChenYJ":4,"-":44}},{"path":"src/test/java/seedu/storemando/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.commons.core.index.Index;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"kumsssss"},"content":"    public static final Index INDEX_FIRST_ITEM \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"kumsssss"},"content":"    public static final Index INDEX_SECOND_ITEM \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"kumsssss"},"content":"    public static final Index INDEX_THIRD_ITEM \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"kumsssss":3,"JayChenYJ":2,"-":7}},{"path":"src/test/java/seedu/storemando/testutil/TypicalItems.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_EXPIRYDATE_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_EXPIRYDATE_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_LOCATION_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_LOCATION_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_NAME_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_NAME_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_QUANTITY_BANANA;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"github-amanda"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_QUANTITY_CHEESE;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Md-Fazil"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"Md-Fazil"},"content":"import static seedu.storemando.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.StoreMando;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.model.item.Item;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"kumsssss"},"content":" * A utility class containing a list of {@code Item} objects to be used in tests.","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"kumsssss"},"content":"public class TypicalItems {","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"github-amanda"},"content":"    public static final Item APPLE \u003d new ItemBuilder().withName(\"Apples\")","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"github-amanda"},"content":"        .withLocation(\"Kitchen Basket\").withExpiryDate(\"2021-04-08\")","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"github-amanda"},"content":"        .withQuantity(\"9\")","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Md-Fazil"},"content":"        .withTags(\"Expiring\").build();","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"github-amanda"},"content":"    public static final Item BREAD \u003d new ItemBuilder().withName(\"Bread\")","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Md-Fazil"},"content":"        .withLocation(\"Dining Table\")","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"github-amanda"},"content":"        .withExpiryDate(\"2021-04-08\").withQuantity(\"1\")","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Md-Fazil"},"content":"        .withTags(\"Expiring\", \"Favourite\").build();","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"github-amanda"},"content":"    public static final Item CREAM \u003d new ItemBuilder().withName(\"Cream Cheese\").withQuantity(\"1\")","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"github-amanda"},"content":"        .withExpiryDate(\"2023-10-10\").withLocation(\"Kitchen Drawer\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"github-amanda"},"content":"    public static final Item DONUT \u003d new ItemBuilder().withName(\"Donut\").withQuantity(\"5\")","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"github-amanda"},"content":"        .withExpiryDate(\"2021-10-10\").withLocation(\"Refrigerator\").withTags(\"Favourite\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"github-amanda"},"content":"    public static final Item EGGS \u003d new ItemBuilder().withName(\"Eggs\").withQuantity(\"10\")","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"github-amanda"},"content":"        .withExpiryDate(\"2021-10-10\").withLocation(\"Kitchen Drawer\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"github-amanda"},"content":"    public static final Item FLOUR \u003d new ItemBuilder().withName(\"Flour\").withQuantity(\"3\")","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"github-amanda"},"content":"        .withExpiryDate(\"2021-10-09\").withLocation(\"Kitchen Cabinet\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"github-amanda"},"content":"    public static final Item GINGER \u003d new ItemBuilder().withName(\"Ginger\").withQuantity(\"20\")","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"github-amanda"},"content":"        .withExpiryDate(\"2021-10-08\").withLocation(\"Kitchen Basket\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"github-amanda"},"content":"    public static final Item HEATER \u003d new ItemBuilder().withName(\"Heater\").withQuantity(\"2\")","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"github-amanda"},"content":"        .withExpiryDate(\"No Expiry Date\").withLocation(\"Toilet Cabinet\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"github-amanda"},"content":"    public static final Item IRON \u003d new ItemBuilder().withName(\"Ironing Board\").withQuantity(\"6\")","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"github-amanda"},"content":"        .withExpiryDate(\"No Expiry Date\").withLocation(\"Storeroom\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"Md-Fazil"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"kumsssss"},"content":"    // Manually added - Item\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"github-amanda"},"content":"    public static final Item CHEESE \u003d new ItemBuilder().withName(VALID_NAME_CHEESE)","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"github-amanda"},"content":"        .withQuantity(VALID_QUANTITY_CHEESE).withExpiryDate(VALID_EXPIRYDATE_CHEESE).withLocation(VALID_LOCATION_CHEESE)","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"Md-Fazil"},"content":"        .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"github-amanda"},"content":"    public static final Item BANANA \u003d new ItemBuilder().withName(VALID_NAME_BANANA).withQuantity(VALID_QUANTITY_BANANA)","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"github-amanda"},"content":"        .withExpiryDate(VALID_EXPIRYDATE_BANANA).withLocation(VALID_LOCATION_BANANA).withTags(VALID_TAG_HUSBAND,","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Md-Fazil"},"content":"            VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"github-amanda"},"content":"    public static final String KEYWORD_MATCHING_TOOTHBRUSH \u003d \"Toothbrush\"; // A keyword that matches TOOTHBRUSH","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"    private TypicalItems() {","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"kumsssss"},"content":"     * Returns an {@code StoreMando} with all the typical items.","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"    public static StoreMando getTypicalStoreMando() {","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"        StoreMando ab \u003d new StoreMando();","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"kumsssss"},"content":"        for (Item item : getTypicalItems()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"kumsssss"},"content":"            ab.addItem(item);","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"kumsssss"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"kumsssss"},"content":"     * Returns an {@code StoreMando} with all the typical items sorted by quantity.","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"kumsssss"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"kumsssss"},"content":"    public static StoreMando getTypicalStoreMandoSortedByQuantity() {","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"kumsssss"},"content":"        StoreMando ab \u003d new StoreMando();","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"kumsssss"},"content":"        for (Item item : getSortedByQuantityTypicalItems()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"kumsssss"},"content":"            ab.addItem(item);","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"kumsssss"},"content":"        return ab;","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"kumsssss"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"kumsssss"},"content":"     * Returns an {@code StoreMando} with all the typical itemss.","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"kumsssss"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"kumsssss"},"content":"    public static StoreMando getTypicalStoreMandoSortedByExpiryDate() {","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"kumsssss"},"content":"        StoreMando ab \u003d new StoreMando();","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"kumsssss"},"content":"        for (Item item : getSortedByExpiryDateTypicalItems()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"kumsssss"},"content":"            ab.addItem(item);","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"kumsssss"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"kumsssss"},"content":"        return ab;","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"kumsssss"},"content":"    public static List\u003cItem\u003e getTypicalItems() {","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"github-amanda"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(APPLE, BREAD, CREAM, DONUT, EGGS, FLOUR, GINGER));","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":102,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"kumsssss"},"content":"    public static List\u003cItem\u003e getSortedByQuantityTypicalItems() {","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"github-amanda"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BREAD, CREAM, FLOUR, DONUT, APPLE, EGGS, GINGER));","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"kumsssss"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"kumsssss"},"content":"    public static List\u003cItem\u003e getSortedByExpiryDateTypicalItems() {","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"github-amanda"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BREAD, APPLE, GINGER, FLOUR, DONUT, EGGS, CREAM));","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"kumsssss"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"github-amanda":35,"kumsssss":35,"JayChenYJ":7,"Md-Fazil":8,"-":25}},{"path":"src/test/java/seedu/storemando/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    public TestFxmlObject() {","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"JayChenYJ":3,"-":33}},{"path":"src/test/java/seedu/storemando/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"package seedu.storemando.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import static seedu.storemando.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import seedu.storemando.MainApp;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"JayChenYJ":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import seedu.storemando.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"JayChenYJ":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import seedu.storemando.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"\u003cfx:root type\u003d\"seedu.storemando.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"JayChenYJ":2,"-":5}}]
