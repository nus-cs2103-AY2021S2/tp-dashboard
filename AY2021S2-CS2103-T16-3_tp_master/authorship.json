[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-T16-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-T16-3/tp/actions)","lastModifiedDate":"2021-02-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"## User Interface","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"## About ResidenceTracker\u003cbr\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"ResidenceTracker is a command line based desktop application that assists landlords in managing their residences that they are listing out on the Airbnb platform for rent.","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"* It gives user convenience by providing a centralised overview of all the user\u0027s residences and the respective bookingList/cleaning statuses of each residence.","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"* It uses a **quick CLI** way to note down bookings and track status of different residence, such as","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"  clean or needs cleaning/booked or available, so the landlord can process bookings more efficiently and inform the cleaning agent as necessary before the next lease arrives.","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"* It is **written in OOP fashion**.","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"* For more details on ResidenceTracker, please refer to our [User Guide](docs/UserGuide.md).","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"jaredtengsw":5,"awzhenyi":3,"wangtao0717":5,"-":3,"VRSoorya":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"    manifest {","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"        attributes \"Main-Class\": \u0027seedu.address.Main\u0027","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"        archiveName(\"residencetracker.jar\")","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"whatthelump"},"content":"run {","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"whatthelump"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"whatthelump"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"whatthelump":4,"-":71,"VRSoorya":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"### Lim Li Gang","lastModifiedDate":"2021-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"\u003cimg src\u003d\"images/whatthelump.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"[[github](https://github.com/whatthelump)]","lastModifiedDate":"2021-02-22"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"[[portfolio](team/whatthelump.md)]","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"whatthelump"},"content":"* Role: Developer","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"* Responsibilities: Deliverables and deadlines, Documentation","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"### Aw Zhen Yi","lastModifiedDate":"2021-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"\u003cimg src\u003d\"images/awzhenyi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"[[github](http://github.com/awzhenyi)]","lastModifiedDate":"2021-02-24"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"[[portfolio](team/awzhenyi.md)]","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"* Role: Developer","lastModifiedDate":"2021-02-24"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"* Responsibilities: Features, Testing","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"### Teng Shu Wei Jared","lastModifiedDate":"2021-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"\u003cimg src\u003d\"images/jaredtengsw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"[[github](http://github.com/jaredtengsw)]","lastModifiedDate":"2021-02-21"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"[[portfolio](team/jaredtengsw.md)]","lastModifiedDate":"2021-04-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"* Responsibilities: User Interface","lastModifiedDate":"2021-04-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"### V R Soorya","lastModifiedDate":"2021-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"\u003cimg src\u003d\"images/vrsoorya.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"[[github](http://github.com/vrsoorya)]","lastModifiedDate":"2021-02-23"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"[[portfolio](team/vrsoorya.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"* Responsibilities: Dev Ops","lastModifiedDate":"2021-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"### Wang Tao","lastModifiedDate":"2021-02-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"\u003cimg src\u003d\"images/wangtao0717.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"[[github](http://github.com/wangtao0717)]","lastModifiedDate":"2021-02-21"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"[[portfolio](team/wangtao0717.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"* Responsibilities: Features, Testing","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"whatthelump":6,"awzhenyi":6,"jaredtengsw":5,"wangtao0717":4,"-":33,"VRSoorya":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/ay2021s2-cs2103-t16-3/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"**`Main`** has two classes called [`Main`](https://github.com/ay2021s2-cs2103-t16-3/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"[`Ui.java`](https://github.com/ay2021s2-cs2103-t16-3/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ResidenceListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"[`Logic.java`](https://github.com/ay2021s2-cs2103-t16-3/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"1. `Logic` uses the `ResidenceTrackerParser` class to parse the user command.","lastModifiedDate":"2021-04-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"1. The command execution can affect the `Model` (e.g. adding a residence).","lastModifiedDate":"2021-04-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":"**API** : [`Model.java`](https://github.com/ay2021s2-cs2103-t16-3/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-04-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"* stores the residence tracker data.","lastModifiedDate":"2021-04-12"},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"* exposes an unmodifiable `ObservableList\u003cResidence\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-04-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `ResidenceTracker`, which `Residence` references. This allows `ResidenceTracker` to only require one `Tag` object per unique `Tag`, instead of each `Residence` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"VRSoorya"},"content":"**API** : [`Storage.java`](https://github.com/ay2021s2-cs2103-t16-3/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-04-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"VRSoorya"},"content":"* can save the residence tracker data in json format and read it back.","lastModifiedDate":"2021-04-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"VRSoorya"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2021-04-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"VRSoorya"},"content":"### Remind feature","lastModifiedDate":"2021-04-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":137,"author":{"gitId":"VRSoorya"},"content":"#### Implementation","lastModifiedDate":"2021-04-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":139,"author":{"gitId":"VRSoorya"},"content":"The proposed mechanism is facilitated by the `logic` component described above. It filters the displayed `Residence` list to show those with bookings starting in the next 7 days. It makes use of the following new method in `Residence`.","lastModifiedDate":"2021-04-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":141,"author":{"gitId":"VRSoorya"},"content":"* `Residence#hasUpcomingBooking()` — Returns true if the `Residence` has a booking starting in the next 7 days.","lastModifiedDate":"2021-04-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":143,"author":{"gitId":"VRSoorya"},"content":"These operations make use of the `Model` interface\u0027s `Model#updateFilteredResidenceList(Predicate\u003cResidence\u003e predicate)` method. `Model` has a new public static `Predicate` named `PREDICATE_UPCOMING_BOOKED_RESIDENCES`.","lastModifiedDate":"2021-04-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":145,"author":{"gitId":"VRSoorya"},"content":"Given below is an example usage scenario and how the reminder filtering mechanism behaves at each step.","lastModifiedDate":"2021-04-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":147,"author":{"gitId":"VRSoorya"},"content":"Step 1. The user launches the application for the first time. The `ResidenceTracker` will be initialized with the sample residence tracker data.","lastModifiedDate":"2021-04-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":149,"author":{"gitId":"VRSoorya"},"content":"Step 2. The user executes `addb 2 n/New Tenant p/098 ...` command to add a booking that starts within the next 7 days to the 2nd residence in the residence tracker. The `addb` command calls `Residence#addBooking(Booking booking)`, which adds a new booking to the 2nd residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":151,"author":{"gitId":"VRSoorya"},"content":"Step 3. The user executes `remind` to list all residences with upcoming bookings. The `remind` command also calls `Model#updateFilteredResidenceList(Predicate\u003cResidence\u003e predicate)`, causing a filtered list of `Residence`s to be displayed which includes the updated residence from the previous step.","lastModifiedDate":"2021-04-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":153,"author":{"gitId":"VRSoorya"},"content":"Step 4. Any successful execution of commands `add`, `addb`, `edit`, `editb`, `delete`, `deleteb` or `list` will return to the previous display of the full residence list.","lastModifiedDate":"2021-04-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":155,"author":{"gitId":"VRSoorya"},"content":"The following sequence diagram shows how the operation works. The `predicate` parameter here is the `Model`\u0027s public static variable `PREDICATE_UPCOMING_BOOKED_RESIDENCES`. Notice how this sequence diagram differs from the delete operation sequence diagram above as there is no `CommandParser` class involved:","lastModifiedDate":"2021-04-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":157,"author":{"gitId":"VRSoorya"},"content":"![RemindSequenceDiagram](images/RemindSequenceDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":159,"author":{"gitId":"VRSoorya"},"content":"The `Model` in the diagram above refers to the Model API interface that the `Logic` component interacts with. The sequence diagram below shows what happens under the hood in the `Model` component to sort residences:","lastModifiedDate":"2021-04-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":161,"author":{"gitId":"VRSoorya"},"content":"![ResidenceSortSequenceDiagram](images/ResidenceSortSequenceDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":164,"author":{"gitId":"awzhenyi"},"content":"#### Design consideration: How the `remind` feature is implemented","lastModifiedDate":"2021-04-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":166,"author":{"gitId":"VRSoorya"},"content":"* **Alternative 1 (current choice):** Checks if residences have bookings starting in the next 7 days.","lastModifiedDate":"2021-04-12"},{"lineNumber":167,"author":{"gitId":"VRSoorya"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2021-04-12"},{"lineNumber":168,"author":{"gitId":"VRSoorya"},"content":"    * Cons: User is forced to actively use the command to be reminded.","lastModifiedDate":"2021-04-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":170,"author":{"gitId":"VRSoorya"},"content":"* **Alternative 2:** Residences are automatically displayed with residences having upcoming bookings on top.","lastModifiedDate":"2021-04-12"},{"lineNumber":171,"author":{"gitId":"VRSoorya"},"content":"    * Pros: Users will be able to see the residences that need the most urgent attention on top of their list without interacting with the app.","lastModifiedDate":"2021-04-12"},{"lineNumber":172,"author":{"gitId":"VRSoorya"},"content":"    * Cons: The users will not be able to tell how many in the list will need to be cleaned urgently for the next 7 days. ","lastModifiedDate":"2021-04-12"},{"lineNumber":173,"author":{"gitId":"VRSoorya"},"content":"      Using colour codes to differentiate these residences from the rest will make it visually more unpleasant for the users as it already uses colour coding for bookings.","lastModifiedDate":"2021-04-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":175,"author":{"gitId":"wangtao0717"},"content":"### Status feature","lastModifiedDate":"2021-04-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":177,"author":{"gitId":"wangtao0717"},"content":"#### Implementation","lastModifiedDate":"2021-04-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":179,"author":{"gitId":"wangtao0717"},"content":"The proposed mechanism is facilitated by the `logic` component described above. It updates clean status of multiple `Residences` at one time. It makes use of the following new method.","lastModifiedDate":"2021-04-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":181,"author":{"gitId":"wangtao0717"},"content":"* `StatusCommand#createUpdatedResidence()` —  Create updated residence with the required clean status and the same other data.","lastModifiedDate":"2021-04-11"},{"lineNumber":182,"author":{"gitId":"wangtao0717"},"content":"* `StatusCommandParser#paser()` —  Manage the status command input, return a status command with required clean status and target residence index list.","lastModifiedDate":"2021-04-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":184,"author":{"gitId":"wangtao0717"},"content":"These operations make use of the `Model` interface\u0027s `Model#updateFilteredResidenceList(Predicate\u003cResidence\u003e predicate)` method to update the order of residence list, ","lastModifiedDate":"2021-04-10"},{"lineNumber":185,"author":{"gitId":"wangtao0717"},"content":"and `Model#setResidence()` to update the residence in the residence list. ","lastModifiedDate":"2021-04-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":187,"author":{"gitId":"wangtao0717"},"content":"Given below is an example usage scenario and how the `status` filtering mechanism behaves at each step.","lastModifiedDate":"2021-04-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":189,"author":{"gitId":"wangtao0717"},"content":"Step 1. The user launches the application for the first time. The `ResidenceTracker` will be initialized with the initial residence tracker state, which has three sample residences.","lastModifiedDate":"2021-04-12"},{"lineNumber":190,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":191,"author":{"gitId":"wangtao0717"},"content":"Step 2. The user executes two or more input`add n/NAME a/ADDRESS c/y ...` command to add multiple residence with the same clean status \"CLEAN\". The `add` command calls `addResidence()` which checks and adds new residence to the end of unique residence list where \"UNCLEAN\" residences is in front of \"CLEAN\" residences. ","lastModifiedDate":"2021-04-08"},{"lineNumber":192,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":193,"author":{"gitId":"wangtao0717"},"content":"Step 3. The user plans to set the forth and fifth  residences clean status from \"CLEAN\" to \"UNCLEAN\" since bookings finished. So the user executes the command `status unclean 4 5`.","lastModifiedDate":"2021-04-12"},{"lineNumber":194,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":195,"author":{"gitId":"wangtao0717"},"content":"Step 4. The command is parsed by `StatusCommandParser` and returns a `StatusCommand` to be executed.","lastModifiedDate":"2021-04-12"},{"lineNumber":196,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":197,"author":{"gitId":"wangtao0717"},"content":"Step 5. `StatusCommand#execute` checks if the residence exists and if status expression is correct.","lastModifiedDate":"2021-04-12"},{"lineNumber":198,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":199,"author":{"gitId":"wangtao0717"},"content":"Step 6. The method then calls `StatusCommand#createUpdatedResidence()` to create status-updated residence one by one, and calls `Model#setResidence` to set the these residences.","lastModifiedDate":"2021-04-12"},{"lineNumber":200,"author":{"gitId":"wangtao0717"},"content":"Finally, it calls `Model#updateFilteredResidenceList(Predicate\u003cResidence\u003e predicate)`, causing an ordered list of `Residence`s to be displayed.","lastModifiedDate":"2021-04-12"},{"lineNumber":201,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":202,"author":{"gitId":"wangtao0717"},"content":"The following sequence diagram shows how the status operation works:","lastModifiedDate":"2021-04-12"},{"lineNumber":203,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":204,"author":{"gitId":"wangtao0717"},"content":"![StatusSequenceDiagram](images/StatusSequenceDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":205,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":206,"author":{"gitId":"wangtao0717"},"content":"The following activity diagram summarizes what happens when a user executes a `status` command:","lastModifiedDate":"2021-04-12"},{"lineNumber":207,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":208,"author":{"gitId":"wangtao0717"},"content":"![StatusActivityDiagram](images/StatusActivityDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":209,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":210,"author":{"gitId":"wangtao0717"},"content":"#### Design consideration: How to update clean status of residences","lastModifiedDate":"2021-04-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":212,"author":{"gitId":"wangtao0717"},"content":"* **Alternative 1 (current choice):** Create status-updated residences one by one and set them to residence list through function `Model#setResidence` ","lastModifiedDate":"2021-04-12"},{"lineNumber":213,"author":{"gitId":"wangtao0717"},"content":"    * Pros: Easy to implement,and not change the existing structure.","lastModifiedDate":"2021-04-12"},{"lineNumber":214,"author":{"gitId":"wangtao0717"},"content":"    * Cons: Adopt a loop, spending extra storage to create new residences.","lastModifiedDate":"2021-04-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":216,"author":{"gitId":"wangtao0717"},"content":"* **Alternative 2:** use index to find residences in residence list and set their clean status directly ","lastModifiedDate":"2021-04-12"},{"lineNumber":217,"author":{"gitId":"wangtao0717"},"content":"    * Pros: Can change status directly, don\u0027t need to spend extra storage to create residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":218,"author":{"gitId":"wangtao0717"},"content":"    * Cons: it needs new function to find residences by the index and change their clean status, which may damage security of residence list. ","lastModifiedDate":"2021-04-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":220,"author":{"gitId":"awzhenyi"},"content":"### Edit Booking feature","lastModifiedDate":"2021-04-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":222,"author":{"gitId":"awzhenyi"},"content":"#### Implementation","lastModifiedDate":"2021-04-11"},{"lineNumber":223,"author":{"gitId":"awzhenyi"},"content":"The proposed mechanism is facilitated by the `logic` component described above. It edits the details of existing bookings that are currently in Residence Tracker. It makes use of the following methods.","lastModifiedDate":"2021-04-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":225,"author":{"gitId":"awzhenyi"},"content":"* `EditBookingCommandParser#parse` parses the prefixes and the corresponding parameters to be edited.","lastModifiedDate":"2021-04-11"},{"lineNumber":226,"author":{"gitId":"awzhenyi"},"content":"* `BookingList#containsExclude` determines if edited dates are valid by checking if it overlaps with any of the existing bookings.","lastModifiedDate":"2021-04-11"},{"lineNumber":227,"author":{"gitId":"awzhenyi"},"content":"* `EditBookingCommand#execute` finds the target residence and target booking and edits the corresponding details accordingly.","lastModifiedDate":"2021-04-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":229,"author":{"gitId":"awzhenyi"},"content":"After `EditBookingCommand#execute` finds the target residence and booking, it makes use of `BookingList#setBooking` and `Model#setResidence` to update the booking of the residence in the residence list. ","lastModifiedDate":"2021-04-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":231,"author":{"gitId":"awzhenyi"},"content":"Given below is an example usage scenario of how the editing of bookings work.","lastModifiedDate":"2021-04-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":233,"author":{"gitId":"awzhenyi"},"content":"Step 1. The user launches the application. `ResidenceTracker` is initialised with prior saved data of residences.","lastModifiedDate":"2021-04-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":235,"author":{"gitId":"awzhenyi"},"content":"Step 2. The user plans to edit the end date of a booking since the tenants requested for an extension. The user executes the command `editb r/2 b/1 e/01-01-2022` to edit the end date of the first booking of the second residence displayed in `ResidenceTracker`.","lastModifiedDate":"2021-04-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":237,"author":{"gitId":"awzhenyi"},"content":"Step 3. The command is parsed by `EditBookingCommandParser` and returns a `EditBookingCommand` to be executed.","lastModifiedDate":"2021-04-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":239,"author":{"gitId":"awzhenyi"},"content":"Step 4. `Editbookingcommand#execute` checks if the residence and booking exists and if the edited end date is valid.","lastModifiedDate":"2021-04-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":241,"author":{"gitId":"awzhenyi"},"content":"Step 5. The method then calls `BookingList#setBooking` to set the edited booking before calling `Model#setResidence` to set the edited residence. Finally, it calls `Model#updateFilteredResidenceList(Predicate\u003cResidence\u003e predicate)`, causing an ordered list of `Residence`s to be displayed.","lastModifiedDate":"2021-04-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":243,"author":{"gitId":"awzhenyi"},"content":"Below shows the sequence diagram of `EditBookingCommand`","lastModifiedDate":"2021-04-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":245,"author":{"gitId":"awzhenyi"},"content":"![EditBookingCommandSequenceDiagram](images/EditBookingSequenceDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":246,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":247,"author":{"gitId":"awzhenyi"},"content":"![EditBookingCommandSequenceDiagram2](images/EditBookingSequenceRefDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":248,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":249,"author":{"gitId":"awzhenyi"},"content":"And the activity diagram:","lastModifiedDate":"2021-04-12"},{"lineNumber":250,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":251,"author":{"gitId":"awzhenyi"},"content":"![EditBookingCommandActivityDiagram](images/EditBookingActivityDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":252,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":253,"author":{"gitId":"awzhenyi"},"content":"#### Design Consideration: Checking if the edited booking has dates that overlap with other bookings of the residence","lastModifiedDate":"2021-04-12"},{"lineNumber":254,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":255,"author":{"gitId":"awzhenyi"},"content":"Implementation of edit booking creates a `editedBooking` before calling `BookingList#setBooking` to replace `bookingToEdit` with `editedBooking`. There is a need to ensure that `editedBooking` has no overlap dates with other bookings. However, if `BookingList#contains` (method that checks if a booking overlaps with other bookings in the `bookingList`) is called, it is likely that it returns `true` because `editedBooking` has overlapping dates with `bookingToEdit` since at this point, `bookingToEdit`still exists in the `bookingList`.","lastModifiedDate":"2021-04-12"},{"lineNumber":256,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":257,"author":{"gitId":"VRSoorya"},"content":"* **Alternative 1 (current choice):** Verify the validity of `BookingList#setBooking` by simulating the deletion of `bookingToEdit` and addition of `editedBooking` through a method in `BookingList`","lastModifiedDate":"2021-04-12"},{"lineNumber":258,"author":{"gitId":"awzhenyi"},"content":"    * Pros: allows the use of `BookingList#setBooking`, separating `EditBookingCommand` from `AddingBookingCommand` and `DeleteBookingCommand`.","lastModifiedDate":"2021-04-12"},{"lineNumber":259,"author":{"gitId":"awzhenyi"},"content":"    * Cons: creating a method that is similar to `BookingList#contains`.","lastModifiedDate":"2021-04-12"},{"lineNumber":260,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":261,"author":{"gitId":"whatthelump"},"content":"### Booking class","lastModifiedDate":"2021-04-12"},{"lineNumber":262,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":263,"author":{"gitId":"whatthelump"},"content":"#### Design Consideration:","lastModifiedDate":"2021-04-12"},{"lineNumber":264,"author":{"gitId":"whatthelump"},"content":"* **Alternative 1 (current choice):** Morph `Person` class into `Booking` class","lastModifiedDate":"2021-04-12"},{"lineNumber":265,"author":{"gitId":"whatthelump"},"content":"    * Pros: With the `doesOverlap` method of `BookingTime`, it is convenient to ensure that there are no overlapping bookings for `Residence`s.","lastModifiedDate":"2021-04-12"},{"lineNumber":266,"author":{"gitId":"whatthelump"},"content":"    * Cons: All references to `Person` in existing classes, tests, and test utilities would have to be replaced, and new ones would have to be designed to accommodate `Booking`s.","lastModifiedDate":"2021-04-12"},{"lineNumber":267,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":268,"author":{"gitId":"whatthelump"},"content":"* **Alternative 2:** Preserve `Person` class","lastModifiedDate":"2021-04-12"},{"lineNumber":269,"author":{"gitId":"whatthelump"},"content":"    * Pros: If the same person is making multiple bookings, storing `Person`s would save time spent on re-entering the same details (e.g. `TenantName` and `Phone`). ","lastModifiedDate":"2021-04-12"},{"lineNumber":270,"author":{"gitId":"whatthelump"},"content":"    * Cons: Considering ResidenceTracker\u0027s target users would have a high turnover rate for their rental properties, keeping records of `Person`s could result in excessive storage usage. Furthermore, most `Person`s would probably only be used once, which makes storing them wasteful.","lastModifiedDate":"2021-04-12"},{"lineNumber":271,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":272,"author":{"gitId":"VRSoorya"},"content":"* **Alternative 2:** After creating `editedBooking`, use `DeleteBookingCommand` on `bookingToEdit` and `AddBookingCommand` to add `editedBooking` back to the `bookingList`","lastModifiedDate":"2021-04-12"},{"lineNumber":273,"author":{"gitId":"VRSoorya"},"content":"    * Pros: `AddBookingCommand` handles the check for overlapping dates for `editedBooking`. Previous issue of `bookingToEdit`existing in the `bookingList` is solved by deletion.","lastModifiedDate":"2021-04-12"},{"lineNumber":274,"author":{"gitId":"VRSoorya"},"content":"    * Cons: ties the implementation of `EditBookingCommand` to `AddBookingCommand` and `DeleteBookingCommand`.","lastModifiedDate":"2021-04-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"VRSoorya"},"content":"* busy user that has to manage a considerable number of residences","lastModifiedDate":"2021-04-12"},{"lineNumber":295,"author":{"gitId":"whatthelump"},"content":"* is constantly renting out residences; high turnover rate","lastModifiedDate":"2021-02-25"},{"lineNumber":296,"author":{"gitId":"VRSoorya"},"content":"* prefers working on laptop over mobile","lastModifiedDate":"2021-04-12"},{"lineNumber":297,"author":{"gitId":"whatthelump"},"content":"* is able to type quickly","lastModifiedDate":"2021-02-25"},{"lineNumber":298,"author":{"gitId":"whatthelump"},"content":"* prefers using a keyboard to using a mouse","lastModifiedDate":"2021-02-25"},{"lineNumber":299,"author":{"gitId":"VRSoorya"},"content":"* is familiar with CLI apps","lastModifiedDate":"2021-04-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":301,"author":{"gitId":"whatthelump"},"content":"**Value proposition**: easily keep track of residences and inform cleaning agency whenever necessary","lastModifiedDate":"2021-02-25"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                     | So that I can…​                                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"VRSoorya"},"content":"| -------- | ------------------------------------------ | ----------------------------------- | ----------------------------------------------------------------------   |","lastModifiedDate":"2021-04-12"},{"lineNumber":310,"author":{"gitId":"VRSoorya"},"content":"| `* * *`  | new user                                   | See a list of all commands          | refer to instructions when I forget how to use the App                   |","lastModifiedDate":"2021-02-28"},{"lineNumber":311,"author":{"gitId":"VRSoorya"},"content":"| `* * *`  | user                                       | add a new residence                 | manage all the residences I wish to keep track of                                                                         |","lastModifiedDate":"2021-04-12"},{"lineNumber":312,"author":{"gitId":"VRSoorya"},"content":"| `* * *`  | user                                       | delete a residence                  | remove residences that I no longer need to track                             |","lastModifiedDate":"2021-04-12"},{"lineNumber":313,"author":{"gitId":"VRSoorya"},"content":"| `* * *`  | user                                       | find a residence by name            | review details of specific residences without having to go through the entire list |","lastModifiedDate":"2021-04-12"},{"lineNumber":314,"author":{"gitId":"VRSoorya"},"content":"| `* *`    | new user                                   | clear all sample residences         | begin using Residence Tracker with my own data quickly","lastModifiedDate":"2021-04-12"},{"lineNumber":315,"author":{"gitId":"VRSoorya"},"content":"| `* *`    | user                                       | edit a residence                    | change the information of a residence when necessary           |","lastModifiedDate":"2021-04-12"},{"lineNumber":316,"author":{"gitId":"VRSoorya"},"content":"|`* *`     | user                                       | exit the application                | use my computer for other matters","lastModifiedDate":"2021-04-12"},{"lineNumber":317,"author":{"gitId":"VRSoorya"},"content":"|`* *`     | user                                       | go through a tutorial guide         | quickly learn the usage of the application ","lastModifiedDate":"2021-04-12"},{"lineNumber":318,"author":{"gitId":"wangtao0717"},"content":"|`* *`     | user                                       | add a new booking of a residence    | keep track of all booking information of my residences","lastModifiedDate":"2021-04-11"},{"lineNumber":319,"author":{"gitId":"VRSoorya"},"content":"|`* *`     | user                                       | edit a new booking of a residence   | change the information of booking when necessary","lastModifiedDate":"2021-04-12"},{"lineNumber":320,"author":{"gitId":"wangtao0717"},"content":"|`* *`     | user                                       | delete a new booking of a residence | remove booking details that I no longer need to track","lastModifiedDate":"2021-04-11"},{"lineNumber":321,"author":{"gitId":"VRSoorya"},"content":"|`* *`     | busy user                                  | be reminded me of upcoming bookings | quickly view the residences that need to be urgently cleaned","lastModifiedDate":"2021-04-12"},{"lineNumber":322,"author":{"gitId":"awzhenyi"},"content":"|`* *`     | busy user renting out many residences      | update status of multiple residence at once  | save time and get to my other works    |","lastModifiedDate":"2021-04-12"},{"lineNumber":323,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"wangtao0717"},"content":"(For all use cases below, the **System** is the `ResidenceTracker` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-26"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"jaredtengsw"},"content":"**Use case (UC01): Add a residence**\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":332,"author":{"gitId":"VRSoorya"},"content":"**MSS** \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":333,"author":{"gitId":"VRSoorya"},"content":"1.  User adds in the details of a residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":334,"author":{"gitId":"VRSoorya"},"content":"2.  User validates the details of the residence to be added.","lastModifiedDate":"2021-04-12"},{"lineNumber":335,"author":{"gitId":"VRSoorya"},"content":"3.  System confirms the addition and residence is added to the list of existing residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":336,"author":{"gitId":"VRSoorya"},"content":"4.  System saves the updated data.","lastModifiedDate":"2021-04-12"},{"lineNumber":337,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"VRSoorya"},"content":"* 2a. System detects error in submission if user did not provide all relevant fields correctly. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":342,"author":{"gitId":"jaredtengsw"},"content":"    * 2a1. ResidenceTracker shows an error message. \u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":343,"author":{"gitId":"wangtao0717"},"content":"      use case restarts from 1.","lastModifiedDate":"2021-02-26"},{"lineNumber":344,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":345,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":346,"author":{"gitId":"VRSoorya"},"content":"**Use case (UC02): Delete a residence** \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":347,"author":{"gitId":"VRSoorya"},"content":"**MSS** \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":348,"author":{"gitId":"VRSoorya"},"content":"1.  User deletes a residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":349,"author":{"gitId":"VRSoorya"},"content":"2.  System validates the residence to be deleted.","lastModifiedDate":"2021-04-12"},{"lineNumber":350,"author":{"gitId":"VRSoorya"},"content":"3.  System deletes the respective entry of the residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":351,"author":{"gitId":"VRSoorya"},"content":"4.  System saves the updated data.","lastModifiedDate":"2021-04-12"},{"lineNumber":352,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"wangtao0717"},"content":"**Extensions**","lastModifiedDate":"2021-02-26"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":356,"author":{"gitId":"VRSoorya"},"content":"* 2a. System detects an error in the user input.","lastModifiedDate":"2021-04-12"},{"lineNumber":357,"author":{"gitId":"VRSoorya"},"content":"    * 2a1. System requests for the expected format to delete a residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":358,"author":{"gitId":"VRSoorya"},"content":"    * 2a2. User inputs the corrected details to delete a residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":363,"author":{"gitId":"wangtao0717"},"content":"      ","lastModifiedDate":"2021-02-26"},{"lineNumber":364,"author":{"gitId":"jaredtengsw"},"content":"**Use case(UC03): Find a residence** \u003cbr\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":365,"author":{"gitId":"jaredtengsw"},"content":"**MSS** \u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":366,"author":{"gitId":"VRSoorya"},"content":"1.  User searches residences with keywords.","lastModifiedDate":"2021-04-12"},{"lineNumber":367,"author":{"gitId":"VRSoorya"},"content":"2.  System returns the residence(s) which include the keyword in their name.","lastModifiedDate":"2021-04-12"},{"lineNumber":368,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":369,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":370,"author":{"gitId":"jaredtengsw"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":371,"author":{"gitId":"VRSoorya"},"content":"* 1a. System found no matching residences.","lastModifiedDate":"2021-04-12"},{"lineNumber":372,"author":{"gitId":"VRSoorya"},"content":"    * 1a1. A corresponding message is shown and the residence list displayed is empty.","lastModifiedDate":"2021-04-12"},{"lineNumber":373,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e      Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":374,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":375,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":376,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":377,"author":{"gitId":"jaredtengsw"},"content":"**Use case(UC04): View list of all residences**\u003cbr\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":378,"author":{"gitId":"jaredtengsw"},"content":"**MSS**\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":379,"author":{"gitId":"VRSoorya"},"content":"1.  User lists all residences.","lastModifiedDate":"2021-04-12"},{"lineNumber":380,"author":{"gitId":"VRSoorya"},"content":"2.  System displays all residences in the list.","lastModifiedDate":"2021-04-12"},{"lineNumber":381,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":382,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":383,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":384,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":385,"author":{"gitId":"wangtao0717"},"content":"**Use case(UC05): Edit information of a residence** \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":386,"author":{"gitId":"jaredtengsw"},"content":"**MSS** \u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":387,"author":{"gitId":"VRSoorya"},"content":"1.  User edits a residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":388,"author":{"gitId":"VRSoorya"},"content":"2.  System validates the edits to the given residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":389,"author":{"gitId":"VRSoorya"},"content":"3.  System updates the residence accordingly.","lastModifiedDate":"2021-04-12"},{"lineNumber":390,"author":{"gitId":"VRSoorya"},"content":"4.  System saves the updated data.","lastModifiedDate":"2021-04-12"},{"lineNumber":391,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":392,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":393,"author":{"gitId":"jaredtengsw"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":394,"author":{"gitId":"VRSoorya"},"content":"* 2a. System detects an error in the user input.","lastModifiedDate":"2021-04-12"},{"lineNumber":395,"author":{"gitId":"VRSoorya"},"content":"    * 2a1. System requests for the expected input format to edit a residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":396,"author":{"gitId":"VRSoorya"},"content":"    * 2a2. User inputs the corrected details to edit a residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":397,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e      Use case resumes at step 2.","lastModifiedDate":"2021-02-28"},{"lineNumber":398,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":399,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":400,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":401,"author":{"gitId":"jaredtengsw"},"content":"**Use case (UC06): Show all available commands** \u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":402,"author":{"gitId":"jaredtengsw"},"content":"**MSS**\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":403,"author":{"gitId":"VRSoorya"},"content":"1.  User requests the help page.","lastModifiedDate":"2021-04-12"},{"lineNumber":404,"author":{"gitId":"VRSoorya"},"content":"2.  System displays the help page.","lastModifiedDate":"2021-04-12"},{"lineNumber":405,"author":{"gitId":"VRSoorya"},"content":"    \u003cbr\u003e    Use case ends.","lastModifiedDate":"2021-04-12"},{"lineNumber":406,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":407,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":408,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":409,"author":{"gitId":"jaredtengsw"},"content":"**Use case (UC07): Exit the application** \u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":410,"author":{"gitId":"jaredtengsw"},"content":"**MSS** \u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":411,"author":{"gitId":"VRSoorya"},"content":"1.  User exits the application.","lastModifiedDate":"2021-04-12"},{"lineNumber":412,"author":{"gitId":"VRSoorya"},"content":"2.  System shuts down.","lastModifiedDate":"2021-04-12"},{"lineNumber":413,"author":{"gitId":"jaredtengsw"},"content":"\u003cbr\u003e    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":414,"author":{"gitId":"jaredtengsw"},"content":"    ","lastModifiedDate":"2021-02-28"},{"lineNumber":415,"author":{"gitId":"wangtao0717"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":416,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":417,"author":{"gitId":"wangtao0717"},"content":"**Use case(UC08): Update clean status of multiple residences at once** \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":418,"author":{"gitId":"wangtao0717"},"content":"**MSS** \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":419,"author":{"gitId":"VRSoorya"},"content":"1.  User updates multiple residences\u0027 clean status at once.","lastModifiedDate":"2021-04-12"},{"lineNumber":420,"author":{"gitId":"VRSoorya"},"content":"2.  System confirms the validity of clean status and residences provided.","lastModifiedDate":"2021-04-12"},{"lineNumber":421,"author":{"gitId":"VRSoorya"},"content":"3.  System updates the required residences\u0027 clean status.","lastModifiedDate":"2021-04-12"},{"lineNumber":422,"author":{"gitId":"VRSoorya"},"content":"4.  System saves the updated data.    ","lastModifiedDate":"2021-04-12"},{"lineNumber":423,"author":{"gitId":"wangtao0717"},"content":"    \u003cbr\u003e    Use case ends.","lastModifiedDate":"2021-04-11"},{"lineNumber":424,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":425,"author":{"gitId":"wangtao0717"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":426,"author":{"gitId":"VRSoorya"},"content":"* 2a. System detects an error in the user input.","lastModifiedDate":"2021-04-12"},{"lineNumber":427,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":428,"author":{"gitId":"VRSoorya"},"content":"    * 2a1. System requests for the expected format to update multiple residences\u0027 clean status.","lastModifiedDate":"2021-04-12"},{"lineNumber":429,"author":{"gitId":"VRSoorya"},"content":"    * 2a2. User inputs the corrected details to update multiple residences\u0027 clean status.","lastModifiedDate":"2021-04-12"},{"lineNumber":430,"author":{"gitId":"wangtao0717"},"content":"      \u003cbr\u003e      Use case resumes at step 2.","lastModifiedDate":"2021-04-11"},{"lineNumber":431,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":432,"author":{"gitId":"wangtao0717"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":433,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":434,"author":{"gitId":"VRSoorya"},"content":"**Use case(UC09): Add a new booking to a specific residence** \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":435,"author":{"gitId":"wangtao0717"},"content":"**MSS** \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":436,"author":{"gitId":"VRSoorya"},"content":"1.  User adds a new booking to a residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":437,"author":{"gitId":"VRSoorya"},"content":"2.  System confirms the validity of the residence and the new booking details.","lastModifiedDate":"2021-04-12"},{"lineNumber":438,"author":{"gitId":"VRSoorya"},"content":"3.  System adds the new booking to the residence\u0027s booking list.","lastModifiedDate":"2021-04-12"},{"lineNumber":439,"author":{"gitId":"VRSoorya"},"content":"4.  System saves the updated data.    ","lastModifiedDate":"2021-04-12"},{"lineNumber":440,"author":{"gitId":"wangtao0717"},"content":"    \u003cbr\u003e    Use case ends.","lastModifiedDate":"2021-04-11"},{"lineNumber":441,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":442,"author":{"gitId":"wangtao0717"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":443,"author":{"gitId":"VRSoorya"},"content":"* 2a. System detects an error in the user input.","lastModifiedDate":"2021-04-12"},{"lineNumber":444,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":445,"author":{"gitId":"VRSoorya"},"content":"    * 2a1. System requests for the expected format to add a booking to a residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":446,"author":{"gitId":"VRSoorya"},"content":"    * 2a2. User inputs the corrected details to add a booking to a residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":447,"author":{"gitId":"wangtao0717"},"content":"      \u003cbr\u003e      Use case resumes at step 2.","lastModifiedDate":"2021-04-11"},{"lineNumber":448,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":449,"author":{"gitId":"wangtao0717"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":450,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":451,"author":{"gitId":"VRSoorya"},"content":"**Use case(UC10): Edit a booking of a specific residence** \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":452,"author":{"gitId":"wangtao0717"},"content":"**MSS** \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":453,"author":{"gitId":"VRSoorya"},"content":"1.  User edits a residence\u0027s booking. ","lastModifiedDate":"2021-04-12"},{"lineNumber":454,"author":{"gitId":"VRSoorya"},"content":"2.  System confirms the validity of the residence and the edited booking details.","lastModifiedDate":"2021-04-12"},{"lineNumber":455,"author":{"gitId":"VRSoorya"},"content":"3.  System updates the given booking in the residence\u0027s booking list.","lastModifiedDate":"2021-04-12"},{"lineNumber":456,"author":{"gitId":"VRSoorya"},"content":"4.  System saves the updated data.     ","lastModifiedDate":"2021-04-12"},{"lineNumber":457,"author":{"gitId":"wangtao0717"},"content":"    \u003cbr\u003e    Use case ends.","lastModifiedDate":"2021-04-11"},{"lineNumber":458,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":459,"author":{"gitId":"wangtao0717"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":460,"author":{"gitId":"VRSoorya"},"content":"* 2a. System detects an error in the user input","lastModifiedDate":"2021-04-12"},{"lineNumber":461,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":462,"author":{"gitId":"VRSoorya"},"content":"    * 2a1. System requests for the expected format of editing a residence\u0027s booking.","lastModifiedDate":"2021-04-12"},{"lineNumber":463,"author":{"gitId":"VRSoorya"},"content":"    * 2a2. User inputs the corrected details to edit a residence\u0027s booking.","lastModifiedDate":"2021-04-12"},{"lineNumber":464,"author":{"gitId":"wangtao0717"},"content":"      \u003cbr\u003e      Use case resumes at step 2.","lastModifiedDate":"2021-04-11"},{"lineNumber":465,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":466,"author":{"gitId":"wangtao0717"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":467,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":468,"author":{"gitId":"VRSoorya"},"content":"**Use case (UC11): Delete a booking of a specific residence**\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":469,"author":{"gitId":"wangtao0717"},"content":"**MSS**","lastModifiedDate":"2021-04-11"},{"lineNumber":470,"author":{"gitId":"VRSoorya"},"content":"1.  User deletes a booking from a residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":471,"author":{"gitId":"VRSoorya"},"content":"2.  System validates the booking to be deleted.","lastModifiedDate":"2021-04-12"},{"lineNumber":472,"author":{"gitId":"VRSoorya"},"content":"3.  System deletes the respective entry of the booking from the given residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":473,"author":{"gitId":"VRSoorya"},"content":"4.  System saves the updated data.    ","lastModifiedDate":"2021-04-12"},{"lineNumber":474,"author":{"gitId":"wangtao0717"},"content":"    \u003cbr\u003e    Use case ends.","lastModifiedDate":"2021-04-11"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":476,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-04-11"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":478,"author":{"gitId":"VRSoorya"},"content":"* 2a. System detects an error in the user input.","lastModifiedDate":"2021-04-12"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":480,"author":{"gitId":"VRSoorya"},"content":"    * 2a1. System requests for the correct format to delete a booking from a residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":481,"author":{"gitId":"VRSoorya"},"content":"    * 2a2. User inputs the corrected details to delete a booking from a residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":482,"author":{"gitId":"VRSoorya"},"content":"      \u003cbr\u003e      Use case resumes at step 2.","lastModifiedDate":"2021-04-12"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":484,"author":{"gitId":"wangtao0717"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":486,"author":{"gitId":"VRSoorya"},"content":"**Use case (UC12): Get reminder of residences with upcoming bookings** \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":487,"author":{"gitId":"wangtao0717"},"content":"**MSS**\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":488,"author":{"gitId":"VRSoorya"},"content":"1.  User requests a reminder of residences with upcoming bookings.","lastModifiedDate":"2021-04-12"},{"lineNumber":489,"author":{"gitId":"wangtao0717"},"content":"2.  System shows a list of all residences with bookings starting in the next 7 days.","lastModifiedDate":"2021-04-11"},{"lineNumber":490,"author":{"gitId":"VRSoorya"},"content":"    \u003cbr\u003e    Use case ends.","lastModifiedDate":"2021-04-12"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":492,"author":{"gitId":"wangtao0717"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":494,"author":{"gitId":"wangtao0717"},"content":"**Use case (UC13): CLear all residence at once** \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":495,"author":{"gitId":"wangtao0717"},"content":"**MSS**\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":496,"author":{"gitId":"VRSoorya"},"content":"1.  User chooses to clear all residences.","lastModifiedDate":"2021-04-12"},{"lineNumber":497,"author":{"gitId":"VRSoorya"},"content":"2.  System deletes all residence data from the storage file.","lastModifiedDate":"2021-04-12"},{"lineNumber":498,"author":{"gitId":"VRSoorya"},"content":"    \u003cbr\u003e    Use case ends.","lastModifiedDate":"2021-04-12"},{"lineNumber":499,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":500,"author":{"gitId":"wangtao0717"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"awzhenyi"},"content":"2.  Should be able to hold up to 100 residences without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-03-02"},{"lineNumber":506,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"awzhenyi"},"content":"4.  user inputs should be processed and executed within one second. ","lastModifiedDate":"2021-04-12"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"awzhenyi"},"content":"* **Residence Status**:","lastModifiedDate":"2021-03-02"},{"lineNumber":515,"author":{"gitId":"awzhenyi"},"content":"    * **Clean**: The residence has been cleaned","lastModifiedDate":"2021-03-02"},{"lineNumber":516,"author":{"gitId":"awzhenyi"},"content":"    * **Unclean**: The residence needs to be cleaned","lastModifiedDate":"2021-03-02"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"wangtao0717"},"content":"## **Appendix: Instructions for Manual Testing**","lastModifiedDate":"2021-04-12"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"VRSoorya"},"content":"   1. Double-click the jar file \u003cbr\u003e ","lastModifiedDate":"2021-04-12"},{"lineNumber":536,"author":{"gitId":"VRSoorya"},"content":"   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2021-04-12"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"awzhenyi"},"content":"### Adding a residence","lastModifiedDate":"2021-04-12"},{"lineNumber":546,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":547,"author":{"gitId":"VRSoorya"},"content":"1. Adding a residence","lastModifiedDate":"2021-04-12"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":549,"author":{"gitId":"VRSoorya"},"content":"    1. Prerequisites: User should have launched residence tracker.","lastModifiedDate":"2021-04-12"},{"lineNumber":550,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":551,"author":{"gitId":"awzhenyi"},"content":"    2. Test case: `add n/Amber Park a/22 Bedok Street` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":552,"author":{"gitId":"VRSoorya"},"content":"    Expected: A new residence named \u0027Amber Park\u0027 and with address \u002722 Bedok Street\u0027 will display in the list of residences. It is initialised with \u0027Clean\u0027 as its default status since this optional field is left empty.","lastModifiedDate":"2021-04-12"},{"lineNumber":553,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":554,"author":{"gitId":"awzhenyi"},"content":"    3. Test case: `add n/Midtown Modern a/18 Tan Quee Lan Street c/n t/popular` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":555,"author":{"gitId":"VRSoorya"},"content":"    Expected: A new residence named \u0027Midtown Modern\u0027 with address \u002718 Tan Quee Lan Street\u0027 will display in the list of residences. It should have \u0027Unclean\u0027 as its clean status and \u0027popular\u0027 as a tag.","lastModifiedDate":"2021-04-12"},{"lineNumber":556,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":557,"author":{"gitId":"awzhenyi"},"content":"    4. Test case: `add n/Capetown` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":558,"author":{"gitId":"VRSoorya"},"content":"    Expected: No residence is added. Error details shown in the status message to indicate the required and optional parameters of the command. Status bar remains the same.","lastModifiedDate":"2021-04-12"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":560,"author":{"gitId":"wangtao0717"},"content":"### Deleting a residence","lastModifiedDate":"2021-04-10"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"VRSoorya"},"content":"1. Deleting a residence while all residences are being shown","lastModifiedDate":"2021-04-12"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"VRSoorya"},"content":"   1. Prerequisites: User should have launched residence tracker with some residence data or use `list` command to display all the residences.","lastModifiedDate":"2021-04-12"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"VRSoorya"},"content":"      Expected: First residence is deleted from the list. Details of the deleted residence is shown in the status message.","lastModifiedDate":"2021-04-12"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"wangtao0717"},"content":"      Expected: No residence is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-04-10"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"awzhenyi"},"content":"### Editing a residence","lastModifiedDate":"2021-04-12"},{"lineNumber":576,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":577,"author":{"gitId":"VRSoorya"},"content":"1. Editing a residence while all the residences are being shown","lastModifiedDate":"2021-04-12"},{"lineNumber":578,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":579,"author":{"gitId":"VRSoorya"},"content":"    1. Prerequisites: User should have launched residence tracker with some residence data or use `list` command to display all the residences. Add at least 2 residences marked as `Unclean` and 2 other residences marked as `Clean`.","lastModifiedDate":"2021-04-12"},{"lineNumber":580,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":581,"author":{"gitId":"awzhenyi"},"content":"    2. Test case: `edit 2 c/y` \u003cbr\u003e ","lastModifiedDate":"2021-04-12"},{"lineNumber":582,"author":{"gitId":"VRSoorya"},"content":"       Expected: Changes the clean status of the second residence in the list to \u0027clean\u0027. The displayed residence list may re-order itself such that this residence will now be displayed below all the other residences marked \u0027unclean\u0027.","lastModifiedDate":"2021-04-12"},{"lineNumber":583,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":584,"author":{"gitId":"awzhenyi"},"content":"    3. Test case: `edit 2` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":585,"author":{"gitId":"VRSoorya"},"content":"       Expected: No residence is edited. Error details regarding missing parameters shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-04-12"},{"lineNumber":586,"author":{"gitId":"VRSoorya"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":587,"author":{"gitId":"VRSoorya"},"content":"    4. Test case: `edit x n/NameToChange` when there are less than `x` residences shown in the residence list. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":588,"author":{"gitId":"VRSoorya"},"content":"       Expected: No residence is edited. Error details regarding invalid residence index shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-04-12"},{"lineNumber":589,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":590,"author":{"gitId":"VRSoorya"},"content":"### Multiple clean status updates","lastModifiedDate":"2021-04-12"},{"lineNumber":591,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":592,"author":{"gitId":"VRSoorya"},"content":"1. Changing the clean status of multiple residences at once","lastModifiedDate":"2021-04-12"},{"lineNumber":593,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":594,"author":{"gitId":"VRSoorya"},"content":"    1. Prerequisites: User should have launched residence tracker with some residence data or use `list` command to display all the residences. Have at least 2 residences marked as `Unclean` and 2 other residences marked as `Clean`.","lastModifiedDate":"2021-04-12"},{"lineNumber":595,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":596,"author":{"gitId":"VRSoorya"},"content":"    2. Test case: `status clean 1 2 3 4` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":597,"author":{"gitId":"VRSoorya"},"content":"       Expected: Changes the clean status of the first 4 residence in the list to `Clean`. The displayed residence list may re-order itself such that these updated residences will now be displayed below all the other residences marked `Unclean`.","lastModifiedDate":"2021-04-12"},{"lineNumber":598,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":599,"author":{"gitId":"VRSoorya"},"content":"    3. Test case: `status unclean 1 2 x` when there are less than `x` residences in the residence list. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":600,"author":{"gitId":"VRSoorya"},"content":"       Expected: No residence is updated. Error details regarding invalid residence index shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-04-12"},{"lineNumber":601,"author":{"gitId":"awzhenyi"},"content":"       ","lastModifiedDate":"2021-04-12"},{"lineNumber":602,"author":{"gitId":"awzhenyi"},"content":"### Adding a booking","lastModifiedDate":"2021-04-12"},{"lineNumber":603,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":604,"author":{"gitId":"VRSoorya"},"content":"1. Adding a booking to a specific residence","lastModifiedDate":"2021-04-12"},{"lineNumber":605,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":606,"author":{"gitId":"VRSoorya"},"content":"    1. Prerequisites: User should have launched residence tracker with some residence data or use `list` command to display all the residences. Have at least 2 residences in the list.","lastModifiedDate":"2021-04-12"},{"lineNumber":607,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":608,"author":{"gitId":"awzhenyi"},"content":"    2. Test case: `addb 2 n/Bob p/91234567 s/01-01-2022 e/01-02-2022` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":609,"author":{"gitId":"VRSoorya"},"content":"       Expected: A corresponding booking with the details given is shown in the `BOOKINGS` column of the 2nd residence. If this is an upcoming booking, it should be highlighted in green.","lastModifiedDate":"2021-04-12"},{"lineNumber":610,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":611,"author":{"gitId":"awzhenyi"},"content":"    3. Test case: `addb 1 n/Sandy p/87654321 s/09-08-2021 e/122-08-2021` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":612,"author":{"gitId":"VRSoorya"},"content":"       Expected: No booking is added. Error details regarding invalid date format shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-04-12"},{"lineNumber":613,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":614,"author":{"gitId":"VRSoorya"},"content":"    4. Test case: `addb x n/Sandy p/87654321 s/09-08-2021 e/12-08-2021` when there are less than `x` residences in the residence list.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":615,"author":{"gitId":"VRSoorya"},"content":"       Expected: No booking is added. Error details regarding invalid residence index shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-04-12"},{"lineNumber":616,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":617,"author":{"gitId":"awzhenyi"},"content":"### Deleting a booking","lastModifiedDate":"2021-04-12"},{"lineNumber":618,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":619,"author":{"gitId":"awzhenyi"},"content":"1. Deleting a booking from a specific residence","lastModifiedDate":"2021-04-12"},{"lineNumber":620,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":621,"author":{"gitId":"VRSoorya"},"content":"    1. Prerequisites: User should have launched residence tracker with some residence data or use `list` command to display all the residences. Have at least 2 residences in the list.","lastModifiedDate":"2021-04-12"},{"lineNumber":622,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":623,"author":{"gitId":"awzhenyi"},"content":"    2. Test case: `deleteb r/2 b/2` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":624,"author":{"gitId":"awzhenyi"},"content":"       Expected: The second booking of the second residence will be deleted. Details of the deleted booking will be shown in the status message.","lastModifiedDate":"2021-04-12"},{"lineNumber":625,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":626,"author":{"gitId":"VRSoorya"},"content":"    3. Test case: `deleteb r/2 b/x` when the second residence has less than `x` bookings. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":627,"author":{"gitId":"VRSoorya"},"content":"       Expected: No booking is deleted. Error details regarding invalid booking index shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-04-12"},{"lineNumber":628,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":629,"author":{"gitId":"awzhenyi"},"content":"### Editing a booking","lastModifiedDate":"2021-04-12"},{"lineNumber":630,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":631,"author":{"gitId":"awzhenyi"},"content":"1. Editing a booking from a specific residence","lastModifiedDate":"2021-04-12"},{"lineNumber":632,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":633,"author":{"gitId":"VRSoorya"},"content":"    1. Prerequisites: User should have launched residence tracker with some residence data or use `list` command to display all the residences. Have at least 2 residences in the list.","lastModifiedDate":"2021-04-12"},{"lineNumber":634,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":635,"author":{"gitId":"awzhenyi"},"content":"    2. Test case: `editb r/2 b/2 n/Bob` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":636,"author":{"gitId":"VRSoorya"},"content":"       Expected: The tenant name of the second booking of the second residence will be changed to `Bob` and the details of the edited booking will be shown in the status message.","lastModifiedDate":"2021-04-12"},{"lineNumber":637,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":638,"author":{"gitId":"VRSoorya"},"content":"    3. Test case: `editb r/2 b/2 e/31-05-2021` when there exists another booking that lasts from `30-05-2021` to `01-06-2021`. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":639,"author":{"gitId":"VRSoorya"},"content":"       Expected: No booking is edited. Error details regarding overlap of bookings for this residence shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-04-12"},{"lineNumber":640,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":641,"author":{"gitId":"awzhenyi"},"content":"### Reminder of upcoming bookings","lastModifiedDate":"2021-04-12"},{"lineNumber":642,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":643,"author":{"gitId":"VRSoorya"},"content":"1. Showing only the residences with upcoming bookings in the next seven days (excluding today).","lastModifiedDate":"2021-04-12"},{"lineNumber":644,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":645,"author":{"gitId":"VRSoorya"},"content":"    1. Prerequisites: User should have launched residence tracker with some residence data or use `list` command to display all the residences. Have at least 1 residence with booking starting in the next 7 days.","lastModifiedDate":"2021-04-12"},{"lineNumber":646,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":647,"author":{"gitId":"awzhenyi"},"content":"    2. Test case: `remind` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":648,"author":{"gitId":"VRSoorya"},"content":"    Expected: residences with upcoming bookings starting in the next seven days (excluding the current day) will be displayed. The list will be sorted to show residences marked `Unclean` before residences marked `Clean`.","lastModifiedDate":"2021-04-12"},{"lineNumber":649,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":650,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":651,"author":{"gitId":"VRSoorya"},"content":"### Modifying data files","lastModifiedDate":"2021-04-12"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"VRSoorya"},"content":"1. Dealing with corrupted data files","lastModifiedDate":"2021-04-12"},{"lineNumber":654,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":655,"author":{"gitId":"VRSoorya"},"content":"    1. Prerequisites: There are some stored residences in the residence tracker. The app is closed.","lastModifiedDate":"2021-04-12"},{"lineNumber":656,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":657,"author":{"gitId":"VRSoorya"},"content":"    1. Test case: corrupted `residencetracker.json` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":658,"author":{"gitId":"VRSoorya"},"content":"       ","lastModifiedDate":"2021-04-12"},{"lineNumber":659,"author":{"gitId":"VRSoorya"},"content":"       * Steps: ","lastModifiedDate":"2021-04-12"},{"lineNumber":660,"author":{"gitId":"VRSoorya"},"content":"         * Edit the `residencetracker.json` such that it becomes an invalid format by removing a single `}` at the end of the file.","lastModifiedDate":"2021-04-12"},{"lineNumber":661,"author":{"gitId":"VRSoorya"},"content":"         * Open the residence tracker. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":662,"author":{"gitId":"VRSoorya"},"content":"       ","lastModifiedDate":"2021-04-12"},{"lineNumber":663,"author":{"gitId":"VRSoorya"},"content":"       Expected: The residence tracker will start but the residence list will be empty (i.e all previous data is lost). Add a few residences and try other commands. They should work as expected. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":664,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":665,"author":{"gitId":"VRSoorya"},"content":"    1. Test case: missing `residencetracker.json` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":666,"author":{"gitId":"VRSoorya"},"content":"       ","lastModifiedDate":"2021-04-12"},{"lineNumber":667,"author":{"gitId":"VRSoorya"},"content":"       * Steps: ","lastModifiedDate":"2021-04-12"},{"lineNumber":668,"author":{"gitId":"VRSoorya"},"content":"         * Exit the residence tracker.","lastModifiedDate":"2021-04-12"},{"lineNumber":669,"author":{"gitId":"VRSoorya"},"content":"         * Delete the `residencetracker.json` from the `/data` directory.","lastModifiedDate":"2021-04-12"},{"lineNumber":670,"author":{"gitId":"VRSoorya"},"content":"         * Open the residence tracker.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":671,"author":{"gitId":"VRSoorya"},"content":"       ","lastModifiedDate":"2021-04-12"},{"lineNumber":672,"author":{"gitId":"VRSoorya"},"content":"       Expected: The residence tracker will start with only the sample data.","lastModifiedDate":"2021-04-12"},{"lineNumber":673,"author":{"gitId":"-"},"content":"       ","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"wangtao0717"},"content":"## **Appendix: Effort**","lastModifiedDate":"2021-04-12"},{"lineNumber":676,"author":{"gitId":"VRSoorya"},"content":"ResidenceTracker is a brownfield project that builds on the existing code base of AddressBook3. It contains around 7k LOC of additional implementation, testing, documentation and refactoring as logged by RepoSense. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":677,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":678,"author":{"gitId":"VRSoorya"},"content":"The `Person` class was refactored into a residence class with different parameters. We added new parameters such as `BookingList` and `CleanStatusTag`. The `BookingList` is like a second entity which stores a unique list of bookings and has it\u0027s own parameters.","lastModifiedDate":"2021-04-12"},{"lineNumber":679,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":680,"author":{"gitId":"VRSoorya"},"content":"Quite some time was spent on the refactoring of classes due to changes especially in fixing of broken tests caused by the refactoring.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":682,"author":{"gitId":"VRSoorya"},"content":"The bulk of our features is based around the implementation of `CleanStatusTag` and `BookingList` as these will be essential to our target users in managing residences. Since this app is designed to help manage a user\u0027s residences for rent, the key point of this app would be to help keep track of the residences\u0027 bookings and clean status to plan cleaning schedules. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":684,"author":{"gitId":"VRSoorya"},"content":"There was careful consideration and discussion on product development with a user centric approach. As such, we made minor changes to improve user experience such as sorting the residences based on clean status, bookings based on timing and colour indicators for bookings to signify the different statuses (expired, ongoing, upcoming).","lastModifiedDate":"2021-04-12"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":686,"author":{"gitId":"VRSoorya"},"content":"The Ui was also redesigned to add an additional column of bookings for each residence, including other changes to the design and color scheme of the application to optimise screen space rather than having all the information vertically on the app.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"whatthelump":15,"awzhenyi":87,"jaredtengsw":28,"wangtao0717":99,"-":262,"VRSoorya":196}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [ResidenceTracker’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"-":47,"VRSoorya":1}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"ResidenceTracker (RT) is a **desktop app for managing residences, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, RT can get your residence management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"In addition to being able to managing several residences at once with just a few key strokes of the keyboard,","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"ResidenceTracker helps users to also keep track of any bookings a residence has, overseeing multiple residences with ease. ","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"whatthelump"},"content":"1. Download the latest `residencetracker.jar` from [here](https://github.com/AY2021S2-CS2103-T16-3/tp/releases).","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"whatthelump"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your ResidenceTracker.","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"1. Double-click the file to start the app. The GUI similar to that shown below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"   * **`list`** : Lists all residences in the app.","lastModifiedDate":"2021-02-24"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"   * **`add`**`n/Clementi HDB a/459A Clementi Ave 3, #04-257, S121459 c/n` : Adds a residence named `Clementi HDB` to the ResidenceTracker.","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"   * **`edit`**`1 c/y` : edit the first residence clean status as Clean.","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"   * **`delete`**`3` : Deletes the 3rd residence shown in the current list.","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"whatthelump"},"content":"   * **`clear`** : Deletes all residences.","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"1. Refer to the [Features](#features) below for details of each command and do make sure to checkout the Refer to the [FAQ](#faq) section as well.","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"whatthelump"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/Amber Heights`.","lastModifiedDate":"2021-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"whatthelump"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/Amber Heights t/friend` or as `n/Amber Heights`.","lastModifiedDate":"2021-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"whatthelump"},"content":"  e.g. if the command specifies `n/NAME a/ADDRESS`, `a/ADDRESS n/NAME` is also acceptable.","lastModifiedDate":"2021-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"whatthelump"},"content":"  e.g. if you specify `a/Jurong West St 60 a/Jurong West St 70`, only `a/Jurong West St 70` will be taken.","lastModifiedDate":"2021-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"Shows a message with the current list of commands along with examples.","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"It also provides a button to copy the URL link to access the help page.","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"Shortcut: press `F1`","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"whatthelump"},"content":"### Adding a residence: `add`","lastModifiedDate":"2021-03-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"Adds a new residence to the list of residences, default for clean status is ‘clean’. Valid clean status inputs are `y`,`n`, `clean` and `unclean`","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"* Names cannot be empty. Trailing white spaces before and after a valid name will be ignored. e.g `​ ​ BLK 3 ​ ​` will be used and displayed as `BLK 3`","lastModifiedDate":"2021-04-12"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"* Names should only contain alpha-numeric characters. e.g `Block71 Ayer Rajah`  ","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"* Valid clean statuses are case-insensitive, e.g `c/Y` is the same as `c/y`, `c/clean` is the same as `c/ClEaN`.","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"* Address can take any values (even emojis) but only alphanumeric characters and symbols will be visible on the residence tracker while other inputs may be distorted or invisible. `@!df34!@//` is a valid address.","lastModifiedDate":"2021-04-12"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"* Tags should only contain alphanumeric characters. Symbols and spaces are not valid.","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"* Valid tags are case-sensitive so will be used exactly as provided by the user. e.g `POPular` will be used and displayed as `POPular`","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"* Tags are meant for quick reference. Overtly long or numerous number of tags may be used at the user\u0027s own discretion but it will not be visually user-friendly.","lastModifiedDate":"2021-04-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"Format: ` add n/RESIDENCE_NAME a/ADDRESS [c/VALID_CLEAN_STATUS] [t/TAG]... `","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"wangtao0717"},"content":"* `add n/Melville Park a/22 Simei Street 1, #10-02, S529948`","lastModifiedDate":"2021-02-21"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"* `add n/Clementi HDB a/459A Clementi Ave 3, #04-257, S121459 c/n`","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":"### Editing a residence: `edit`","lastModifiedDate":"2021-04-12"},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"Edits the given fields of an existing residence (excludes bookings, see `editb` instead to edit bookings).","lastModifiedDate":"2021-04-12"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":"Format: `edit RESIDENCE_INDEX [n/RESIDENCE_NAME] [a/ADDRESS] [c/VALID_CLEAN_STATUS] [t/TAG]`","lastModifiedDate":"2021-04-12"},{"lineNumber":102,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":103,"author":{"gitId":"VRSoorya"},"content":"* Edits the residence at the specified `RESIDENCE_INDEX`.","lastModifiedDate":"2021-04-12"},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"* The `RESIDENCE_INDEX` refers to the index number shown in the displayed residence list (i.e. start from index 1).","lastModifiedDate":"2021-04-12"},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"* The `RESIDENCE_INDEX` must be a **positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-12"},{"lineNumber":106,"author":{"gitId":"VRSoorya"},"content":"* At least one field must be provided.","lastModifiedDate":"2021-04-12"},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":"* If this command is used to edit tags, all tags for this residence need to be specified.","lastModifiedDate":"2021-04-12"},{"lineNumber":108,"author":{"gitId":"VRSoorya"},"content":"* Residence name, address, clean status and tags follow formats specified in `add`","lastModifiedDate":"2021-04-12"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"* Editing of tags overwrites all existing tags.","lastModifiedDate":"2021-04-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-04-12"},{"lineNumber":112,"author":{"gitId":"VRSoorya"},"content":"*  `edit 1 c/y` Edits the clean status of the 1st residence on the list to `Clean`.","lastModifiedDate":"2021-04-12"},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"*  `edit 2 n/Nashville`  Edits the name of the 2nd residence on the list from to `Nashville`.","lastModifiedDate":"2021-04-12"},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":"*  `edit 1 t/tag1 t/tag2` Edits the 1st residence on the list to have tags `tag1` and `tag2`.","lastModifiedDate":"2021-04-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":116,"author":{"gitId":"whatthelump"},"content":"### Listing all residences: `list`","lastModifiedDate":"2021-03-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"Shows the full list of all residences in the app.","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"awzhenyi"},"content":"* The displayed list of residences will be sorted by their clean status.","lastModifiedDate":"2021-04-10"},{"lineNumber":123,"author":{"gitId":"VRSoorya"},"content":"* Unclean residences come before clean residences.  ","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"VRSoorya"},"content":"* After any edit to a filtered residence list that is returned by commands `find` and `remind`, the GUI displays this full residence list again.","lastModifiedDate":"2021-04-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"VRSoorya"},"content":"### Listing residences with bookings starting in the next 7 days: `remind`","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"VRSoorya"},"content":"Shows a list of all residences with bookings starting in the next 7 days.","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"VRSoorya"},"content":"Format: `remind`","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"VRSoorya"},"content":"* Next 7 days: If today is 1st April, residences with bookings starting on 2nd April to 8th April (inclusive) will be listed.","lastModifiedDate":"2021-04-02"},{"lineNumber":133,"author":{"gitId":"VRSoorya"},"content":"* The displayed list of residences is always sorted.","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"VRSoorya"},"content":"* Unclean residences come before clean residences.","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"VRSoorya"},"content":"### Locating residences by name: `find`","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"whatthelump"},"content":"Finds residences whose names contain any of the given keywords.","lastModifiedDate":"2021-03-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"VRSoorya"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]...`","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"VRSoorya"},"content":"* The search is case-insensitive. e.g `duxton` will match `Duxton`","lastModifiedDate":"2021-02-24"},{"lineNumber":143,"author":{"gitId":"VRSoorya"},"content":"* The order of the keywords does not matter. e.g. `Gardens Bay` will match `Bay Gardens`","lastModifiedDate":"2021-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"VRSoorya"},"content":"* Only full words will be matched e.g. `Dux` will not match `Duxton`","lastModifiedDate":"2021-02-24"},{"lineNumber":146,"author":{"gitId":"VRSoorya"},"content":"* Apartments matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-02-24"},{"lineNumber":147,"author":{"gitId":"VRSoorya"},"content":"  e.g. `Gardens Bay` will return `Botanic Gardens`, `Bay Area`","lastModifiedDate":"2021-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"VRSoorya"},"content":"* `find heights` returns `Hillview Heights` and `Aspen Heights`","lastModifiedDate":"2021-02-24"},{"lineNumber":151,"author":{"gitId":"VRSoorya"},"content":"* `find east coast` returns `East View`, `West Coast`\u003cbr\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"whatthelump"},"content":"### Deleting a residence: `delete`","lastModifiedDate":"2021-03-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"VRSoorya"},"content":"Deletes the specified residence from the list of residences shown.","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"wangtao0717"},"content":"Format: `delete RESIDENCE_INDEX`","lastModifiedDate":"2021-04-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"wangtao0717"},"content":"* Deletes the residence at the specified `RESIDENCE_INDEX`.","lastModifiedDate":"2021-04-04"},{"lineNumber":160,"author":{"gitId":"VRSoorya"},"content":"* The `RESIDENCE_INDEX` refers to the index number shown in the displayed residences list (i.e. start from index 1).","lastModifiedDate":"2021-04-11"},{"lineNumber":161,"author":{"gitId":"wangtao0717"},"content":"* The `RESIDENCE_INDEX` must be a **positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"VRSoorya"},"content":"* `list` followed by `delete 3` deletes the 3rd residence in the list of residences shown.","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"VRSoorya"},"content":"### Update multiple residences\u0027 clean status: `status`","lastModifiedDate":"2021-04-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":168,"author":{"gitId":"wangtao0717"},"content":"Update Clean status of multiple residences at once.","lastModifiedDate":"2021-04-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":170,"author":{"gitId":"wangtao0717"},"content":"Format: `status clean RESIDENCE_INDEX1 RESIDENCE_INDEX2..` or `status unclean RESIDENCE_INDEX1 RESIDENCE_INDEX2..`","lastModifiedDate":"2021-04-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":172,"author":{"gitId":"wangtao0717"},"content":"* Updates the clean status of the residences\u0027 with the specified `RESIDENCE_INDEX`.","lastModifiedDate":"2021-04-04"},{"lineNumber":173,"author":{"gitId":"VRSoorya"},"content":"* The `RESIDENCE_INDEX` refers to the index number shown in the displayed residences list (i.e. start from index 1).","lastModifiedDate":"2021-04-11"},{"lineNumber":174,"author":{"gitId":"wangtao0717"},"content":"* The `RESIDENCE_INDEX` must be a **positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-04"},{"lineNumber":175,"author":{"gitId":"VRSoorya"},"content":"* More than 1 residence indexes can be specified.","lastModifiedDate":"2021-04-01"},{"lineNumber":176,"author":{"gitId":"VRSoorya"},"content":"* The update will not occur at all if any of the indexes provided is invalid (i.e no partial exceution of the command).","lastModifiedDate":"2021-04-12"},{"lineNumber":177,"author":{"gitId":"VRSoorya"},"content":"* After updating, the residence list will sort automatically to show Unclean residences before the clean residences.","lastModifiedDate":"2021-04-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-04-01"},{"lineNumber":180,"author":{"gitId":"wangtao0717"},"content":"* `status clean 1 3` update the 1st and 3rd residences clean status to `Clean`.","lastModifiedDate":"2021-04-01"},{"lineNumber":181,"author":{"gitId":"VRSoorya"},"content":"* `status unclean 2 5` update the 2nd and 5th residences clean status to `Unclean`.","lastModifiedDate":"2021-04-01"},{"lineNumber":182,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":183,"author":{"gitId":"VRSoorya"},"content":"### Adding a booking to a residence: `addb`","lastModifiedDate":"2021-04-12"},{"lineNumber":184,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"whatthelump"},"content":"Adds a new booking to the specified residence.","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"VRSoorya"},"content":"Format: `addb RESIDENCE_INDEX n/TENANT_NAME p/TENANT_PHONE s/START_DATE e/END_DATE`","lastModifiedDate":"2021-04-12"},{"lineNumber":188,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"wangtao0717"},"content":"* Adds a booking to the residence at the specified `RESIDENCE_INDEX`.","lastModifiedDate":"2021-04-04"},{"lineNumber":190,"author":{"gitId":"VRSoorya"},"content":"* The `RESIDENCE_INDEX` refers to the index number shown in the displayed residences list (i.e. start from index 1).","lastModifiedDate":"2021-04-11"},{"lineNumber":191,"author":{"gitId":"wangtao0717"},"content":"* The `RESIDENCE_INDEX` must be a **positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-04"},{"lineNumber":192,"author":{"gitId":"VRSoorya"},"content":"* The `TENANT_NAME` follows the format expected for `RESIDENCE_NAME` as specified in `add`.","lastModifiedDate":"2021-04-12"},{"lineNumber":193,"author":{"gitId":"wangtao0717"},"content":"* The phone must only include numbers and must be at least 3 characters long. e.g `p/999` `p/12345678`","lastModifiedDate":"2021-04-04"},{"lineNumber":194,"author":{"gitId":"VRSoorya"},"content":"* The dates must be valid dates in a year and follow the format DD-MM-YYYY. e.g `s/01-02-2021`","lastModifiedDate":"2021-04-12"},{"lineNumber":195,"author":{"gitId":"VRSoorya"},"content":"* The `START_DATE` has to be before than the `END_DATE`.","lastModifiedDate":"2021-04-12"},{"lineNumber":196,"author":{"gitId":"VRSoorya"},"content":"* The booking period `START_DATE` to `END_DATE` should not overlap with the booking period of other bookings for the given residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":197,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"whatthelump"},"content":"Examples:","lastModifiedDate":"2021-03-28"},{"lineNumber":199,"author":{"gitId":"whatthelump"},"content":"* `addb 1 n/John p/91234567 s/01-01-2021 e/02-01-2021`","lastModifiedDate":"2021-03-28"},{"lineNumber":200,"author":{"gitId":"VRSoorya"},"content":"* `addb 2 n/Jane Tan p/65812567 s/31-12-2021 e/05-01-2022`","lastModifiedDate":"2021-04-01"},{"lineNumber":201,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"VRSoorya"},"content":"### Editing a booking of a residence: `editb`","lastModifiedDate":"2021-04-12"},{"lineNumber":203,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"awzhenyi"},"content":"Edits the specified booking from the specified residence.","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"VRSoorya"},"content":"Format: `editb r/RESIDENCE_INDEX b/BOOKING_INDEX [n/TENANT_NAME] [p/TENANT_PHONE] [s/START_DATE] [e/END_DATE]` ","lastModifiedDate":"2021-04-12"},{"lineNumber":207,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"VRSoorya"},"content":"* `RESIDENCE_INDEX` and `BOOKING_INDEX` refers to the index number as shown in ResidenceTracker (i.e. start from index 1).","lastModifiedDate":"2021-04-11"},{"lineNumber":209,"author":{"gitId":"VRSoorya"},"content":"* `RESIDENCE_INDEX` and `BOOKING_INDEX` must be a **positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-11"},{"lineNumber":210,"author":{"gitId":"awzhenyi"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"VRSoorya"},"content":"* Tenant name, phone and booking start and end dates follow formats specified in `addb`.","lastModifiedDate":"2021-04-12"},{"lineNumber":212,"author":{"gitId":"awzhenyi"},"content":"* It is invalid to edit the `START_DATE` to be later than the `END_DATE`. Likewise, it is invalid to update the `END_DATE`","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"awzhenyi"},"content":"to be earlier than the `START_DATE`.","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"VRSoorya"},"content":"* It is invalid to edit `START_DATE` or `END_DATE` such that it overlaps with the booking period of other bookings.","lastModifiedDate":"2021-04-12"},{"lineNumber":215,"author":{"gitId":"VRSoorya"},"content":"* Existing booking details will be overwritten by the input values.","lastModifiedDate":"2021-04-12"},{"lineNumber":216,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":217,"author":{"gitId":"awzhenyi"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":218,"author":{"gitId":"awzhenyi"},"content":"* `editb r/1 b/2 p/90069009 s/03-28-2021` Edits the phone number and start date of 2nd booking of the 1st residence to be","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"awzhenyi"},"content":"`90069009` and `03-28-2021` respectively.","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"VRSoorya"},"content":"### Deleting a booking from a residence: `deleteb`","lastModifiedDate":"2021-04-12"},{"lineNumber":222,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":223,"author":{"gitId":"VRSoorya"},"content":"Deletes the specified booking from the specified residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":224,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":225,"author":{"gitId":"VRSoorya"},"content":"Format: `deleteb r/RESIDENCE_INDEX b/BOOKING_INDEX`","lastModifiedDate":"2021-04-12"},{"lineNumber":226,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":227,"author":{"gitId":"VRSoorya"},"content":"* Deletes the booking at the specified `BOOKING_INDEX` from the residence at the specified `RESIDENCE_INDEX`","lastModifiedDate":"2021-04-12"},{"lineNumber":228,"author":{"gitId":"VRSoorya"},"content":"* `RESIDENCE_INDEX` and `BOOKING_INDEX` refers to the index number as shown in ResidenceTracker (i.e. start from index 1).","lastModifiedDate":"2021-04-12"},{"lineNumber":229,"author":{"gitId":"VRSoorya"},"content":"* `RESIDENCE_INDEX` and `BOOKING_INDEX` must be a **positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-12"},{"lineNumber":230,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":231,"author":{"gitId":"VRSoorya"},"content":"Examples:","lastModifiedDate":"2021-04-12"},{"lineNumber":232,"author":{"gitId":"VRSoorya"},"content":"* `list` followed by `deleteb r/3 b/2` deletes the 2nd booking from the 3rd residence.","lastModifiedDate":"2021-04-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2021-04-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":236,"author":{"gitId":"VRSoorya"},"content":"Clears all entries from the residence tracker. Useful when users wish to clear all the sample data at once.","lastModifiedDate":"2021-04-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-04-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"whatthelump"},"content":"ResidenceTracker data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-03-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":252,"author":{"gitId":"VRSoorya"},"content":"ResidenceTracker data are saved as a JSON file `[JAR file location]/data/residencetracker.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-04-01"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":255,"author":{"gitId":"whatthelump"},"content":"If your changes to the data file makes its format invalid, ResidenceTracker will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-03-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"whatthelump"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ResidenceTracker home folder.","lastModifiedDate":"2021-03-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"VRSoorya"},"content":"**Q**: What does the colour of the bookings respresent?\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":270,"author":{"gitId":"VRSoorya"},"content":"**A**: The colours are as follows","lastModifiedDate":"2021-04-11"},{"lineNumber":271,"author":{"gitId":"VRSoorya"},"content":"* Red - refers to bookings that have passed","lastModifiedDate":"2021-04-11"},{"lineNumber":272,"author":{"gitId":"VRSoorya"},"content":"* Orange - refers to bookings that are ongoing (A booking that starts or ends today is also considered ongoing)","lastModifiedDate":"2021-04-11"},{"lineNumber":273,"author":{"gitId":"VRSoorya"},"content":"* Green - refers to bookings that have not started yet ","lastModifiedDate":"2021-04-11"},{"lineNumber":274,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":275,"author":{"gitId":"VRSoorya"},"content":"**Q**: How can I keep viewing the filtered residence list returned by `remind` and `find` commands after I make edits?\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":276,"author":{"gitId":"VRSoorya"},"content":"**A**: Unfortunately, that is not a functionality we have built yet, but we hear you! The next iteration will be sure to incorporate such features for a better user experience and we hope you can stick with us while we improve the product.","lastModifiedDate":"2021-04-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"VRSoorya"},"content":"**Add Residence** | `add n/NAME_OF_RESIDENCE a/ADDRESS [clean/[y or n]] [t/TAG] …​` \u003cbr\u003e e.g., `add n/Clementi HDB a/459A Clementi Ave 3, #04-257, S121459 clean/n`","lastModifiedDate":"2021-04-01"},{"lineNumber":285,"author":{"gitId":"VRSoorya"},"content":"**Add Booking to Residence** | `addb RESIDENCE_INDEX n/NAME_OF_BOOKER p/PHONE_OF_BOOKER s/START_TIME e/END_TIME` \u003cbr\u003e e.g., `add 2 n/John a/91234567 s/01-01-2021 e/02-01-2021`","lastModifiedDate":"2021-04-01"},{"lineNumber":286,"author":{"gitId":"VRSoorya"},"content":"**Delete Residence** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-04-01"},{"lineNumber":287,"author":{"gitId":"VRSoorya"},"content":"**Delete Booking of Residence** | `deleteb r/RESIDENCE_INDEX b/BOOKING_INDEX`\u003cbr\u003e e.g., `delete r/3 b/2`","lastModifiedDate":"2021-04-01"},{"lineNumber":288,"author":{"gitId":"VRSoorya"},"content":"**Edit Residence** | `edit INDEX [n/RESIDENCE_NAME] [a/ADDRESS] [c/VALID_CLEAN_STATUS] [t/TAG]`\u003cbr\u003e e.g.,`edit 2 c/n`","lastModifiedDate":"2021-04-01"},{"lineNumber":289,"author":{"gitId":"VRSoorya"},"content":"**Edit Booking of Residence** | `editb r/RESIDENCE_INDEX b/BOOKING_INDEX [n/TENANT_NAME] [p/PHONE] [s/START_DATE] [e/END_DATE]` \u003cbr\u003e e.g., `editb r/1 b/2 p/90069009 s/03-28-2021`","lastModifiedDate":"2021-04-01"},{"lineNumber":290,"author":{"gitId":"wangtao0717"},"content":"**Update Multiple Clean Status** | `status clean INDEX1 INDEX2..` or `status unclean INDEX1 INDEX2..`\u003cbr\u003e e.g., `status clean 1 3`","lastModifiedDate":"2021-04-04"},{"lineNumber":291,"author":{"gitId":"VRSoorya"},"content":"**Find Residence** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find Heights`","lastModifiedDate":"2021-04-01"},{"lineNumber":292,"author":{"gitId":"VRSoorya"},"content":"**Remind Residences with Upcoming Bookings** | `remind`","lastModifiedDate":"2021-04-01"},{"lineNumber":293,"author":{"gitId":"VRSoorya"},"content":"**List All Residences** | `list`","lastModifiedDate":"2021-04-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"jaredtengsw"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-02-24"},{"lineNumber":296,"author":{"gitId":"VRSoorya"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"whatthelump":22,"awzhenyi":14,"jaredtengsw":6,"wangtao0717":17,"-":133,"VRSoorya":104}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"wangtao0717"},"content":"    content: \"ResidenceTracker\";","lastModifiedDate":"2021-04-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"wangtao0717":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteResidence(residence)","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveResidenceTracker(residenceTracker)","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":36,"VRSoorya":2}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"ResidenceTracker *-right-\u003e \"1\" UniqueResidenceList","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"ResidenceTracker *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"UniqueTagList -[hidden]down- UniqueResidenceList","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"UniqueTagList -[hidden]down- UniqueResidenceList","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"UniqueResidenceList o-right-\u003e Residence","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"Residence -up-\u003e \"*\" Tag","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"Residence *--\u003e\"1\" ResidenceName","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"Residence *--\u003e \"1\"ResidenceAddress","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"Residence *--\u003e \"1\" CleanStatusTag","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"Residence *--\u003e \"1\"BookingList","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"BookingList *--\u003e\"*\" Booking","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"Booking *--\u003e TenantName","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"Booking *--\u003e Phone","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"Booking *--\u003e BookingTime","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wangtao0717":15,"-":11,"VRSoorya":1}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"if () then ([command commits ResidenceTracker])","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"    :Save ResidenceTracker to","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"    residenceTrackerStateList;","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wangtao0717":3,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"participant \":ResidenceTrackerParser\" as ResidenceTrackerParser LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"LogicManager -\u003e ResidenceTrackerParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"activate ResidenceTrackerParser","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"ResidenceTrackerParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"DeleteCommandParser --\u003e ResidenceTrackerParser","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"ResidenceTrackerParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"DeleteCommandParser --\u003eResidenceTrackerParser : d","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"DeleteCommandParser -[hidden]-\u003e ResidenceTrackerParser","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"ResidenceTrackerParser --\u003e LogicManager : d","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"deactivate ResidenceTrackerParser","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"DeleteCommand -\u003e Model : deleteResidence(residence)","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wangtao0717":10,"-":58,"VRSoorya":1}},{"path":"docs/diagrams/EditBookingActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"start","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":":User inputs editb command;","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"if() then ([valid command format])","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"    :EditBookingCommand finds residence and booking;","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"        if() then ([if both indexes are valid])","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"            if() then([if fields are valid]);","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"                :Booking is updated;","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"                :Edit booking success message;","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"            else([fields are not valid])","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"                :checks which fields are invalid;","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"                :Corresponding error message;","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"            endif","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"        else([if either index are not valid])","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"            :corresponding error message;","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"        endif","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"else([invalid command format])","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":":incorrect command format message;","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"endif","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"stop","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"awzhenyi":24}},{"path":"docs/diagrams/EditBookingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"!include style.puml","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"participant \":ResidenceTrackerParser\" as ResidenceTrackerParser LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"participant \":EditBookingCommandParser\" as EditBookingCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"participant \"e:EditBookingCommand\" as EditBookingCommand LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"[-\u003e LogicManager : execute(\"editb r/1 b/1 e/01-01-2022\")","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"activate LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"LogicManager -\u003e ResidenceTrackerParser : parseCommand(\"editb r/1 b/1 e/01-01-2022\")","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"activate ResidenceTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"create EditBookingCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"ResidenceTrackerParser -\u003e EditBookingCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"activate EditBookingCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"EditBookingCommandParser --\u003e ResidenceTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"deactivate EditBookingCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"ResidenceTrackerParser -\u003e EditBookingCommandParser : parse(\"r/1 b/1 e/01-01-2022\")","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"activate EditBookingCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"create EditBookingCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"EditBookingCommandParser -\u003e EditBookingCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"activate EditBookingCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"EditBookingCommand --\u003e EditBookingCommandParser : e","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"deactivate EditBookingCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"EditBookingCommandParser --\u003eResidenceTrackerParser : e","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"deactivate EditBookingCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"EditBookingCommandParser -[hidden]-\u003e ResidenceTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"destroy EditBookingCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"ResidenceTrackerParser --\u003e LogicManager : d","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"deactivate ResidenceTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"LogicManager -\u003e EditBookingCommand : execute()","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"activate EditBookingCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"ref over EditBookingCommand, Model: How EditBookingCommand interacts with Model to edit the booking","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"EditBookingCommand -\u003e Model: SetResidence(targetResidence, EditedResidence)","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"activate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"Model --\u003e EditBookingCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"deactivate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"create CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"EditBookingCommand -\u003e CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"activate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"CommandResult --\u003e EditBookingCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"EditBookingCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"deactivate EditBookingCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"awzhenyi":71}},{"path":"docs/diagrams/EditBookingSequenceRefDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"!include style.puml","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"participant \"e:EditBookingCommand\" as EditBookingCommand LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"participant \"bookingToEdit: Booking\" as bookingToEdit MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"participant \"bookingListToEdit: BookingList\" as bookingListToEdit MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"participant \"residenceToEdit: Residence\" as residenceToEdit MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"participant \"lastShownList: ObservableList\u003cResidence\u003e\" as lastShownList MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"group sd How EditBookingCommand interacts with Model to edit the booking","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"    activate EditBookingCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"    activate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"    EditBookingCommand -\u003e Model: getFilteredResidenceList()","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"    create lastShownList","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"    Model --\u003e lastShownList","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    activate lastShownList","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"    lastShownList --\u003e EditBookingCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"    deactivate lastShownList","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"    EditBookingCommand -\u003e lastShownList:get(residenceIndex.getZeroBased())","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"    activate lastShownList","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"    lastShownList --\u003e EditBookingCommand: targetResidence","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"    EditBookingCommand -\u003e lastShownList:get(residenceIndex.getZeroBased())","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"    create residenceToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"    lastShownList --\u003e residenceToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"    deactivate lastShownList","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"    activate residenceToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"    residenceToEdit --\u003e EditBookingCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"    deactivate residenceToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"    EditBookingCommand --\u003e residenceToEdit: getBookingList()","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"    activate residenceToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"    create bookingListToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"    residenceToEdit --\u003e bookingListToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"    activate bookingListToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"    bookingListToEdit --\u003e EditBookingCommand: bookingListToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"    deactivate bookingListToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"    EditBookingCommand --\u003e bookingListToEdit: getBooking(bookingIndex.getZeroBased())","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"    activate bookingListToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"    create bookingToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"    bookingListToEdit --\u003e bookingToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"    activate bookingToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"    bookingToEdit --\u003e EditBookingCommand: bookingToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"    deactivate bookingToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"    EditBookingCommand -\u003e EditBookingCommand: createEditedBooking(bookingToEdit, editedBookingDescriptor)","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"    EditBookingCommand -\u003e bookingListToEdit: setBooking(bookingToEdit, editedBooking)","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"    deactivate bookingListToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"    deactivate residenceToEdit","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"end","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"awzhenyi":62}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"Class ResidenceTrackerParser","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"LogicManager --\u003e\"1\" ResidenceTrackerParser","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"ResidenceTrackerParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser .left.|\u003e Parser","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wangtao0717":3,"-":66}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"Interface ReadOnlyResidenceTracker \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"Class ResidenceTracker","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"Class ReadOnlyResidenceTracker","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"Package Residence {","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"Class Residence","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"Class ResidenceAddress","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"Class ResidenceName","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"Class CleanStatusTag","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"Class BookingList","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"Class UniqueResidenceList","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"ResidenceTracker .up.|\u003e ReadOnlyResidenceTracker","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"ModelManager o--\u003e \"1\" ResidenceTracker","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"ResidenceTracker *--\u003e \"1\" UniqueResidenceList","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"UniqueResidenceList o--\u003e \"*\" Residence","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"Residence *--\u003e ResidenceName","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"Residence *--\u003e ResidenceAddress","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"Residence *--\u003e CleanStatusTag","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"Residence *--\u003e BookingList","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"Residence *--\u003e \"*\" Tag","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"ResidenceName -[hidden]right-\u003e ResidenceAddress","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"ResidenceAddress -[hidden]right-\u003e CleanStatusTag","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"CleanStatusTag -[hidden]right-\u003e BookingList","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"ModelManager -----\u003e\" ~* filtered list\" Residence","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wangtao0717":23,"-":33}},{"path":"docs/diagrams/RemindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"!include style.puml","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"participant \":ResidenceTrackerParser\" as ResidenceTrackerParser LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"participant \"r:RemindCommand\" as RemindCommand LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"[-\u003e LogicManager : execute(\"remind\")","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"activate LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"LogicManager -\u003e ResidenceTrackerParser : parseCommand(\"remind\")","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"activate ResidenceTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"create RemindCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"ResidenceTrackerParser -\u003e RemindCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"activate RemindCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"RemindCommand --\u003e ResidenceTrackerParser : r","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"deactivate RemindCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"ResidenceTrackerParser --\u003e LogicManager : r","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"deactivate ResidenceTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"LogicManager -\u003e RemindCommand : execute()","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"activate RemindCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"RemindCommand -\u003e Model : updateFilteredResidenceList(predicate)","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"activate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"ref over Model","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    Automatic Sorting","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    of Residences by","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    Clean Status","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"end ref","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"Model --\u003e RemindCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"deactivate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"create CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"RemindCommand -\u003e CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"activate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"CommandResult --\u003e RemindCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"RemindCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"deactivate RemindCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"VRSoorya":59}},{"path":"docs/diagrams/ResidenceSortSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"!include style.puml","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"group sd Automatic Sorting of Residences by Clean Status","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"participant \":ModelManager\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"participant \":FilteredList\" as FilteredList MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"participant \":ResidenceTracker\" as ResidenceTracker MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"participant \":UniqueResidenceList\" as UniqueResidenceList MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"[-\u003e Model : updateFilteredResidenceList(predicate)","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"activate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"Model -\u003e FilteredList : setPredicate(predicate)","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"activate FilteredList","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"FilteredList --\u003e Model","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"deactivate FilteredList","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"Model -\u003e ResidenceTracker : sortResidenceList()","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"activate ResidenceTracker","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"ResidenceTracker -\u003e UniqueResidenceList : sortResidenceList()","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"activate UniqueResidenceList","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"UniqueResidenceList --\u003e ResidenceTracker","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"deactivate UniqueResidenceList","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"ResidenceTracker --\u003e Model","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"deactivate ResidenceTracker","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"[\u003c- Model","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"deactivate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"end","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"VRSoorya":36}},{"path":"docs/diagrams/StatusActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"start","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":":user inputs status command;","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"if() then ([valid command format])","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"    :System updates clean status of the required residences;","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    :System saves updated  residence list to storage;","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"    :System shows the updated residences in the result box;","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"else([invalid command format])","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":":System shows error message in result box;","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"endif","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"stop","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"wangtao0717":15}},{"path":"docs/diagrams/StatusSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"!include style.puml","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"participant \":ResidenceTrackerParser\" as ResidenceTrackerParser LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"participant \":StatusCommandParser\" as StatusCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"participant \"s:StatusCommand\" as StatusCommand LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"[-\u003e LogicManager : execute(\"status clean 1 3 4\")","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"activate LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"LogicManager -\u003e ResidenceTrackerParser : parseCommand(\"status clean 1 3 4\")","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"activate ResidenceTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"create StatusCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"ResidenceTrackerParser -\u003e StatusCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"activate StatusCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"StatusCommandParser --\u003e ResidenceTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"deactivate StatusCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"ResidenceTrackerParser -\u003e StatusCommandParser : parse(\"clean 1 3 4\")","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"activate StatusCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"create StatusCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"StatusCommandParser -\u003e StatusCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"activate StatusCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"StatusCommand --\u003e StatusCommandParser : s","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"deactivate StatusCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"StatusCommandParser --\u003eResidenceTrackerParser : s","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"deactivate StatusCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"StatusCommandParser -[hidden]-\u003e ResidenceTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"destroy StatusCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"ResidenceTrackerParser --\u003e LogicManager : s","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"deactivate ResidenceTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"LogicManager -\u003e StatusCommand : execute()","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"activate StatusCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"group loop [index in indexArray]","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"    StatusCommand -\u003eStatusCommand:createUpdatedResidence(index)","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"    activate StatusCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"    StatusCommand--\u003eStatusCommand:updatedResidence","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"    deactivate StatusCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"    StatusCommand -\u003e Model : setResidence(updatedResidence)","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"    activate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"    Model --\u003e StatusCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"    deactivate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"end","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"StatusCommand -\u003e Model : updateFilteredResidenceList(predicate)","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"activate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"ref over Model","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"    Automatic Sorting","lastModifiedDate":"2021-04-12"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"    of Residences by","lastModifiedDate":"2021-04-12"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"    Clean Status","lastModifiedDate":"2021-04-12"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"end ref","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"Model --\u003e StatusCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"deactivate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"create CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"StatusCommand -\u003e CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":"activate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":"CommandResult --\u003e StatusCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":84,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":"StatusCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-12"},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":"deactivate StatusCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":87,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":91,"author":{"gitId":"wangtao0717"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"wangtao0717":91}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"Interface ResidenceTrackerStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"Class JsonResidenceTrackerStorage","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"StorageManager o--\u003e ResidenceTrackerStorage","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Storage -|\u003e UserPrefsStorage","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"Storage -|\u003e ResidenceTrackerStorage","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"JsonResidenceTrackerStorage .left.|\u003e ResidenceTrackerStorage","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"JsonResidenceTrackerStorage .down.\u003e JsonSerializableResidenceTracker","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"JsonSerializableResidenceTracker .right.\u003e JsonAdaptedResidence","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"JsonAdaptedResidence .right.\u003e JsonAdaptedTag","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"JsonAdaptedResidence .up.\u003e JsonAdaptedBooking","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wangtao0717":3,"-":19,"VRSoorya":6}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"Class ResidenceListPanel","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"Class ResidenceCard","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"MainWindow *-down-\u003e ResidenceListPanel","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"ResidenceListPanel -down-\u003e ResidenceCard","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"ResidenceListPanel --|\u003e UiPart","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"ResidenceCard --|\u003e UiPart","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"ResidenceCard ..\u003e Model","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"ResidenceListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wangtao0717":8,"-":52}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"participant \":VersionedResidenceTracker\" as VersionedResidenceTracker LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"participant \":VersionedResidenceTracker\" as VersionedResidenceTracker MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"LogicManager -\u003e ResidenceTrackerParser : parseCommand(undo)","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"activate ResidenceTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"ResidenceTrackerParser -\u003e UndoCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"UndoCommand --\u003e ResidenceTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"ResidenceTrackerParser --\u003e LogicManager : u","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"deactivate ResidenceTrackerParser","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"UndoCommand -\u003e Model : undoResidenceTracker()","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"Model -\u003e VersionedResidenceTracker : undo()","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"activate VersionedResidenceTracker","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"VersionedResidenceTracker -\u003e VersionedResidenceTracker :resetData(ReadOnlyResidenceTracker)","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"VersionedResidenceTracker --\u003e Model :","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"deactivate VersionedResidenceTracker","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":39,"VRSoorya":14}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"Participant \":ResidenceTrackerParser\" as abp LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"ecp -\u003e ec ++: index, editResidenceDescriptor","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":19,"VRSoorya":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"title: Residence Tracker","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-T16-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-T16-3/tp/actions)","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103-T16-3/tp/branch/master/graph/badge.svg?token\u003dU5L6JM6HMZ)](https://codecov.io/gh/AY2021S2-CS2103-T16-3/tp)","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"**ResidenceTracker (RT) is a **desktop app for managing residences, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, RT can get your residence management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"* If you are interested in using Residence Tracker, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"* If you are interested about developing AResidence Tracker, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wangtao0717":5,"-":13,"VRSoorya":1}},{"path":"docs/team/awzhenyi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"---","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"layout: page","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"title: Zhen Yi\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"---","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"## Project: Residence Tracker","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"ResidenceTracker (RT) is a **desktop app for managing residences, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, RT can get your residence management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"* **New Feature**: Edit Booking","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"  * What it does: allows user to edit the details of an existing booking.","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"  * Justification: This feature improves the product since bookings are subjected to changes such as postponements, additional day of booking, late estimated arrivals, etc. By","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"  allowing the user to edit the details the of the bookings, it helps to smooth the process of updating information. ","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"* **New Feature**: Delete Booking","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"   * What it does: allows user to delete an existing booking.","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"   * Justification: This feature improves the product by allowing the user to delete bookings that are expired, or cancelled so that the bookings column will not be cluttered with nonessential information.","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dawzhenyi\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-02-19\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dawzhenyi\u0026tabRepo\u003dAY2021S2-CS2103-T16-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"* **Project management**:","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"  * Opening of Github issues and assignment.","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"  * Practice of forking workflow.","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"* **Enhancements**:","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"    * wrote tests for EditBookingCommand and EditBookingCommandParser, increasing coverage from 54.50% to 62.83% [\\#170](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/170)","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"  * User Guide:","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"    * Added documentation for the features `editb` [\\#163](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/163)","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"    * Added documentation for the features `deteteb` [\\#120](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/120/)","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"    * Minor refinements to user guide for existing features [\\#233](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/233)","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"  * Developer Guide:","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"    * Added implementation details with corresponding sequence and activity diagrams of the `editb` feature. [\\#242](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/242)","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"    * Provided some manual testing instructions in appendix. [\\#246](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/246)","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"    ","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"* **Community**:","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#161](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/161)","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"  * Reported bugs and suggestions for other teams in the class as part of practical dry run [(Link)](https://github.com/awzhenyi/ped/issues).","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"awzhenyi":41}},{"path":"docs/team/jaredtengsw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jaredtengsw"},"content":"---","lastModifiedDate":"2021-04-13"},{"lineNumber":2,"author":{"gitId":"jaredtengsw"},"content":"layout: page","lastModifiedDate":"2021-04-13"},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"title: Jared Teng\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-13"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"---","lastModifiedDate":"2021-04-13"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"## Project: Residence Tracker","lastModifiedDate":"2021-04-13"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"ResidenceTracker (RT) is a **desktop app for managing residences, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, RT can get your residence management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-04-13"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-13"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"* **New Feature**: Booking List on GUI app","lastModifiedDate":"2021-04-13"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"  * What it does: Allows the users to view the list of bookings associated with each residence in the GUI app.","lastModifiedDate":"2021-04-13"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"  * Justification: This feature improves the product as alongside with the addition of the add booking, delete booking and edit booking commands, by allowing the list of bookings to be viewable to the user would improve the ease of management of residences for the users.","lastModifiedDate":"2021-04-13"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"* **Enhancement**: Tags are placed in a scrollpane","lastModifiedDate":"2021-04-13"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"  * What it does: It enables users to scroll through the list of tags that has been added to each residences.","lastModifiedDate":"2021-04-13"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"  * Justification: This enhancement improves the product because it allows users to add as many tags as they desire to a residence without the tags pushing other important details of the residence out of visibility.","lastModifiedDate":"2021-04-13"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"* **Enhancement**: Color-coding bookings","lastModifiedDate":"2021-04-13"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"  * What it does: Introduces 3 colors that highlights the text for booking details: Red for expired bookings, orange for ongoing bookings and green for upcoming bookings.","lastModifiedDate":"2021-04-13"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"  * Justification: This enhancement improves the product as it would increase the visibility of the bookings, helping the user to easily differentiate the bookings based on their status which would assists in the management of the residences.","lastModifiedDate":"2021-04-13"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"* **Enhancement**: Update Help Window to show all the commands","lastModifiedDate":"2021-04-13"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"  * What it does: Provides a list of commands when the user keys in the \u0027help\u0027 function along with instruction on how to use the functions and examples.","lastModifiedDate":"2021-04-13"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"  * Justification: This enhancement would improve the user-friendliness of the product for users that are new to the app. It removes the hassle of needing to visit the User Guide when the new user is in the midst being familiarised with the command functions.","lastModifiedDate":"2021-04-13"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003djaredtengsw\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-02-19)","lastModifiedDate":"2021-04-13"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"* **Project management**:","lastModifiedDate":"2021-04-13"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"  * Opening of Github issues and assignment.","lastModifiedDate":"2021-04-13"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"  * Practice of forking workflow.","lastModifiedDate":"2021-04-13"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-13"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"* **Community**:","lastModifiedDate":"2021-04-13"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"  * PRs reviewed.","lastModifiedDate":"2021-04-13"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"  * Reported bugs and provided feedback to other teams in the cohort as part of Practice Exam Dry-run [(Link)](https://github.com/jaredtengsw/ped/issues).","lastModifiedDate":"2021-04-13"}],"authorContributionMap":{"jaredtengsw":42}},{"path":"docs/team/vrsoorya.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"---","lastModifiedDate":"2021-02-23"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"layout: page","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"title: Soorya\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"---","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"## Project: Residence Tracker","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"ResidenceTracker (RT) is a **desktop app for managing residences, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you are a busy landlord renting out multiple residences and can type fast, RT can get your residence management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"* **New Feature**: Adding Bookings to a Residence","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"  * What it does: Allows users to add booking details to an existing residence.","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"  * Justification: This feature is essential to the product since tracking bookings is a necessary feature of residence management that will determine when the residence needs to be cleaned or if it is available for personal use and so on.","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    By allowing the user to add details of bookings such as dates, tenant name and contact details, it improves the completeness of the product for the user in managing residences.","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    ","lastModifiedDate":"2021-02-23"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"* **New Feature**: Automatic Sorting of Residences","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"  * What it does: Allows users to view residences that need to be cleaned before residences that were already clean.","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"  * Justification: This feature enhances the product by allowing the users to view the residences that need the most attention first since the unclean residences would need to be cleaned.","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"  * Highlights: This feature was tricky to implement as the sorting of residences affects other commands that access the residences based on the index in the display list. ","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    Specifically, the `status` command edited the clean status of multiple residences one after the other, so the sorting could not happen until a user command execution was completed. ","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    It required some thought to ensure that the implementation did not add more dependencies while also sorting when necessary.","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"* **New Feature**: Reminder to View Residences with Upcoming Bookings","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"  * What it does: Allows users to view only the upcoming residences that have bookings in the next 7 days.","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"  * Justification: This feature enhances the product by allowing the users to view the residences that need the most attention and take necessary actions to ensure they are kept clean for upcoming bookings.","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    Although this feature is similar to the above, this was added to give greater importance to residences with upcoming bookings as other unclean residences need not have to be cleaned as much as these do in order to be ready for tenants.","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dvrsoorya\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-02-19\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dVRSoorya\u0026tabRepo\u003dAY2021S2-CS2103-T16-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"* **Project management**:","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"  * Managed releases `v1.2` - `v1.4` (4 releases) on GitHub","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"  * Practice of forking and feature branch workflow with issues, milestones and CI/CD.","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-23"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"  * User Guide:","lastModifiedDate":"2021-02-23"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"    * Added documentation for the features `remind` and `addb` [\\#173](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/173/files)","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    * Did cosmetic tweaks to existing documentation of features `add`, `edit`, `status`","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-23"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    * Added implementation details of the `remind` feature: [\\#174](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/174/files), [\\#240](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/240/files)","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"    * Added user stories and made cosmetic tweaks to adapt the document to the new application. [\\#237](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/237/files)","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"* **Community**:","lastModifiedDate":"2021-02-23"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#146](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/146)","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"  * Contributed to forum discussions (examples: [1](https://github.com/nus-cs2103-AY2021S2/forum/issues/110))","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"  * Reported bugs and suggestions for other teams in the class (2 teams: [1](https://github.com/vrsoorya/ped/issues), [2](https://github.com/vrsoorya/pe/issues))","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"VRSoorya":46}},{"path":"docs/team/wangtao0717.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"layout: page","lastModifiedDate":"2021-02-26"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"title: Wang Tao\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"NOTE: to be edited by Wang Tao accordingly as development progresses","lastModifiedDate":"2021-02-26"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"## Project: Residence Tracker","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"ResidenceTracker (RT) is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, RT can get your residence management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-26"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"* **New Feature**: a new feature of residence -- cleanStatusTag","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    * What it is: A remarkable sign to show the clean status of residence which help users clearly know whether the residence is clean or not, and arrange for home cleaning company to provide service in time. ","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"    * Justification: This feature improves the product significantly because as airbnb managers, they could manage the residences more conveniently with the help of this feature and avoid complaints caused by poor cleanup.","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"    * Highlights: cleanStatusTag as a residence feature is applied to all aspects of the project. \"add\"and \"edit\" command can initialize and change it. ","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"* **New Feature**: new command \"status\"","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"    * What it is: a convenient command to update clean status of multiple residences at once.","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"    * Justification: This feature improves the product significantly because clean status is a special tag which is changed often, and after users call someone to clean residences, it usually needs to update more than one clean status. as busy managers, they definitely don’t want to waste time updating them one by one. So this command can save users\u0027 time.","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"    * Highlights: cleanStatusTag as a residence feature is applied to all aspects of the project. \"add\"and \"edit\" command can initialize and change it.","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dwangtao0717\u0026tabRepo\u003dAY2021S2-CS2103-T16-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"* **Project management**:","lastModifiedDate":"2021-02-26"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"    * Pull and set up the GitHub team org/repo","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"    * Maintaining the issue tracker and milestones","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-26"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"    * Updated the GUI background image and color (Pull requests [\\#70](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/70), [\\#75](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/75))","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"    * Wrote tests for new features to increase coverage  (Pull requests [\\#80](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/80), [\\#109](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/109),[\\#235](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/235))","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"    * fix some failing tests (Pull requests [\\#226](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/226))","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-26"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"    * User Guide:","lastModifiedDate":"2021-02-26"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        * Added documentation for the features `add` [\\#20](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/20)","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"        * Added documentation for the features `status` [\\#171](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/171)","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"        * Did cosmetic tweaks to existing documentation: [\\#224](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/224)","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"    * Developer Guide:","lastModifiedDate":"2021-02-26"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"        * Added use case.[\\#35](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/35)","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"        * Added implementation details of the `status` feature  [\\#226](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/226)","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"        * Added `StatusSequenceDiagram` UML, `StatusActivityDiagram`","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"    ","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"* **Community**:","lastModifiedDate":"2021-02-26"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"    * Contributed to forum discussions ([\\#188](https://github.com/nus-cs2103-AY2021S2/forum/issues/188))","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"    * Reported bugs and suggestions","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"    ","lastModifiedDate":"2021-02-26"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-02-26"}],"authorContributionMap":{"wangtao0717":48}},{"path":"docs/team/whatthelump.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"---","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":"layout: page","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"title: Li Gang\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":"---","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"## Project: Residence Tracker","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"ResidenceTracker (RT) is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, RT can get your residence management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"* Morphed Person class to Booking class.","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"  * What it does: Instead of having Person(s) associated with a Residence, Residences would have a list of Bookings.","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"  * Justification: Considering ResidenceTracker\u0027s target users would have high turnover rates for their rental properties, they would find it more useful to edit and view bookings rather than track the people making the reservations.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"  * Highlights: This change meant that existing commands, many of which referenced Person, had to be updated accordingly. It required a careful weighing of which features of Person were relevant, which could be discarded, and which new features should be added. The morphing also affected various existing tests, test utilities, and necessitated new tests for the Booking class itself.","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"* Morphed Logic and Storage classes to reflect changes from AB3 to ResidenceTracker.","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"whatthelump"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dwhatthelump\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-02-19\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dwhatthelump\u0026tabRepo\u003dAY2021S2-CS2103-T16-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"whatthelump"},"content":"* **Project management**:","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"  * Opening and assigning of Github issues","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"whatthelump"},"content":"  * Practice of forking workflow","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"whatthelump"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"whatthelump"},"content":"  * Wrote additional tests for existing features to increase coverage (Pull requests [\\#81](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/81), [\\#108](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/108/))","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"whatthelump"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"  * User Guide:","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"    * Added documentation for the features `addb` and `deleteb` [\\#139](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/139)","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"whatthelump"},"content":"    * Updated documentation for `delete` feature [\\#19](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/19)","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"whatthelump"},"content":"    * Removed traces of AB3 [\\#56](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/56)","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"whatthelump"},"content":"  * Developer Guide:","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"    * Updated product scope","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"whatthelump"},"content":"    * Added user stories","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"whatthelump"},"content":"    * Added implementation details of the `Booking` class","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"whatthelump"},"content":"* **Community**:","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"whatthelump"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#172](https://github.com/AY2021S2-CS2103-T16-3/tp/pull/172)","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"whatthelump"},"content":"  * Reported bugs and suggestions for other teams in the class ([Link](https://github.com/whatthelump/ped/issues))","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"whatthelump":41}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ReadOnlyResidenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ResidenceTracker;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"whatthelump"},"content":"import seedu.address.storage.JsonResidenceTrackerStorage;","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"import seedu.address.storage.ResidenceTrackerStorage;","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 5, true);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ResidenceTracker ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"whatthelump"},"content":"        ResidenceTrackerStorage residenceTrackerStorage \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"whatthelump"},"content":"            new JsonResidenceTrackerStorage(userPrefs.getResidenceTrackerFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"whatthelump"},"content":"        storage \u003d new StorageManager(residenceTrackerStorage, userPrefsStorage);","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s residence tracker and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"whatthelump"},"content":"     * The data from the sample residence tracker will be used instead if {@code storage}\u0027s residence tracker is not","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"whatthelump"},"content":"     * found, or an empty residence tracker will be used instead if errors occur when reading {@code storage}\u0027s","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"whatthelump"},"content":"     * residence tracker.","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"        Optional\u003cReadOnlyResidenceTracker\u003e residenceTrackerOptional;","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"whatthelump"},"content":"        ReadOnlyResidenceTracker initialData;","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":"            residenceTrackerOptional \u003d storage.readResidenceTracker();","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":"            if (!residenceTrackerOptional.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":"                logger.info(\"Data file not found. Will be starting with a sample ResidenceTracker\");","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"            initialData \u003d residenceTrackerOptional.orElseGet(SampleDataUtil::getSampleResidenceTracker);","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ResidenceTracker\");","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"whatthelump"},"content":"            initialData \u003d new ResidenceTracker();","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ResidenceTracker\");","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"whatthelump"},"content":"            initialData \u003d new ResidenceTracker();","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"jaredtengsw"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ResidenceTracker\");","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"jaredtengsw"},"content":"        logger.info(\"Starting ResidenceTracker \" + MainApp.VERSION);","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"jaredtengsw"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping ResidenceTracker ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whatthelump":13,"jaredtengsw":12,"-":159,"VRSoorya":1}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"    private static final String LOG_FILE \u003d \"ResidenceTracker.log\";","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jaredtengsw":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX \u003d \"The residence index provided is invalid\";","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"    public static final String MESSAGE_INVALID_BOOKING_DISPLAYED_INDEX \u003d \"The booking index provided is invalid\";","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_RESIDENCE_LISTED_OVERVIEW \u003d \"%1$d residences listed!\";","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_RESIDENCES_WITH_UPCOMING_BOOKINGS \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"            \"%1$d residences have bookings starting in the next 7 days\";","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"awzhenyi":1,"-":11,"VRSoorya":4}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"        return String.valueOf(zeroBasedIndex); // state check","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":54,"VRSoorya":5}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ReadOnlyResidenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"     * Returns the ResidenceTracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"whatthelump"},"content":"     * @see seedu.address.model.Model#getResidenceTracker()","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"whatthelump"},"content":"    ReadOnlyResidenceTracker getResidenceTracker();","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"    ObservableList\u003cResidence\u003e getFilteredResidenceList();","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"whatthelump"},"content":"     * Returns the user prefs\u0027 residence tracker file path.","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"whatthelump"},"content":"    Path getResidenceTrackerFilePath();","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"whatthelump":6,"awzhenyi":2,"wangtao0717":5,"-":41}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"import seedu.address.logic.parser.ResidenceTrackerParser;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ReadOnlyResidenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"    private final ResidenceTrackerParser residenceTrackerParser;","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"whatthelump"},"content":"        residenceTrackerParser \u003d new ResidenceTrackerParser();","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"whatthelump"},"content":"        Command command \u003d residenceTrackerParser.parseCommand(commandText);","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"whatthelump"},"content":"            storage.saveResidenceTracker(model.getResidenceTracker());","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"whatthelump"},"content":"    public ReadOnlyResidenceTracker getResidenceTracker() {","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"whatthelump"},"content":"        return model.getResidenceTracker();","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"    public ObservableList\u003cResidence\u003e getFilteredResidenceList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"        return model.getFilteredResidenceList();","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"whatthelump"},"content":"    public Path getResidenceTrackerFilePath() {","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"whatthelump"},"content":"        return model.getResidenceTrackerFilePath();","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"whatthelump":10,"awzhenyi":3,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/AddBookingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOKING_END_DATE;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOKING_START_DATE;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESIDENCES;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":" * Adds a {@code Booking} to a {@code Residence} tracker.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"//@@author Soorya","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"public class AddBookingCommand extends Command {","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    public static final String COMMAND_WORD \u003d \"addb\";","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a booking to a specific residence.\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"            + \"Parameters: RESIDENCE_INDEX (must be a positive integer)\"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_BOOKING_START_DATE + \"START_DATE \"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_BOOKING_END_DATE + \"END_DATE \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_NAME + \"Sandy \"","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_PHONE + \"87654321 \"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_BOOKING_START_DATE + \"09-08-2021 \"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_BOOKING_END_DATE + \"11-08-2021 \";","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New booking added to Residence %1$s : %2$s\";","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_INVALID_BOOKING \u003d \"The specified date overlaps \"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"            + \"with another booking for this residence\";","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    private final Booking toAdd;","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"     * Creates an AddBookingCommand to add the specified {@code Residence}","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"    public AddBookingCommand(Index targetIndex, Booking booking) {","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"        requireNonNull(booking);","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"        this.toAdd \u003d booking;","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"        List\u003cResidence\u003e lastShownList \u003d model.getFilteredResidenceList();","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"        Residence residenceToAddBooking \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"        if (residenceToAddBooking.hasBooking(toAdd)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"            throw new CommandException(MESSAGE_INVALID_BOOKING);","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"        model.setResidence(residenceToAddBooking, residenceToAddBooking.addBooking(toAdd));","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"        model.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"                residenceToAddBooking.getResidenceName().toString(), toAdd));","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"    public static String getCommandWord() {","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"                || (other instanceof AddBookingCommand // instanceof handles nulls","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"                \u0026\u0026 toAdd.equals(((AddBookingCommand) other).toAdd));","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"VRSoorya":86}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLEAN_STATUS_TAG;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESIDENCE_ADDRESS;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"import java.util.Objects;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":" * Adds a residence to the residence tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a residence to the residence tracker.\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_RESIDENCE_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"            + \"[\" + PREFIX_CLEAN_STATUS_TAG + \"VALID_CLEAN_STATUS] \"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_NAME + \"Seaside Villa \"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_RESIDENCE_ADDRESS + \"311, Pasir Ris Ave 2, #02-25 \"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_CLEAN_STATUS_TAG + \"n \"","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_TAG + \"friends \";","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New residence added: %1$s\";","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"    public static final String MESSAGE_DUPLICATE_RESIDENCE \u003d \"This residence already exists in the residence tracker\";","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"    private final Residence toAdd;","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"     * Creates an AddCommand to add the specified {@code Residence}","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"    public AddCommand(Residence residence) {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(residence);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"        toAdd \u003d residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"        if (model.hasResidence(toAdd)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_RESIDENCE);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"        model.addResidence(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"    public static String getCommandWord() {","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"    @Override","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"    public int hashCode() {","lastModifiedDate":"2021-04-05"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"        return Objects.hash(toAdd);","lastModifiedDate":"2021-04-05"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"whatthelump":2,"awzhenyi":10,"jaredtengsw":4,"wangtao0717":8,"-":42,"VRSoorya":10}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ResidenceTracker;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":" * Clears the residence tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Residence Tracker has been cleared!\";","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"        model.setResidenceTracker(new ResidenceTracker());","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"    public static String getCommandWord() {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"whatthelump":3,"jaredtengsw":4,"-":19,"VRSoorya":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteBookingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOKING;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESIDENCE;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESIDENCES;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.BookingList;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":" * Deletes a booking of residence identified using a booking index and residence index as displayed in ResidenceTracker.","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"public class DeleteBookingCommand extends Command {","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"    public static final String COMMAND_WORD \u003d \"deleteb\";","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"            + \": Deletes the booking identified by the booking index of the \"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"            + \"residence identified by residence index used in the displayed residence list.\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"            + \"Parameters: \" + PREFIX_RESIDENCE + \"RESIDENCE_INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"            + PREFIX_BOOKING + \"BOOKING_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_RESIDENCE + \"1 \" + PREFIX_BOOKING + \"1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"    public static final String MESSAGE_DELETE_BOOKING_SUCCESS \u003d \"Deleted Residence %1$d\u0027s Booking: %2$s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"    private final Index residenceIndex;","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"    private final Index bookingIndex;","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"     * Constructs a {@code DeleteBookingCommand} with {@code residenceIndex} and {@code bookingIndex}","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"    public DeleteBookingCommand(Index residenceIndex, Index bookingIndex) {","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"        this.residenceIndex \u003d residenceIndex;","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"        this.bookingIndex \u003d bookingIndex;","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"        List\u003cResidence\u003e lastShownList \u003d model.getFilteredResidenceList();","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"        if (residenceIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"        Residence targetResidence \u003d lastShownList.get(residenceIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"        BookingList bookingList \u003d targetResidence.getBookingList();","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"        if (bookingIndex.getZeroBased() \u003e\u003d bookingList.getBookingListSize()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOKING_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"        Booking bookingToDelete \u003d bookingList.getBooking(bookingIndex.getZeroBased());","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"        Residence residenceToDeleteBooking \u003d lastShownList.get(residenceIndex.getZeroBased());","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"        residenceToDeleteBooking.getBookingList().remove(bookingToDelete);","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"        model.setResidence(targetResidence, residenceToDeleteBooking);","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"        model.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_BOOKING_SUCCESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"                residenceIndex.getOneBased(), bookingToDelete));","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"    public static String getCommandWord() {","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"jaredtengsw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"awzhenyi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"                || (other instanceof DeleteBookingCommand // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"                \u0026\u0026 residenceIndex.equals(((DeleteBookingCommand) other).residenceIndex)","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"                \u0026\u0026 bookingIndex.equals(((DeleteBookingCommand) other).bookingIndex)); // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"whatthelump":3,"awzhenyi":71,"jaredtengsw":4,"VRSoorya":2}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":" * Deletes a residence identified using it\u0027s displayed index from the residence tracker.","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"whatthelump"},"content":"            + \": Deletes the residence identified by the index number used in the displayed residence list.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"            + \"Parameters: RESIDENCE_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"whatthelump"},"content":"    public static final String MESSAGE_DELETE_RESIDENCE_SUCCESS \u003d \"Deleted Residence: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"        List\u003cResidence\u003e lastShownList \u003d model.getFilteredResidenceList();","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"whatthelump"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"whatthelump"},"content":"        Residence residenceToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"whatthelump"},"content":"        model.deleteResidence(residenceToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"whatthelump"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_RESIDENCE_SUCCESS, residenceToDelete));","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"    public static String getCommandWord() {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"whatthelump":8,"awzhenyi":2,"jaredtengsw":2,"-":45}},{"path":"src/main/java/seedu/address/logic/commands/EditBookingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOKING;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOKING_END_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOKING_START_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESIDENCE;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESIDENCES;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.booking.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.TenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.BookingList;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"whatthelump"},"content":" * Edits the details of an existing booking in the specified residence.","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"public class EditBookingCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"    public static final String COMMAND_WORD \u003d \"editb\";","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the booking identified by \"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"            + \"booking index of the residence identified based on the residence index provided. \"","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"whatthelump"},"content":"            + PREFIX_RESIDENCE + \"RESIDENCE_INDEX \"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"whatthelump"},"content":"            + PREFIX_BOOKING + \"BOOKING_INDEX \"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"            + \"[\" + PREFIX_NAME + \"TENANT_NAME] \"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"whatthelump"},"content":"            + \"[\" + PREFIX_BOOKING_START_DATE + \"START_DATE] \"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"whatthelump"},"content":"            + \"[\" + PREFIX_BOOKING_END_DATE + \"END_DATE]\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_RESIDENCE + \"1 \"","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"            + PREFIX_BOOKING + \"1 \"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"            + PREFIX_BOOKING_START_DATE + \"01-01-2020\";","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"    public static final String MESSAGE_EDIT_BOOKING_SUCCESS \u003d \"Edited Booking: %1$s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"    public static final String MESSAGE_OVERLAP_BOOKING \u003d \"The edited booking overlaps with other existing bookings.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"whatthelump"},"content":"    public static final String MESSAGE_NOT_VALID_START_DATE \u003d \"Invalid start date, should not be later than end date.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"    private final Index residenceIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"    private final Index bookingIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"    private final EditBookingDescriptor editBookingDescriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"     * @param residenceIndex index of the residence in the filtered residence list to edit","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"     * @param bookingIndex index of the booking in the booking list of the residence to edit","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"     * @param editBookingDescriptor details to edit the booking with","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"    public EditBookingCommand(Index residenceIndex, Index bookingIndex, EditBookingDescriptor editBookingDescriptor) {","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(residenceIndex);","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(bookingIndex);","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"        this.residenceIndex \u003d residenceIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"        this.bookingIndex \u003d bookingIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"        this.editBookingDescriptor \u003d new EditBookingDescriptor(editBookingDescriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"        List\u003cResidence\u003e lastShownList \u003d model.getFilteredResidenceList();","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"        if (residenceIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"        Residence targetResidence \u003d lastShownList.get(residenceIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"awzhenyi"},"content":"        Residence residenceToEdit \u003d lastShownList.get(residenceIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"awzhenyi"},"content":"        BookingList bookingListToEdit \u003d residenceToEdit.getBookingList();","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"awzhenyi"},"content":"        if (bookingIndex.getZeroBased() \u003e\u003d bookingListToEdit.getBookingListSize()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"awzhenyi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOKING_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"awzhenyi"},"content":"        Booking bookingToEdit \u003d bookingListToEdit.getBooking(bookingIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"awzhenyi"},"content":"        Booking editedBooking \u003d createEditedBooking(bookingToEdit, editBookingDescriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"awzhenyi"},"content":"        if (!editedBooking.isValidBookingTime(editedBooking.getStart(), editedBooking.getEnd())) {","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"awzhenyi"},"content":"            throw new CommandException(MESSAGE_NOT_VALID_START_DATE);","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"awzhenyi"},"content":"        if (residenceToEdit.getBookingList().containsExclude(bookingToEdit, editedBooking)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"awzhenyi"},"content":"            throw new CommandException(MESSAGE_OVERLAP_BOOKING);","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"awzhenyi"},"content":"        bookingListToEdit.setBooking(bookingToEdit, editedBooking);","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"awzhenyi"},"content":"        model.setResidence(targetResidence, residenceToEdit);","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"awzhenyi"},"content":"        model.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"awzhenyi"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_BOOKING_SUCCESS, editedBooking));","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"awzhenyi"},"content":"     * Creates and returns a {@code Booking} with the details of {@code bookingToEdit}","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"awzhenyi"},"content":"     * edited with {@code editBookingDescriptor}.","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"awzhenyi"},"content":"    private static Booking createEditedBooking(Booking bookingToEdit,","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"awzhenyi"},"content":"                                               EditBookingDescriptor editBookingDescriptor) {","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"awzhenyi"},"content":"        assert bookingToEdit !\u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"        TenantName updatedTenantName \u003d editBookingDescriptor.getName()","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"VRSoorya"},"content":"                .orElse(bookingToEdit.getTenantName());","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"awzhenyi"},"content":"        Phone updatedPhone \u003d editBookingDescriptor.getPhone()","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"awzhenyi"},"content":"                .orElse(bookingToEdit.getPhone());","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"awzhenyi"},"content":"        LocalDate updatedStartTime \u003d editBookingDescriptor.getStartDate()","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"awzhenyi"},"content":"                .orElse(bookingToEdit.getStart());","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"awzhenyi"},"content":"        LocalDate updatedEndTime \u003d editBookingDescriptor.getEndDate()","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"awzhenyi"},"content":"                .orElse(bookingToEdit.getEnd());","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"        return new Booking(updatedTenantName, updatedPhone, updatedStartTime, updatedEndTime);","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"awzhenyi"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"awzhenyi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"awzhenyi"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"awzhenyi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"awzhenyi"},"content":"            return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"awzhenyi"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"awzhenyi"},"content":"        if (!(other instanceof EditBookingCommand)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"awzhenyi"},"content":"            return false;","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"awzhenyi"},"content":"        // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"awzhenyi"},"content":"        EditBookingCommand e \u003d (EditBookingCommand) other;","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"awzhenyi"},"content":"        return residenceIndex.equals(e.residenceIndex)","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"awzhenyi"},"content":"                \u0026\u0026 bookingIndex.equals(e.bookingIndex)","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"awzhenyi"},"content":"                \u0026\u0026 editBookingDescriptor.equals(e.editBookingDescriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"jaredtengsw"},"content":"    public static String getCommandWord() {","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"jaredtengsw"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"jaredtengsw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"awzhenyi"},"content":"     * Stores the details to edit the booking with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"awzhenyi"},"content":"     * corresponding field value of the booking.","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"awzhenyi"},"content":"    public static class EditBookingDescriptor {","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"VRSoorya"},"content":"        private TenantName tenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"awzhenyi"},"content":"        private Phone phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"awzhenyi"},"content":"        private LocalDate startDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"awzhenyi"},"content":"        private LocalDate endDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"awzhenyi"},"content":"        public EditBookingDescriptor() {","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"awzhenyi"},"content":"        /**","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"awzhenyi"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"awzhenyi"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"awzhenyi"},"content":"         */","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"awzhenyi"},"content":"        public EditBookingDescriptor(EditBookingDescriptor toCopy) {","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"VRSoorya"},"content":"            setName(toCopy.tenantName);","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"awzhenyi"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"awzhenyi"},"content":"            setStartDate(toCopy.startDate);","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"awzhenyi"},"content":"            setEndDate(toCopy.endDate);","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"awzhenyi"},"content":"        /**","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"awzhenyi"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"awzhenyi"},"content":"         */","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"awzhenyi"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"VRSoorya"},"content":"            return CollectionUtil.isAnyNonNull(tenantName, phone, startDate, endDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"VRSoorya"},"content":"        public void setName(TenantName tenantName) {","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"VRSoorya"},"content":"            this.tenantName \u003d tenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"VRSoorya"},"content":"        public Optional\u003cTenantName\u003e getName() {","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"VRSoorya"},"content":"            return Optional.ofNullable(tenantName);","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":181,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"awzhenyi"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"awzhenyi"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"awzhenyi"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"awzhenyi"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"awzhenyi"},"content":"        public void setStartDate(LocalDate startDate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"awzhenyi"},"content":"            this.startDate \u003d startDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":194,"author":{"gitId":"awzhenyi"},"content":"        public Optional\u003cLocalDate\u003e getStartDate() {","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"awzhenyi"},"content":"            return Optional.ofNullable(startDate);","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"awzhenyi"},"content":"        public void setEndDate(LocalDate endDate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":199,"author":{"gitId":"awzhenyi"},"content":"            this.endDate \u003d endDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":200,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":201,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"awzhenyi"},"content":"        public Optional\u003cLocalDate\u003e getEndDate() {","lastModifiedDate":"2021-03-28"},{"lineNumber":203,"author":{"gitId":"awzhenyi"},"content":"            return Optional.ofNullable(endDate);","lastModifiedDate":"2021-03-28"},{"lineNumber":204,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":205,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":206,"author":{"gitId":"awzhenyi"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"awzhenyi"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"awzhenyi"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":209,"author":{"gitId":"awzhenyi"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-28"},{"lineNumber":210,"author":{"gitId":"awzhenyi"},"content":"                return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":211,"author":{"gitId":"awzhenyi"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":212,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":213,"author":{"gitId":"awzhenyi"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":214,"author":{"gitId":"awzhenyi"},"content":"            if (!(other instanceof EditBookingDescriptor)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":215,"author":{"gitId":"awzhenyi"},"content":"                return false;","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"awzhenyi"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":218,"author":{"gitId":"awzhenyi"},"content":"            // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"awzhenyi"},"content":"            EditBookingDescriptor e \u003d (EditBookingDescriptor) other;","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"awzhenyi"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-28"},{"lineNumber":222,"author":{"gitId":"awzhenyi"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"awzhenyi"},"content":"                    \u0026\u0026 getStartDate().equals(e.getStartDate())","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"awzhenyi"},"content":"                    \u0026\u0026 getEndDate().equals(e.getEndDate());","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":227,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"whatthelump":8,"awzhenyi":202,"jaredtengsw":4,"VRSoorya":13}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLEAN_STATUS_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESIDENCE_ADDRESS;","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESIDENCES;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.residence.BookingList;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.ResidenceAddress;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.ResidenceName;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.tag.CleanStatusTag;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":" * Edits the details of an existing residence in the residence tracker.","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the residence identified \"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"            + \"by the index number used in the displayed residence list. \"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"whatthelump"},"content":"            + \"Parameters: RESIDENCE_INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"            + \"[\" + PREFIX_NAME + \"RESIDENCE_NAME]\"","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"            + \"[\" + PREFIX_RESIDENCE_ADDRESS + \"ADDRESS]\"","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"            + \"[\" + PREFIX_CLEAN_STATUS_TAG + \"y or n] \"","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"            + PREFIX_CLEAN_STATUS_TAG + \"y\";","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"    public static final String MESSAGE_EDIT_RESIDENCE_SUCCESS \u003d \"Edited Residence: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"    public static final String MESSAGE_DUPLICATE_RESIDENCE \u003d \"This residence already exists in the residence tracker.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"    private final EditResidenceDescriptor editResidenceDescriptor;","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"     * @param index of the residence in the filtered residence list to edit","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"     * @param editResidenceDescriptor details to edit the residence with","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"    public EditCommand(Index index, EditResidenceDescriptor editResidenceDescriptor) {","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(editResidenceDescriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"        this.editResidenceDescriptor \u003d new EditResidenceDescriptor(editResidenceDescriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"        List\u003cResidence\u003e lastShownList \u003d model.getFilteredResidenceList();","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"        Residence residenceToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"        editResidenceDescriptor.setBookingDetails(residenceToEdit.getBookingList());","lastModifiedDate":"2021-04-05"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"        Residence editedResidence \u003d createEditedResidence(residenceToEdit, editResidenceDescriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"        if (!residenceToEdit.isSameResidence(editedResidence) \u0026\u0026 model.hasResidence(editedResidence)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_RESIDENCE);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"awzhenyi"},"content":"        model.setResidence(residenceToEdit, editedResidence);","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"awzhenyi"},"content":"        model.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"awzhenyi"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_RESIDENCE_SUCCESS, editedResidence));","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"    public static String getCommandWord() {","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"awzhenyi"},"content":"     * Creates and returns a {@code Residence} with the details of {@code residenceToEdit}","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"awzhenyi"},"content":"     * edited with {@code editResidenceDescriptor}.","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"awzhenyi"},"content":"    private static Residence createEditedResidence(Residence residenceToEdit,","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"awzhenyi"},"content":"                                                   EditResidenceDescriptor editResidenceDescriptor) {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"awzhenyi"},"content":"        assert residenceToEdit !\u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"awzhenyi"},"content":"        ResidenceName updatedName \u003d editResidenceDescriptor.getResidenceName()","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"awzhenyi"},"content":"                .orElse(residenceToEdit.getResidenceName());","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"awzhenyi"},"content":"        ResidenceAddress updatedAddress \u003d editResidenceDescriptor.getResidenceAddress()","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"awzhenyi"},"content":"                .orElse(residenceToEdit.getResidenceAddress());","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"whatthelump"},"content":"        BookingList updatedBookingList \u003d editResidenceDescriptor.getBookingDetails()","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"                .orElse(residenceToEdit.getBookingList());","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"        CleanStatusTag updatedCleanStatus \u003d editResidenceDescriptor.getCleanStatusTag().orElse(","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"awzhenyi"},"content":"                residenceToEdit.getCleanStatusTag());","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"awzhenyi"},"content":"        Set\u003cTag\u003e updatedTags \u003d editResidenceDescriptor.getTags().orElse(residenceToEdit.getTags());","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"whatthelump"},"content":"        return new Residence(updatedName, updatedAddress, updatedBookingList, updatedCleanStatus, updatedTags);","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"awzhenyi"},"content":"                \u0026\u0026 editResidenceDescriptor.equals(e.editResidenceDescriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"awzhenyi"},"content":"    public static class EditResidenceDescriptor {","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"awzhenyi"},"content":"        private ResidenceName residenceName;","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"awzhenyi"},"content":"        private ResidenceAddress residenceAddress;","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"VRSoorya"},"content":"        private BookingList bookingList;","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"VRSoorya"},"content":"        private CleanStatusTag cleanStatusTag;","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"awzhenyi"},"content":"        public EditResidenceDescriptor() {","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"awzhenyi"},"content":"        public EditResidenceDescriptor(EditResidenceDescriptor toCopy) {","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"awzhenyi"},"content":"            setResidenceName(toCopy.residenceName);","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"awzhenyi"},"content":"            setResidenceAddress(toCopy.residenceAddress);","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"wangtao0717"},"content":"            setCleanStatusTag(toCopy.cleanStatusTag);","lastModifiedDate":"2021-03-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"whatthelump"},"content":"            return CollectionUtil.isAnyNonNull(residenceName, residenceAddress, bookingList, cleanStatusTag, tags);","lastModifiedDate":"2021-03-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"awzhenyi"},"content":"        public void setResidenceName(ResidenceName name) {","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"awzhenyi"},"content":"            this.residenceName \u003d name;","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"awzhenyi"},"content":"        public Optional\u003cResidenceName\u003e getResidenceName() {","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"awzhenyi"},"content":"            return Optional.ofNullable(residenceName);","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"awzhenyi"},"content":"        public void setResidenceAddress(ResidenceAddress address) {","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"awzhenyi"},"content":"            this.residenceAddress \u003d address;","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"awzhenyi"},"content":"        public Optional\u003cResidenceAddress\u003e getResidenceAddress() {","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"awzhenyi"},"content":"            return Optional.ofNullable(residenceAddress);","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"whatthelump"},"content":"        public void setBookingDetails(BookingList bookingList) {","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"whatthelump"},"content":"            this.bookingList \u003d bookingList;","lastModifiedDate":"2021-03-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"whatthelump"},"content":"        public Optional\u003cBookingList\u003e getBookingDetails() {","lastModifiedDate":"2021-03-22"},{"lineNumber":183,"author":{"gitId":"whatthelump"},"content":"            return Optional.ofNullable(bookingList);","lastModifiedDate":"2021-03-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"wangtao0717"},"content":"        /**","lastModifiedDate":"2021-03-06"},{"lineNumber":187,"author":{"gitId":"wangtao0717"},"content":"         * Sets {@code cleanStatusTag} to this object\u0027s {@code cleanStatusTag}.","lastModifiedDate":"2021-03-06"},{"lineNumber":188,"author":{"gitId":"wangtao0717"},"content":"         */","lastModifiedDate":"2021-03-06"},{"lineNumber":189,"author":{"gitId":"VRSoorya"},"content":"        public void setCleanStatusTag(CleanStatusTag cleanStatusTag) {","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"jaredtengsw"},"content":"            this.cleanStatusTag \u003d cleanStatusTag;","lastModifiedDate":"2021-03-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":193,"author":{"gitId":"VRSoorya"},"content":"        public Optional\u003cCleanStatusTag\u003e getCleanStatusTag() {","lastModifiedDate":"2021-03-15"},{"lineNumber":194,"author":{"gitId":"VRSoorya"},"content":"            return Optional.ofNullable(cleanStatusTag);","lastModifiedDate":"2021-03-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-03-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"awzhenyi"},"content":"            if (!(other instanceof EditResidenceDescriptor)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"awzhenyi"},"content":"            EditResidenceDescriptor e \u003d (EditResidenceDescriptor) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"awzhenyi"},"content":"            return getResidenceName().equals(e.getResidenceName())","lastModifiedDate":"2021-03-14"},{"lineNumber":230,"author":{"gitId":"awzhenyi"},"content":"                    \u0026\u0026 getResidenceAddress().equals(e.getResidenceAddress())","lastModifiedDate":"2021-03-14"},{"lineNumber":231,"author":{"gitId":"awzhenyi"},"content":"                    \u0026\u0026 getBookingDetails().equals(e.getBookingDetails())","lastModifiedDate":"2021-03-14"},{"lineNumber":232,"author":{"gitId":"wangtao0717"},"content":"                    \u0026\u0026 getCleanStatusTag().equals(e.getCleanStatusTag())","lastModifiedDate":"2021-03-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"whatthelump":9,"awzhenyi":54,"jaredtengsw":5,"wangtao0717":13,"-":147,"VRSoorya":8}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Residence Tracker as requested ...\";","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    public static String getCommandWord() {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"whatthelump":1,"jaredtengsw":3,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.model.residence.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":" * Finds and lists all residences in residence tracker whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all residences whose names contain any of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"            + \"Example: \" + COMMAND_WORD + \" amber beverly casuarina\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"        model.updateFilteredResidenceList(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"                String.format(Messages.MESSAGE_RESIDENCE_LISTED_OVERVIEW, model.getFilteredResidenceList().size()));","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"    public static String getCommandWord() {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"whatthelump":1,"jaredtengsw":6,"awzhenyi":1,"-":38}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":" * Formats full help instructions for every command for display.","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    public static final String HELP_MESSAGE_DISPLAY \u003d \"Opened help window.\";","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        return new CommandResult(HELP_MESSAGE_DISPLAY, true, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"whatthelump":1,"-":18,"VRSoorya":2}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESIDENCES;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":" * Lists all residences in the residence tracker to the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all residences.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    public static String getCommandWord() {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"        model.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"whatthelump":1,"awzhenyi":2,"jaredtengsw":4,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/RemindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.model.Model.PREDICATE_UPCOMING_BOOKED_RESIDENCES;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":" * Lists all residences in the residence tracker with bookings starting in the next 7 days.","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"public class RemindCommand extends Command {","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    public static final String COMMAND_WORD \u003d \"remind\";","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    public static String getCommandWord() {","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"        model.updateFilteredResidenceList(PREDICATE_UPCOMING_BOOKED_RESIDENCES);","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        return new CommandResult(","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"                String.format(Messages.MESSAGE_RESIDENCES_WITH_UPCOMING_BOOKINGS,","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"                        model.getFilteredResidenceList().size()));","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"VRSoorya":28}},{"path":"src/main/java/seedu/address/logic/commands/StatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESIDENCES;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.BookingList;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.ResidenceAddress;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.ResidenceName;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.tag.CleanStatusTag;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":" * Edits the details of an existing residence in the residence tracker.","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"public class StatusCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"    public static final String COMMAND_WORD \u003d \"status\";","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"whatthelump"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates multiple residences clean status  \"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"            + \"by the index number used in the displayed residence list. \\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"            + \"Parameters: status (clean or unclean) \"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"            + \"INDEX1 INDEX2... (must be positive integers) \"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"            + \" clean 1 2 4 \";","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"    public static final String MESSAGE_STATUS_RESIDENCE_SUCCESS \u003d \"Residences with updated status: %1$s\";","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"    public static final String MESSAGE_ERROR_STATUS \u003d \"Must input a correct clean status (clean/unclean)\";","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_NO_RESIDENCE \u003d \"At least one residence index to update status must be provided.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"    private final ArrayList\u003cIndex\u003e indexArray;","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    private final String status;","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"     * @param indexArray of the residences in the filtered residence list to update clean status","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"    public StatusCommand(ArrayList\u003cIndex\u003e indexArray , String status) {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"        requireNonNull(indexArray);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"        this.indexArray \u003d indexArray;","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"        List\u003cResidence\u003e lastShownList \u003d model.getFilteredResidenceList();","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"        String updatedResidenceArrayString \u003d \"\";","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"        //check index list first","lastModifiedDate":"2021-04-04"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"        for (Index index : indexArray) {","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"        for (Index index : indexArray) {","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"            Residence residenceToUpdateStatus \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"            Residence updatedResidence \u003d createUpdatedResidence(residenceToUpdateStatus, status);","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"            model.setResidence(residenceToUpdateStatus, updatedResidence);","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"            updatedResidenceArrayString +\u003d updatedResidence.toString() + \"\\n\";","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"        model.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"        return new CommandResult(String.format(MESSAGE_STATUS_RESIDENCE_SUCCESS, updatedResidenceArrayString));","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"     * Creates and returns a {@code Residence} with the details of {@code residenceToEdit}","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"     * edited with {@code editResidenceDescriptor}.","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"    private static Residence createUpdatedResidence(Residence residenceToUpdateStatus,","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":"                                                   String status) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"        assert residenceToUpdateStatus !\u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"        ResidenceName updatedName \u003d residenceToUpdateStatus.getResidenceName();","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"wangtao0717"},"content":"        ResidenceAddress updatedAddress \u003d residenceToUpdateStatus.getResidenceAddress();","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"        BookingList updatedBooking \u003d residenceToUpdateStatus.getBookingList();","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"wangtao0717"},"content":"        CleanStatusTag updatedCleanStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"        if (status.equals(\"clean\")) {","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":"            updatedCleanStatus \u003d new CleanStatusTag(\"y\");","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"        } else if (status.equals(\"unclean\")) {","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"wangtao0717"},"content":"            updatedCleanStatus \u003d new CleanStatusTag(\"n\");","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"wangtao0717"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"wangtao0717"},"content":"            throw new CommandException(MESSAGE_ERROR_STATUS);","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"wangtao0717"},"content":"        Set\u003cTag\u003e updatedTags \u003d residenceToUpdateStatus.getTags();","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"wangtao0717"},"content":"        return new Residence(updatedName, updatedAddress, updatedBooking, updatedCleanStatus, updatedTags);","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"jaredtengsw"},"content":"    public static String getCommandWord() {","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"jaredtengsw"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"jaredtengsw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"wangtao0717"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"wangtao0717"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"wangtao0717"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"wangtao0717"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"wangtao0717"},"content":"            return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"wangtao0717"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"wangtao0717"},"content":"        if (!(other instanceof StatusCommand)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"wangtao0717"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"wangtao0717"},"content":"        // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"wangtao0717"},"content":"        StatusCommand e \u003d (StatusCommand) other;","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"wangtao0717"},"content":"        return indexArray.equals(e.indexArray)","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"wangtao0717"},"content":"                \u0026\u0026 status.equals(e.status);","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"wangtao0717"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"whatthelump":1,"jaredtengsw":5,"wangtao0717":113,"VRSoorya":2}},{"path":"src/main/java/seedu/address/logic/parser/AddBookingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOKING_END_DATE;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOKING_START_DATE;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.logic.commands.AddBookingCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.Phone;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.TenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":" * Parses input arguments and creates a new AddBookingCommand object","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"public class AddBookingCommandParser implements Parser\u003cAddBookingCommand\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"     * Parses the given {@code String} of arguments in the context of the AddBookingCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"     * and returns an AddBookingCommand object for execution.","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    public AddBookingCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"                        PREFIX_BOOKING_START_DATE, PREFIX_BOOKING_END_DATE);","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"        Index index;","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        try {","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"                    AddBookingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"                PREFIX_BOOKING_START_DATE, PREFIX_BOOKING_END_DATE)","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBookingCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        TenantName tenantName \u003d ParserUtil.parseTenantName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"        Booking booking \u003d ParserUtil.parseBooking(tenantName, phone,","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"                argMultimap.getValue(PREFIX_BOOKING_START_DATE).get(),","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"                argMultimap.getValue(PREFIX_BOOKING_END_DATE).get());","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"        return new AddBookingCommand(index, booking);","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"VRSoorya":65}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLEAN_STATUS_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESIDENCE_ADDRESS;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.residence.BookingList;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.ResidenceAddress;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.ResidenceName;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.tag.CleanStatusTag;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_RESIDENCE_ADDRESS,","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"                        PREFIX_CLEAN_STATUS_TAG, PREFIX_TAG);","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_RESIDENCE_ADDRESS)","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"        ResidenceName name \u003d ParserUtil.parseResidenceName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"        ResidenceAddress address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_RESIDENCE_ADDRESS).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"        BookingList bookingList \u003d new BookingList();","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"        CleanStatusTag cleanStatusTag;","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        if (argMultimap.getAllValues(PREFIX_CLEAN_STATUS_TAG).size() \u003e 0) {","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"            cleanStatusTag \u003d ParserUtil.parseCleanStatusTag(","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"                    argMultimap.getValue(PREFIX_CLEAN_STATUS_TAG).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"            cleanStatusTag \u003d new CleanStatusTag();","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"whatthelump"},"content":"        Residence residence \u003d new Residence(name, address, bookingList, cleanStatusTag, tagList);","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"        return new AddCommand(residence);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"whatthelump":2,"awzhenyi":5,"wangtao0717":3,"-":44,"VRSoorya":15}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"    public static final Prefix PREFIX_BOOKING \u003d new Prefix(\"b/\");","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    public static final Prefix PREFIX_RESIDENCE_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    public static final Prefix PREFIX_CLEAN_STATUS_TAG \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    public static final Prefix PREFIX_BOOKING_START_DATE \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    public static final Prefix PREFIX_BOOKING_END_DATE \u003d new Prefix(\"e/\");","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"    public static final Prefix PREFIX_RESIDENCE \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"awzhenyi":3,"-":12,"VRSoorya":3}},{"path":"src/main/java/seedu/address/logic/parser/DeleteBookingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOKING;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESIDENCE;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.commands.DeleteBookingCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"public class DeleteBookingCommandParser implements Parser\u003cDeleteBookingCommand\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteBookingCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"     * and returns a DeleteBookingCommand object for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"    public DeleteBookingCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_RESIDENCE, PREFIX_BOOKING);","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_RESIDENCE, PREFIX_BOOKING)","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteBookingCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"        if (argMultimap.getValue(PREFIX_RESIDENCE).get().isEmpty()","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"                || argMultimap.getValue(PREFIX_BOOKING).get().isEmpty()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteBookingCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"        Index residenceIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_RESIDENCE).get());","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"        Index bookingIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_BOOKING).get());","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"        return new DeleteBookingCommand(residenceIndex, bookingIndex);","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"awzhenyi":42,"wangtao0717":6}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wangtao0717":2,"-":25}},{"path":"src/main/java/seedu/address/logic/parser/EditBookingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOKING;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOKING_END_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BOOKING_START_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESIDENCE;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.commands.EditBookingCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.commands.EditBookingCommand.EditBookingDescriptor;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"public class EditBookingCommandParser implements Parser\u003cEditBookingCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"     * Parses the given {@code String} of arguments in the context of the EditBookingCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"     * and returns an EditBookingCommand object for execution.","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"    public EditBookingCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_RESIDENCE, PREFIX_BOOKING,","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"                        PREFIX_NAME, PREFIX_PHONE, PREFIX_BOOKING_START_DATE, PREFIX_BOOKING_END_DATE);","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_RESIDENCE, PREFIX_BOOKING)","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditBookingCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"        if (argMultimap.getValue(PREFIX_RESIDENCE).get().isEmpty()","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"                || argMultimap.getValue(PREFIX_BOOKING).get().isEmpty()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditBookingCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"        Index residenceIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_RESIDENCE).get());","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"        Index bookingIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_BOOKING).get());","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"        EditBookingDescriptor editBookingDescriptor \u003d new EditBookingDescriptor();","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"            editBookingDescriptor.setName(","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"                    ParserUtil.parseTenantName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"            editBookingDescriptor.setPhone(","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"                    ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"        if (argMultimap.getValue(PREFIX_BOOKING_START_DATE).isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"            editBookingDescriptor.setStartDate(","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"                    ParserUtil.parseDate(argMultimap.getValue(PREFIX_BOOKING_START_DATE).get())","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"            );","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"        if (argMultimap.getValue(PREFIX_BOOKING_END_DATE).isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"            editBookingDescriptor.setEndDate(","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"                    ParserUtil.parseDate(argMultimap.getValue(PREFIX_BOOKING_END_DATE).get())","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"            );","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"        if (!editBookingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"            throw new ParseException(EditBookingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"        return new EditBookingCommand(residenceIndex, bookingIndex, editBookingDescriptor);","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-04-04"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-04-04"},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":80,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"awzhenyi":57,"wangtao0717":22,"VRSoorya":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLEAN_STATUS_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESIDENCE_ADDRESS;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.commands.EditCommand.EditResidenceDescriptor;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_RESIDENCE_ADDRESS,","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"                        PREFIX_CLEAN_STATUS_TAG, PREFIX_TAG);","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"        if (argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"        EditResidenceDescriptor editResidenceDescriptor \u003d new EditResidenceDescriptor();","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"            editResidenceDescriptor.setResidenceName(","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"                    ParserUtil.parseResidenceName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"        if (argMultimap.getValue(PREFIX_RESIDENCE_ADDRESS).isPresent()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"            editResidenceDescriptor.setResidenceAddress(","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"                    ParserUtil.parseAddress(argMultimap.getValue(PREFIX_RESIDENCE_ADDRESS).get()));","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"        if (argMultimap.getValue(PREFIX_CLEAN_STATUS_TAG).isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"            editResidenceDescriptor.setCleanStatusTag(","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"                    ParserUtil.parseCleanStatusTag(argMultimap.getValue(PREFIX_CLEAN_STATUS_TAG).get()));","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editResidenceDescriptor::setTags);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"        if (argMultimap.getValue(PREFIX_CLEAN_STATUS_TAG).isPresent()) {","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"            editResidenceDescriptor.setCleanStatusTag(","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"                    ParserUtil.parseCleanStatusTag(argMultimap.getValue(PREFIX_CLEAN_STATUS_TAG).get()));","lastModifiedDate":"2021-04-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"        if (!editResidenceDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"        return new EditCommand(index, editResidenceDescriptor);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"awzhenyi":9,"wangtao0717":10,"-":64,"VRSoorya":6}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"awzhenyi":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"wangtao0717":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.booking.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.TenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.ResidenceAddress;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.ResidenceName;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.tag.CleanStatusTag;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a valid positive integer.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"Given date is not a valid date \"","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"            + \"in the year that follows format: DD-MM-YYYY\";","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"     * Parses a {@code String name} into a {@code ResidenceName}.","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"    public static ResidenceName parseResidenceName(String name) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"        if (!ResidenceName.isValidResidenceName(trimmedName)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"            throw new ParseException(ResidenceName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"        return new ResidenceName(trimmedName);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"     * Parses a {@code String name} into a {@code TenantName}.","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"    public static TenantName parseTenantName(String name) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"        if (!ResidenceName.isValidResidenceName(trimmedName)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"            throw new ParseException(TenantName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"        return new TenantName(trimmedName);","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"wangtao0717"},"content":"     * Parses a {@code String address} into an {@code ResidenceAddress}.","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"awzhenyi"},"content":"    public static ResidenceAddress parseAddress(String address) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"awzhenyi"},"content":"        if (!ResidenceAddress.isValidResidenceAddress(trimmedAddress)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":"            throw new ParseException(ResidenceAddress.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"awzhenyi"},"content":"        return new ResidenceAddress(trimmedAddress);","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":"     * Parses {@code String start} and {@code String end} into a {@code Booking} together with it\u0027s","lastModifiedDate":"2021-04-12"},{"lineNumber":108,"author":{"gitId":"VRSoorya"},"content":"     * {@code tenantName} and {@code phone}.","lastModifiedDate":"2021-04-12"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"VRSoorya"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"VRSoorya"},"content":"     * @throws ParseException if the given {@code start} and {@code end} are invalid.","lastModifiedDate":"2021-04-12"},{"lineNumber":112,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"    public static Booking parseBooking(TenantName tenantName, Phone phone,","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":"                                       String start, String end) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"VRSoorya"},"content":"        requireNonNull(start);","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"VRSoorya"},"content":"        requireNonNull(end);","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"        LocalDate startTime \u003d parseDate(start.trim());","lastModifiedDate":"2021-04-12"},{"lineNumber":119,"author":{"gitId":"VRSoorya"},"content":"        LocalDate endTime \u003d parseDate(end.trim());","lastModifiedDate":"2021-04-12"},{"lineNumber":120,"author":{"gitId":"VRSoorya"},"content":"        if (!Booking.isValidBookingTime(startTime, endTime)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"whatthelump"},"content":"            throw new ParseException(Booking.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"VRSoorya"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":124,"author":{"gitId":"VRSoorya"},"content":"        return new Booking(tenantName, phone, startTime, endTime);","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"VRSoorya"},"content":"     * Parses a {@code String date} into a {@code LocalDate}.","lastModifiedDate":"2021-04-12"},{"lineNumber":129,"author":{"gitId":"VRSoorya"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-04-12"},{"lineNumber":130,"author":{"gitId":"awzhenyi"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"VRSoorya"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-04-12"},{"lineNumber":132,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"awzhenyi"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"VRSoorya"},"content":"        try {","lastModifiedDate":"2021-04-03"},{"lineNumber":136,"author":{"gitId":"VRSoorya"},"content":"            return LocalDate.parse(date.trim(), DateTimeFormatter.ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2021-04-12"},{"lineNumber":137,"author":{"gitId":"VRSoorya"},"content":"                    .withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2021-04-12"},{"lineNumber":138,"author":{"gitId":"VRSoorya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-04-03"},{"lineNumber":139,"author":{"gitId":"VRSoorya"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2021-04-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":144,"author":{"gitId":"VRSoorya"},"content":"     * Parses a {@code String cleanStatus} into a {@code CleanStatusTag}.","lastModifiedDate":"2021-04-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":147,"author":{"gitId":"VRSoorya"},"content":"     * @throws ParseException if the given {@code cleanStatus} is invalid.","lastModifiedDate":"2021-04-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":149,"author":{"gitId":"wangtao0717"},"content":"    public static CleanStatusTag parseCleanStatusTag(String cleanStatus) throws ParseException {","lastModifiedDate":"2021-03-06"},{"lineNumber":150,"author":{"gitId":"wangtao0717"},"content":"        requireNonNull(cleanStatus);","lastModifiedDate":"2021-03-06"},{"lineNumber":151,"author":{"gitId":"wangtao0717"},"content":"        String trimmedTag \u003d cleanStatus.trim();","lastModifiedDate":"2021-03-06"},{"lineNumber":152,"author":{"gitId":"wangtao0717"},"content":"        if (!CleanStatusTag.isValidCleanStatusTag(trimmedTag)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":153,"author":{"gitId":"VRSoorya"},"content":"            throw new ParseException(CleanStatusTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":155,"author":{"gitId":"wangtao0717"},"content":"        return new CleanStatusTag(trimmedTag);","lastModifiedDate":"2021-03-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"whatthelump":3,"awzhenyi":12,"jaredtengsw":1,"wangtao0717":10,"-":113,"VRSoorya":45}},{"path":"src/main/java/seedu/address/logic/parser/ResidenceTrackerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.logic.commands.AddBookingCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.commands.DeleteBookingCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.commands.EditBookingCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.logic.commands.RemindCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.logic.commands.StatusCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"whatthelump"},"content":"public class ResidenceTrackerParser {","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"        case AddBookingCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"            return new AddBookingCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"        case EditBookingCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"            return new EditBookingCommandParser().parse(arguments);","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"        case DeleteBookingCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"            return new DeleteBookingCommandParser().parse(arguments);","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"        case RemindCommand.COMMAND_WORD:","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"            return new RemindCommand();","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"        case StatusCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":"            return new StatusCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"whatthelump":1,"awzhenyi":8,"wangtao0717":4,"-":75,"VRSoorya":8}},{"path":"src/main/java/seedu/address/logic/parser/StatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.commands.StatusCommand.MESSAGE_NO_RESIDENCE;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.logic.commands.StatusCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":" * Parses input arguments and creates a new StatusCommand object","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"public class StatusCommandParser implements Parser\u003cStatusCommand\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"     * Parses the given {@code String} of arguments in the context of the StatusCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"     * and returns an StatusCommand object for execution.","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"    public StatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"                    String.format(MESSAGE_NO_RESIDENCE, StatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"        String[] keyword \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"        if (keyword.length \u003c 2) {","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"        String status \u003d keyword[0];","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        if (!(status.equals(\"clean\") || status.equals(\"unclean\"))) {","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"            throw new ParseException(StatusCommand.MESSAGE_ERROR_STATUS);","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"        ArrayList\u003cIndex\u003e indexArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"        for (int i \u003d 1; i \u003c keyword.length; i++) {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"            indexArray.add(ParserUtil.parseIndex(keyword[i]));","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"        return new StatusCommand(indexArray, status);","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"whatthelump":1,"wangtao0717":44,"VRSoorya":2}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    /** {@code Predicate} that always evaluates to true */","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    Predicate\u003cResidence\u003e PREDICATE_SHOW_ALL_RESIDENCES \u003d unused -\u003e true;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    Predicate\u003cResidence\u003e PREDICATE_UPCOMING_BOOKED_RESIDENCES \u003d residence -\u003e residence.hasUpcomingBooking();","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"whatthelump"},"content":"     * Returns the user prefs\u0027 residence tracker file path.","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"whatthelump"},"content":"    Path getResidenceTrackerFilePath();","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"whatthelump"},"content":"     * Sets the user prefs\u0027 residence tracker file path.","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"whatthelump"},"content":"    void setResidenceTrackerFilePath(Path residenceTrackerFilePath);","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"     * Replaces residence tracker data with the data in {@code residenceTracker}.","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"whatthelump"},"content":"    void setResidenceTracker(ReadOnlyResidenceTracker residenceTracker);","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"    /** Returns the ResidenceTracker */","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"whatthelump"},"content":"    ReadOnlyResidenceTracker getResidenceTracker();","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"     * Returns true if a residence with the same identity as {@code residence} exists in the residence tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"    boolean hasResidence(Residence residence);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"     * Deletes the given residence.","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"     * The residence must exist in the residence tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"    void deleteResidence(Residence target);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"     * Adds the given residence.","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"     * {@code residence} must not already exist in the residence tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"    void addResidence(Residence residence);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"     * Replaces the given residence {@code target} with {@code editedResidence}.","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"whatthelump"},"content":"     * {@code target} must exist in the residence tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"     * The residence identity of {@code editedResidence} must not be the same as another existing residence in the","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"     * residence tracker.","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"    void setResidence(Residence target, Residence editedResidence);","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"awzhenyi"},"content":"    /** Returns an unmodifiable view of the filtered residence list */","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"awzhenyi"},"content":"    ObservableList\u003cResidence\u003e getFilteredResidenceList();","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"awzhenyi"},"content":"     * Updates the filter of the filtered residence list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"     * The result of this method always sorts the Residences as described in the Residence\u0027s {@code compareTo} method.","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"awzhenyi"},"content":"    void updateFilteredResidenceList(Predicate\u003cResidence\u003e predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"whatthelump":7,"awzhenyi":13,"jaredtengsw":5,"-":60,"VRSoorya":5}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":" * Represents the in-memory model of the residence tracker data.","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"    private final ResidenceTracker residenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"    private final FilteredList\u003cResidence\u003e filteredResidences;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"     * Initializes a ModelManager with the given {@code residenceTracker} and {@code userPrefs}.","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"    public ModelManager(ReadOnlyResidenceTracker residenceTracker, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"whatthelump"},"content":"        requireAllNonNull(residenceTracker, userPrefs);","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"        logger.fine(\"Initializing with residence tracker: \" + residenceTracker + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"whatthelump"},"content":"        this.residenceTracker \u003d new ResidenceTracker(residenceTracker);","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"        filteredResidences \u003d new FilteredList\u003c\u003e(this.residenceTracker.getResidenceList());","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"whatthelump"},"content":"        this(new ResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"whatthelump"},"content":"    public Path getResidenceTrackerFilePath() {","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"whatthelump"},"content":"        return userPrefs.getResidenceTrackerFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"whatthelump"},"content":"    public void setResidenceTrackerFilePath(Path residenceTrackerFilePath) {","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"whatthelump"},"content":"        requireNonNull(residenceTrackerFilePath);","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"whatthelump"},"content":"        userPrefs.setResidenceTrackerFilePath(residenceTrackerFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"whatthelump"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ResidenceTracker \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"whatthelump"},"content":"    public void setResidenceTracker(ReadOnlyResidenceTracker residenceTracker) {","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"whatthelump"},"content":"        this.residenceTracker.resetData(residenceTracker);","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"        this.residenceTracker.sortResidenceList();","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"whatthelump"},"content":"    public ReadOnlyResidenceTracker getResidenceTracker() {","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"whatthelump"},"content":"        return residenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"    public boolean hasResidence(Residence residence) {","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(residence);","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"awzhenyi"},"content":"        return residenceTracker.hasResidence(residence);","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"awzhenyi"},"content":"    public void deleteResidence(Residence target) {","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"awzhenyi"},"content":"        residenceTracker.removeResidence(target);","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"awzhenyi"},"content":"    public void addResidence(Residence residence) {","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"awzhenyi"},"content":"        residenceTracker.addResidence(residence);","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"awzhenyi"},"content":"        updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"awzhenyi"},"content":"    public void setResidence(Residence target, Residence editedResidence) {","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"awzhenyi"},"content":"        requireAllNonNull(target, editedResidence);","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"awzhenyi"},"content":"        residenceTracker.setResidence(target, editedResidence);","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"VRSoorya"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Residence and Residence List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":119,"author":{"gitId":"VRSoorya"},"content":"     * Returns an unmodifiable view of the list of {@code Residence}s backed by the internal list of","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"whatthelump"},"content":"     * {@code versionedResidenceTracker}","lastModifiedDate":"2021-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"awzhenyi"},"content":"    public ObservableList\u003cResidence\u003e getFilteredResidenceList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"awzhenyi"},"content":"        return filteredResidences;","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":127,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"awzhenyi"},"content":"    public void updateFilteredResidenceList(Predicate\u003cResidence\u003e predicate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"awzhenyi"},"content":"        filteredResidences.setPredicate(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"VRSoorya"},"content":"        logger.fine(\"Sorting filtered residence list\");","lastModifiedDate":"2021-04-03"},{"lineNumber":133,"author":{"gitId":"VRSoorya"},"content":"        residenceTracker.sortResidenceList();","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"whatthelump"},"content":"        return residenceTracker.equals(other.residenceTracker)","lastModifiedDate":"2021-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"awzhenyi"},"content":"                \u0026\u0026 filteredResidences.equals(other.filteredResidences);","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whatthelump":18,"awzhenyi":22,"-":109,"VRSoorya":6}},{"path":"src/main/java/seedu/address/model/ReadOnlyResidenceTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":" * Unmodifiable view of a residence tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"public interface ReadOnlyResidenceTracker {","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"     * Returns an unmodifiable view of the residence list.","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"     * This list will not contain any duplicate residences.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    ObservableList\u003cResidence\u003e getResidenceList();","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whatthelump":2,"awzhenyi":2,"jaredtengsw":1,"-":11,"VRSoorya":1}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"    Path getResidenceTrackerFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"whatthelump":1,"-":15}},{"path":"src/main/java/seedu/address/model/ResidenceTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.UniqueResidenceList;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":" * Wraps all data at the residence-tracker level","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":" * Duplicates are not allowed (by .isSameResidence comparison)","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"public class ResidenceTracker implements ReadOnlyResidenceTracker {","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"    private final UniqueResidenceList residences;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"        residences \u003d new UniqueResidenceList();","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"    public ResidenceTracker() {}","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"     * Creates a ResidenceTracker using the Residences in the {@code toBeCopied}","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"whatthelump"},"content":"    public ResidenceTracker(ReadOnlyResidenceTracker toBeCopied) {","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"     * Replaces the contents of the residence list with {@code residences}.","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"     * {@code residences} must not contain duplicate residences.","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"    public void setResidences(List\u003cResidence\u003e residences) {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"        this.residences.setResidences(residences);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"whatthelump"},"content":"     * Resets the existing data of this {@code ResidenceTracker} with {@code newData}.","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"whatthelump"},"content":"    public void resetData(ReadOnlyResidenceTracker newData) {","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"        setResidences(newData.getResidenceList());","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"    //// residence-level operations","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"     * Returns true if a residence with the same identity as {@code residence} exists in the residence tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"    public boolean hasResidence(Residence residence) {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(residence);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"        return residences.contains(residence);","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"     * Adds the given residence to the residence tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"     * The residence must not already exist in the residence tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"    public void addResidence(Residence r) {","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"        residences.add(r);","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"     * Replaces the given residence {@code target} in the list with {@code editedResidence}.","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"whatthelump"},"content":"     * {@code target} must exist in the residence tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":"     * The residence identity of {@code editedResidence} must not be the same as another existing residence","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":"     * in the residence tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"awzhenyi"},"content":"    public void setResidence(Residence target, Residence editedResidence) {","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(editedResidence);","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"awzhenyi"},"content":"        residences.setResidence(target, editedResidence);","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"     * Removes the Residence {@code key} from this {@code ResidenceTracker}.","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"whatthelump"},"content":"     * {@code key} must exist in the residence tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"    public void removeResidence(Residence key) {","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"awzhenyi"},"content":"        residences.remove(key);","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":"    /**remind","lastModifiedDate":"2021-04-12"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"     * Sorts the Residences in this {@code ResidenceTracker}","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":"     * as described in the Residence\u0027s {@code compareTo} method.","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"VRSoorya"},"content":"    public void sortResidenceList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"VRSoorya"},"content":"        residences.sortResidenceList();","lastModifiedDate":"2021-04-12"},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"awzhenyi"},"content":"        return residences.asUnmodifiableObservableList().size() + \" residences\";","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"awzhenyi"},"content":"    public ObservableList\u003cResidence\u003e getResidenceList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"awzhenyi"},"content":"        return residences.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"whatthelump"},"content":"                || (other instanceof ResidenceTracker // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":122,"author":{"gitId":"awzhenyi"},"content":"                \u0026\u0026 residences.equals(((ResidenceTracker) other).residences));","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"awzhenyi"},"content":"        return residences.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whatthelump":9,"awzhenyi":26,"jaredtengsw":6,"-":77,"VRSoorya":11}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"    private Path residenceTrackerFilePath \u003d Paths.get(\"data\" , \"residencetracker.json\");","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"whatthelump"},"content":"        setResidenceTrackerFilePath(newUserPrefs.getResidenceTrackerFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"whatthelump"},"content":"    public Path getResidenceTrackerFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"whatthelump"},"content":"        return residenceTrackerFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"whatthelump"},"content":"    public void setResidenceTrackerFilePath(Path residenceTrackerFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"whatthelump"},"content":"        requireNonNull(residenceTrackerFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"whatthelump"},"content":"        this.residenceTrackerFilePath \u003d residenceTrackerFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"whatthelump"},"content":"                \u0026\u0026 residenceTrackerFilePath.equals(o.residenceTrackerFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"whatthelump"},"content":"        return Objects.hash(guiSettings, residenceTrackerFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"whatthelump"},"content":"        sb.append(\"\\nLocal data file location : \" + residenceTrackerFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whatthelump":10,"-":77}},{"path":"src/main/java/seedu/address/model/booking/Booking.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.booking;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":" * Represents a Booking in residence tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"whatthelump"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"public class Booking implements Comparable\u003cBooking\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Booking start date must be before the end date\";","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    private final TenantName tenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"    private final Phone phone;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"    private final BookingTime bookingTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"    private final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\");","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"whatthelump"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    public Booking(TenantName tenantName, Phone phone, LocalDate start, LocalDate end) {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"        requireAllNonNull(tenantName, phone, start, end);","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        this.tenantName \u003d tenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"whatthelump"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"        this.bookingTime \u003d new BookingTime(start, end);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"    public TenantName getTenantName() {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"        return tenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"whatthelump"},"content":"    public Phone getPhone() {","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"whatthelump"},"content":"        return phone;","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    public BookingTime getBookingTime() {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"        return bookingTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"whatthelump"},"content":"    public LocalDate getStart() {","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"        return bookingTime.getStart();","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"whatthelump"},"content":"    public LocalDate getEnd() {","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"        return bookingTime.getEnd();","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"whatthelump"},"content":"     * Returns if a given booking is a valid booking.","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"    public static boolean isValidBookingTime(LocalDate start, LocalDate end) {","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"        return BookingTime.isValidBookingTime(start, end);","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"whatthelump"},"content":"     * Returns true if both bookings have the same name, phone, start and end dates.","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"whatthelump"},"content":"     * This defines a stronger notion of equality between two bookings.","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"whatthelump"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"whatthelump"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"whatthelump"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"whatthelump"},"content":"            return true;","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"whatthelump"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"whatthelump"},"content":"        if (!(other instanceof Booking)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"whatthelump"},"content":"            return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"whatthelump"},"content":"        Booking otherBooking \u003d (Booking) other;","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"        return otherBooking.getTenantName().equals(getTenantName())","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"whatthelump"},"content":"                \u0026\u0026 otherBooking.getPhone().equals(getPhone())","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"                \u0026\u0026 otherBooking.getBookingTime().equals(getBookingTime());","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"whatthelump"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"whatthelump"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"whatthelump"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"        return Objects.hash(tenantName, phone, bookingTime);","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"     * Comparator of bookings to reflect chronological order.","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"     * Bookings on earlier dates come before booking on later dates.","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"    public int compareTo(Booking otherBooking) {","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"wangtao0717"},"content":"        return this.bookingTime.compareTo(otherBooking.getBookingTime());","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"whatthelump"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"wangtao0717"},"content":"    public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"whatthelump"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":"        builder.append(getTenantName())","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"whatthelump"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"whatthelump"},"content":"                .append(getPhone())","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"whatthelump"},"content":"                .append(\"; Start: \")","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"whatthelump"},"content":"                .append(getStart().format(dateTimeFormatter))","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"whatthelump"},"content":"                .append(\"; End: \")","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"whatthelump"},"content":"                .append(getEnd().format(dateTimeFormatter));","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"whatthelump"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"     * Returns true if booking time of this Booking overlaps with another Booking\u0027s booking time.","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"whatthelump"},"content":"    public boolean doesOverlap(Booking otherBooking) {","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"wangtao0717"},"content":"        return this.getBookingTime().doesOverlap(otherBooking.getBookingTime());","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"whatthelump":62,"awzhenyi":5,"jaredtengsw":1,"wangtao0717":15,"VRSoorya":32}},{"path":"src/main/java/seedu/address/model/booking/BookingTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package seedu.address.model.booking;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":" * Represents a BookingTime of a Booking in residence tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"public class BookingTime {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"    private final LocalDate start;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"    private final LocalDate end;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"    private final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\");","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"     * Initializes a booking Time","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"    public BookingTime(LocalDate start, LocalDate end) {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    public LocalDate getStart() {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"        return start;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"    public LocalDate getEnd() {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"        return end;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"        if (!(other instanceof BookingTime)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"        BookingTime otherBookingTime \u003d (BookingTime) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"        return otherBookingTime.getStart().equals(getStart())","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"                \u0026\u0026 otherBookingTime.getEnd().equals(getEnd());","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"    public static boolean isValidBookingTime(LocalDate start, LocalDate end) {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"        return !end.isBefore(start);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"     * Comparator of {@code BookingTime}s by chronological order.","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"    public int compareTo(BookingTime otherBookingTime) {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"        if (this.getStart().isBefore(otherBookingTime.getStart())) {","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"            return -1;","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"        } else if (this.getStart().isAfter(otherBookingTime.getStart())) {","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"            return 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"        return 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"        return Objects.hash(start, end);","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"     * Returns true if bookingTime overlaps with another bookingTime.","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"     * This happens if the start and end dates are not","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"     * before the start date of the other booking time","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"     * or after the end date of the other booking time.","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"    public boolean doesOverlap(BookingTime otherBookingTime) {","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"        boolean isBeforeOtherBooking \u003d this.getEnd().isBefore(otherBookingTime.getStart());","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"        boolean isAfterOtherBooking \u003d this.getStart().isAfter(otherBookingTime.getEnd());","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"        return !(isBeforeOtherBooking || isAfterOtherBooking);","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"jaredtengsw":1,"awzhenyi":1,"wangtao0717":73,"VRSoorya":8}},{"path":"src/main/java/seedu/address/model/booking/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.booking;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":" * Tests that a Booking\u0027s {@code TenantName} matches any of the keywords given.","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":" * Search is not case sensitive.","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cBooking\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"    public boolean test(Booking person) {","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getTenantName().toString(), keyword));","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"whatthelump":3,"-":26,"VRSoorya":3}},{"path":"src/main/java/seedu/address/model/booking/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.booking;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" * Represents a Booking\u0027s phone number in the residence tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"whatthelump":1,"-":51,"VRSoorya":1}},{"path":"src/main/java/seedu/address/model/booking/TenantName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.booking;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.name.CommonName;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":" * Represents the TenantName of a tenant who made a booking.","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"public class TenantName extends CommonName {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"     * The first character of the Residence\u0027s name must not be a whitespace,","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"     * Constructs a {@code TenantName}.","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     * @param name A valid tenant name.","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    public TenantName(String name) {","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"                || (other instanceof TenantName // instanceof handles nulls","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"                \u0026\u0026 fullName.equals(((TenantName) other).fullName)); // state check","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"whatthelump":1,"wangtao0717":4,"-":38,"VRSoorya":7}},{"path":"src/main/java/seedu/address/model/booking/exceptions/BookingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.booking.exceptions;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":" * Signals that the operation is unable to find the specified booking.","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"public class BookingNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"whatthelump":6}},{"path":"src/main/java/seedu/address/model/booking/exceptions/DuplicateBookingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.booking.exceptions;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":" * Signals that the operation will result in duplicate Bookings (Bookings are considered duplicates if they have the","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":" * same identity).","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"public class DuplicateBookingException extends RuntimeException {","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"    public DuplicateBookingException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"        super(\"Operation would result in duplicate bookings\");","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"whatthelump"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"whatthelump":11}},{"path":"src/main/java/seedu/address/model/booking/exceptions/OverlappingBookingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.booking.exceptions;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":" * Signals that the operation will result in overlapping Bookings for a Residence","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":" * (Bookings are considered overlapping if they have overlapping booking times).","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"public class OverlappingBookingException extends RuntimeException {","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"    public OverlappingBookingException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"        super(\"Operation would result in overlapping bookings\");","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"whatthelump"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"whatthelump":9,"VRSoorya":2}},{"path":"src/main/java/seedu/address/model/name/CommonName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package seedu.address.model.name;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"public class CommonName {","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"    protected String fullName;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this {@code CommonName}.","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"    public String toString() {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"        return fullName;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"                || (other instanceof CommonName // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"                \u0026\u0026 fullName.equals(((CommonName) other).fullName)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"     * Returns hashCode of this {@code CommonName}.","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"        return fullName.hashCode();","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"wangtao0717":27,"VRSoorya":1}},{"path":"src/main/java/seedu/address/model/residence/BookingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.residence;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-04-03"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-04-03"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.exceptions.BookingNotFoundException;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.exceptions.OverlappingBookingException;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":" * A list of bookings that enforces no overlapping between its elements and does not allow nulls.","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":" * A booking is considered non-overlapping by comparing using {@code Booking#doesOverlap(Booking)}. As such, adding and","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":" * updating of bookings uses Booking#doesOverlap(Booking) so as to ensure that the booking being added or","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":" * updated does not overlap in timing with another booking in the UniqueBookingList. However, the removal of a booking","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":" * uses Booking#equals(Object) so as to ensure that the booking with exactly the same fields will be removed.","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"whatthelump"},"content":" *","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":" * @see Booking#doesOverlap(Booking)","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":" *","lastModifiedDate":"2021-04-03"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":" * Note: All operations that modify the contents of the {@code interalList} will return the sorted list","lastModifiedDate":"2021-04-03"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":" * as described in {@code Booking}\u0027s {@code compareTo} method.","lastModifiedDate":"2021-04-03"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":" *","lastModifiedDate":"2021-04-03"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":" * @see Booking#compareTo(Booking)","lastModifiedDate":"2021-04-03"},{"lineNumber":31,"author":{"gitId":"whatthelump"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"public class BookingList implements Iterable\u003cBooking\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    //@@author Soorya","lastModifiedDate":"2021-04-03"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(BookingList.class);","lastModifiedDate":"2021-04-03"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    //@@author Li Gang","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cBooking\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cBooking\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"    //@@author Soorya","lastModifiedDate":"2021-04-03"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    public BookingList() {}","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    public BookingList(List\u003cBooking\u003e residenceBookingList) {","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"        setBookings(residenceBookingList);","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"    public BookingList(BookingList residenceBookingList) {","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"        resetBookings(residenceBookingList);","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //@@author Li Gang","lastModifiedDate":"2021-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if the list contains a booking which overlaps with the given argument.","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean contains(Booking toCheck) {","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::doesOverlap);","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Checks if edited Booking overlaps with any other bookings in the current booking list.","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean containsExclude(Booking toExclude, Booking toCheck) {","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ObservableList\u003cBooking\u003e copyOfInternalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Iterator\u003cBooking\u003e iterator \u003d internalList.iterator();","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            copyOfInternalList.add(iterator.next());","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        copyOfInternalList.remove(toExclude);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return copyOfInternalList.stream().anyMatch(toCheck::doesOverlap);","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Adds a booking to the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The booking must not overlap with another booking which already exists in the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a sorted booking list.","lastModifiedDate":"2021-04-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void add(Booking toAdd) {","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new OverlappingBookingException();","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logger.fine(\"Sorting the booking list.\");","lastModifiedDate":"2021-04-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        sortBookingList();","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the booking {@code target} in the list with {@code editedBooking}.","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The booking identity of {@code editedBooking} must not overlap with another existing booking in the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns a sorted booking list.","lastModifiedDate":"2021-04-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setBooking(Booking target, Booking editedBooking) {","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedBooking);","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new BookingNotFoundException();","lastModifiedDate":"2021-03-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        internalList.set(index, editedBooking);","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        logger.fine(\"Sorting the booking list.\");","lastModifiedDate":"2021-04-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        sortBookingList();","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns the size of booking list","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public int getBookingListSize() {","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return internalList.size();","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Booking getBooking(int zeroBasedIndex) {","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.get(zeroBasedIndex);","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Removes the equivalent booking from the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * The booking must exist in the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void remove(Booking toRemove) {","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new BookingNotFoundException();","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Replaces all the {@code bookings} with those from the other {@code BookingList}.","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns a sorted booking list.","lastModifiedDate":"2021-04-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void resetBookings(BookingList replacement) {","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        logger.fine(\"Sorting the booking list.\");","lastModifiedDate":"2021-04-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        sortBookingList();","lastModifiedDate":"2021-04-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code bookings}.","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * {@code bookings} must not contain overlapping bookings.","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Returns a sorted booking list.","lastModifiedDate":"2021-04-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setBookings(List\u003cBooking\u003e bookings) {","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireAllNonNull(bookings);","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!bookingsAreUnique(bookings)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new OverlappingBookingException();","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        internalList.setAll(bookings);","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        logger.fine(\"Sorting the booking list.\");","lastModifiedDate":"2021-04-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        sortBookingList();","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * sorted as described in Booking\u0027s {@code compareTo} method.","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"VRSoorya"},"content":"    //@@author Soorya","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"VRSoorya"},"content":"    public ObservableList\u003cBooking\u003e getValue() {","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"VRSoorya"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-04-03"},{"lineNumber":164,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    //@@author Li Gang","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public Iterator\u003cBooking\u003e iterator() {","lastModifiedDate":"2021-03-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-03-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (getValue().isEmpty()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            builder.append(\"No bookings.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            builder.append(\"Bookings:\\n\");","lastModifiedDate":"2021-03-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            getValue().stream().forEach(obj -\u003e builder.append(obj + \"\\n\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                || (other instanceof BookingList // instanceof handles nulls","lastModifiedDate":"2021-03-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((BookingList) other).internalList));","lastModifiedDate":"2021-03-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Returns true if {@code bookings} contains only non-overlapping bookings.","lastModifiedDate":"2021-03-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    private boolean bookingsAreUnique(List\u003cBooking\u003e bookings) {","lastModifiedDate":"2021-03-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c bookings.size() - 1; i++) {","lastModifiedDate":"2021-03-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c bookings.size(); j++) {","lastModifiedDate":"2021-03-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                if (bookings.get(i).doesOverlap(bookings.get(j))) {","lastModifiedDate":"2021-03-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-03-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    //@@author Wang Tao","lastModifiedDate":"2021-04-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void sortBookingList() {","lastModifiedDate":"2021-04-01"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        FXCollections.sort(internalList);","lastModifiedDate":"2021-04-01"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"whatthelump":7,"VRSoorya":44,"-":163}},{"path":"src/main/java/seedu/address/model/residence/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.residence;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"import java.util.List;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":" * Tests that a {@code Residence}\u0027s {@code ResidenceName} matches any of the keywords given.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cResidence\u003e {","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"    public boolean test(Residence residence) {","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"        return keywords.stream()","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"                        residence.getResidenceName().toString(), keyword));","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"whatthelump"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"whatthelump"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"whatthelump"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"whatthelump"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"whatthelump":27,"jaredtengsw":1,"awzhenyi":2,"wangtao0717":2}},{"path":"src/main/java/seedu/address/model/residence/Residence.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.residence;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"import java.util.Collections;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"import java.util.Objects;","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"import java.util.Set;","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.tag.CleanStatusTag;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":" * Represents a Residence in ResidenceTracker.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":" * Guarantees: details are present and not null, field values are validated, immutable except {@code CleanStatusTag}.","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"public class Residence implements Comparable\u003cResidence\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"whatthelump"},"content":"    // Identity fields","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"    private final ResidenceName residenceName;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"whatthelump"},"content":"    // Data fields","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"    private final ResidenceAddress residenceAddress;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"whatthelump"},"content":"    private final BookingList bookingList;","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    private CleanStatusTag cleanStatusTag;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"     * Every field must be present and not null except {@code BookingList}.","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    public Residence(ResidenceName residenceName, ResidenceAddress residenceAddress,","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"                     CleanStatusTag cleanStatusTag, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        this.bookingList \u003d new BookingList();","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"        requireAllNonNull(residenceName, residenceAddress, cleanStatusTag, tags);","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        this.residenceName \u003d residenceName;","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        this.residenceAddress \u003d residenceAddress;","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"        this.cleanStatusTag \u003d cleanStatusTag;","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"     * When BookingList is provided.","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"whatthelump"},"content":"    public Residence(ResidenceName residenceName, ResidenceAddress residenceAddress, BookingList bookingList,","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"                     CleanStatusTag cleanStatusTag, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"whatthelump"},"content":"        this.bookingList \u003d bookingList;","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"        requireAllNonNull(residenceName, residenceAddress, cleanStatusTag, tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"        this.residenceName \u003d residenceName;","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"        this.residenceAddress \u003d residenceAddress;","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"        this.cleanStatusTag \u003d cleanStatusTag;","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"whatthelump"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"    public ResidenceName getResidenceName() {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"        return residenceName;","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"    public ResidenceAddress getResidenceAddress() {","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"        return residenceAddress;","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"    public BookingList getBookingList() {","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"whatthelump"},"content":"        return bookingList;","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"    public CleanStatusTag getCleanStatusTag() {","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"        return cleanStatusTag;","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"whatthelump"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"whatthelump"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"whatthelump"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"whatthelump"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"    public boolean hasBooking(Booking booking) {","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"        return bookingList.contains(booking);","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"     * Returns a modified {@code Residence} with new {@code booking} added to it\u0027s BookingList.","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"    public Residence addBooking(Booking booking) {","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"        assert !this.hasBooking(booking);","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"        bookingList.add(booking);","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":"        return this;","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":"     * Returns true if both residences have the same residenceName.","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"     * This defines a weaker notion of equality between two residences.","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":101,"author":{"gitId":"awzhenyi"},"content":"    public boolean isSameResidence(Residence otherResidence) {","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"awzhenyi"},"content":"        if (otherResidence \u003d\u003d this) {","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"whatthelump"},"content":"            return true;","lastModifiedDate":"2021-02-28"},{"lineNumber":104,"author":{"gitId":"whatthelump"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":105,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":106,"author":{"gitId":"awzhenyi"},"content":"        return otherResidence !\u003d null","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"jaredtengsw"},"content":"                \u0026\u0026 otherResidence.getResidenceName().equals(getResidenceName());","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"VRSoorya"},"content":"     * Returns true if this residence has any bookings that start in the next 7 days.","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"    public boolean hasUpcomingBooking() {","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":"        return this.bookingList.getValue().stream()","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"VRSoorya"},"content":"                .filter(b -\u003e b.getStart().isAfter(LocalDate.now())","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"whatthelump"},"content":"                        \u0026\u0026 b.getStart().isBefore(LocalDate.now().plusDays(8)))","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"VRSoorya"},"content":"                .mapToInt(b -\u003e 1).sum() \u003e 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":120,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":121,"author":{"gitId":"VRSoorya"},"content":"     * Returns true if both residence have the same identity and data fields.","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"VRSoorya"},"content":"     * This defines a stronger notion of equality between two residence.","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":124,"author":{"gitId":"whatthelump"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":125,"author":{"gitId":"whatthelump"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-28"},{"lineNumber":126,"author":{"gitId":"whatthelump"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-02-28"},{"lineNumber":127,"author":{"gitId":"whatthelump"},"content":"            return true;","lastModifiedDate":"2021-02-28"},{"lineNumber":128,"author":{"gitId":"whatthelump"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":129,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":130,"author":{"gitId":"awzhenyi"},"content":"        if (!(other instanceof Residence)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":131,"author":{"gitId":"whatthelump"},"content":"            return false;","lastModifiedDate":"2021-02-28"},{"lineNumber":132,"author":{"gitId":"whatthelump"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":133,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":134,"author":{"gitId":"awzhenyi"},"content":"        Residence otherResidence \u003d (Residence) other;","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"jaredtengsw"},"content":"        return otherResidence.getResidenceName().equals(getResidenceName())","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"jaredtengsw"},"content":"                \u0026\u0026 otherResidence.getResidenceAddress().equals(getResidenceAddress())","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"VRSoorya"},"content":"                \u0026\u0026 otherResidence.getBookingList().equals(getBookingList())","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"wangtao0717"},"content":"                \u0026\u0026 otherResidence.getCleanStatusTag().equals(getCleanStatusTag())","lastModifiedDate":"2021-03-06"},{"lineNumber":139,"author":{"gitId":"awzhenyi"},"content":"                \u0026\u0026 otherResidence.getTags().equals(getTags());","lastModifiedDate":"2021-03-02"},{"lineNumber":140,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":141,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":142,"author":{"gitId":"whatthelump"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":143,"author":{"gitId":"whatthelump"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-28"},{"lineNumber":144,"author":{"gitId":"whatthelump"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-02-28"},{"lineNumber":145,"author":{"gitId":"whatthelump"},"content":"        return Objects.hash(residenceName, residenceAddress, bookingList, cleanStatusTag, tags);","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":147,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":148,"author":{"gitId":"whatthelump"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":149,"author":{"gitId":"whatthelump"},"content":"    public String toString() {","lastModifiedDate":"2021-02-28"},{"lineNumber":150,"author":{"gitId":"whatthelump"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-02-28"},{"lineNumber":151,"author":{"gitId":"jaredtengsw"},"content":"        builder.append(getResidenceName())","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"jaredtengsw"},"content":"                .append(\"; Residence Address: \")","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"jaredtengsw"},"content":"                .append(getResidenceAddress())","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"VRSoorya"},"content":"                .append(\"; Clean Status: \")","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"VRSoorya"},"content":"                .append(getCleanStatusTag());","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":157,"author":{"gitId":"whatthelump"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-02-28"},{"lineNumber":158,"author":{"gitId":"whatthelump"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-02-28"},{"lineNumber":159,"author":{"gitId":"whatthelump"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-02-28"},{"lineNumber":160,"author":{"gitId":"whatthelump"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-02-28"},{"lineNumber":161,"author":{"gitId":"whatthelump"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":162,"author":{"gitId":"whatthelump"},"content":"        return builder.toString();","lastModifiedDate":"2021-02-28"},{"lineNumber":163,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":164,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    //@@author Zhen Yi","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public int compareTo(Residence o) {","lastModifiedDate":"2021-03-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (this.getCleanStatusTag().getValue().equals(\"Unclean\")","lastModifiedDate":"2021-03-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \u0026\u0026 (o.getCleanStatusTag().getValue().equals(\"Clean\"))) {","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2021-03-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } else if (this.getCleanStatusTag().getValue().equals(\"Clean\")","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                \u0026\u0026 (o.getCleanStatusTag().getValue().equals(\"Unclean\"))) {","lastModifiedDate":"2021-03-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return 1;","lastModifiedDate":"2021-03-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"whatthelump":78,"jaredtengsw":17,"awzhenyi":9,"wangtao0717":5,"VRSoorya":55,"-":14}},{"path":"src/main/java/seedu/address/model/residence/ResidenceAddress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.residence;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":" * Represents a Residence\u0027s address in ResidenceTracker.","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidResidenceAddress(String)}","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"public class ResidenceAddress {","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"     * The first character of the Residence\u0027s address must not be a whitespace,","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"     * Constructs an {@code ResidenceAddress}.","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"    public ResidenceAddress(String address) {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"        checkArgument(isValidResidenceAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"    public static boolean isValidResidenceAddress(String test) {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"     * Returns value of this {@code ResidenceAddress}.","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"    public String getValue() {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"        return value;","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"                || (other instanceof ResidenceAddress // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"                \u0026\u0026 value.equals(((ResidenceAddress) other).value)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"whatthelump":1,"jaredtengsw":10,"-":45,"VRSoorya":8}},{"path":"src/main/java/seedu/address/model/residence/ResidenceName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.residence;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.name.CommonName;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":" * Represents a Residence\u0027s name in ResidenceTracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidResidenceName(String)}","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"whatthelump"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"public class ResidenceName extends CommonName {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"    /*","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"     * The first character of the Residence\u0027s name must not be a whitespace,","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"whatthelump"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"     * Constructs a {@code ResidenceName}.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"whatthelump"},"content":"     *","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     * @param name A valid residence name.","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"    public ResidenceName(String name) {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"        checkArgument(isValidResidenceName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"whatthelump"},"content":"        fullName \u003d name;","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"     * Returns true if a given string is a valid residence name.","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"    public static boolean isValidResidenceName(String test) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"whatthelump"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"     * Returns value of this {@code ResidenceName}.","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    public String getValue() {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"        return fullName;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"whatthelump"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"whatthelump"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"whatthelump"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"                || (other instanceof ResidenceName // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"                \u0026\u0026 fullName.equals(((ResidenceName) other).fullName)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"whatthelump"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"whatthelump":32,"jaredtengsw":8,"wangtao0717":3,"VRSoorya":11}},{"path":"src/main/java/seedu/address/model/residence/UniqueResidenceList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package seedu.address.model.residence;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import java.util.List;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.exceptions.DuplicateResidenceException;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.exceptions.ResidenceNotFoundException;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":" * A list of residences that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":" * A residence is considered unique by comparing using {@code Residence#isSameResidence(Residence)}.","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":" * As such, adding and updating of residences uses Residence#isSameResidence(Residence) for equality so as to","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":" * ensure that the residence being added or updated is unique in terms of identity in the UniqueResidenceList.","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":" * However, the removal of a Residence uses Residence#equals(Object) so as to ensure that the Residence","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":" * with exactly the same fields will be removed.","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":" *","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":" *","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":" * @see Residence#isSameResidence(Residence)","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"public class UniqueResidenceList implements Iterable\u003cResidence\u003e {","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"    private final ObservableList\u003cResidence\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"    private final ObservableList\u003cResidence\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"     * Returns true if the list contains an equivalent residence as the given argument.","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"    public boolean contains(Residence toCheck) {","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"        return internalList.stream().anyMatch(toCheck::isSameResidence);","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"     * Adds the given residence to the list.","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"     * The residence must not already exist in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"    public void add(Residence toAdd) {","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"            throw new DuplicateResidenceException();","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"     * Replaces the residence {@code target} in the list with {@code editedResidence}.","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"     * The residence identity of {@code editedResidence} must not be the same as another existing residence in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"    public void setResidence(Residence target, Residence editedResidence) {","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"        requireAllNonNull(target, editedResidence);","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"            throw new ResidenceNotFoundException();","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"        if (!target.isSameResidence(editedResidence) \u0026\u0026 contains(editedResidence)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"            throw new DuplicateResidenceException();","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"        internalList.set(index, editedResidence);","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"awzhenyi"},"content":"     * Removes the equivalent residence from the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"     * The residence must exist in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"    public void remove(Residence toRemove) {","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"awzhenyi"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"            throw new ResidenceNotFoundException();","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"     * Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"     * {@code replacement} must not be null.","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"awzhenyi"},"content":"    public void setResidences(UniqueResidenceList replacement) {","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"awzhenyi"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"awzhenyi"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"     * Replaces the contents of this list with {@code residences}.","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"awzhenyi"},"content":"     * {@code residences} must not contain duplicate residences.","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"awzhenyi"},"content":"    public void setResidences(List\u003cResidence\u003e residences) {","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"awzhenyi"},"content":"        requireAllNonNull(residences);","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"awzhenyi"},"content":"        if (!residencesAreUnique(residences)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"awzhenyi"},"content":"            throw new DuplicateResidenceException();","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"awzhenyi"},"content":"        internalList.setAll(residences);","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"awzhenyi"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":108,"author":{"gitId":"awzhenyi"},"content":"    public ObservableList\u003cResidence\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"awzhenyi"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"     * Sorts the backing list as described in Residence\u0027s {@code compareTo} method.","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"VRSoorya"},"content":"    public void sortResidenceList() {","lastModifiedDate":"2021-04-12"},{"lineNumber":116,"author":{"gitId":"VRSoorya"},"content":"        FXCollections.sort(internalList);","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"awzhenyi"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"awzhenyi"},"content":"    public Iterator\u003cResidence\u003e iterator() {","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"awzhenyi"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"awzhenyi"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"awzhenyi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"awzhenyi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"awzhenyi"},"content":"                || (other instanceof UniqueResidenceList // instanceof handles nulls","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"awzhenyi"},"content":"                \u0026\u0026 internalList.equals(((UniqueResidenceList) other).internalList));","lastModifiedDate":"2021-03-02"},{"lineNumber":129,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":130,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":131,"author":{"gitId":"awzhenyi"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"awzhenyi"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-02"},{"lineNumber":133,"author":{"gitId":"awzhenyi"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"awzhenyi"},"content":"     * Returns true if {@code residences} contains only unique residences.","lastModifiedDate":"2021-03-02"},{"lineNumber":138,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"awzhenyi"},"content":"    private boolean residencesAreUnique(List\u003cResidence\u003e residences) {","lastModifiedDate":"2021-03-02"},{"lineNumber":140,"author":{"gitId":"awzhenyi"},"content":"        for (int i \u003d 0; i \u003c residences.size() - 1; i++) {","lastModifiedDate":"2021-03-02"},{"lineNumber":141,"author":{"gitId":"awzhenyi"},"content":"            for (int j \u003d i + 1; j \u003c residences.size(); j++) {","lastModifiedDate":"2021-03-02"},{"lineNumber":142,"author":{"gitId":"awzhenyi"},"content":"                if (residences.get(i).isSameResidence(residences.get(j))) {","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"awzhenyi"},"content":"                    return false;","lastModifiedDate":"2021-03-02"},{"lineNumber":144,"author":{"gitId":"awzhenyi"},"content":"                }","lastModifiedDate":"2021-03-02"},{"lineNumber":145,"author":{"gitId":"awzhenyi"},"content":"            }","lastModifiedDate":"2021-03-02"},{"lineNumber":146,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"awzhenyi"},"content":"        return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":148,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":149,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"awzhenyi":135,"VRSoorya":14}},{"path":"src/main/java/seedu/address/model/residence/exceptions/DuplicateResidenceException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package seedu.address.model.residence.exceptions;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":" * Signals that the operation will result in duplicate Residences (Residences are considered duplicates","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":" * if they have the same identity).","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"public class DuplicateResidenceException extends RuntimeException {","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"    public DuplicateResidenceException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"        super(\"Operation would result in duplicate residences\");","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"awzhenyi":12}},{"path":"src/main/java/seedu/address/model/residence/exceptions/ResidenceNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package seedu.address.model.residence.exceptions;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"public class ResidenceNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"awzhenyi":5}},{"path":"src/main/java/seedu/address/model/tag/CleanStatusTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" * Represents a CleanStatusTag in the residence tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":" * Guarantees: name is valid as declared in {@link #isValidCleanStatusTag(String)}","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"public class CleanStatusTag {","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    //@@author Soorya","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    public static final String CLEAN \u003d \"Clean\";","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    public static final String UNCLEAN \u003d \"Unclean\";","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Please use \u0027c/y\u0027, \u0027c/n\u0027, \u0027c/clean\u0027 or \u0027c/unclean\u0027\";","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    private String cleanStatus;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"     * Constructs a default {@code CleanStatusTag} with status value \"Clean\".","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    public CleanStatusTag() {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        this.cleanStatus \u003d CLEAN;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    //@@author Wang Tao","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CleanStatusTag}.","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param cleanStatus A valid clean status.","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CleanStatusTag(String cleanStatus) {","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(cleanStatus);","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(isValidCleanStatusTag(cleanStatus), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (cleanStatus.equalsIgnoreCase(\"y\") || cleanStatus.equalsIgnoreCase(\"clean\")) {","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            this.cleanStatus \u003d CLEAN;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } else if (cleanStatus.equalsIgnoreCase(\"n\") || cleanStatus.equalsIgnoreCase(\"unclean\")) {","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            this.cleanStatus \u003d UNCLEAN;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static boolean isValidCleanStatusTag(String test) {","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return test.equalsIgnoreCase(\"y\") || test.equalsIgnoreCase(\"n\")","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || test.equalsIgnoreCase(\"clean\") || test.equalsIgnoreCase(\"unclean\");","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"    //@@author Soorya","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"     * Returns value of this {@code CleanStatusTag}.","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"    public String getValue() {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"        return cleanStatus;","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //@@author Wang Tao","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                || (other instanceof CleanStatusTag // instanceof handles nulls","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 cleanStatus.equals(((CleanStatusTag) other).cleanStatus)); // state check","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return cleanStatus.hashCode();","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Formats this CleanStatusTag as text for viewing.","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + cleanStatus + \u0027]\u0027;","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"wangtao0717":6,"VRSoorya":26,"-":45}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" * Represents a Tag in the residence tracker.","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag names should be alphanumeric and should not contain spaces\";","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"     * Formats this Tag as text for viewing.","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"awzhenyi":1,"-":51,"VRSoorya":3}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ReadOnlyResidenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ResidenceTracker;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.model.booking.Phone;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.TenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.residence.BookingList;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.ResidenceAddress;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.ResidenceName;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.tag.CleanStatusTag;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":" * Contains utility methods for populating {@code ResidenceTracker} with sample data.","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"    public static Residence[] getSampleResidence() {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"        BookingList bookingListA \u003d new BookingList();","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"        BookingList bookingListB \u003d new BookingList();","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\");","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"        LocalDate startA \u003d LocalDate.parse(\"27-03-2021\", dateFormat);","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"jaredtengsw"},"content":"        LocalDate endA \u003d LocalDate.parse(\"02-04-2021\", dateFormat);","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"        LocalDate startB \u003d LocalDate.parse(\"10-04-2021\", dateFormat);","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"        LocalDate endB \u003d LocalDate.parse(\"21-04-2021\", dateFormat);","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"jaredtengsw"},"content":"        LocalDate startC \u003d LocalDate.parse(\"05-05-2021\", dateFormat);","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"        LocalDate endC \u003d LocalDate.parse(\"31-05-2021\", dateFormat);","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        Booking bookingA \u003d new Booking(new TenantName(\"Alice Carol\"), new Phone(\"90098118\"), startA, endA);","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"        Booking bookingB \u003d new Booking(new TenantName(\"David Michael\"), new Phone(\"82316788\"), startB, endB);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"        Booking bookingC \u003d new Booking(new TenantName(\"Cara Delevingne\"), new Phone(\"96221200\"), startC, endC);","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"        bookingListA.add(bookingA);","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"        bookingListA.add(bookingB);","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"        bookingListB.add(bookingC);","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"        return new Residence[]{","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"            new Residence(new ResidenceName(\"Condo\"), new ResidenceAddress(\"Blk 45 Tampines Street 29, #08-01\"),","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"                    new BookingList(bookingListB), new CleanStatusTag(\"n\"), getTagSet(\"Reserved\")),","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"            new Residence(new ResidenceName(\"Melville Park\"), new ResidenceAddress(\"22 Simei Street 1, #10-02\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"                    new BookingList(), new CleanStatusTag(\"n\"), getTagSet(\"Available\")),","lastModifiedDate":"2021-04-04"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"            new Residence(new ResidenceName(\"HDB\"), new ResidenceAddress(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"                    new BookingList(bookingListA), new CleanStatusTag(\"y\"), getTagSet(\"Booked\"))","lastModifiedDate":"2021-04-04"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"     * Returns an unmodifiable view of the residence tracker with the sample data.","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"whatthelump"},"content":"    public static ReadOnlyResidenceTracker getSampleResidenceTracker() {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"        ResidenceTracker sampleRt \u003d new ResidenceTracker();","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"        for (Residence sampleResidence : getSampleResidence()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"            sampleRt.addResidence(sampleResidence);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"        return sampleRt;","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"whatthelump":5,"jaredtengsw":22,"awzhenyi":7,"wangtao0717":5,"-":27,"VRSoorya":11}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedBooking.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.booking.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.TenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":" * Jackson-friendly version of {@link Booking}.","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"class JsonAdaptedBooking {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Booking\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    private final String tenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"    private final LocalDate start;","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"whatthelump"},"content":"    private final LocalDate end;","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"whatthelump"},"content":"     * Constructs a {@code JsonAdaptedBooking} with the given booking details.","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    public JsonAdaptedBooking(@JsonProperty(\"name\") String tenantName, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"                             @JsonProperty(\"start\") LocalDate start, @JsonProperty(\"end\") LocalDate end) {","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        this.tenantName \u003d tenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"whatthelump"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"     * Converts a given {@code Booking} into this class for Jackson use.","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"whatthelump"},"content":"    public JsonAdaptedBooking(Booking source) {","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"        tenantName \u003d source.getTenantName().toString();","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"whatthelump"},"content":"        start \u003d source.getStart();","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"whatthelump"},"content":"        end \u003d source.getEnd();","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"     * Converts this Jackson-friendly adapted booking object into the model\u0027s {@code Booking} object.","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"whatthelump"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted booking.","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"whatthelump"},"content":"    public Booking toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"        if (tenantName \u003d\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"                    TenantName.class.getSimpleName()));","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"        if (!TenantName.isValidName(tenantName)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"            throw new IllegalValueException(TenantName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"        final TenantName modelTenantName \u003d new TenantName(tenantName);","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"whatthelump"},"content":"        if (start \u003d\u003d null || end \u003d\u003d null) {","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"whatthelump"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Booking.class.getSimpleName()));","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"whatthelump"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"whatthelump"},"content":"            throw new IllegalValueException(Booking.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"        return new Booking(modelTenantName, modelPhone, start, end);","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"whatthelump":20,"awzhenyi":3,"-":45,"VRSoorya":12}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedResidence.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.residence.BookingList;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.ResidenceAddress;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.ResidenceName;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.tag.CleanStatusTag;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":" * Jackson-friendly version of {@link Residence}.","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"public class JsonAdaptedResidence {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Residence\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"    private final String residenceName;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"    private final String residenceAddress;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"    private final List\u003cJsonAdaptedBooking\u003e bookingList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    private final String cleanStatusTag;","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"     * Constructs a {@code JsonAdaptedResidence} with the given residence details.","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"    public JsonAdaptedResidence(@JsonProperty(\"name\") String residenceName,","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"                                @JsonProperty(\"address\") String residenceAddress,","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"                                @JsonProperty(\"booking\") List\u003cJsonAdaptedBooking\u003e bookings,","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"                                @JsonProperty(\"cleanStatusTag\") String cleanStatusTag,","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"                                @JsonProperty(\"tag\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"        this.residenceName \u003d residenceName;","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"        this.residenceAddress \u003d residenceAddress;","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"        this.cleanStatusTag \u003d cleanStatusTag;","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        if (bookings !\u003d null) {","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"            this.bookingList.addAll(bookings);","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"     * Converts a given {@code Residence} into this class for Jackson use.","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"    public JsonAdaptedResidence(Residence source) {","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"        residenceName \u003d source.getResidenceName().getValue();","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"        residenceAddress \u003d source.getResidenceAddress().getValue();","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"        cleanStatusTag \u003d source.getCleanStatusTag().getValue();","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"        bookingList.addAll(source.getBookingList().getValue().stream()","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"                .map(JsonAdaptedBooking::new)","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"     * Converts this Jackson-friendly adapted residence object into the model\u0027s {@code Residence} object.","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"    public Residence toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"        final List\u003cTag\u003e residenceTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"            residenceTags.add(tag.toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"        final List\u003cBooking\u003e residenceBookingList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"        for (JsonAdaptedBooking booking : bookingList) {","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"            residenceBookingList.add(booking.toModelType());","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"awzhenyi"},"content":"        if (residenceName \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"awzhenyi"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"awzhenyi"},"content":"                    ResidenceName.class.getSimpleName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"awzhenyi"},"content":"        if (!ResidenceName.isValidResidenceName(residenceName)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"awzhenyi"},"content":"            throw new IllegalValueException(ResidenceName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"        final ResidenceName modelResidenceName \u003d new ResidenceName(residenceName);","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"        if (residenceAddress \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"awzhenyi"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"awzhenyi"},"content":"                    ResidenceAddress.class.getSimpleName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"awzhenyi"},"content":"        if (!ResidenceAddress.isValidResidenceAddress(residenceAddress)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"awzhenyi"},"content":"            throw new IllegalValueException(ResidenceAddress.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"awzhenyi"},"content":"        final ResidenceAddress modelAddress \u003d new ResidenceAddress(residenceAddress);","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"awzhenyi"},"content":"        //might need to do valid and null check for booking details but skip first","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"        final BookingList modelBookingList \u003d new BookingList(residenceBookingList);","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"VRSoorya"},"content":"        final CleanStatusTag modelCleanStatusTag \u003d new CleanStatusTag(cleanStatusTag);","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"awzhenyi"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(residenceTags);","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"        return new Residence(modelResidenceName, modelAddress, modelBookingList, modelCleanStatusTag, modelTags);","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"whatthelump":1,"awzhenyi":79,"VRSoorya":31}},{"path":"src/main/java/seedu/address/storage/JsonResidenceTrackerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ReadOnlyResidenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":" * A class to access ResidenceTracker data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"public class JsonResidenceTrackerStorage implements ResidenceTrackerStorage {","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonResidenceTrackerStorage.class);","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"whatthelump"},"content":"    public JsonResidenceTrackerStorage(Path filePath) {","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"    public Path getResidenceTrackerFilePath() {","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"whatthelump"},"content":"    public Optional\u003cReadOnlyResidenceTracker\u003e readResidenceTracker() throws DataConversionException {","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"whatthelump"},"content":"        return readResidenceTracker(filePath);","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"whatthelump"},"content":"     * Similar to {@link #readResidenceTracker()}.","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"whatthelump"},"content":"    public Optional\u003cReadOnlyResidenceTracker\u003e readResidenceTracker(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        Optional\u003cJsonSerializableResidenceTracker\u003e jsonResidenceTracker \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"whatthelump"},"content":"                filePath, JsonSerializableResidenceTracker.class);","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"        if (!jsonResidenceTracker.isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"            return Optional.of(jsonResidenceTracker.get().toModelType());","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"whatthelump"},"content":"    public void saveResidenceTracker(ReadOnlyResidenceTracker residenceTracker) throws IOException {","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"whatthelump"},"content":"        saveResidenceTracker(residenceTracker, filePath);","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"whatthelump"},"content":"     * Similar to {@link #saveResidenceTracker(ReadOnlyResidenceTracker)}.","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"whatthelump"},"content":"    public void saveResidenceTracker(ReadOnlyResidenceTracker residenceTracker, Path filePath) throws IOException {","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"whatthelump"},"content":"        requireNonNull(residenceTracker);","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"whatthelump"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableResidenceTracker(residenceTracker), filePath);","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"whatthelump":17,"-":60,"VRSoorya":3}},{"path":"src/main/java/seedu/address/storage/JsonSerializableResidenceTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ReadOnlyResidenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ResidenceTracker;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":" * An Immutable ResidenceTracker that is serializable to JSON format.","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"whatthelump"},"content":"@JsonRootName(value \u003d \"residencetracker\")","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"class JsonSerializableResidenceTracker {","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"    public static final String MESSAGE_DUPLICATE_RESIDENCE \u003d \"Residences list contains duplicate residences(s).\";","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"    private final List\u003cJsonAdaptedResidence\u003e residences \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"     * Constructs a {@code JsonSerializableResidenceTracker} with the given residences.","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"    public JsonSerializableResidenceTracker(@JsonProperty(\"residences\") List\u003cJsonAdaptedResidence\u003e residences) {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"        this.residences.addAll(residences);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"     * Converts a given {@code ReadOnlyResidenceTracker} into this class for Jackson use.","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"whatthelump"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableResidenceTracker}.","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"whatthelump"},"content":"    public JsonSerializableResidenceTracker(ReadOnlyResidenceTracker source) {","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"        residences.addAll(source.getResidenceList()","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"                .stream().map(JsonAdaptedResidence::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"     * Converts residences into the model\u0027s {@code ResidenceTracker} object.","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"whatthelump"},"content":"    public ResidenceTracker toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"whatthelump"},"content":"        ResidenceTracker residenceTracker \u003d new ResidenceTracker();","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"        for (JsonAdaptedResidence jsonAdaptedResidence : residences) {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"            Residence residence \u003d jsonAdaptedResidence.toModelType();","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"            if (residenceTracker.hasResidence(residence)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_RESIDENCE);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"            residenceTracker.addResidence(residence);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"whatthelump"},"content":"        return residenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"whatthelump":10,"awzhenyi":14,"-":36,"VRSoorya":1}},{"path":"src/main/java/seedu/address/storage/ResidenceTrackerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ReadOnlyResidenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":" * Represents a storage for {@link seedu.address.model.ResidenceTracker}.","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"public interface ResidenceTrackerStorage {","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"    Path getResidenceTrackerFilePath();","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"whatthelump"},"content":"     * Returns ResidenceTracker data as a {@link ReadOnlyResidenceTracker}.","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"whatthelump"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"whatthelump"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"whatthelump"},"content":"    Optional\u003cReadOnlyResidenceTracker\u003e readResidenceTracker() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"     * @see #getResidenceTrackerFilePath()","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"whatthelump"},"content":"    Optional\u003cReadOnlyResidenceTracker\u003e readResidenceTracker(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"     * Saves the given {@link ReadOnlyResidenceTracker} to the storage.","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"whatthelump"},"content":"     * @param residenceTracker cannot be null.","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"whatthelump"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"whatthelump"},"content":"    void saveResidenceTracker(ReadOnlyResidenceTracker residenceTracker) throws IOException;","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"whatthelump"},"content":"     * @see #saveResidenceTracker(ReadOnlyResidenceTracker)","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"whatthelump"},"content":"    void saveResidenceTracker(ReadOnlyResidenceTracker residenceTracker, Path filePath) throws IOException;","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"whatthelump"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"whatthelump":44,"awzhenyi":1}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ReadOnlyResidenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"public interface Storage extends ResidenceTrackerStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"whatthelump"},"content":"    Path getResidenceTrackerFilePath();","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"    Optional\u003cReadOnlyResidenceTracker\u003e readResidenceTracker() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"    void saveResidenceTracker(ReadOnlyResidenceTracker residenceTracker) throws IOException;","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"whatthelump":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ReadOnlyResidenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":" * Manages storage of ResidenceTracker data in local storage.","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"    private ResidenceTrackerStorage residenceTrackerStorage;","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"whatthelump"},"content":"     * Creates a {@code StorageManager} with the given {@code ResidenceTrackerStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"whatthelump"},"content":"    public StorageManager(ResidenceTrackerStorage residenceTrackerStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"whatthelump"},"content":"        this.residenceTrackerStorage \u003d residenceTrackerStorage;","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ResidenceTracker methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"whatthelump"},"content":"    public Path getResidenceTrackerFilePath() {","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"whatthelump"},"content":"        return residenceTrackerStorage.getResidenceTrackerFilePath();","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"whatthelump"},"content":"    public Optional\u003cReadOnlyResidenceTracker\u003e readResidenceTracker() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"whatthelump"},"content":"        return readResidenceTracker(residenceTrackerStorage.getResidenceTrackerFilePath());","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"whatthelump"},"content":"    public Optional\u003cReadOnlyResidenceTracker\u003e readResidenceTracker(Path filePath)","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"whatthelump"},"content":"        throws DataConversionException, IOException {","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"whatthelump"},"content":"        return residenceTrackerStorage.readResidenceTracker(filePath);","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"whatthelump"},"content":"    public void saveResidenceTracker(ReadOnlyResidenceTracker residenceTracker) throws IOException {","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"whatthelump"},"content":"        saveResidenceTracker(residenceTracker, residenceTrackerStorage.getResidenceTrackerFilePath());","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"whatthelump"},"content":"    public void saveResidenceTracker(ReadOnlyResidenceTracker residenceTracker, Path filePath) throws IOException {","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"whatthelump"},"content":"        residenceTrackerStorage.saveResidenceTracker(residenceTracker, filePath);","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whatthelump":17,"jaredtengsw":1,"-":62}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.logic.commands.AddBookingCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.logic.commands.DeleteBookingCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.logic.commands.EditBookingCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.logic.commands.RemindCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.logic.commands.StatusCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103-t16-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jaredtengsw"},"content":"    public static final String ADD_PROMPT \u003d AddCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"whatthelump"},"content":"                                          + \" - Adds a residence into ResidenceTracker. If a parameter is specified \"","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"                                          + \"multiple times, only the last occurrence will be taken.\"","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"                                          + \"\\nEnter \\\"\" + AddCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"                                          + \" \" + CliSyntax.PREFIX_NAME + \"NAME_OF_RESIDENCE \"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"                                          + CliSyntax.PREFIX_RESIDENCE_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"                                          + \"[\" + CliSyntax.PREFIX_CLEAN_STATUS_TAG + \"VALID_CLEAN_STATUS]\"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"                                          + \" [\" + CliSyntax.PREFIX_TAG + \"TAG]...\\\"\"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"                                          + \"\\nExample: \" + AddCommand.getCommandWord() + \" \"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"                                          + CliSyntax.PREFIX_NAME + \"Clementi HDB \"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"                                          + CliSyntax.PREFIX_RESIDENCE_ADDRESS","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"                                          + \"459A Clementi Ave 3, #04-257, S121459 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"                                          + CliSyntax.PREFIX_CLEAN_STATUS_TAG + \"n \"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"                                          + CliSyntax.PREFIX_TAG + \"Reserved\\n\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"    public static final String ADDB_PROMPT \u003d AddBookingCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"whatthelump"},"content":"                                           + \" - Adds a booking to a residence. If a parameter is specified \"","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"whatthelump"},"content":"                                           + \"multiple times, only the last occurrence will be taken.\"","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"                                           + \"\\nEnter \\\"\"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"whatthelump"},"content":"                                           + AddBookingCommand.getCommandWord() + \" RESIDENCE_INDEX \"","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"                                           + CliSyntax.PREFIX_NAME + \"NAME_OF_BOOKER \"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"                                           + CliSyntax.PREFIX_PHONE + \"PHONE_OF_BOOKER \"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"                                           + CliSyntax.PREFIX_BOOKING_START_DATE + \"START_TIME \"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"                                           + CliSyntax.PREFIX_BOOKING_END_DATE + \"END_TIME\\\"\"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"                                           + \"\\nExample: \" + AddBookingCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"whatthelump"},"content":"                                           + \" 1 \" + CliSyntax.PREFIX_NAME + \"John \"","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"                                           + CliSyntax.PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"                                           + CliSyntax.PREFIX_BOOKING_START_DATE + \"01-01-2021 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"                                           + CliSyntax.PREFIX_BOOKING_END_DATE + \"02-01-2021\\n\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"    public static final String CLEAR_PROMPT \u003d ClearCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"                                            + \" - Clears all entries from the residence tracker.\"","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"\\nEnter \\\"\" + ClearCommand.getCommandWord() + \"\\\"\\n\\n\";","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"    public static final String DELETE_PROMPT \u003d DeleteCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"whatthelump"},"content":"                                             + \" - Deletes the specified residence from the list of residences \"","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"                                             + \"based on index.\"","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"jaredtengsw"},"content":"                                             + \"\\nEnter \\\"\" + DeleteCommand.getCommandWord() + \" INDEX\\\"\"","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"whatthelump"},"content":"                                             + \"\\nExample: \" + DeleteCommand.getCommandWord() + \" 3\\n\\n\";","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"    public static final String DELETEB_PROMPT \u003d DeleteBookingCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"whatthelump"},"content":"                                              + \" - Deletes the specified booking from the specified residence \"","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"whatthelump"},"content":"                                              + \"based on index.\"","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"                                              + \"\\nEnter \\\"\" + DeleteBookingCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"                                              + \" \" + CliSyntax.PREFIX_RESIDENCE + \"RESIDENCE_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"                                              + CliSyntax.PREFIX_BOOKING + \"BOOKING_INDEX\\\"\"","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"                                              + \"\\nExample: \" + DeleteBookingCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"                                              + \" \" + CliSyntax.PREFIX_RESIDENCE + \"3 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"whatthelump"},"content":"                                              + CliSyntax.PREFIX_BOOKING + \"2\\n\\n\";","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":"    public static final String EDIT_PROMPT \u003d EditCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":"                                           + \" - Edits fields of an existing residence (other than bookings).\"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":"                                           + \"\\nEnter \\\"\" + EditCommand.getCommandWord() + \" INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":"                                           + CliSyntax.PREFIX_CLEAN_STATUS_TAG + \"n\\\"\"","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"                                           + \"\\nExample: \" + EditCommand.getCommandWord() + \" 2 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"                                           + CliSyntax.PREFIX_CLEAN_STATUS_TAG + \"n\\n\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":"    public static final String EDITB_PROMPT \u003d EditBookingCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":"                                            + \" - Edits the details of the booking identified by \"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"booking index of the residence identified \"","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"based on the residence\u0027s index provided. \"","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"\\nExisting values will be overwritten by the input values.\"","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"\\nEnter \\\"\" + EditBookingCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"jaredtengsw"},"content":"                                            + \" \" + CliSyntax.PREFIX_RESIDENCE + \" RESIDENCE_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"jaredtengsw"},"content":"                                            + CliSyntax.PREFIX_BOOKING + \" BOOKING_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"[\" + CliSyntax.PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"[\" + CliSyntax.PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"[\" + CliSyntax.PREFIX_BOOKING_START_DATE + \"START_DATE] \"","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"[\" + CliSyntax.PREFIX_BOOKING_END_DATE + \"END_DATE]\\\"\"","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"jaredtengsw"},"content":"                                            + \"\\nExample: \" + EditBookingCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"jaredtengsw"},"content":"                                            + \" \" + CliSyntax.PREFIX_RESIDENCE + \"1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"jaredtengsw"},"content":"                                            + CliSyntax.PREFIX_BOOKING + \"1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"jaredtengsw"},"content":"                                            + CliSyntax.PREFIX_BOOKING_START_DATE + \"01-01-2020\\n\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"jaredtengsw"},"content":"    public static final String STATUS_PROMPT \u003d StatusCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"jaredtengsw"},"content":"                                             + \" - Updates multiple residences\u0027 clean status \"","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"jaredtengsw"},"content":"                                             + \"by the index number used in the displayed residence list.\"","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"jaredtengsw"},"content":"                                             + \"\\nEnter \\\"\" + StatusCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"jaredtengsw"},"content":"                                             + \"clean INDEX1 INDEX2 ...\\\"\"","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"jaredtengsw"},"content":"                                             + \"\\n Example: \" + StatusCommand.getCommandWord() + \" clean 1 2 4\\n\\n\";","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"jaredtengsw"},"content":"    public static final String FIND_PROMPT \u003d FindCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"jaredtengsw"},"content":"                                           + \" - Finds residences whose name contains the given keyword.\"","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"jaredtengsw"},"content":"                                           + \"\\nEnter \\\"\" + FindCommand.getCommandWord() + \" KEYWORDS\\\"\"","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"jaredtengsw"},"content":"                                           + \"\\nExample: \" + FindCommand.getCommandWord() + \" Heights Condo\\n\\n\";","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"jaredtengsw"},"content":"    public static final String LIST_PROMPT \u003d ListCommand.getCommandWord()","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"jaredtengsw"},"content":"                                           + \" - Shows a list of all residences in ResidenceTracker.\"","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"jaredtengsw"},"content":"                                           + \"\\nEnter \\\"\" + ListCommand.getCommandWord() + \"\\\"\\n\\n\";","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"VRSoorya"},"content":"    public static final String REMIND_PROMPT \u003d RemindCommand.getCommandWord()","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"VRSoorya"},"content":"                                            + \" - Shows a list of residences with bookings starting in the next 7 days.\"","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"VRSoorya"},"content":"                                            + \"\\nEnter \\\"\" + RemindCommand.getCommandWord() + \"\\\"\\n\\n\";","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"jaredtengsw"},"content":"    public static final String EXIT_PROMPT \u003d ExitCommand.getCommandWord() + \" - Exits the program.\"","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"jaredtengsw"},"content":"                                           + \"\\nEnter \\\"\" + ExitCommand.getCommandWord() + \"\\\"\\n\\n\";","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"jaredtengsw"},"content":"    public static final String HELP_MESSAGE \u003d \"List of commands:\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"jaredtengsw"},"content":"                                            + ADD_PROMPT","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"whatthelump"},"content":"                                            + ADDB_PROMPT","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"jaredtengsw"},"content":"                                            + CLEAR_PROMPT","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"jaredtengsw"},"content":"                                            + DELETE_PROMPT","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"whatthelump"},"content":"                                            + DELETEB_PROMPT","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"jaredtengsw"},"content":"                                            + EDIT_PROMPT","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"jaredtengsw"},"content":"                                            + EDITB_PROMPT","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"jaredtengsw"},"content":"                                            + STATUS_PROMPT","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"jaredtengsw"},"content":"                                            + FIND_PROMPT","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"jaredtengsw"},"content":"                                            + LIST_PROMPT","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"VRSoorya"},"content":"                                            + REMIND_PROMPT","lastModifiedDate":"2021-04-01"},{"lineNumber":145,"author":{"gitId":"jaredtengsw"},"content":"                                            + EXIT_PROMPT;","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"whatthelump"},"content":"    public static final String URL_MESSAGE \u003d \"For more info, refer to user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2021-04-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"jaredtengsw"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"jaredtengsw"},"content":"    private Label urlMessage;","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":169,"author":{"gitId":"jaredtengsw"},"content":"        urlMessage.setText(URL_MESSAGE);","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"whatthelump":17,"jaredtengsw":111,"-":100,"VRSoorya":6}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"    private ResidenceListPanel residenceListPanel;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"    private StackPane residenceListPanelPlaceholder;","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"awzhenyi"},"content":"        residenceListPanel \u003d new ResidenceListPanel(logic.getFilteredResidenceList());","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"jaredtengsw"},"content":"        residenceListPanelPlaceholder.getChildren().add(residenceListPanel.getRoot());","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"whatthelump"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getResidenceTrackerFilePath());","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"jaredtengsw"},"content":"    public ResidenceListPanel getResidenceListPanel() {","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"awzhenyi"},"content":"        return residenceListPanel;","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"whatthelump":1,"awzhenyi":3,"jaredtengsw":3,"-":189}},{"path":"src/main/java/seedu/address/ui/ResidenceCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"public class ResidenceCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"    private static final String FXML \u003d \"ResidenceListCard.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"    public final Residence residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"    private LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"    private Label name;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"    private Label id;","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"    private Label address;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"    private Label bookingListTitle;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"    @FXML","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"    private FlowPane bookingTitlePane;","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"    @FXML","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"    private FlowPane bookingListPane;","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"    private FlowPane cleanStatusTags;","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"    private ScrollPane bookingListScrollPane;","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"    private VBox bookingListVBox;","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"    private AnchorPane anchorPane;","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"    @FXML","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"    private ScrollPane tagsScrollPane;","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"     * Creates a {@code ResidenceCode} with the given {@code residence} and index to display.","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"    public ResidenceCard(Residence residence, int displayedIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"        this.residence \u003d residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"        name.setText(residence.getResidenceName().getValue());","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"        address.setText(residence.getResidenceAddress().getValue());","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"        bookingListTitle.setText(\"BOOKINGS\");","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"        cleanStatusTags.getChildren().add(new Label(residence.getCleanStatusTag().getValue()));","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"        residence.getTags().stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":"        ObservableList\u003cBooking\u003e bookingList \u003d residence.getBookingList().getValue();","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"        for (Booking booking : bookingList) {","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"            Label label \u003d new Label(\"  \"","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"                    + String.valueOf(bookingList.indexOf(booking) + 1)","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"                    + \". \"","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"jaredtengsw"},"content":"                    + booking.toString());","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"jaredtengsw"},"content":"            if (booking.getEnd().compareTo(today) \u003e 0 \u0026\u0026 booking.getStart().compareTo(today) \u003e 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"jaredtengsw"},"content":"                //green for upcoming bookings","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"jaredtengsw"},"content":"                label.setBackground(new Background(new BackgroundFill(Color.web(\"#adddce\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"jaredtengsw"},"content":"                        new CornerRadii(0.0),","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"                        new Insets(0.0))));","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"jaredtengsw"},"content":"            } else if (booking.getEnd().compareTo(today) \u003e 0 \u0026\u0026 booking.getStart().compareTo(today) \u003c\u003d 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"jaredtengsw"},"content":"                //orange for occurring bookings","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"jaredtengsw"},"content":"                label.setBackground(new Background(new BackgroundFill(Color.web(\"#fbd7be\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"jaredtengsw"},"content":"                        new CornerRadii(0.0),","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"jaredtengsw"},"content":"                        new Insets(0.0))));","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"jaredtengsw"},"content":"            } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"jaredtengsw"},"content":"                //red for past/expired bookings","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"jaredtengsw"},"content":"                label.setBackground(new Background(new BackgroundFill(Color.web(\"#f6bbc2\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"jaredtengsw"},"content":"                        new CornerRadii(0.0),","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"jaredtengsw"},"content":"                        new Insets(0.0))));","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"jaredtengsw"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"jaredtengsw"},"content":"            HBox holder \u003d new HBox();","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"jaredtengsw"},"content":"            holder.getChildren().add(label);","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"jaredtengsw"},"content":"            bookingListVBox.getChildren().add(holder);","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"jaredtengsw"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"awzhenyi"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"awzhenyi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"awzhenyi"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"awzhenyi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"awzhenyi"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"awzhenyi"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"awzhenyi"},"content":"        if (!(other instanceof ResidenceCard)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"awzhenyi"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"awzhenyi"},"content":"        // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"awzhenyi"},"content":"        ResidenceCard card \u003d (ResidenceCard) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"awzhenyi"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"awzhenyi"},"content":"                \u0026\u0026 residence.equals(card.residence);","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"awzhenyi":61,"jaredtengsw":58,"VRSoorya":4}},{"path":"src/main/java/seedu/address/ui/ResidenceListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"public class ResidenceListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"    private static final String FXML \u003d \"ResidenceListPanel.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ResidenceListPanel.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"jaredtengsw"},"content":"    @FXML","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"    private ListView\u003cResidence\u003e residenceListView;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    public ResidenceListPanel(ObservableList\u003cResidence\u003e residenceList) {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"        residenceListView.setItems(residenceList);","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"        residenceListView.setCellFactory(listView -\u003e new ResidenceListPanel.ResidenceListViewCell());","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"    class ResidenceListViewCell extends ListCell\u003cResidence\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"        protected void updateItem(Residence residence, boolean empty) {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"            super.updateItem(residence, empty);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"            if (empty || residence \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"                setText(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"            } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"                setGraphic(new ResidenceCard(residence, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"awzhenyi":45,"jaredtengsw":1}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/residence_tracker.png\";","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wangtao0717":1,"-":88}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-color: derive(#FFFAFA, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"    background-color: #FFFAFA; /* Used in the default.html file */","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"    -fx-control-inner-background: #FAEBD7;","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-color: derive(#C2DAF2, 20%);","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-image:url(/images/background.png);","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-repeat:no-repeat ;","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-size:100% 100%;","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-attachment: fixed;","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-image:url(/images/background.png);","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-repeat:no-repeat ;","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-size:100% 100%;","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-attachment: fixed;","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"wangtao0717"},"content":"    -fx-border-width: 4;","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"wangtao0717"},"content":"    -fx-border-style: dashed;","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"wangtao0717"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"wangtao0717"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":148,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-image:url(/images/background.png);","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-repeat:no-repeat ;","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-size:100% 100%;","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-attachment: fixed;","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":155,"author":{"gitId":"wangtao0717"},"content":"     -fx-background-color: transparent;","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"wangtao0717"},"content":"     -fx-border-color: transparent;","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-image:url(/images/background.png);","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-repeat:no-repeat ;","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-size:100% 100%;","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-attachment: fixed;","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"wangtao0717"},"content":"     -fx-border-top-width: 2px;","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-color: #53868B;","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":172,"author":{"gitId":"wangtao0717"},"content":"    -fx-text-fill: black;;","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-color: #528B8B;","lastModifiedDate":"2021-03-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-color: derive(#BFCDE7, 30%);","lastModifiedDate":"2021-03-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-color: derive(#F4E8F6, 50%);","lastModifiedDate":"2021-03-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"wangtao0717"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-03-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-color: #F0F8FF;","lastModifiedDate":"2021-03-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"wangtao0717"},"content":"    -fx-text-fill: #452e52;","lastModifiedDate":"2021-03-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-color: \ttransparent;","lastModifiedDate":"2021-03-15"},{"lineNumber":356,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-image:url(/images/resultBar.png);","lastModifiedDate":"2021-03-15"},{"lineNumber":357,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-repeat:no-repeat ;","lastModifiedDate":"2021-03-15"},{"lineNumber":358,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-size:100% 100%;","lastModifiedDate":"2021-03-15"},{"lineNumber":359,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-attachment: fixed;","lastModifiedDate":"2021-03-15"},{"lineNumber":360,"author":{"gitId":"wangtao0717"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2021-03-15"},{"lineNumber":361,"author":{"gitId":"wangtao0717"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":362,"author":{"gitId":"wangtao0717"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-15"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"wangtao0717"},"content":"#cleanStatusTags {","lastModifiedDate":"2021-03-06"},{"lineNumber":367,"author":{"gitId":"wangtao0717"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-03-06"},{"lineNumber":368,"author":{"gitId":"wangtao0717"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-03-06"},{"lineNumber":369,"author":{"gitId":"wangtao0717"},"content":"}","lastModifiedDate":"2021-03-06"},{"lineNumber":370,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":371,"author":{"gitId":"wangtao0717"},"content":"#cleanStatusTags .label {","lastModifiedDate":"2021-03-06"},{"lineNumber":372,"author":{"gitId":"wangtao0717"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-06"},{"lineNumber":373,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-color: #65357e;","lastModifiedDate":"2021-03-15"},{"lineNumber":374,"author":{"gitId":"wangtao0717"},"content":"    -fx-padding: 1 3 1 5;","lastModifiedDate":"2021-03-06"},{"lineNumber":375,"author":{"gitId":"wangtao0717"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-06"},{"lineNumber":376,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-06"},{"lineNumber":377,"author":{"gitId":"wangtao0717"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2021-03-15"},{"lineNumber":378,"author":{"gitId":"wangtao0717"},"content":"}","lastModifiedDate":"2021-03-06"},{"lineNumber":379,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":380,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"wangtao0717"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2021-03-15"},{"lineNumber":392,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":393,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":394,"author":{"gitId":"jaredtengsw"},"content":"#bookingListPane .label {","lastModifiedDate":"2021-03-31"},{"lineNumber":395,"author":{"gitId":"jaredtengsw"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2021-03-27"},{"lineNumber":396,"author":{"gitId":"jaredtengsw"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2021-03-27"},{"lineNumber":397,"author":{"gitId":"jaredtengsw"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":398,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":399,"author":{"gitId":"jaredtengsw"},"content":"#bookingTitlePane .label {","lastModifiedDate":"2021-03-27"},{"lineNumber":400,"author":{"gitId":"jaredtengsw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-27"},{"lineNumber":401,"author":{"gitId":"jaredtengsw"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-03-27"},{"lineNumber":402,"author":{"gitId":"jaredtengsw"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":403,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":404,"author":{"gitId":"jaredtengsw"},"content":"#bookingListScrollPane {","lastModifiedDate":"2021-03-31"},{"lineNumber":405,"author":{"gitId":"jaredtengsw"},"content":"    -fx-border-color: #7772b6;","lastModifiedDate":"2021-03-31"},{"lineNumber":406,"author":{"gitId":"jaredtengsw"},"content":"    -fx-border-radius: 2px;","lastModifiedDate":"2021-03-31"},{"lineNumber":407,"author":{"gitId":"jaredtengsw"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":408,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":409,"author":{"gitId":"jaredtengsw"},"content":"#bookingListScrollPane .viewport {","lastModifiedDate":"2021-03-31"},{"lineNumber":410,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-image: url(/images/background.png);","lastModifiedDate":"2021-03-28"},{"lineNumber":411,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-repeat: no-repeat ;","lastModifiedDate":"2021-03-28"},{"lineNumber":412,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-size: 100% 100%;","lastModifiedDate":"2021-03-28"},{"lineNumber":413,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-attachment: fixed;","lastModifiedDate":"2021-03-28"},{"lineNumber":414,"author":{"gitId":"jaredtengsw"},"content":"}","lastModifiedDate":"2021-03-28"},{"lineNumber":415,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":416,"author":{"gitId":"jaredtengsw"},"content":"#bookingListScrollPane .scroll-bar:vertical .thumb {","lastModifiedDate":"2021-03-28"},{"lineNumber":417,"author":{"gitId":"jaredtengsw"},"content":"    -fx-background-color: #fffef2;","lastModifiedDate":"2021-03-28"},{"lineNumber":418,"author":{"gitId":"jaredtengsw"},"content":"}","lastModifiedDate":"2021-03-28"},{"lineNumber":419,"author":{"gitId":"wangtao0717"},"content":"#bookingListScrollPane .scroll-bar:horizontal .thumb {","lastModifiedDate":"2021-03-28"},{"lineNumber":420,"author":{"gitId":"wangtao0717"},"content":"    -fx-background-color: #fffef2;","lastModifiedDate":"2021-03-28"},{"lineNumber":421,"author":{"gitId":"wangtao0717"},"content":"}","lastModifiedDate":"2021-03-28"},{"lineNumber":422,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":423,"author":{"gitId":"jaredtengsw"},"content":"#tagsScrollPane .viewport {","lastModifiedDate":"2021-04-10"},{"lineNumber":424,"author":{"gitId":"jaredtengsw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-04-10"},{"lineNumber":425,"author":{"gitId":"jaredtengsw"},"content":"}","lastModifiedDate":"2021-04-10"},{"lineNumber":426,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":427,"author":{"gitId":"jaredtengsw"},"content":"#tagsScrollPane {","lastModifiedDate":"2021-04-10"},{"lineNumber":428,"author":{"gitId":"jaredtengsw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-04-10"},{"lineNumber":429,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"jaredtengsw":29,"wangtao0717":67,"-":333}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"    -fx-background: #C2DAF2;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wangtao0717":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"jaredtengsw"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"jaredtengsw"},"content":"         \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"            \u003cScrollPane prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"               \u003ccontent\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"                     \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"               \u003c/content\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"            \u003c/ScrollPane\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"jaredtengsw"},"content":"               \u003cHBox prefHeight\u003d\"26.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"jaredtengsw"},"content":"                     \u003cLabel fx:id\u003d\"urlMessage\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jaredtengsw"},"content":"                     \u003cButton fx:id\u003d\"copyButton\" minWidth\u003d\"100.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"               \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"               \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"jaredtengsw":14,"-":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"\u003cfx:root minHeight\u003d\"500.0\" minWidth\u003d\"800.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Residence Tracker\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"        \u003cImage url\u003d\"@/images/residence_tracker.png\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"jaredtengsw"},"content":"                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"jaredtengsw"},"content":"                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"                \u003cVBox fx:id\u003d\"residenceList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"                    \u003cStackPane fx:id\u003d\"residenceListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jaredtengsw":8,"wangtao0717":2,"-":48}},{"path":"src/main/resources/view/ResidenceListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"jaredtengsw"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"jaredtengsw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" minWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"jaredtengsw"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"75.0\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"jaredtengsw"},"content":"        \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" GridPane.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"                \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" minWidth\u003d\"280.0\" prefWidth\u003d\"300.0\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"jaredtengsw"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"                    \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"                        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"                            \u003cminWidth\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"                                \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"                                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"                            \u003c/minWidth\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"                        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"                    \u003c/HBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"                    \u003cFlowPane fx:id\u003d\"cleanStatusTags\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"               \u003cScrollPane fx:id\u003d\"tagsScrollPane\" hbarPolicy\u003d\"NEVER\" maxWidth\u003d\"270.0\" minWidth\u003d\"270.0\" prefWidth\u003d\"270.0\"\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"jaredtengsw"},"content":"                  \u003ccontent\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"                          \u003cFlowPane fx:id\u003d\"tags\" maxWidth\u003d\"280.0\" minWidth\u003d\"280.0\" prefWidth\u003d\"280.0\" /\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"                  \u003c/content\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"               \u003c/ScrollPane\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"                    \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"jaredtengsw"},"content":"                \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"325.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"jaredtengsw"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"jaredtengsw"},"content":"                        \u003cFlowPane fx:id\u003d\"bookingTitlePane\" minWidth\u003d\"25.0\" prefWidth\u003d\"25.0\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"jaredtengsw"},"content":"                                \u003cLabel fx:id\u003d\"bookingListTitle\" alignment\u003d\"CENTER\" prefHeight\u003d\"25.0\" prefWidth\u003d\"90.0\" rotate\u003d\"-90.0\" snapToPixel\u003d\"false\" text\u003d\"Title\" textFill\u003d\"white\" translateX\u003d\"-40.0\" translateY\u003d\"40.0\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"jaredtengsw"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"jaredtengsw"},"content":"                        \u003c/FlowPane\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"jaredtengsw"},"content":"                        \u003cAnchorPane fx:id\u003d\"anchorPane\" minHeight\u003d\"105.0\" prefHeight\u003d\"105.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-background-color: transparent;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"jaredtengsw"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"jaredtengsw"},"content":"                        \u003cScrollPane fx:id\u003d\"bookingListScrollPane\" fitToWidth\u003d\"true\" minHeight\u003d\"95.0\" prefHeight\u003d\"95.0\" prefWidth\u003d\"275.0\" translateY\u003d\"5.0\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"8.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"jaredtengsw"},"content":"                           \u003ccontent\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"                                          \u003cFlowPane fx:id\u003d\"bookingListPane\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"jaredtengsw"},"content":"                                 \u003cchildren\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"jaredtengsw"},"content":"                                    \u003cVBox fx:id\u003d\"bookingListVBox\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"jaredtengsw"},"content":"                                 \u003c/children\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"                           \u003c/content\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"                        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"jaredtengsw"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"jaredtengsw"},"content":"                        \u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"jaredtengsw"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"jaredtengsw"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"jaredtengsw"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"jaredtengsw"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"awzhenyi":28,"jaredtengsw":42}},{"path":"src/main/resources/view/ResidenceListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"    \u003cListView fx:id\u003d\"residenceListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"awzhenyi":8}},{"path":"src/test/data/JsonResidenceTrackerStorageTest/invalidAndValidResidenceResidenceTracker.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"  \"residences\" : [ {","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"    \"bookingList\" : [ {","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"      \"name\" : \"933230\",","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"      \"phone\" : \"092382\",","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"      \"start\" : \"2008-08-08\",","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"      \"end\" : \"2008-09-09\"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"    } ],","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    \"cleanStatusTag\" : \"Unclean\",","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    \"tags\" : [ \"Booked\" ],","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"    \"residenceName\" : \"HDB\",","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    \"residenceAddress\" : \"Blk 30 Geylang Street 29, #06-40\"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    \"bookingList\" : [ {","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"      \"name\" : \"933230\",","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"      \"phone\" : \"0923^@82\",","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"      \"start\" : \"2008-08-08\",","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"      \"end\" : \"2008-09-09\"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    } ],","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    \"cleanStatusTag\" : \"Clean\",","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    \"tags\" : [ \"Reserved\" ],","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"    \"residenceName\" : \"Condo\",","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    \"residenceAddress\" : \"Blk 45 Tampines Street 29, #08-01\"","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  }]","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"awzhenyi":5,"-":4,"VRSoorya":16}},{"path":"src/test/data/JsonResidenceTrackerStorageTest/invalidResidenceResidenceTracker.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"  \"residences\" : [ {","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"    \"bookingList\" : [ ],","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"    \"cleanStatusTag\" : \"Unclean\",","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"    \"tags\" : [ \"Boo ked\" ],","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"    \"residenceName\" : \"HDB\",","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"    \"residenceAddress\" : \"Blk 30 Geylang Street 29, #06-40\"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"awzhenyi":3,"-":3,"VRSoorya":3}},{"path":"src/test/data/JsonSerializableResidenceTrackerTest/duplicateResidenceResidenceTracker.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"  \"residences\" : [ {","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"    \"bookingList\" : [ {","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"      \"name\" : \"933230\",","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"      \"phone\" : \"092382\",","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"      \"start\" : \"2008-08-08\",","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"      \"end\" : \"2008-09-09\"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"    } ],","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    \"cleanStatusTag\" : \"Unclean\",","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    \"tags\" : [ \"Reserved\" ],","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    \"residenceName\" : \"HDB\",","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    \"residenceAddress\" : \"Blk 30 Geylang Street 29, #06-40\"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    \"bookingList\" : [ {","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"      \"name\" : \"933230\",","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"      \"phone\" : \"092382\",","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"      \"start\" : \"2008-08-08\",","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"      \"end\" : \"2008-09-09\"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    } ],","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    \"cleanStatusTag\" : \"Clean\",","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    \"tags\" : [ \"Booked\" ],","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    \"residenceName\" : \"HDB\",","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    \"residenceAddress\" : \"Blk 31 Geylang Street 29, #06-40\"","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  }]","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":4,"VRSoorya":21}},{"path":"src/test/data/JsonSerializableResidenceTrackerTest/invalidResidenceResidenceTracker.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"  \"residences\" : [ {","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"    \"bookingList\" : [ {","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"      \"name\" : \"933230\",","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"      \"phone\" : \"092382\",","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"      \"start\" : \"2008-08-08\",","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"      \"end\" : \"2008-07-07\"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"    } ],","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    \"cleanStatusTag\" : \"Unclean\",","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    \"tags\" : [ \"Booked\" ],","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    \"residenceName\" : \"HDB\",","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    \"residenceAddress\" : \"Blk 30 Geylang Street 29, #06-40\"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":3,"VRSoorya":11}},{"path":"src/test/data/JsonSerializableResidenceTrackerTest/typicalResidencesResidenceTracker.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"  \"_comment\": \"Residence Tracker save file which contains the same Residence values as in TypicalResidence#getTypicalResidenceTracker()\",","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"  \"residences\" : [ {","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"    \"cleanStatusTag\" : \"Clean\",","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"    \"residenceName\" : \"Amber Heights\",","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"    \"residenceAddress\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"    \"bookingList\" : [{","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"      \"name\" : \"933230\",","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"      \"phone\" : \"092382\",","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"      \"start\" : \"2008-08-08\",","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"      \"end\" : \"2008-09-09\"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    }],","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    \"tags\" : [ \"valuable\" ]","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    \"cleanStatusTag\" : \"Unclean\",","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    \"residenceName\" : \"Beverly Hills\",","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    \"residenceAddress\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    \"bookingList\" : [ ],","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    \"tags\" : [ \"repair\", \"popular\" ]","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    \"cleanStatusTag\" : \"Clean\",","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    \"residenceName\" : \"Casuarina Apartment\",","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    \"residenceAddress\" : \"wall street\",","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    \"bookingList\" : [ {","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"      \"name\" : \"933230\",","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"      \"phone\" : \"092382\",","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"      \"start\" : \"2008-08-08\",","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"      \"end\" : \"2008-09-09\"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    }, {","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"      \"name\" : \"nsd\",","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"      \"phone\" : \"098\",","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"      \"start\" : \"2009-09-09\",","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"      \"end\" : \"2009-09-09\"","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    }, {","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"      \"name\" : \"cs\",","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"      \"phone\" : \"098\",","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"      \"start\" : \"2010-10-10\",","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"      \"end\" : \"2011-09-09\"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    } ],","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    \"tags\" : [ ]","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    \"cleanStatusTag\" : \"Clean\",","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"    \"residenceName\" : \"Dover Condominium\",","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    \"residenceAddress\" : \"10th street\",","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"    \"bookingList\" : [ {","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"      \"name\" : \"nsd\",","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"      \"phone\" : \"098\",","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"      \"start\" : \"2009-09-09\",","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"      \"end\" : \"2009-09-09\"","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"    }, {","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"      \"name\" : \"cs\",","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"      \"phone\" : \"098\",","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"      \"start\" : \"2010-10-10\",","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"      \"end\" : \"2011-09-09\"","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"    } ],","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"    \"tags\" : [ \"forFriends\" ]","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"    \"cleanStatusTag\" : \"Clean\",","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"    \"residenceName\" : \"Emerald Hills\",","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"    \"residenceAddress\" : \"michegan ave\",","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"    \"bookingList\" : [ ],","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"    \"tags\" : [ ]","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"    \"cleanStatusTag\" : \"Unclean\",","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"    \"residenceName\" : \"Floravale\",","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"    \"residenceAddress\" : \"little tokyo\",","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"    \"bookingList\" : [ ],","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"    \"tags\" : [ ]","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"    \"cleanStatusTag\" : \"Clean\",","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"    \"residenceName\" : \"Gem Residences\",","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"    \"residenceAddress\" : \"4th street\",","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"    \"bookingList\" : [ ],","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"    \"tags\" : [ ]","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":9,"VRSoorya":67}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"  \"addressBookFilePath\" : \"residencetracker.json\"","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"whatthelump":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"  \"addressBookFilePath\" : \"residencetracker.json\"","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"whatthelump":1,"-":10}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_RESIDENCE1;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_RESIDENCE1;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_RESERVED;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_RESERVED;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESIDENCES;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE1;","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ReadOnlyResidenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"whatthelump"},"content":"import seedu.address.storage.JsonResidenceTrackerStorage;","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.testutil.ResidenceBuilder;","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"whatthelump"},"content":"        JsonResidenceTrackerStorage residenceTrackerStorage \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"whatthelump"},"content":"                new JsonResidenceTrackerStorage(temporaryFolder.resolve(\"residenceTracker.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"whatthelump"},"content":"        StorageManager storage \u003d new StorageManager(residenceTrackerStorage, userPrefsStorage);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"whatthelump"},"content":"        // Setup LogicManager with JsonResidenceTrackerIoExceptionThrowingStub","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"whatthelump"},"content":"        JsonResidenceTrackerStorage residenceTrackerStorage \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"whatthelump"},"content":"                new JsonResidenceTrackerIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"whatthelump"},"content":"        StorageManager storage \u003d new StorageManager(residenceTrackerStorage, userPrefsStorage);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"whatthelump"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_RESIDENCE1 + ADDRESS_DESC_RESIDENCE1","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"whatthelump"},"content":"                + TAG_DESC_RESERVED;","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":"        Residence expectedResidence \u003d new ResidenceBuilder(RESIDENCE1).withTags(VALID_TAG_RESERVED).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"        expectedModel.addResidence(expectedResidence);","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"        expectedModel.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":"    public void getFilteredResidenceList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredResidenceList().remove(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"whatthelump"},"content":"        Model expectedModel \u003d new ModelManager(model.getResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"whatthelump"},"content":"    private static class JsonResidenceTrackerIoExceptionThrowingStub extends JsonResidenceTrackerStorage {","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"whatthelump"},"content":"        private JsonResidenceTrackerIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"whatthelump"},"content":"        public void saveResidenceTracker(ReadOnlyResidenceTracker residenceTracker, Path filePath) throws IOException {","lastModifiedDate":"2021-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"whatthelump":15,"awzhenyi":2,"wangtao0717":10,"-":134,"VRSoorya":3}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESIDENCES;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.getTypicalResidenceTracker;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.testutil.ResidenceBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"        model \u003d new ModelManager(getTypicalResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"    public void execute_newResidence_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        Residence validResidence \u003d new ResidenceBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"whatthelump"},"content":"        Model expectedModel \u003d new ModelManager(model.getResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        expectedModel.addResidence(validResidence);","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"        expectedModel.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        assertCommandSuccess(new AddCommand(validResidence), model,","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validResidence), expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"jaredtengsw"},"content":"    public void execute_duplicateResidence_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"        Residence residenceInList \u003d model.getResidenceTracker().getResidenceList().get(0);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"        assertCommandFailure(new AddCommand(residenceInList), model, AddCommand.MESSAGE_DUPLICATE_RESIDENCE);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"whatthelump":1,"jaredtengsw":2,"wangtao0717":2,"-":32,"VRSoorya":10}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ReadOnlyResidenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ResidenceTracker;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.testutil.ResidenceBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"    public void constructor_nullResidence_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"    public void execute_residenceAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        ModelStubAcceptingResidenceAdded modelStub \u003d new ModelStubAcceptingResidenceAdded();","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"        Residence validResidence \u003d new ResidenceBuilder().build();","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        CommandResult commandResult \u003d new AddCommand(validResidence).execute(modelStub);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validResidence), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"whatthelump"},"content":"        assertEquals(Arrays.asList(validResidence), modelStub.residencesAdded);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"whatthelump"},"content":"    public void execute_duplicateResidence_throwsCommandException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        Residence validResidence \u003d new ResidenceBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"        AddCommand addCommand \u003d new AddCommand(validResidence);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        ModelStub modelStub \u003d new ModelStubWithResidence(validResidence);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"                AddCommand.MESSAGE_DUPLICATE_RESIDENCE, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"        Residence residence1 \u003d new ResidenceBuilder().withName(\"Amber Heights\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"        Residence residence2 \u003d new ResidenceBuilder().withName(\"Beauty World\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"        AddCommand addFirstCommand \u003d new AddCommand(residence1);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"        AddCommand addSecondCommand \u003d new AddCommand(residence2);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(addFirstCommand.equals(addFirstCommand));","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(residence1);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(addFirstCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(addFirstCommand.equals(1));","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(addFirstCommand.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(addFirstCommand.equals(addSecondCommand));","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"whatthelump"},"content":"        public Path getResidenceTrackerFilePath() {","lastModifiedDate":"2021-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"whatthelump"},"content":"        public void setResidenceTrackerFilePath(Path residenceTrackerFilePath) {","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"        public void addResidence(Residence residence) {","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"whatthelump"},"content":"        public void setResidenceTracker(ReadOnlyResidenceTracker newData) {","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"whatthelump"},"content":"        public ReadOnlyResidenceTracker getResidenceTracker() {","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"VRSoorya"},"content":"        public boolean hasResidence(Residence residence) {","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"VRSoorya"},"content":"        public void deleteResidence(Residence target) {","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"VRSoorya"},"content":"        public void setResidence(Residence target, Residence editedResidence) {","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"VRSoorya"},"content":"        public ObservableList\u003cResidence\u003e getFilteredResidenceList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"VRSoorya"},"content":"        public void updateFilteredResidenceList(Predicate\u003cResidence\u003e predicate) {","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"VRSoorya"},"content":"     * A Model stub that contains a single residence.","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"VRSoorya"},"content":"    private class ModelStubWithResidence extends ModelStub {","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"VRSoorya"},"content":"        private final Residence residence;","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"VRSoorya"},"content":"        ModelStubWithResidence(Residence residence) {","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"VRSoorya"},"content":"            requireNonNull(residence);","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"VRSoorya"},"content":"            this.residence \u003d residence;","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"VRSoorya"},"content":"        public boolean hasResidence(Residence residence) {","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"VRSoorya"},"content":"            requireNonNull(residence);","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"VRSoorya"},"content":"            return this.residence.isSameResidence(residence);","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"VRSoorya"},"content":"     * A Model stub that always accept the residence being added.","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"VRSoorya"},"content":"    private class ModelStubAcceptingResidenceAdded extends ModelStub {","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"whatthelump"},"content":"        final ArrayList\u003cResidence\u003e residencesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"VRSoorya"},"content":"        public boolean hasResidence(Residence residence) {","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"VRSoorya"},"content":"            requireNonNull(residence);","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"whatthelump"},"content":"            return residencesAdded.stream().anyMatch(residence::isSameResidence);","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"VRSoorya"},"content":"        public void addResidence(Residence residence) {","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"VRSoorya"},"content":"            requireNonNull(residence);","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"whatthelump"},"content":"            residencesAdded.add(residence);","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"whatthelump"},"content":"        public ReadOnlyResidenceTracker getResidenceTracker() {","lastModifiedDate":"2021-03-11"},{"lineNumber":191,"author":{"gitId":"whatthelump"},"content":"            return new ResidenceTracker();","lastModifiedDate":"2021-03-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"whatthelump":15,"awzhenyi":2,"-":138,"VRSoorya":40}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.getTypicalResidenceTracker;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ResidenceTracker;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"    public void execute_emptyResidenceTracker_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"whatthelump"},"content":"    public void execute_nonEmptyResidenceTracker_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        Model model \u003d new ModelManager(getTypicalResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"        expectedModel.setResidenceTracker(new ResidenceTracker());","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"whatthelump":4,"-":25,"VRSoorya":3}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLEAN_STATUS_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESIDENCE_ADDRESS;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ResidenceTracker;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.testutil.EditBookingDescriptorBuilder;","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.testutil.EditResidenceDescriptorBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"    public static final String VALID_NAME_RESIDENCE1 \u003d \"Amber Park\";","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"    public static final String VALID_NAME_RESIDENCE2 \u003d \"Duxton\";","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    public static final String VALID_ADDRESS_RESIDENCE1 \u003d \"14 Amber Gardens, 439960\";","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    public static final String VALID_ADDRESS_RESIDENCE2 \u003d \"Block 50, Cantonment Rd\";","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"jaredtengsw"},"content":"    public static final String VALID_CLEAN_TAG \u003d \"y\";","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"    public static final String VALID_UNCLEAN_TAG \u003d \"n\";","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"    public static final String VALID_BOOKED_TAG \u003d \"y\";","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"    public static final String VALID_UNBOOKED_TAG \u003d \"n\";","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    public static final String VALID_TAG_RESERVED \u003d \"reserved\";","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"    public static final String VALID_TAG_REPAIR \u003d \"plumbing\";","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"whatthelump"},"content":"    public static final String VALID_PHONE_BOOKING1 \u003d \"11111111\";","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"whatthelump"},"content":"    public static final String VALID_PHONE_BOOKING2 \u003d \"22222222\";","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"whatthelump"},"content":"    public static final String VALID_NAME_BOOKING1 \u003d \"Amy\";","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"whatthelump"},"content":"    public static final String VALID_NAME_BOOKING2 \u003d \"John\";","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"whatthelump"},"content":"    public static final String VALID_BOOKING_START1 \u003d \"03-03-2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"whatthelump"},"content":"    public static final String VALID_BOOKING_START2 \u003d \"30-03-2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"whatthelump"},"content":"    public static final String VALID_BOOKING_END1 \u003d \"05-05-2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"whatthelump"},"content":"    public static final String VALID_BOOKING_END2 \u003d \"30-05-2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"    public static final LocalDate INVALID_BOOKING_END \u003d LocalDate.parse(\"01-01-1990\", DATE_TIME_FORMATTER);","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"    public static final LocalDate OVERLAP_BOOKING_DATE \u003d LocalDate.parse(\"03-03-2020\", DATE_TIME_FORMATTER);","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"    public static final LocalDate VALID_LOCALDATE_START1 \u003d LocalDate.parse(VALID_BOOKING_START1, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"    public static final LocalDate VALID_LOCALDATE_END1 \u003d LocalDate.parse(VALID_BOOKING_END1, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"    public static final String NAME_DESC_RESIDENCE1 \u003d \" \" + PREFIX_NAME + VALID_NAME_RESIDENCE1;","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"    public static final String NAME_DESC_RESIDENCE2 \u003d \" \" + PREFIX_NAME + VALID_NAME_RESIDENCE2;","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"    public static final String ADDRESS_DESC_RESIDENCE1 \u003d \" \" + PREFIX_RESIDENCE_ADDRESS + VALID_ADDRESS_RESIDENCE1;","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"    public static final String ADDRESS_DESC_RESIDENCE2 \u003d \" \" + PREFIX_RESIDENCE_ADDRESS + VALID_ADDRESS_RESIDENCE2;","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"jaredtengsw"},"content":"    public static final String TAG_DESC_BOOKED \u003d \" \" + PREFIX_TAG + VALID_BOOKED_TAG;","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"jaredtengsw"},"content":"    public static final String TAG_DESC_UNBOOKED \u003d \" \" + PREFIX_TAG + VALID_UNBOOKED_TAG;","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"    public static final String TAG_DESC_RESERVED \u003d \" \" + PREFIX_TAG + VALID_TAG_RESERVED;","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"    public static final String TAG_DESC_REPAIR \u003d \" \" + PREFIX_TAG + VALID_TAG_REPAIR;","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"    public static final String CLEAN_STATUS_DESC \u003d \" \" + PREFIX_CLEAN_STATUS_TAG + VALID_CLEAN_TAG;","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"    public static final String UNCLEAN_STATUS_DESC \u003d \" \" + PREFIX_CLEAN_STATUS_TAG + VALID_UNCLEAN_TAG;","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"whatthelump"},"content":"    public static final String PHONE_DESC_BOOKING1 \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOOKING1;","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"whatthelump"},"content":"    public static final String PHONE_DESC_BOOKING2 \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOOKING2;","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"    public static final String TENANT_NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_BOOKING1;","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"whatthelump"},"content":"    // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\";","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"whatthelump"},"content":"    // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"whatthelump"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\";","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"whatthelump"},"content":"    // empty string not allowed for addresses","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"whatthelump"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_RESIDENCE_ADDRESS;","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"whatthelump"},"content":"    // must be \u0027y\u0027 or \u0027clean\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"whatthelump"},"content":"    public static final String INVALID_CLEAN_TAG_DESC \u003d \" \" + PREFIX_CLEAN_STATUS_TAG + \"yup\";","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"whatthelump"},"content":"    // must be \u0027n\u0027 or \u0027unclean\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"whatthelump"},"content":"    public static final String INVALID_UNCLEAN_TAG_DESC \u003d \" \" + PREFIX_CLEAN_STATUS_TAG + \"CLEAN IT!!\";","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"whatthelump"},"content":"    // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"whatthelump"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"renovate*\";","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"    public static final EditCommand.EditResidenceDescriptor DESC_RESIDENCE1;","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"    public static final EditCommand.EditResidenceDescriptor DESC_RESIDENCE2;","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"    public static final EditBookingCommand.EditBookingDescriptor DESC_BOOKING1;","lastModifiedDate":"2021-04-10"},{"lineNumber":92,"author":{"gitId":"awzhenyi"},"content":"    public static final EditBookingCommand.EditBookingDescriptor DESC_BOOKING2;","lastModifiedDate":"2021-04-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"        DESC_RESIDENCE1 \u003d new EditResidenceDescriptorBuilder().withName(VALID_NAME_RESIDENCE1)","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":"                .withAddress(VALID_ADDRESS_RESIDENCE1)","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"whatthelump"},"content":"                .withCleanStatusTag(VALID_CLEAN_TAG).withTags(VALID_TAG_RESERVED).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":"        DESC_RESIDENCE2 \u003d new EditResidenceDescriptorBuilder().withName(VALID_NAME_RESIDENCE1)","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"                .withAddress(VALID_ADDRESS_RESIDENCE2)","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"whatthelump"},"content":"                .withCleanStatusTag(VALID_CLEAN_TAG).withTags(VALID_TAG_RESERVED, VALID_TAG_REPAIR).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"awzhenyi"},"content":"        DESC_BOOKING1 \u003d new EditBookingDescriptorBuilder().withName(VALID_NAME_BOOKING1)","lastModifiedDate":"2021-04-10"},{"lineNumber":102,"author":{"gitId":"awzhenyi"},"content":"                .withPhone(VALID_PHONE_BOOKING1)","lastModifiedDate":"2021-04-10"},{"lineNumber":103,"author":{"gitId":"awzhenyi"},"content":"                .withStartDate(LocalDate.parse(VALID_BOOKING_START1, DATE_TIME_FORMATTER))","lastModifiedDate":"2021-04-10"},{"lineNumber":104,"author":{"gitId":"awzhenyi"},"content":"                .withEndDate(LocalDate.parse(VALID_BOOKING_END1, DATE_TIME_FORMATTER))","lastModifiedDate":"2021-04-10"},{"lineNumber":105,"author":{"gitId":"awzhenyi"},"content":"                .build();","lastModifiedDate":"2021-04-10"},{"lineNumber":106,"author":{"gitId":"awzhenyi"},"content":"        DESC_BOOKING2 \u003d new EditBookingDescriptorBuilder().withName(VALID_NAME_BOOKING2)","lastModifiedDate":"2021-04-10"},{"lineNumber":107,"author":{"gitId":"awzhenyi"},"content":"                .withPhone(VALID_PHONE_BOOKING1)","lastModifiedDate":"2021-04-10"},{"lineNumber":108,"author":{"gitId":"awzhenyi"},"content":"                .withStartDate(LocalDate.parse(VALID_BOOKING_START2, DATE_TIME_FORMATTER))","lastModifiedDate":"2021-04-10"},{"lineNumber":109,"author":{"gitId":"awzhenyi"},"content":"                .withEndDate(LocalDate.parse(VALID_BOOKING_END2, DATE_TIME_FORMATTER))","lastModifiedDate":"2021-04-10"},{"lineNumber":110,"author":{"gitId":"awzhenyi"},"content":"                .build();","lastModifiedDate":"2021-04-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"VRSoorya"},"content":"     * - the residence tracker, filtered residence list and selected residence in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"whatthelump"},"content":"        ResidenceTracker expectedAddressBook \u003d new ResidenceTracker(actualModel.getResidenceTracker());","lastModifiedDate":"2021-03-11"},{"lineNumber":149,"author":{"gitId":"VRSoorya"},"content":"        List\u003cResidence\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredResidenceList());","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":152,"author":{"gitId":"whatthelump"},"content":"        assertEquals(expectedAddressBook, actualModel.getResidenceTracker());","lastModifiedDate":"2021-03-11"},{"lineNumber":153,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredResidenceList());","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"VRSoorya"},"content":"     * Updates {@code model}\u0027s filtered list to show only the residence at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"VRSoorya"},"content":"     * {@code model}\u0027s Residence Tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"VRSoorya"},"content":"    public static void showResidenceAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredResidenceList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"VRSoorya"},"content":"        Residence residence \u003d model.getFilteredResidenceList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"wangtao0717"},"content":"        final String[] splitName \u003d residence.getResidenceName().toString().split(\"\\\\s+\");","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"VRSoorya"},"content":"        model.updateFilteredResidenceList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(1, model.getFilteredResidenceList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"whatthelump":26,"awzhenyi":26,"jaredtengsw":5,"wangtao0717":2,"-":74,"VRSoorya":36}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showResidenceAtIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.getTypicalResidenceTracker;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    private Model model \u003d new ModelManager(getTypicalResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        Residence residenceToDelete \u003d model.getFilteredResidenceList().get(INDEX_FIRST_RESIDENCE.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_RESIDENCE);","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_RESIDENCE_SUCCESS, residenceToDelete);","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"whatthelump"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        expectedModel.deleteResidence(residenceToDelete);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredResidenceList().size() + 1);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"        showResidenceAtIndex(model, INDEX_FIRST_RESIDENCE);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"        Residence residenceToDelete \u003d model.getFilteredResidenceList().get(INDEX_FIRST_RESIDENCE.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_RESIDENCE);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_RESIDENCE_SUCCESS, residenceToDelete);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"whatthelump"},"content":"        Model expectedModel \u003d new ModelManager(model.getResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"        expectedModel.deleteResidence(residenceToDelete);","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"        showNoResidence(expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"        showResidenceAtIndex(model, INDEX_FIRST_RESIDENCE);","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getResidenceTracker().getResidenceList().size());","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"awzhenyi"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_RESIDENCE);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"awzhenyi"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_RESIDENCE);","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"awzhenyi"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_RESIDENCE);","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"    private void showNoResidence(Model model) {","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"        model.updateFilteredResidenceList(p -\u003e false);","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(model.getFilteredResidenceList().isEmpty());","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"whatthelump":2,"awzhenyi":9,"-":79,"VRSoorya":19}},{"path":"src/test/java/seedu/address/logic/commands/EditBookingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOOKING1;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOOKING2;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BOOKING_END;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OVERLAP_BOOKING_DATE;","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOOKING1;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOOKING2;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showResidenceAtIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESIDENCES;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOKING;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_RESIDENCE;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOKING;","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_RESIDENCE;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalResidences.getTypicalResidenceTracker;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.commands.EditBookingCommand.EditBookingDescriptor;","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.BookingList;","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.testutil.BookingBuilder;","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.testutil.EditBookingDescriptorBuilder;","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"public class EditBookingCommandTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"    private Model model \u003d new ModelManager(getTypicalResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"    public void execute_validResidenceIndexInvalidBookingIndexFilteredList_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"        showResidenceAtIndex(model, INDEX_FIRST_RESIDENCE);","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"        Index outOfBoundBookingIndex \u003d INDEX_FIRST_BOOKING;","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"        EditBookingCommand editBookingCommand \u003d new EditBookingCommand(INDEX_FIRST_RESIDENCE, outOfBoundBookingIndex,","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"                new EditBookingDescriptorBuilder().withName(VALID_NAME_BOOKING1).build());","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"        assertCommandFailure(editBookingCommand, model, Messages.MESSAGE_INVALID_BOOKING_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"    public void execute_invalidResidenceIndexValidBookingIndexFilteredList_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"        showResidenceAtIndex(model, INDEX_SECOND_RESIDENCE);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"        Index outOfBoundResidenceIndex \u003d INDEX_THIRD_RESIDENCE;","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"        assertTrue(outOfBoundResidenceIndex.getZeroBased() \u003c model.getResidenceTracker().getResidenceList().size());","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"        Index validBookingIndex \u003d INDEX_FIRST_BOOKING;","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"        assertTrue(outOfBoundResidenceIndex.getZeroBased() \u003c model.getResidenceTracker().getResidenceList().size());","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"        EditBookingCommand editBookingCommand \u003d new EditBookingCommand(INDEX_THIRD_RESIDENCE, validBookingIndex,","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"                new EditBookingDescriptorBuilder().withName(VALID_NAME_BOOKING1).build());","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"        assertCommandFailure(editBookingCommand, model, Messages.MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"    public void execute_validResidenceAndBookingIndex_invalidEndDate() {","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"        Index validResidenceIndex \u003d INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"        Index validBookingIndex \u003d INDEX_FIRST_BOOKING;","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"        Residence residenceToEdit \u003d model.getFilteredResidenceList().get(validResidenceIndex.getZeroBased());","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"        BookingList bookingListToEdit \u003d residenceToEdit.getBookingList();","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"        Booking bookingToEdit \u003d bookingListToEdit.getBooking(validBookingIndex.getZeroBased());","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"        Booking editedBooking \u003d new BookingBuilder(bookingToEdit).withEnd(INVALID_BOOKING_END).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"        EditBookingCommand editBookingCommand \u003d new EditBookingCommand(validResidenceIndex, validBookingIndex,","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"                new EditBookingDescriptorBuilder().withEndDate(INVALID_BOOKING_END).build());","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"        String expectedMessage \u003d EditBookingCommand.MESSAGE_NOT_VALID_START_DATE;","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"awzhenyi"},"content":"        assertCommandFailure(editBookingCommand, model, expectedMessage);","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"    public void execute_validResidenceAndBookingIndex_overlapDate() {","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"awzhenyi"},"content":"        Index validResidenceIndex \u003d INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"        Index validBookingIndex \u003d INDEX_SECOND_BOOKING;","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"awzhenyi"},"content":"        Residence residenceToEdit \u003d model.getFilteredResidenceList().get(validResidenceIndex.getZeroBased());","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"awzhenyi"},"content":"        BookingList bookingListToEdit \u003d residenceToEdit.getBookingList();","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"awzhenyi"},"content":"        Booking bookingToEdit \u003d bookingListToEdit.getBooking(validBookingIndex.getZeroBased());","lastModifiedDate":"2021-04-10"},{"lineNumber":83,"author":{"gitId":"awzhenyi"},"content":"        Booking editedBooking \u003d new BookingBuilder(bookingToEdit).withStart(OVERLAP_BOOKING_DATE).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"awzhenyi"},"content":"        EditBookingCommand editBookingCommand \u003d new EditBookingCommand(validResidenceIndex, validBookingIndex,","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"awzhenyi"},"content":"                new EditBookingDescriptorBuilder().withStartDate(OVERLAP_BOOKING_DATE).build());","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"awzhenyi"},"content":"        String expectedMessage \u003d EditBookingCommand.MESSAGE_OVERLAP_BOOKING;","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"awzhenyi"},"content":"        assertCommandFailure(editBookingCommand, model, expectedMessage);","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"awzhenyi"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"    public void execute_validEditBookingCommandSuccess() {","lastModifiedDate":"2021-04-10"},{"lineNumber":92,"author":{"gitId":"awzhenyi"},"content":"        Index validResidenceIndex \u003d INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-04-10"},{"lineNumber":93,"author":{"gitId":"awzhenyi"},"content":"        Index validBookingIndex \u003d INDEX_FIRST_BOOKING;","lastModifiedDate":"2021-04-10"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"        Residence targetResidence \u003d model.getFilteredResidenceList().get(validResidenceIndex.getZeroBased());","lastModifiedDate":"2021-04-10"},{"lineNumber":95,"author":{"gitId":"awzhenyi"},"content":"        Residence residenceToEdit \u003d model.getFilteredResidenceList().get(validResidenceIndex.getZeroBased());","lastModifiedDate":"2021-04-10"},{"lineNumber":96,"author":{"gitId":"awzhenyi"},"content":"        BookingList bookingListToEdit \u003d residenceToEdit.getBookingList();","lastModifiedDate":"2021-04-10"},{"lineNumber":97,"author":{"gitId":"awzhenyi"},"content":"        Booking bookingToEdit \u003d bookingListToEdit.getBooking(validBookingIndex.getZeroBased());","lastModifiedDate":"2021-04-10"},{"lineNumber":98,"author":{"gitId":"awzhenyi"},"content":"        Booking editedBooking \u003d new BookingBuilder(bookingToEdit).withName(VALID_NAME_BOOKING2).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":99,"author":{"gitId":"awzhenyi"},"content":"        EditBookingCommand editBookingCommand \u003d new EditBookingCommand(validResidenceIndex, validBookingIndex,","lastModifiedDate":"2021-04-10"},{"lineNumber":100,"author":{"gitId":"awzhenyi"},"content":"                new EditBookingDescriptorBuilder().withName(VALID_NAME_BOOKING2).build());","lastModifiedDate":"2021-04-10"},{"lineNumber":101,"author":{"gitId":"awzhenyi"},"content":"        bookingListToEdit.setBooking(bookingToEdit, editedBooking);","lastModifiedDate":"2021-04-10"},{"lineNumber":102,"author":{"gitId":"awzhenyi"},"content":"        String expectedMessage \u003d String.format(EditBookingCommand.MESSAGE_EDIT_BOOKING_SUCCESS, editedBooking);","lastModifiedDate":"2021-04-10"},{"lineNumber":103,"author":{"gitId":"awzhenyi"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-04-10"},{"lineNumber":104,"author":{"gitId":"awzhenyi"},"content":"        expectedModel.setResidence(targetResidence, residenceToEdit);","lastModifiedDate":"2021-04-10"},{"lineNumber":105,"author":{"gitId":"awzhenyi"},"content":"        expectedModel.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-04-10"},{"lineNumber":106,"author":{"gitId":"awzhenyi"},"content":"        assertCommandSuccess(editBookingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-10"},{"lineNumber":107,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":108,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":109,"author":{"gitId":"awzhenyi"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":110,"author":{"gitId":"awzhenyi"},"content":"    public void equals() {","lastModifiedDate":"2021-04-10"},{"lineNumber":111,"author":{"gitId":"awzhenyi"},"content":"        final EditBookingCommand standardCommand \u003d new EditBookingCommand(","lastModifiedDate":"2021-04-10"},{"lineNumber":112,"author":{"gitId":"awzhenyi"},"content":"                INDEX_SECOND_RESIDENCE, INDEX_FIRST_BOOKING, new EditBookingDescriptor(DESC_BOOKING1));","lastModifiedDate":"2021-04-10"},{"lineNumber":113,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":114,"author":{"gitId":"awzhenyi"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-10"},{"lineNumber":115,"author":{"gitId":"awzhenyi"},"content":"        EditBookingDescriptor copyDescriptor \u003d new EditBookingDescriptor(DESC_BOOKING1);","lastModifiedDate":"2021-04-10"},{"lineNumber":116,"author":{"gitId":"awzhenyi"},"content":"        EditBookingCommand commandWithSameValues \u003d new EditBookingCommand(","lastModifiedDate":"2021-04-10"},{"lineNumber":117,"author":{"gitId":"awzhenyi"},"content":"                INDEX_SECOND_RESIDENCE, INDEX_FIRST_BOOKING, copyDescriptor);","lastModifiedDate":"2021-04-10"},{"lineNumber":118,"author":{"gitId":"awzhenyi"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-04-10"},{"lineNumber":119,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":120,"author":{"gitId":"awzhenyi"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-10"},{"lineNumber":121,"author":{"gitId":"awzhenyi"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-04-10"},{"lineNumber":122,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":123,"author":{"gitId":"awzhenyi"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-10"},{"lineNumber":124,"author":{"gitId":"awzhenyi"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-04-10"},{"lineNumber":125,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":126,"author":{"gitId":"awzhenyi"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-10"},{"lineNumber":127,"author":{"gitId":"awzhenyi"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-04-10"},{"lineNumber":128,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":129,"author":{"gitId":"awzhenyi"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-04-10"},{"lineNumber":130,"author":{"gitId":"awzhenyi"},"content":"        assertFalse(standardCommand.equals(new EditBookingCommand(","lastModifiedDate":"2021-04-10"},{"lineNumber":131,"author":{"gitId":"awzhenyi"},"content":"                INDEX_FIRST_RESIDENCE, INDEX_FIRST_BOOKING, DESC_BOOKING1)));","lastModifiedDate":"2021-04-10"},{"lineNumber":132,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":133,"author":{"gitId":"awzhenyi"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-04-10"},{"lineNumber":134,"author":{"gitId":"awzhenyi"},"content":"        assertFalse(standardCommand.equals(new EditBookingCommand(","lastModifiedDate":"2021-04-10"},{"lineNumber":135,"author":{"gitId":"awzhenyi"},"content":"                INDEX_SECOND_RESIDENCE, INDEX_FIRST_BOOKING, DESC_BOOKING2)));","lastModifiedDate":"2021-04-10"},{"lineNumber":136,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":137,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":138,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":139,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"awzhenyi":139}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_RESIDENCE1;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_RESIDENCE1;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNCLEAN_TAG;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showResidenceAtIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESIDENCES;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.getTypicalResidenceTracker;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.commands.EditCommand.EditResidenceDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.ResidenceTracker;","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.testutil.EditResidenceDescriptorBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.testutil.ResidenceBuilder;","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    private Model model \u003d new ModelManager(getTypicalResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"        Residence editedResidence \u003d new ResidenceBuilder().build();","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"        EditResidenceDescriptor descriptor \u003d new EditResidenceDescriptorBuilder(editedResidence).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_RESIDENCE, descriptor);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_RESIDENCE_SUCCESS, editedResidence);","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"whatthelump"},"content":"        Model expectedModel \u003d new ModelManager(new ResidenceTracker(model.getResidenceTracker()), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"        expectedModel.setResidence(model.getFilteredResidenceList().get(0), editedResidence);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"        expectedModel.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"        Index indexLastResidence \u003d Index.fromOneBased(model.getFilteredResidenceList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"        Residence lastResidence \u003d model.getFilteredResidenceList().get(indexLastResidence.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"        ResidenceBuilder residenceInList \u003d new ResidenceBuilder(lastResidence);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"        Residence editedResidence \u003d residenceInList.withName(VALID_NAME_RESIDENCE1)","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"                .withCleanStatusTag(VALID_UNCLEAN_TAG).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"        EditResidenceDescriptor descriptor \u003d new EditResidenceDescriptorBuilder().withName(VALID_NAME_RESIDENCE1)","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"                .withCleanStatusTag(VALID_UNCLEAN_TAG).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastResidence, descriptor);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_RESIDENCE_SUCCESS, editedResidence);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"whatthelump"},"content":"        Model expectedModel \u003d new ModelManager(new ResidenceTracker(model.getResidenceTracker()), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"        expectedModel.setResidence(lastResidence, editedResidence);","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"        expectedModel.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_RESIDENCE, new EditResidenceDescriptor());","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"        Residence editedResidence \u003d model.getFilteredResidenceList().get(INDEX_FIRST_RESIDENCE.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_RESIDENCE_SUCCESS, editedResidence);","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"whatthelump"},"content":"        Model expectedModel \u003d new ModelManager(new ResidenceTracker(model.getResidenceTracker()), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":"        expectedModel.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-04-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"awzhenyi"},"content":"        showResidenceAtIndex(model, INDEX_FIRST_RESIDENCE);","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"        Residence residenceInFilteredList \u003d model.getFilteredResidenceList().get(INDEX_FIRST_RESIDENCE.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"        Residence editedResidence \u003d new ResidenceBuilder(residenceInFilteredList)","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"                .withName(VALID_NAME_RESIDENCE1).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_RESIDENCE,","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"awzhenyi"},"content":"                new EditResidenceDescriptorBuilder().withName(VALID_NAME_RESIDENCE1).build());","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"awzhenyi"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_RESIDENCE_SUCCESS, editedResidence);","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"whatthelump"},"content":"        Model expectedModel \u003d new ModelManager(new ResidenceTracker(model.getResidenceTracker()), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"awzhenyi"},"content":"        expectedModel.setResidence(model.getFilteredResidenceList().get(0), editedResidence);","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"wangtao0717"},"content":"        expectedModel.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-04-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"awzhenyi"},"content":"    public void execute_duplicateResidenceUnfilteredList_failure() {","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"awzhenyi"},"content":"        Residence firstResidence \u003d model.getFilteredResidenceList().get(INDEX_FIRST_RESIDENCE.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"awzhenyi"},"content":"        EditResidenceDescriptor descriptor \u003d new EditResidenceDescriptorBuilder(firstResidence).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"awzhenyi"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_RESIDENCE, descriptor);","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"awzhenyi"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_RESIDENCE);","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"awzhenyi"},"content":"    public void execute_duplicateResidenceFilteredList_failure() {","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"awzhenyi"},"content":"        showResidenceAtIndex(model, INDEX_FIRST_RESIDENCE);","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"VRSoorya"},"content":"        Residence residenceInList \u003d model.getResidenceTracker().getResidenceList()","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"VRSoorya"},"content":"                .get(INDEX_SECOND_RESIDENCE.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"awzhenyi"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_RESIDENCE,","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"awzhenyi"},"content":"                new EditResidenceDescriptorBuilder(residenceInList).build());","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"awzhenyi"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_RESIDENCE);","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"awzhenyi"},"content":"    public void execute_invalidResidenceIndexUnfilteredList_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"awzhenyi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredResidenceList().size() + 1);","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"VRSoorya"},"content":"        EditResidenceDescriptor descriptor \u003d new EditResidenceDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"VRSoorya"},"content":"                .withName(VALID_NAME_RESIDENCE1).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"awzhenyi"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"awzhenyi"},"content":"    public void execute_invalidResidenceIndexFilteredList_failure() {","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"awzhenyi"},"content":"        showResidenceAtIndex(model, INDEX_FIRST_RESIDENCE);","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"awzhenyi"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"awzhenyi"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getResidenceTracker().getResidenceList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"awzhenyi"},"content":"                new EditResidenceDescriptorBuilder().withName(VALID_NAME_RESIDENCE1).build());","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"awzhenyi"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"whatthelump"},"content":"        final EditCommand standardCommand \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":158,"author":{"gitId":"whatthelump"},"content":"                new EditCommand(INDEX_FIRST_RESIDENCE, new EditResidenceDescriptor(DESC_RESIDENCE1));","lastModifiedDate":"2021-03-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"awzhenyi"},"content":"        EditResidenceDescriptor copyDescriptor \u003d new EditResidenceDescriptor(DESC_RESIDENCE1);","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"awzhenyi"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_RESIDENCE, copyDescriptor);","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"awzhenyi"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_RESIDENCE, DESC_RESIDENCE1)));","lastModifiedDate":"2021-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_RESIDENCE, DESC_RESIDENCE1)));","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"whatthelump":6,"awzhenyi":51,"wangtao0717":9,"-":104,"VRSoorya":11}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_RESIDENCE_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE_C;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE_E;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE_F;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.getTypicalResidenceTracker;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.model.residence.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    private Model model \u003d new ModelManager(getTypicalResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"    public void execute_zeroKeywords_noResidenceFound() {","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENCE_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"jaredtengsw"},"content":"        expectedModel.updateFilteredResidenceList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredResidenceList());","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"whatthelump"},"content":"    public void execute_multipleKeywords_multipleResidencesFound() {","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RESIDENCE_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"whatthelump"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Casuarina Emerald Floravale\");","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"        expectedModel.updateFilteredResidenceList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(Arrays.asList(RESIDENCE_F, RESIDENCE_C, RESIDENCE_E), model.getFilteredResidenceList());","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"whatthelump":2,"awzhenyi":4,"jaredtengsw":3,"-":66,"VRSoorya":8}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_DISPLAY;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_DISPLAY, true, false);","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":18,"VRSoorya":2}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showResidenceAtIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESIDENCES;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.getTypicalResidenceTracker;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"        model \u003d new ModelManager(getTypicalResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        expectedModel \u003d new ModelManager(getTypicalResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        expectedModel.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        showResidenceAtIndex(model, INDEX_FIRST_RESIDENCE);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"awzhenyi":1,"-":33,"VRSoorya":7}},{"path":"src/test/java/seedu/address/logic/commands/StatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESIDENCES;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SIXTH_RESIDENCE;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalResidences.getTypicalResidenceTracker;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"import java.util.Set;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.ResidenceTracker;","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.BookingList;","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.ResidenceAddress;","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.ResidenceName;","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.tag.CleanStatusTag;","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"public class StatusCommandTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"    private Model model \u003d new ModelManager(getTypicalResidenceTracker(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"    public void execute_updateMultipleResidenceStatus_cleanSuccess() throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"        ArrayList\u003cIndex\u003e indexArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"        indexArray.add(INDEX_SECOND_RESIDENCE);","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"        indexArray.add(INDEX_SIXTH_RESIDENCE);","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        String cleanStatus \u003d \"clean\";","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(indexArray, cleanStatus);","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"        Model expectedModel \u003d new ModelManager(new ResidenceTracker(model.getResidenceTracker()), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"        String expectedMessage \u003d \"\";","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"        for (Index index : indexArray) {","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"            Residence residenceToUpdateStatus \u003d model.getFilteredResidenceList().get(index.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"            ResidenceName updatedName \u003d residenceToUpdateStatus.getResidenceName();","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"            ResidenceAddress updatedAddress \u003d residenceToUpdateStatus.getResidenceAddress();","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"            BookingList updatedBooking \u003d residenceToUpdateStatus.getBookingList();","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"            CleanStatusTag updatedCleanStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"            if (cleanStatus.equals(\"clean\")) {","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"                updatedCleanStatus \u003d new CleanStatusTag(\"y\");","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"            } else if (cleanStatus.equals(\"unclean\")) {","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"                updatedCleanStatus \u003d new CleanStatusTag(\"n\");","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"            } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"                throw new CommandException(StatusCommand.MESSAGE_ERROR_STATUS);","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"            Set\u003cTag\u003e updatedTags \u003d residenceToUpdateStatus.getTags();","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"            Residence updatedResidence \u003d new Residence(updatedName, updatedAddress,","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"                    updatedBooking, updatedCleanStatus, updatedTags);","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"            expectedModel.setResidence(residenceToUpdateStatus, updatedResidence);","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"            expectedMessage +\u003d updatedResidence.toString() + \"\\n\";","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"        expectedModel.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"        expectedMessage \u003d String.format(StatusCommand.MESSAGE_STATUS_RESIDENCE_SUCCESS, expectedMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"        assertCommandSuccess(statusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"    public void execute_invalidResidenceIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredResidenceList().size() + 1);","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"        ArrayList\u003cIndex\u003e indexArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"        indexArray.add(outOfBoundIndex);","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(indexArray, \"clean\");","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"        assertCommandFailure(statusCommand, model, Messages.MESSAGE_INVALID_RESIDENCE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"wangtao0717":73}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_RESIDENCE1;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_RESIDENCE2;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLEAN_STATUS_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CLEAN_TAG_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_RESIDENCE1;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_RESIDENCE2;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_REPAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_RESERVED;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UNCLEAN_STATUS_DESC;","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_RESIDENCE2;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLEAN_TAG;","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_RESIDENCE2;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_REPAIR;","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_RESERVED;","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE1;","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE2;","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.residence.ResidenceAddress;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.residence.ResidenceName;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.tag.CleanStatusTag;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.testutil.ResidenceBuilder;","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"whatthelump"},"content":"        Residence expectedResidence \u003d new ResidenceBuilder(RESIDENCE2).withTags(VALID_TAG_RESERVED).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"        //normal input","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"        assertParseSuccess(parser, NAME_DESC_RESIDENCE2 + ADDRESS_DESC_RESIDENCE2","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"                + CLEAN_STATUS_DESC + TAG_DESC_RESERVED, new AddCommand(expectedResidence));","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"whatthelump"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_RESIDENCE2 + ADDRESS_DESC_RESIDENCE2","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"                + CLEAN_STATUS_DESC + TAG_DESC_RESERVED, new AddCommand(expectedResidence));","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"whatthelump"},"content":"        assertParseSuccess(parser, NAME_DESC_RESIDENCE1 + NAME_DESC_RESIDENCE2 + ADDRESS_DESC_RESIDENCE2","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"                + CLEAN_STATUS_DESC + TAG_DESC_RESERVED, new AddCommand(expectedResidence));","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"whatthelump"},"content":"        assertParseSuccess(parser, NAME_DESC_RESIDENCE2 + ADDRESS_DESC_RESIDENCE1 + ADDRESS_DESC_RESIDENCE2","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"whatthelump"},"content":"                + CLEAN_STATUS_DESC + TAG_DESC_RESERVED, new AddCommand(expectedResidence));","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"whatthelump"},"content":"        // multiple clean tags - last clean tag accepted","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"whatthelump"},"content":"        assertParseSuccess(parser, NAME_DESC_RESIDENCE2 + ADDRESS_DESC_RESIDENCE2","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"                + UNCLEAN_STATUS_DESC + CLEAN_STATUS_DESC + TAG_DESC_RESERVED, new AddCommand(expectedResidence));","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"whatthelump"},"content":"        Residence expectedResidenceMultipleTags \u003d new ResidenceBuilder(RESIDENCE2).withTags(VALID_TAG_REPAIR,","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"                VALID_TAG_RESERVED).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"whatthelump"},"content":"        assertParseSuccess(parser, NAME_DESC_RESIDENCE2 + ADDRESS_DESC_RESIDENCE2","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"                + CLEAN_STATUS_DESC + TAG_DESC_RESERVED","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"                + TAG_DESC_REPAIR, new AddCommand(expectedResidenceMultipleTags));","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"        // zero clean status tags and tags","lastModifiedDate":"2021-04-05"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"        Residence expectedResidence1 \u003d new ResidenceBuilder(RESIDENCE1).withCleanStatusTag(\"clean\")","lastModifiedDate":"2021-04-05"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"                .withTags().build();","lastModifiedDate":"2021-04-05"},{"lineNumber":76,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"        assertParseSuccess(parser, NAME_DESC_RESIDENCE1 + ADDRESS_DESC_RESIDENCE1,","lastModifiedDate":"2021-04-05"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"                new AddCommand(expectedResidence1));","lastModifiedDate":"2021-04-05"},{"lineNumber":79,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"whatthelump"},"content":"        // zero clean status tags","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"        Residence expectedResidence2 \u003d new ResidenceBuilder(RESIDENCE1).withCleanStatusTag(\"clean\")","lastModifiedDate":"2021-04-05"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":"                .withTags(VALID_TAG_RESERVED).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":84,"author":{"gitId":"whatthelump"},"content":"        assertParseSuccess(parser, NAME_DESC_RESIDENCE1 + ADDRESS_DESC_RESIDENCE1","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":"                + TAG_DESC_RESERVED, new AddCommand(expectedResidence2));","lastModifiedDate":"2021-04-05"},{"lineNumber":86,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"        Residence expectedResidence3 \u003d new ResidenceBuilder(RESIDENCE1).withCleanStatusTag(\"clean\")","lastModifiedDate":"2021-04-05"},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":"                .withTags().build();","lastModifiedDate":"2021-04-05"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":91,"author":{"gitId":"whatthelump"},"content":"        assertParseSuccess(parser, NAME_DESC_RESIDENCE1 + ADDRESS_DESC_RESIDENCE1","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"wangtao0717"},"content":"                + CLEAN_STATUS_DESC, new AddCommand(expectedResidence3));","lastModifiedDate":"2021-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"whatthelump"},"content":"        assertParseFailure(parser, VALID_NAME_RESIDENCE2 + ADDRESS_DESC_RESIDENCE2, expectedMessage);","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"whatthelump"},"content":"        assertParseFailure(parser, NAME_DESC_RESIDENCE2 + VALID_ADDRESS_RESIDENCE2, expectedMessage);","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, VALID_NAME_RESIDENCE2 + VALID_ADDRESS_RESIDENCE2","lastModifiedDate":"2021-04-05"},{"lineNumber":107,"author":{"gitId":"wangtao0717"},"content":"                 + VALID_CLEAN_TAG, expectedMessage);","lastModifiedDate":"2021-04-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"whatthelump"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ADDRESS_DESC_RESIDENCE2","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":"                + CLEAN_STATUS_DESC, ResidenceName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"whatthelump"},"content":"        assertParseFailure(parser, NAME_DESC_RESIDENCE2 + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"                + CLEAN_STATUS_DESC, ResidenceAddress.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"whatthelump"},"content":"        // invalid clean status tag","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"whatthelump"},"content":"        assertParseFailure(parser, NAME_DESC_RESIDENCE2 + ADDRESS_DESC_RESIDENCE2","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"VRSoorya"},"content":"                + INVALID_CLEAN_TAG_DESC, CleanStatusTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"whatthelump"},"content":"        assertParseFailure(parser, NAME_DESC_RESIDENCE2 + ADDRESS_DESC_RESIDENCE2","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"VRSoorya"},"content":"                + CLEAN_STATUS_DESC + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"whatthelump"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"VRSoorya"},"content":"                + CLEAN_STATUS_DESC, ResidenceName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"whatthelump"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_RESIDENCE2 + ADDRESS_DESC_RESIDENCE2","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"VRSoorya"},"content":"                + CLEAN_STATUS_DESC + TAG_DESC_RESERVED + TAG_DESC_REPAIR,","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"whatthelump":35,"wangtao0717":34,"-":62,"VRSoorya":6}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_RESIDENCE));","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, \"a\", ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"awzhenyi":2,"wangtao0717":1,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/EditBookingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOOKING1;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TENANT_NAME_DESC_AMY;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOKING_END1;","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BOOKING_START1;","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCALDATE_END1;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCALDATE_START1;","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOOKING1;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOOKING1;","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOKING;","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.commands.EditBookingCommand;","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.commands.EditBookingCommand.EditBookingDescriptor;","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.booking.Phone;","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.booking.TenantName;","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.testutil.EditBookingDescriptorBuilder;","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"public class EditBookingCommandParserTest {","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditBookingCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"    private EditBookingCommandParser parser \u003d new EditBookingCommandParser();","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"    @SuppressWarnings(\"checkstyle:SingleSpaceSeparator\")","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"        //no index specified","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"        //index 0 specified \u003d\u003e should show non zero unsigned integer","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \" r/0 b/0 \", ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"        //no field specified","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \" r/1 b/1 \", EditBookingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"        //no index and no field specified","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"        // negative index","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \" r/-5 b/1\" + TENANT_NAME_DESC_AMY, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"        // zero index","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \" r/0 b/0\" + TENANT_NAME_DESC_AMY, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"        // string","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \" r/one b/one\" + TENANT_NAME_DESC_AMY, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \" r/1 b/1 some random string\", ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"        //invalid prefix being parsed as preamble","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \" r/1 b/1 z/nameToChange\", ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"awzhenyi"},"content":"        // invalid name","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \" r/1 b/1 \" + INVALID_NAME_DESC, TenantName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"        // invalid address","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \" r/1 b/1 \" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"        // invalid dates","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \" r/1 b/1 s/2000-2000\", ParserUtil.MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"awzhenyi"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"awzhenyi"},"content":"    public void parse_allFieldsSuccess() {","lastModifiedDate":"2021-04-10"},{"lineNumber":83,"author":{"gitId":"awzhenyi"},"content":"        Index bookingIndex \u003d INDEX_SECOND_BOOKING;","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"awzhenyi"},"content":"        Index residenceIndex \u003d INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"awzhenyi"},"content":"        String userInput \u003d \" r/\" + residenceIndex.getOneBased() + \" b/\" + bookingIndex.getOneBased()","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"awzhenyi"},"content":"                + TENANT_NAME_DESC_AMY + PHONE_DESC_BOOKING1","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"awzhenyi"},"content":"                + \" s/\" + VALID_BOOKING_START1 + \" e/\" + VALID_BOOKING_END1;","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"awzhenyi"},"content":"        EditBookingDescriptor descriptor \u003d new EditBookingDescriptorBuilder()","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"awzhenyi"},"content":"                .withName(VALID_NAME_BOOKING1)","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"awzhenyi"},"content":"                .withPhone(VALID_PHONE_BOOKING1)","lastModifiedDate":"2021-04-10"},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"                .withStartDate(VALID_LOCALDATE_START1)","lastModifiedDate":"2021-04-10"},{"lineNumber":92,"author":{"gitId":"awzhenyi"},"content":"                .withEndDate(VALID_LOCALDATE_END1).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":93,"author":{"gitId":"awzhenyi"},"content":"        EditBookingCommand expectedCommand \u003d new EditBookingCommand(residenceIndex, bookingIndex, descriptor);","lastModifiedDate":"2021-04-10"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-10"},{"lineNumber":95,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":96,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":97,"author":{"gitId":"awzhenyi"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":98,"author":{"gitId":"awzhenyi"},"content":"    public void parse_someFieldsSuccess() {","lastModifiedDate":"2021-04-10"},{"lineNumber":99,"author":{"gitId":"awzhenyi"},"content":"        Index bookingIndex \u003d INDEX_SECOND_BOOKING;","lastModifiedDate":"2021-04-10"},{"lineNumber":100,"author":{"gitId":"awzhenyi"},"content":"        Index residenceIndex \u003d INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-04-10"},{"lineNumber":101,"author":{"gitId":"awzhenyi"},"content":"        String userInput \u003d \" r/\" + residenceIndex.getOneBased() + \" b/\" + bookingIndex.getOneBased()","lastModifiedDate":"2021-04-10"},{"lineNumber":102,"author":{"gitId":"awzhenyi"},"content":"                + TENANT_NAME_DESC_AMY + PHONE_DESC_BOOKING1;","lastModifiedDate":"2021-04-10"},{"lineNumber":103,"author":{"gitId":"awzhenyi"},"content":"        EditBookingDescriptor descriptor \u003d new EditBookingDescriptorBuilder()","lastModifiedDate":"2021-04-10"},{"lineNumber":104,"author":{"gitId":"awzhenyi"},"content":"                .withName(VALID_NAME_BOOKING1)","lastModifiedDate":"2021-04-10"},{"lineNumber":105,"author":{"gitId":"awzhenyi"},"content":"                .withPhone(VALID_PHONE_BOOKING1).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":106,"author":{"gitId":"awzhenyi"},"content":"        EditBookingCommand expectedCommand \u003d new EditBookingCommand(residenceIndex, bookingIndex, descriptor);","lastModifiedDate":"2021-04-10"},{"lineNumber":107,"author":{"gitId":"awzhenyi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-10"},{"lineNumber":108,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":109,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":110,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":111,"author":{"gitId":"awzhenyi"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":112,"author":{"gitId":"awzhenyi"},"content":"    public void parse_oneFieldSuccess() {","lastModifiedDate":"2021-04-10"},{"lineNumber":113,"author":{"gitId":"awzhenyi"},"content":"        //TenantName","lastModifiedDate":"2021-04-10"},{"lineNumber":114,"author":{"gitId":"awzhenyi"},"content":"        Index bookingIndex \u003d INDEX_SECOND_BOOKING;","lastModifiedDate":"2021-04-10"},{"lineNumber":115,"author":{"gitId":"awzhenyi"},"content":"        Index residenceIndex \u003d INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-04-10"},{"lineNumber":116,"author":{"gitId":"awzhenyi"},"content":"        String userInput \u003d \" r/\" + residenceIndex.getOneBased() + \" b/\" + bookingIndex.getOneBased()","lastModifiedDate":"2021-04-10"},{"lineNumber":117,"author":{"gitId":"awzhenyi"},"content":"                + TENANT_NAME_DESC_AMY;","lastModifiedDate":"2021-04-10"},{"lineNumber":118,"author":{"gitId":"awzhenyi"},"content":"        EditBookingDescriptor descriptor \u003d new EditBookingDescriptorBuilder()","lastModifiedDate":"2021-04-10"},{"lineNumber":119,"author":{"gitId":"awzhenyi"},"content":"                .withName(VALID_NAME_BOOKING1).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":120,"author":{"gitId":"awzhenyi"},"content":"        EditBookingCommand expectedCommand \u003d new EditBookingCommand(residenceIndex, bookingIndex, descriptor);","lastModifiedDate":"2021-04-10"},{"lineNumber":121,"author":{"gitId":"awzhenyi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-10"},{"lineNumber":122,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":123,"author":{"gitId":"awzhenyi"},"content":"        //Phone","lastModifiedDate":"2021-04-10"},{"lineNumber":124,"author":{"gitId":"awzhenyi"},"content":"        userInput \u003d \" r/\" + residenceIndex.getOneBased() + \" b/\" + bookingIndex.getOneBased()","lastModifiedDate":"2021-04-10"},{"lineNumber":125,"author":{"gitId":"awzhenyi"},"content":"                + PHONE_DESC_BOOKING1;","lastModifiedDate":"2021-04-10"},{"lineNumber":126,"author":{"gitId":"awzhenyi"},"content":"        descriptor \u003d new EditBookingDescriptorBuilder()","lastModifiedDate":"2021-04-10"},{"lineNumber":127,"author":{"gitId":"awzhenyi"},"content":"                .withPhone(VALID_PHONE_BOOKING1).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":128,"author":{"gitId":"awzhenyi"},"content":"        expectedCommand \u003d new EditBookingCommand(residenceIndex, bookingIndex, descriptor);","lastModifiedDate":"2021-04-10"},{"lineNumber":129,"author":{"gitId":"awzhenyi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-10"},{"lineNumber":130,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":131,"author":{"gitId":"awzhenyi"},"content":"        //Start Date","lastModifiedDate":"2021-04-10"},{"lineNumber":132,"author":{"gitId":"awzhenyi"},"content":"        userInput \u003d \" r/\" + residenceIndex.getOneBased() + \" b/\" + bookingIndex.getOneBased()","lastModifiedDate":"2021-04-10"},{"lineNumber":133,"author":{"gitId":"awzhenyi"},"content":"                + \" s/\" + VALID_BOOKING_START1;","lastModifiedDate":"2021-04-10"},{"lineNumber":134,"author":{"gitId":"awzhenyi"},"content":"        descriptor \u003d new EditBookingDescriptorBuilder()","lastModifiedDate":"2021-04-10"},{"lineNumber":135,"author":{"gitId":"awzhenyi"},"content":"                .withStartDate(VALID_LOCALDATE_START1).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":136,"author":{"gitId":"awzhenyi"},"content":"        expectedCommand \u003d new EditBookingCommand(residenceIndex, bookingIndex, descriptor);","lastModifiedDate":"2021-04-10"},{"lineNumber":137,"author":{"gitId":"awzhenyi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-10"},{"lineNumber":138,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":139,"author":{"gitId":"awzhenyi"},"content":"        //End Date","lastModifiedDate":"2021-04-10"},{"lineNumber":140,"author":{"gitId":"awzhenyi"},"content":"        userInput \u003d \" r/\" + residenceIndex.getOneBased() + \" b/\" + bookingIndex.getOneBased()","lastModifiedDate":"2021-04-10"},{"lineNumber":141,"author":{"gitId":"awzhenyi"},"content":"                + \" e/\" + VALID_BOOKING_END1;","lastModifiedDate":"2021-04-10"},{"lineNumber":142,"author":{"gitId":"awzhenyi"},"content":"        descriptor \u003d new EditBookingDescriptorBuilder()","lastModifiedDate":"2021-04-10"},{"lineNumber":143,"author":{"gitId":"awzhenyi"},"content":"                .withEndDate(VALID_LOCALDATE_END1).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":144,"author":{"gitId":"awzhenyi"},"content":"        expectedCommand \u003d new EditBookingCommand(residenceIndex, bookingIndex, descriptor);","lastModifiedDate":"2021-04-10"},{"lineNumber":145,"author":{"gitId":"awzhenyi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-10"},{"lineNumber":146,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":147,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":148,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"awzhenyi":148}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_RESIDENCE1;","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLEAN_STATUS_DESC;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_RESIDENCE1;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jaredtengsw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_BOOKED;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_REPAIR;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_RESERVED;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_RESIDENCE1;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLEAN_TAG;","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_RESIDENCE1;","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_REPAIR;","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_RESERVED;","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_RESIDENCE;","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.logic.commands.EditCommand.EditResidenceDescriptor;","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.model.residence.ResidenceAddress;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.model.residence.ResidenceName;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.testutil.EditResidenceDescriptorBuilder;","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, ADDRESS_DESC_RESIDENCE1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_RESIDENCE1, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_RESIDENCE1, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, \"1 some random string\", ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, \"1 i/ string\", ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"jaredtengsw"},"content":"        // invalid name","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"jaredtengsw"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, ResidenceName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"jaredtengsw"},"content":"        // invalid address","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"jaredtengsw"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, ResidenceAddress.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"jaredtengsw"},"content":"        // invalid tag","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"jaredtengsw"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"jaredtengsw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"jaredtengsw"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Residence} being edited,","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_RESERVED + TAG_DESC_BOOKED + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_RESERVED + TAG_EMPTY + TAG_DESC_BOOKED, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"awzhenyi"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_ADDRESS_DESC + VALID_ADDRESS_RESIDENCE1,","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"jaredtengsw"},"content":"                ResidenceName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"        Index targetIndex \u003d INDEX_SECOND_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"awzhenyi"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_RESIDENCE1 + ADDRESS_DESC_RESIDENCE1","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"wangtao0717"},"content":"                + CLEAN_STATUS_DESC + TAG_DESC_RESERVED;","lastModifiedDate":"2021-04-05"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"        EditResidenceDescriptor descriptor \u003d new EditResidenceDescriptorBuilder().withName(VALID_NAME_RESIDENCE1)","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"wangtao0717"},"content":"                .withAddress(VALID_ADDRESS_RESIDENCE1).withCleanStatusTag(VALID_CLEAN_TAG)","lastModifiedDate":"2021-04-05"},{"lineNumber":96,"author":{"gitId":"wangtao0717"},"content":"                .withTags(VALID_TAG_RESERVED).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"awzhenyi"},"content":"        Index targetIndex \u003d INDEX_FIRST_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"whatthelump"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_RESIDENCE1 + ADDRESS_DESC_RESIDENCE1;","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"VRSoorya"},"content":"        EditResidenceDescriptor descriptor \u003d new EditResidenceDescriptorBuilder()","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":"                .withName(VALID_NAME_RESIDENCE1).withAddress(VALID_ADDRESS_RESIDENCE1).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"awzhenyi"},"content":"        Index targetIndex \u003d INDEX_FIRST_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"awzhenyi"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_RESIDENCE1;","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"awzhenyi"},"content":"        EditResidenceDescriptor descriptor \u003d new EditResidenceDescriptorBuilder()","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"awzhenyi"},"content":"                .withName(VALID_NAME_RESIDENCE1).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"awzhenyi"},"content":"        // address","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"awzhenyi"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_RESIDENCE1;","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"awzhenyi"},"content":"        descriptor \u003d new EditResidenceDescriptorBuilder().withAddress(VALID_ADDRESS_RESIDENCE1).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"awzhenyi"},"content":"        // Clean Status Tag","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"jaredtengsw"},"content":"        userInput \u003d targetIndex.getOneBased() + CLEAN_STATUS_DESC;","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"jaredtengsw"},"content":"        descriptor \u003d new EditResidenceDescriptorBuilder().withCleanStatusTag(VALID_CLEAN_TAG).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"awzhenyi"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_RESERVED;","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"awzhenyi"},"content":"        descriptor \u003d new EditResidenceDescriptorBuilder().withTags(VALID_TAG_RESERVED).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"wangtao0717"},"content":"        Index targetIndex \u003d INDEX_FIRST_RESIDENCE;","lastModifiedDate":"2021-04-05"},{"lineNumber":145,"author":{"gitId":"wangtao0717"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_RESIDENCE1 + ADDRESS_DESC_RESIDENCE1","lastModifiedDate":"2021-04-05"},{"lineNumber":146,"author":{"gitId":"wangtao0717"},"content":"                + CLEAN_STATUS_DESC + TAG_DESC_RESERVED + NAME_DESC_RESIDENCE1 + ADDRESS_DESC_RESIDENCE1","lastModifiedDate":"2021-04-05"},{"lineNumber":147,"author":{"gitId":"wangtao0717"},"content":"                + CLEAN_STATUS_DESC + TAG_DESC_RESERVED + NAME_DESC_RESIDENCE1 + ADDRESS_DESC_RESIDENCE1","lastModifiedDate":"2021-04-05"},{"lineNumber":148,"author":{"gitId":"wangtao0717"},"content":"                + CLEAN_STATUS_DESC + TAG_DESC_RESERVED + TAG_DESC_REPAIR;","lastModifiedDate":"2021-04-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"wangtao0717"},"content":"        EditResidenceDescriptor descriptor \u003d new EditResidenceDescriptorBuilder().withName(VALID_NAME_RESIDENCE1)","lastModifiedDate":"2021-04-05"},{"lineNumber":151,"author":{"gitId":"wangtao0717"},"content":"                .withAddress(VALID_ADDRESS_RESIDENCE1).withCleanStatusTag(VALID_CLEAN_TAG)","lastModifiedDate":"2021-04-05"},{"lineNumber":152,"author":{"gitId":"wangtao0717"},"content":"                .withTags(VALID_TAG_RESERVED, VALID_TAG_REPAIR)","lastModifiedDate":"2021-04-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"awzhenyi"},"content":"        Index targetIndex \u003d INDEX_FIRST_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"wangtao0717"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_ADDRESS_DESC + ADDRESS_DESC_RESIDENCE1;","lastModifiedDate":"2021-04-05"},{"lineNumber":164,"author":{"gitId":"awzhenyi"},"content":"        EditResidenceDescriptor descriptor \u003d new EditResidenceDescriptorBuilder()","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"awzhenyi"},"content":"                .withAddress(VALID_ADDRESS_RESIDENCE1).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"wangtao0717"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_RESIDENCE1 + CLEAN_STATUS_DESC + ADDRESS_DESC_RESIDENCE1","lastModifiedDate":"2021-04-05"},{"lineNumber":171,"author":{"gitId":"wangtao0717"},"content":"                + TAG_DESC_RESERVED;","lastModifiedDate":"2021-04-05"},{"lineNumber":172,"author":{"gitId":"wangtao0717"},"content":"        descriptor \u003d new EditResidenceDescriptorBuilder().withAddress(VALID_ADDRESS_RESIDENCE1)","lastModifiedDate":"2021-04-05"},{"lineNumber":173,"author":{"gitId":"wangtao0717"},"content":"                .withCleanStatusTag(VALID_CLEAN_TAG)","lastModifiedDate":"2021-04-05"},{"lineNumber":174,"author":{"gitId":"wangtao0717"},"content":"                .withTags(VALID_TAG_RESERVED).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":181,"author":{"gitId":"awzhenyi"},"content":"        Index targetIndex \u003d INDEX_FIRST_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"awzhenyi"},"content":"        EditResidenceDescriptor descriptor \u003d new EditResidenceDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"whatthelump":1,"awzhenyi":25,"jaredtengsw":14,"wangtao0717":33,"-":114,"VRSoorya":2}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"wangtao0717":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.booking.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.residence.ResidenceAddress;","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.residence.ResidenceName;","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"    private static final String INVALID_NAME \u003d \"R--chel\";","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    private static final String VALID_NAME \u003d \"Amber Heights\";","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(INDEX_FIRST_RESIDENCE, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(INDEX_FIRST_RESIDENCE, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseResidenceName((String) null));","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseResidenceName(INVALID_NAME));","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"        ResidenceName expectedName \u003d new ResidenceName(VALID_NAME);","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(expectedName, ParserUtil.parseResidenceName(VALID_NAME));","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"        ResidenceName expectedName \u003d new ResidenceName(VALID_NAME);","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(expectedName, ParserUtil.parseResidenceName(nameWithWhitespace));","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"VRSoorya"},"content":"        ResidenceAddress expectedAddress \u003d new ResidenceAddress(VALID_ADDRESS);","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"VRSoorya"},"content":"        ResidenceAddress expectedAddress \u003d new ResidenceAddress(VALID_ADDRESS);","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"whatthelump":3,"awzhenyi":3,"wangtao0717":1,"-":156,"VRSoorya":9}},{"path":"src/test/java/seedu/address/logic/parser/ResidenceTrackerParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_RESIDENCE;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.logic.commands.EditCommand.EditResidenceDescriptor;","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.model.residence.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.testutil.EditResidenceDescriptorBuilder;","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.testutil.ResidenceBuilder;","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.testutil.ResidenceUtil;","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"whatthelump"},"content":"public class ResidenceTrackerParserTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"    private final ResidenceTrackerParser parser \u003d new ResidenceTrackerParser();","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"jaredtengsw"},"content":"        Residence residence \u003d new ResidenceBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"jaredtengsw"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ResidenceUtil.getAddCommand(residence));","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"jaredtengsw"},"content":"        assertEquals(new AddCommand(residence), command);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_RESIDENCE.getOneBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_RESIDENCE), command);","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"jaredtengsw"},"content":"        Residence residence \u003d new ResidenceBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"jaredtengsw"},"content":"        EditResidenceDescriptor descriptor \u003d new EditResidenceDescriptorBuilder(residence).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"whatthelump"},"content":"                + INDEX_FIRST_RESIDENCE.getOneBased() + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"whatthelump"},"content":"                + ResidenceUtil.getEditResidenceDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_RESIDENCE, descriptor), command);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"whatthelump":4,"awzhenyi":4,"jaredtengsw":6,"wangtao0717":5,"-":83}},{"path":"src/test/java/seedu/address/logic/parser/StatusCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CLEAN_TAG_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.commands.StatusCommand.MESSAGE_NO_RESIDENCE;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.logic.commands.StatusCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"public class StatusCommandParserTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"    private StatusCommandParser parser \u003d new StatusCommandParser();","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"    public void parse_status_success() throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"        String statusClean \u003d \"clean\";","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"        String statusUnclean \u003d \"unclean\";","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"        ArrayList\u003cIndex\u003e indexArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"        indexArray.add(ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"        indexArray.add(ParserUtil.parseIndex(\"2\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"        StatusCommand expectedCommand \u003d new StatusCommand(indexArray , statusClean);","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"        assertParseSuccess(parser, statusClean + \" 1 2\", expectedCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        expectedCommand \u003d new StatusCommand(indexArray , statusUnclean);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"        assertParseSuccess(parser, statusUnclean + \" 1 2\", expectedCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"        // no status and index array","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"        assertParseFailure(parser, \"\", MESSAGE_NO_RESIDENCE);","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"        // no index array","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, \"clean \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, \"unclean \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"        // no status while only input one index","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"    public void parse_invalidCleanStatus_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"        // input invalid clean status and index array","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, INVALID_CLEAN_TAG_DESC + \" 1 2 \", StatusCommand.MESSAGE_ERROR_STATUS);","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"        //input two or more index","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, \"1 2\", StatusCommand.MESSAGE_ERROR_STATUS);","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, \"clean\" + \" w 2\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"        assertParseFailure(parser, \"clean\" + \" 1 2 SS\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"wangtao0717":66,"VRSoorya":2}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESIDENCES;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE_A;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE_B;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.testutil.ResidenceTrackerBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"        assertEquals(new ResidenceTracker(), new ResidenceTracker(modelManager.getResidenceTracker()));","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"whatthelump"},"content":"        userPrefs.setResidenceTrackerFilePath(Paths.get(\"residence/tracker/file/path\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"whatthelump"},"content":"        userPrefs.setResidenceTrackerFilePath(Paths.get(\"new/residence/tracker/file/path\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"    public void setResidenceTrackerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setResidenceTrackerFilePath(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"    public void setResidenceTrackerFilePath_validPath_setsResidenceTrackerFilePath() {","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"whatthelump"},"content":"        modelManager.setResidenceTrackerFilePath(path);","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"whatthelump"},"content":"        assertEquals(path, modelManager.getResidenceTrackerFilePath());","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"    public void hasResidence_nullResidence_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasResidence(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"    public void hasResidence_personNotInResidenceTracker_returnsFalse() {","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(modelManager.hasResidence(RESIDENCE_A));","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":"    public void hasResidence_residenceInResidenceTracker_returnsTrue() {","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"        modelManager.addResidence(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(modelManager.hasResidence(RESIDENCE_A));","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredResidenceList().remove(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"wangtao0717"},"content":"        ResidenceTracker residenceTracker \u003d new ResidenceTrackerBuilder().withResidence(RESIDENCE_A)","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"                .withResidence(RESIDENCE_B).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"whatthelump"},"content":"        ResidenceTracker differentAddressBook \u003d new ResidenceTracker();","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"wangtao0717"},"content":"        modelManager \u003d new ModelManager(residenceTracker, userPrefs);","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"wangtao0717"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(residenceTracker, userPrefs);","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"wangtao0717"},"content":"        String[] keywords \u003d RESIDENCE_A.getResidenceName().toString().split(\"\\\\s+\");","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"VRSoorya"},"content":"        modelManager.updateFilteredResidenceList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"wangtao0717"},"content":"        assertFalse(modelManager.equals(new ModelManager(residenceTracker, userPrefs)));","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"VRSoorya"},"content":"        modelManager.updateFilteredResidenceList(PREDICATE_SHOW_ALL_RESIDENCES);","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"whatthelump"},"content":"        differentUserPrefs.setResidenceTrackerFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"wangtao0717"},"content":"        assertFalse(modelManager.equals(new ModelManager(residenceTracker, differentUserPrefs)));","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"whatthelump":8,"wangtao0717":12,"-":101,"VRSoorya":12}},{"path":"src/test/java/seedu/address/model/ResidenceTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_RESIDENCE2;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_REPAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE1;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.getTypicalResidenceTracker;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"jaredtengsw"},"content":"import seedu.address.model.residence.exceptions.DuplicateResidenceException;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.testutil.ResidenceBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"public class ResidenceTrackerTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    private final ResidenceTracker residenceTracker \u003d new ResidenceTracker();","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"    public void constructor() {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(Collections.emptyList(), residenceTracker.getResidenceList());","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(NullPointerException.class, () -\u003e residenceTracker.resetData(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"        ResidenceTracker newData \u003d getTypicalResidenceTracker();","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"        residenceTracker.resetData(newData);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(newData, residenceTracker);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"    public void resetData_withDuplicateResidences_throwsDuplicateResidenceException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"        Residence editedR1 \u003d new ResidenceBuilder(RESIDENCE1).withAddress(VALID_ADDRESS_RESIDENCE2)","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"                .withTags(VALID_TAG_REPAIR).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"        List\u003cResidence\u003e newResidences \u003d Arrays.asList(RESIDENCE1, editedR1);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"        ResidenceTrackerStub newData \u003d new ResidenceTrackerStub(newResidences);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"jaredtengsw"},"content":"        assertThrows(DuplicateResidenceException.class, () -\u003e residenceTracker.resetData(newData));","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"    public void hasResidence_nullResidence_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(NullPointerException.class, () -\u003e residenceTracker.hasResidence(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"    public void hasResidence_residenceNotInResidenceTracker_returnsFalse() {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(residenceTracker.hasResidence(RESIDENCE1));","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"    public void hasResidence_residenceInResidenceTracker_returnsTrue() {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"        residenceTracker.addResidence(RESIDENCE1);","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(residenceTracker.hasResidence(RESIDENCE1));","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"    public void hasResidence_residenceWithSameIdentityFieldsInResidenceTracker_returnsTrue() {","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"        residenceTracker.addResidence(RESIDENCE1);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"        Residence editedR1 \u003d new ResidenceBuilder(RESIDENCE1).withAddress(VALID_ADDRESS_RESIDENCE2)","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"                .withTags(VALID_TAG_REPAIR).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(residenceTracker.hasResidence(editedR1));","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"    public void getResidenceList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e residenceTracker.getResidenceList().remove(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"     * A stub ReadOnlyResidenceTracker whose list of residence can violate interface constraints.","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"    private static class ResidenceTrackerStub implements ReadOnlyResidenceTracker {","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"        private final ObservableList\u003cResidence\u003e residences \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"        ResidenceTrackerStub(Collection\u003cResidence\u003e residences) {","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"            this.residences.setAll(residences);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":"        public ObservableList\u003cResidence\u003e getResidenceList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":"            return residences;","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"VRSoorya"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"whatthelump":2,"jaredtengsw":2,"VRSoorya":98}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setResidenceTrackerFilePath(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"whatthelump":1,"-":20}},{"path":"src/test/java/seedu/address/model/booking/BookingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.booking;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"whatthelump"},"content":"public class BookingTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    private TenantName validName \u003d new TenantName(\"John\");","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"    private Phone validPhone \u003d new Phone(\"91234567\");","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"    private LocalDate validStart \u003d LocalDate.of(2021, 3, 22);","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"    private LocalDate validEnd \u003d LocalDate.of(2021, 3, 25);","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"whatthelump"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(null, null, null, null));","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(validName, null, null, null));","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(validName, validPhone, null, null));","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(validName, validPhone, validStart, null));","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(validName, validPhone, null, validEnd));","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(validName, null, validStart, null));","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(validName, null, validStart, validEnd));","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(validName, null, null, validEnd));","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(null, validPhone, null, null));","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(null, validPhone, validStart, null));","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(null, validPhone, validStart, validEnd));","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(null, validPhone, null, validEnd));","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(null, null, validStart, null));","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(null, null, validStart, validEnd));","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Booking(null, null, null, validEnd));","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"whatthelump"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"whatthelump"},"content":"    public void constructor_invalidBooking_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Booking(new TenantName(\"\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"                validPhone, validStart, validEnd));","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"whatthelump"},"content":"        assertThrows(","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"whatthelump"},"content":"                IllegalArgumentException.class, () -\u003e new Booking(validName, new Phone(\"12\"), validStart, validEnd));","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"whatthelump"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"whatthelump"},"content":"    public void isValidBooking() {","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"whatthelump"},"content":"        // null booking","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(NullPointerException.class, () -\u003e Booking.isValidBookingTime(null, null));","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"whatthelump"},"content":"        // invalid dates - start date after end date","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(Booking.isValidBookingTime(validEnd, validStart));","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"whatthelump"},"content":"        // valid bookings","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(Booking.isValidBookingTime(validStart, validEnd));","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"whatthelump"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"whatthelump":51,"VRSoorya":6}},{"path":"src/test/java/seedu/address/model/booking/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.model.booking;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"whatthelump":1,"-":39}},{"path":"src/test/java/seedu/address/model/booking/TenantNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package seedu.address.model.booking;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"public class TenantNameTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TenantName(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TenantName(invalidName));","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    public void isValidName() {","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        // null name","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(NullPointerException.class, () -\u003e TenantName.isValidName(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        // invalid name","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(TenantName.isValidName(\"\")); // empty string","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(TenantName.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(TenantName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(TenantName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"        // valid name","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(TenantName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(TenantName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(TenantName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(TenantName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(TenantName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"VRSoorya":40}},{"path":"src/test/java/seedu/address/model/residence/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package seedu.address.model.residence;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"public class AddressTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ResidenceAddress(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ResidenceAddress(invalidAddress));","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    public void isValidAddress() {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        // null address","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(NullPointerException.class, () -\u003e ResidenceAddress.isValidResidenceAddress(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        // invalid addresses","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(ResidenceAddress.isValidResidenceAddress(\"\")); // empty string","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(ResidenceAddress.isValidResidenceAddress(\" \")); // spaces only","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        // valid addresses","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(ResidenceAddress.isValidResidenceAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(ResidenceAddress.isValidResidenceAddress(\"-\")); // one character","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(ResidenceAddress.isValidResidenceAddress(\"Leng Inc; 1234 Market St; \"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"                + \"San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"VRSoorya":37}},{"path":"src/test/java/seedu/address/model/residence/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package seedu.address.model.residence;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.testutil.ResidenceBuilder;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"whatthelump"},"content":"                new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"whatthelump"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"whatthelump"},"content":"                new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"whatthelump"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"whatthelump"},"content":"                new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"whatthelump"},"content":"        NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"whatthelump"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(predicate.test(new ResidenceBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(predicate.test(new ResidenceBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(predicate.test(new ResidenceBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(predicate.test(new ResidenceBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"whatthelump"},"content":"        LocalDate start \u003d LocalDate.of(2021, 3, 22);","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"whatthelump"},"content":"        LocalDate end \u003d LocalDate.of(2021, 3, 25);","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"whatthelump"},"content":"        NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"whatthelump"},"content":"                new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(predicate.test(new ResidenceBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(predicate.test(new ResidenceBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"        // Keywords match address, but does not match name","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"whatthelump"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(predicate.test(new ResidenceBuilder().withName(\"Alice\").withAddress(\"12345\").build()));","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"whatthelump":15,"VRSoorya":10,"-":58}},{"path":"src/test/java/seedu/address/model/residence/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package seedu.address.model.residence;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"public class NameTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ResidenceName(null));","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ResidenceName(invalidName));","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    public void isValidName() {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        // null name","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(NullPointerException.class, () -\u003e ResidenceName.isValidResidenceName(null));","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        // invalid name","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(ResidenceName.isValidResidenceName(\"\")); // empty string","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(ResidenceName.isValidResidenceName(\" \")); // spaces only","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(ResidenceName.isValidResidenceName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(ResidenceName.isValidResidenceName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"        // valid name","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(ResidenceName.isValidResidenceName(\"Hudson Village\")); // alphabets only","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(ResidenceName.isValidResidenceName(\"12345\")); // numbers only","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(ResidenceName.isValidResidenceName(\"North Tower 2\")); // alphanumeric characters","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(ResidenceName.isValidResidenceName(\"Capital Heights\")); // with capital letters","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(ResidenceName.isValidResidenceName(\"Pinnacle Duxton Cantonment Rd HDB\")); // long names","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"VRSoorya":40}},{"path":"src/test/java/seedu/address/model/residence/ResidenceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package seedu.address.model.residence;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_RESIDENCE2;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_RESIDENCE2;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_REPAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNCLEAN_TAG;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE1;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE2;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.testutil.ResidenceBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"public class ResidenceTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"        Residence residence \u003d new ResidenceBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e residence.getTags().remove(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    public void isSameResidence() {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(RESIDENCE1.isSameResidence(RESIDENCE1));","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(RESIDENCE1.isSameResidence(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        Residence editedR1 \u003d new ResidenceBuilder(RESIDENCE1).withAddress(VALID_ADDRESS_RESIDENCE2)","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"                .withCleanStatusTag(\"n\").withTags(VALID_TAG_REPAIR).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"        //.withBookingDetails()","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(RESIDENCE1.isSameResidence(editedR1));","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"        editedR1 \u003d new ResidenceBuilder(RESIDENCE1).withName(\"new name\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(RESIDENCE1.isSameResidence(editedR1));","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"        Residence editedR2 \u003d new ResidenceBuilder(RESIDENCE2).withName(VALID_NAME_RESIDENCE2.toUpperCase()).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(RESIDENCE2.isSameResidence(editedR2));","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_RESIDENCE2 + \" \";","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"        editedR2 \u003d new ResidenceBuilder(RESIDENCE2).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(RESIDENCE2.isSameResidence(editedR2));","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"        Residence r1Copy \u003d new ResidenceBuilder(RESIDENCE1).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(RESIDENCE1.equals(r1Copy));","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"        assertTrue(RESIDENCE1.equals(r1Copy));","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(RESIDENCE1.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(RESIDENCE1.equals(5));","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"        // different residence -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(RESIDENCE1.equals(RESIDENCE2));","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"        Residence editedR1 \u003d new ResidenceBuilder(RESIDENCE1).withName(VALID_NAME_RESIDENCE2).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(RESIDENCE1.equals(editedR1));","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"        // different clean status tag -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"        editedR1 \u003d new ResidenceBuilder(RESIDENCE1).withCleanStatusTag(VALID_UNCLEAN_TAG).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(RESIDENCE1.equals(editedR1));","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"        editedR1 \u003d new ResidenceBuilder(RESIDENCE1).withAddress(VALID_ADDRESS_RESIDENCE2).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(RESIDENCE1.equals(editedR1));","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"        editedR1 \u003d new ResidenceBuilder(RESIDENCE1).withTags(VALID_TAG_REPAIR).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"        assertFalse(RESIDENCE1.equals(editedR1));","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"whatthelump":4,"VRSoorya":83}},{"path":"src/test/java/seedu/address/model/residence/UniqueResidenceListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package seedu.address.model.residence;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_RESIDENCE1;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_RESERVED;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE_A;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE_B;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.residence.exceptions.DuplicateResidenceException;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.residence.exceptions.ResidenceNotFoundException;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"import seedu.address.testutil.ResidenceBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"public class UniqueResidenceListTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    private final UniqueResidenceList uniqueResidenceList \u003d new UniqueResidenceList();","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"    public void contains_nullResidence_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidenceList.contains(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"    public void contains_residenceNotInList_returnsFalse() {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"        assertFalse(uniqueResidenceList.contains(RESIDENCE_A));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"    public void contains_residenceInList_returnsTrue() {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.add(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"        assertTrue(uniqueResidenceList.contains(RESIDENCE_A));","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"whatthelump"},"content":"    public void contains_residenceWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.add(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"        Residence editedAlice \u003d new ResidenceBuilder(RESIDENCE_A).withAddress(VALID_ADDRESS_RESIDENCE1)","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"                .withTags(VALID_TAG_RESERVED).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"        assertTrue(uniqueResidenceList.contains(editedAlice));","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"    public void add_nullResidence_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidenceList.add(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"    public void add_duplicateResidence_throwsDuplicateResidenceException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.add(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(DuplicateResidenceException.class, () -\u003e uniqueResidenceList.add(RESIDENCE_A));","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"    public void setResidence_nullTargetResidence_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidenceList.setResidence(null, RESIDENCE_A));","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"    public void setResidence_nullEditedResidence_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidenceList","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"                .setResidence(RESIDENCE_A, null));","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"    public void setResidence_targetResidenceNotInList_throwsResidenceNotFoundException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(ResidenceNotFoundException.class, () -\u003e uniqueResidenceList","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"                .setResidence(RESIDENCE_A, RESIDENCE_A));","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"    public void setResidence_editedResidenceIsSamePerson_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.add(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.setResidence(RESIDENCE_A, RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":"        UniqueResidenceList expectedUniqueResidenceList \u003d new UniqueResidenceList();","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"        expectedUniqueResidenceList.add(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(expectedUniqueResidenceList, uniqueResidenceList);","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"    public void setResidence_editedResidenceHasSameIdentity_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.add(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"        Residence editedAlice \u003d new ResidenceBuilder(RESIDENCE_A)","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"                .withAddress(VALID_ADDRESS_RESIDENCE1).withTags(VALID_TAG_RESERVED)","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"wangtao0717"},"content":"                .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.setResidence(RESIDENCE_A, editedAlice);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"wangtao0717"},"content":"        UniqueResidenceList expectedUniqueResidenceList \u003d new UniqueResidenceList();","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"wangtao0717"},"content":"        expectedUniqueResidenceList.add(editedAlice);","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(expectedUniqueResidenceList, uniqueResidenceList);","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"wangtao0717"},"content":"    public void setResidence_editedResidenceHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.add(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.setResidence(RESIDENCE_A, RESIDENCE_B);","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"wangtao0717"},"content":"        UniqueResidenceList expectedUniqueResidenceList \u003d new UniqueResidenceList();","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"wangtao0717"},"content":"        expectedUniqueResidenceList.add(RESIDENCE_B);","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(expectedUniqueResidenceList, uniqueResidenceList);","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"wangtao0717"},"content":"    public void setResidence_editedResidenceHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.add(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.add(RESIDENCE_B);","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(DuplicateResidenceException.class, () -\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"wangtao0717"},"content":"                uniqueResidenceList.setResidence(RESIDENCE_A, RESIDENCE_B));","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"wangtao0717"},"content":"    public void remove_nullResidence_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidenceList.remove(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"wangtao0717"},"content":"    public void remove_residenceDoesNotExist_throwsResidenceNotFoundException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(ResidenceNotFoundException.class, () -\u003e uniqueResidenceList.remove(RESIDENCE_A));","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"wangtao0717"},"content":"    public void remove_existingResidence_removesPerson() {","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.add(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.remove(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"wangtao0717"},"content":"        UniqueResidenceList expectedUniqueResidenceList \u003d new UniqueResidenceList();","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(expectedUniqueResidenceList, uniqueResidenceList);","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"wangtao0717"},"content":"    public void setResidence_nullUniqueResidenceList_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidenceList.setResidences((UniqueResidenceList) null));","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"wangtao0717"},"content":"    public void setResidence_uniqueResidenceList_replacesOwnListWithProvidedUniqueResidenceList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.add(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"wangtao0717"},"content":"        UniqueResidenceList expectedUniqueResidenceList \u003d new UniqueResidenceList();","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"wangtao0717"},"content":"        expectedUniqueResidenceList.add(RESIDENCE_B);","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.setResidences(expectedUniqueResidenceList);","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(expectedUniqueResidenceList, uniqueResidenceList);","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"wangtao0717"},"content":"    public void setResidences_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueResidenceList.setResidences((List\u003cResidence\u003e) null));","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"wangtao0717"},"content":"    public void setResidences_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"wangtao0717"},"content":"        uniqueResidenceList.add(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"awzhenyi"},"content":"        List\u003cResidence\u003e residenceList \u003d Collections.singletonList(RESIDENCE_B);","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"awzhenyi"},"content":"        uniqueResidenceList.setResidences(residenceList);","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"wangtao0717"},"content":"        UniqueResidenceList expectedUniqueResidenceList \u003d new UniqueResidenceList();","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"wangtao0717"},"content":"        expectedUniqueResidenceList.add(RESIDENCE_B);","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(expectedUniqueResidenceList, uniqueResidenceList);","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"wangtao0717"},"content":"    public void setResidences_listWithDuplicateResidences_throwsDuplicateResidenceException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"wangtao0717"},"content":"        List\u003cResidence\u003e listWithDuplicateResidences \u003d Arrays.asList(RESIDENCE_A, RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"awzhenyi"},"content":"        assertThrows(DuplicateResidenceException.class, () -\u003e uniqueResidenceList","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"awzhenyi"},"content":"                .setResidences(listWithDuplicateResidences));","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"wangtao0717"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"awzhenyi"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e uniqueResidenceList","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"awzhenyi"},"content":"                .asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"wangtao0717"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"whatthelump":11,"awzhenyi":9,"wangtao0717":155}},{"path":"src/test/java/seedu/address/model/tag/CleanStatusTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"public class CleanStatusTagTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CleanStatusTag(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CleanStatusTag(invalidName));","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"    public void isValidName() {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"        // null name","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(NullPointerException.class, () -\u003e CleanStatusTag.isValidCleanStatusTag(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"        // invalid name","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"        assertFalse(CleanStatusTag.isValidCleanStatusTag(\"\")); // empty string","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"        assertFalse(CleanStatusTag.isValidCleanStatusTag(\" \")); // spaces only","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"        assertFalse(CleanStatusTag.isValidCleanStatusTag(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"        assertFalse(CleanStatusTag.isValidCleanStatusTag(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"        // valid name","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"        assertTrue(CleanStatusTag.isValidCleanStatusTag(\"y\")); // lowercase y","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"        assertTrue(CleanStatusTag.isValidCleanStatusTag(\"Y\")); // uppercase Y","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        assertTrue(CleanStatusTag.isValidCleanStatusTag(\"n\")); // lowercase n","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"        assertTrue(CleanStatusTag.isValidCleanStatusTag(\"N\")); // uppercase N","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"wangtao0717":39}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedResidenceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.storage.JsonAdaptedResidence.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE_A;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"import java.util.List;","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.ResidenceAddress;","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.ResidenceName;","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.tag.CleanStatusTag;","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"public class JsonAdaptedResidenceTest {","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"    private static final String INVALID_NAME \u003d \"Rchel!\";","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"    private static final String INVALID_CLEAN_STATUS_TAG \u003d \"NO MEANING\";","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"    private static final String VALID_NAME \u003d RESIDENCE_A.getResidenceName().toString();","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"    private static final String VALID_ADDRESS \u003d RESIDENCE_A.getResidenceAddress().toString();","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"    private static final String VALID_CLEAN_STATUS_TAG \u003d RESIDENCE_A.getCleanStatusTag().toString();","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"    private static final List\u003cJsonAdaptedBooking\u003e VALID_BOOKINGS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d RESIDENCE_A.getTags().stream()","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        JsonAdaptedResidence residence \u003d new JsonAdaptedResidence(RESIDENCE_A);","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"        assertEquals(RESIDENCE_A, residence.toModelType());","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"        JsonAdaptedResidence residence \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"                new JsonAdaptedResidence(INVALID_NAME, VALID_ADDRESS, VALID_BOOKINGS,","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"                        VALID_CLEAN_STATUS_TAG, VALID_TAGS);","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"        String expectedMessage \u003d ResidenceName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, residence::toModelType);","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"        JsonAdaptedResidence residence \u003d new JsonAdaptedResidence(null, VALID_ADDRESS, VALID_BOOKINGS,","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"                VALID_CLEAN_STATUS_TAG, VALID_TAGS);","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ResidenceName.class.getSimpleName());","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, residence::toModelType);","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"        JsonAdaptedResidence residence \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"                new JsonAdaptedResidence(VALID_NAME, INVALID_ADDRESS, VALID_BOOKINGS,","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"                        VALID_CLEAN_STATUS_TAG, VALID_TAGS);","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"        String expectedMessage \u003d ResidenceAddress.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, residence::toModelType);","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"wangtao0717"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"wangtao0717"},"content":"        JsonAdaptedResidence residence \u003d new JsonAdaptedResidence(VALID_NAME, null, VALID_BOOKINGS,","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"                VALID_CLEAN_STATUS_TAG, VALID_TAGS);","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ResidenceAddress.class.getSimpleName());","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, residence::toModelType);","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"wangtao0717"},"content":"    public void toModelType_invalidCleanStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"        JsonAdaptedResidence residence \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"wangtao0717"},"content":"                new JsonAdaptedResidence(VALID_NAME, VALID_ADDRESS, VALID_BOOKINGS,","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"                        INVALID_CLEAN_STATUS_TAG, VALID_TAGS);","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"        String expectedMessage \u003d CleanStatusTag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(IllegalArgumentException.class, expectedMessage, residence::toModelType);","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"wangtao0717"},"content":"    public void toModelType_nullCleanStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":"        JsonAdaptedResidence residence \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":"                new JsonAdaptedResidence(VALID_NAME, VALID_ADDRESS, VALID_BOOKINGS,","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"wangtao0717"},"content":"                        null, VALID_TAGS);","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"wangtao0717"},"content":"        String expectedMessage \u003d null;","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(NullPointerException.class, expectedMessage, residence::toModelType);","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":93,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-04-11"},{"lineNumber":94,"author":{"gitId":"wangtao0717"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-04-11"},{"lineNumber":95,"author":{"gitId":"wangtao0717"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-04-11"},{"lineNumber":96,"author":{"gitId":"wangtao0717"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"wangtao0717"},"content":"        JsonAdaptedResidence residence \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"wangtao0717"},"content":"                new JsonAdaptedResidence(VALID_NAME, VALID_ADDRESS, VALID_BOOKINGS,","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"wangtao0717"},"content":"                        VALID_CLEAN_STATUS_TAG, invalidTags);","lastModifiedDate":"2021-04-11"},{"lineNumber":100,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(IllegalValueException.class, residence::toModelType);","lastModifiedDate":"2021-04-11"},{"lineNumber":101,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"wangtao0717"},"content":"}","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"wangtao0717":103}},{"path":"src/test/java/seedu/address/storage/JsonResidenceTrackerStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalResidences.EXTRA_R1;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalResidences.EXTRA_R2;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalResidences.RESIDENCE_A;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalResidences.getTypicalResidenceTracker;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ReadOnlyResidenceTracker;","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ResidenceTracker;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"public class JsonResidenceTrackerStorageTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"jaredtengsw"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonResidenceTrackerStorageTest\");","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jaredtengsw"},"content":"    public void readResidenceTracker_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jaredtengsw"},"content":"        assertThrows(NullPointerException.class, () -\u003e readResidenceTracker(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jaredtengsw"},"content":"    private java.util.Optional\u003cReadOnlyResidenceTracker\u003e readResidenceTracker(String filePath) throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"        return new JsonResidenceTrackerStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"whatthelump"},"content":"            .readResidenceTracker(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"jaredtengsw"},"content":"        assertFalse(readResidenceTracker(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(DataConversionException.class, () -\u003e readResidenceTracker(\"notJsonFormatResidenceTracker.json\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"        assertThrows(","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"                DataConversionException.class, () -\u003e readResidenceTracker(\"invalidResidenceResidenceTracker.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"        assertThrows(DataConversionException.class, () -\u003e readResidenceTracker(","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"                \"invalidAndValidResidenceResidenceTracker.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"wangtao0717"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"        Path filePath \u003d testFolder.resolve(\"TempResidenceTracker.json\");","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"wangtao0717"},"content":"        ResidenceTracker original \u003d getTypicalResidenceTracker();","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"wangtao0717"},"content":"        JsonResidenceTrackerStorage jsonResidenceTrackerStorage \u003d new JsonResidenceTrackerStorage(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"wangtao0717"},"content":"        jsonResidenceTrackerStorage.saveResidenceTracker(original, filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"wangtao0717"},"content":"        ReadOnlyResidenceTracker readBack \u003d jsonResidenceTrackerStorage.readResidenceTracker(filePath).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"whatthelump"},"content":"        assertEquals(original, new ResidenceTracker(readBack));","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"wangtao0717"},"content":"        original.addResidence(EXTRA_R1);","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"wangtao0717"},"content":"        original.removeResidence(RESIDENCE_A);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"wangtao0717"},"content":"        jsonResidenceTrackerStorage.saveResidenceTracker(original, filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"wangtao0717"},"content":"        readBack \u003d jsonResidenceTrackerStorage.readResidenceTracker(filePath).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"whatthelump"},"content":"        assertEquals(original, new ResidenceTracker(readBack));","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"wangtao0717"},"content":"        original.addResidence(EXTRA_R2);","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"wangtao0717"},"content":"        jsonResidenceTrackerStorage.saveResidenceTracker(original); // file path not specified","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"wangtao0717"},"content":"        readBack \u003d jsonResidenceTrackerStorage.readResidenceTracker().get(); // file path not specified","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"whatthelump"},"content":"        assertEquals(original, new ResidenceTracker(readBack));","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"wangtao0717"},"content":"    public void saveResidenceTracker_nullResidenceTracker_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveResidenceTracker(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"wangtao0717"},"content":"    private void saveResidenceTracker(ReadOnlyResidenceTracker residenceTracker, String filePath) {","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"whatthelump"},"content":"            new JsonResidenceTrackerStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-11"},{"lineNumber":103,"author":{"gitId":"wangtao0717"},"content":"                    .saveResidenceTracker(residenceTracker, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"wangtao0717"},"content":"    public void saveResidenceTracker_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"wangtao0717"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveResidenceTracker(new ResidenceTracker(), null));","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"whatthelump":9,"jaredtengsw":5,"awzhenyi":4,"wangtao0717":24,"-":69,"VRSoorya":2}},{"path":"src/test/java/seedu/address/storage/JsonSerializableResidenceTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"public class JsonSerializableResidenceTrackerTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableResidenceTrackerTest\");","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"    private static final Path TYPICAL_RESIDENCE_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"            .resolve(\"typicalResidencesResidenceTracker.json\");","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"    private static final Path INVALID_RESIDENCE_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"            .resolve(\"invalidResidenceResidenceTracker.json\");","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    private static final Path DUPLICATE_RESIDENCE_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"            .resolve(\"duplicateResidenceResidenceTracker.json\");","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    public void toModelType_invalidResidenceFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"        JsonSerializableResidenceTracker dataFromFile \u003d JsonUtil.readJsonFile(INVALID_RESIDENCE_FILE,","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"                JsonSerializableResidenceTracker.class).get();","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"    public void toModelType_duplicateResidences_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"        JsonSerializableResidenceTracker dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_RESIDENCE_FILE,","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"                JsonSerializableResidenceTracker.class).get();","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableResidenceTracker.MESSAGE_DUPLICATE_RESIDENCE,","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"whatthelump":5,"awzhenyi":5,"-":23,"VRSoorya":6}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"wangtao0717"},"content":"        userPrefs.setResidenceTrackerFilePath(Paths.get(\"data/residencetracker.json\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wangtao0717":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.testutil.TypicalResidences.getTypicalResidenceTracker;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.ReadOnlyResidenceTracker;","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.ResidenceTracker;","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"        JsonResidenceTrackerStorage jsonResidenceTrackerStorage \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"whatthelump"},"content":"                new JsonResidenceTrackerStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"        storageManager \u003d new StorageManager(jsonResidenceTrackerStorage, userPrefsStorage);","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"    public void residenceTrackerReadSave() throws Exception {","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"whatthelump"},"content":"         * {@link JsonResidenceTrackerStorage} class.","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"whatthelump"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonResidenceTrackerStorageTest} class.","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"        ResidenceTracker original \u003d getTypicalResidenceTracker();","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"whatthelump"},"content":"        storageManager.saveResidenceTracker(original);","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"whatthelump"},"content":"        ReadOnlyResidenceTracker retrieved \u003d storageManager.readResidenceTracker().get();","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"whatthelump"},"content":"        assertEquals(original, new ResidenceTracker(retrieved));","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"wangtao0717"},"content":"    public void getResidenceTrackerFilePath() {","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"whatthelump"},"content":"        assertNotNull(storageManager.getResidenceTrackerFilePath());","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whatthelump":9,"wangtao0717":6,"-":54}},{"path":"src/test/java/seedu/address/testutil/BookingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.booking.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.TenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":" * A utility class to help with building Booking objects.","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"whatthelump"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"public class BookingBuilder {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"    public static final LocalDate DEFAULT_START \u003d LocalDate.of(2021, 3, 22);","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"    public static final LocalDate DEFAULT_END \u003d LocalDate.of(2021, 3, 25);","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    private TenantName tenantName;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"    private Phone phone;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"whatthelump"},"content":"    private LocalDate start;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"    private LocalDate end;","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"whatthelump"},"content":"     * Creates a {@code BookingBuilder} with the default details.","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"    public BookingBuilder() {","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        tenantName \u003d new TenantName(DEFAULT_NAME);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"        start \u003d DEFAULT_START;","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"whatthelump"},"content":"        end \u003d DEFAULT_END;","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"whatthelump"},"content":"     * Initializes the BookingBuilder with the data of {@code bookingToCopy}.","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"whatthelump"},"content":"    public BookingBuilder(Booking bookingToCopy) {","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        tenantName \u003d bookingToCopy.getTenantName();","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"whatthelump"},"content":"        phone \u003d bookingToCopy.getPhone();","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"whatthelump"},"content":"        start \u003d bookingToCopy.getStart();","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"whatthelump"},"content":"        end \u003d bookingToCopy.getEnd();","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"     * Sets the {@code TenantName} of the {@code Booking} that we are building.","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"whatthelump"},"content":"    public BookingBuilder withName(String name) {","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        this.tenantName \u003d new TenantName(name);","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"whatthelump"},"content":"        return this;","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"whatthelump"},"content":"     * Sets the {@code Phone} of the {@code Booking} that we are building.","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"whatthelump"},"content":"    public BookingBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"whatthelump"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"whatthelump"},"content":"        return this;","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"whatthelump"},"content":"     * Sets the {@code Start} of the {@code Booking} that we are building.","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"whatthelump"},"content":"    public BookingBuilder withStart(LocalDate start) {","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"whatthelump"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"whatthelump"},"content":"        return this;","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"whatthelump"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"whatthelump"},"content":"     * Sets the {@code End} of the {@code Booking} that we are building.","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"whatthelump"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"whatthelump"},"content":"    public BookingBuilder withEnd(LocalDate end) {","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"whatthelump"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"whatthelump"},"content":"        return this;","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"whatthelump"},"content":"    public Booking build() {","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"        return new Booking(tenantName, phone, start, end);","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"whatthelump"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"whatthelump"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"whatthelump":73,"VRSoorya":7}},{"path":"src/test/java/seedu/address/testutil/EditBookingDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.logic.commands.EditBookingCommand.EditBookingDescriptor;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.booking.Phone;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.booking.TenantName;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"public class EditBookingDescriptorBuilder {","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    private EditBookingDescriptor descriptor;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"    public EditBookingDescriptorBuilder() {","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"        descriptor \u003d new EditBookingDescriptor();","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"    public EditBookingDescriptorBuilder(EditBookingDescriptor descriptor) {","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"        this.descriptor \u003d new EditBookingDescriptor(descriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"     * Returns an {@code EditBookingDescriptor} with fields containing {@code booking}\u0027s details","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"    public EditBookingDescriptorBuilder(Booking booking) {","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"        descriptor \u003d new EditBookingDescriptor();","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"        descriptor.setName(booking.getTenantName());","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"        descriptor.setPhone(booking.getPhone());","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"        descriptor.setStartDate(booking.getStart());","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"        descriptor.setEndDate(booking.getEnd());","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"     * Sets the {@code TenantName} of the {@code EditBookingDescriptor} that we are building.","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"    public EditBookingDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"        descriptor.setName(new TenantName(name));","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"        return this;","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"     * Sets the {@code Phone} of the {@code EditBookingDescriptor} that we are building.","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"    public EditBookingDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"        return this;","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"     * Sets the start date of the {@code EditBookingDescriptor} that we are building.","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"    public EditBookingDescriptorBuilder withStartDate(LocalDate startDate) {","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"        descriptor.setStartDate(startDate);","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"        return this;","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"     * Sets the end date of the {@code EditBookingDescriptor} that we are building.","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"    public EditBookingDescriptorBuilder withEndDate(LocalDate endDate) {","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"        descriptor.setEndDate(endDate);","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"        return this;","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"    public EditBookingDescriptor build() {","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"        return descriptor;","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"awzhenyi":71}},{"path":"src/test/java/seedu/address/testutil/EditResidenceDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.logic.commands.EditCommand.EditResidenceDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"//import seedu.address.model.residence.BookingList;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.ResidenceAddress;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.ResidenceName;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.tag.CleanStatusTag;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":" * A utility class to help with building EditResidenceDescriptor objects.","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"public class EditResidenceDescriptorBuilder {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    private EditResidenceDescriptor descriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    public EditResidenceDescriptorBuilder() {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"        descriptor \u003d new EditResidenceDescriptor();","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    public EditResidenceDescriptorBuilder(EditResidenceDescriptor descriptor) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        this.descriptor \u003d new EditResidenceDescriptor(descriptor);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"     * Returns an {@code EditResidenceDescriptor} with fields containing {@code residence}\u0027s details","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    public EditResidenceDescriptorBuilder(Residence residence) {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        descriptor \u003d new EditResidenceDescriptor();","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        descriptor.setResidenceName(residence.getResidenceName());","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"        descriptor.setResidenceAddress(residence.getResidenceAddress());","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        descriptor.setBookingDetails(residence.getBookingList());","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"        descriptor.setCleanStatusTag(residence.getCleanStatusTag());","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"        descriptor.setTags(residence.getTags());","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"     * Sets the {@code ResidenceName} of the {@code EditResidenceDescriptor} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"    public EditResidenceDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        descriptor.setResidenceName(new ResidenceName(name));","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"     * Sets the {@code ResidenceAddress} of the {@code EditResidenceDescriptor} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"    public EditResidenceDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"        descriptor.setResidenceAddress(new ResidenceAddress(address));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"     * that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"    public EditResidenceDescriptorBuilder withCleanStatusTag(String cleanStatusTag) {","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"        descriptor.setCleanStatusTag(new CleanStatusTag(cleanStatusTag));","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditResidenceDescriptor}","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"     * that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"    public EditResidenceDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"    public EditResidenceDescriptor build() {","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"        return descriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"awzhenyi":2,"VRSoorya":78}},{"path":"src/test/java/seedu/address/testutil/ResidenceBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.residence.BookingList;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.ResidenceAddress;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.ResidenceName;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.tag.CleanStatusTag;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":" * A utility class to help with building Residence objects.","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"public class ResidenceBuilder {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"    public static final String DEFAULT_RESIDENCE_NAME \u003d \"Olive Park\";","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"    public static final String DEFAULT_RESIDENCE_ADDRESS \u003d \"122 Olive Gardens, 652260\";","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    public static final String DEFAULT_CLEAN_STATUS \u003d \"y\";","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    private ResidenceName name;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    private ResidenceAddress address;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"whatthelump"},"content":"    private BookingList bookingList;","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    private CleanStatusTag cleanStatusTag;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"     * Creates a {@code ResidenceBuilder} with the default details.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    public ResidenceBuilder() {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        name \u003d new ResidenceName(DEFAULT_RESIDENCE_NAME);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        address \u003d new ResidenceAddress(DEFAULT_RESIDENCE_ADDRESS);","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"        cleanStatusTag \u003d new CleanStatusTag(DEFAULT_CLEAN_STATUS);","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"        bookingList \u003d new BookingList();","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"     * Initializes the ResidenceBuilder with the data of {@code residenceToCopy}.","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    public ResidenceBuilder(Residence residenceToCopy) {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"        name \u003d residenceToCopy.getResidenceName();","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        address \u003d residenceToCopy.getResidenceAddress();","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"        bookingList \u003d residenceToCopy.getBookingList();","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        cleanStatusTag \u003d residenceToCopy.getCleanStatusTag();","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"        tags \u003d new HashSet\u003c\u003e(residenceToCopy.getTags());","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"     * Sets the {@code ResidenceName} of the {@code Residence} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"    public ResidenceBuilder withName(String name) {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"        this.name \u003d new ResidenceName(name);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"     * Sets the {@code ResidenceAddress} of the {@code Residence} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"    public ResidenceBuilder withAddress(String address) {","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"        this.address \u003d new ResidenceAddress(address);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"     * Sets the {@code BookingList} of the {@code Residence} that we are building.","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"    public ResidenceBuilder withBookingList(List\u003cBooking\u003e bookings) {","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"        this.bookingList \u003d new BookingList(bookings);","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"     * Sets the {@code BookingList} of the {@code Residence} that we are building with an empty BookingList.","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"    public ResidenceBuilder withBookingList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"        this.bookingList \u003d new BookingList();","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"        return this;","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"     * Parses the {@code String cleanStatusTag} into a {@code CleanStatusTag} and set it to the {@code Residence}","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"     * that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"    public ResidenceBuilder withCleanStatusTag(String cleanStatusTag) {","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"        this.cleanStatusTag \u003d new CleanStatusTag(cleanStatusTag);","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Residence} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":"    public ResidenceBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":"    public Residence build() {","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"whatthelump"},"content":"        return new Residence(name, address, bookingList, cleanStatusTag, tags);","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"whatthelump":3,"awzhenyi":1,"wangtao0717":3,"VRSoorya":98}},{"path":"src/test/java/seedu/address/testutil/ResidenceTrackerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.ResidenceTracker;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" * A utility class to help with building ResidenceTracker objects.","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":" *     {@code ResidenceTracker rt \u003d new ResidenceTrackerBuilder().withResidence(new Residence(...)).build();}","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"public class ResidenceTrackerBuilder {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    private ResidenceTracker residenceTracker;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    public ResidenceTrackerBuilder() {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"        residenceTracker \u003d new ResidenceTracker();","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    public ResidenceTrackerBuilder(ResidenceTracker residenceTracker) {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"        this.residenceTracker \u003d residenceTracker;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"     * Adds a new {@code Residence} to the {@code ResidenceTracker} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    public ResidenceTrackerBuilder withResidence(Residence residence) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        residenceTracker.addResidence(residence);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    public ResidenceTracker build() {","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"        return residenceTracker;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"VRSoorya":34}},{"path":"src/test/java/seedu/address/testutil/ResidenceUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wangtao0717"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLEAN_STATUS_TAG;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESIDENCE_ADDRESS;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"wangtao0717"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"wangtao0717"},"content":"import java.util.Set;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.logic.commands.EditCommand.EditResidenceDescriptor;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"/**","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":" * A utility class for Residence.","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"wangtao0717"},"content":" */","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"wangtao0717"},"content":"public class ResidenceUtil {","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"wangtao0717"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"wangtao0717"},"content":"     * Returns an add command string for adding the {@code residence}.","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"wangtao0717"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"wangtao0717"},"content":"    public static String getAddCommand(Residence residence) {","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"wangtao0717"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getResidenceDetails(residence);","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"wangtao0717"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"wangtao0717"},"content":"     * Returns the part of command string for the given {@code residence}\u0027s details.","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"wangtao0717"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"wangtao0717"},"content":"    public static String getResidenceDetails(Residence residence) {","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"wangtao0717"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"wangtao0717"},"content":"        sb.append(PREFIX_NAME + residence.getResidenceName().getValue() + \" \");","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"wangtao0717"},"content":"        sb.append(PREFIX_RESIDENCE_ADDRESS + residence.getResidenceAddress().getValue() + \" \");","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"wangtao0717"},"content":"        sb.append(PREFIX_CLEAN_STATUS_TAG + residence.getCleanStatusTag().getValue() + \" \");","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"wangtao0717"},"content":"        residence.getTags().stream().forEach(","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"wangtao0717"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"wangtao0717"},"content":"        );","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"wangtao0717"},"content":"        return sb.toString();","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"wangtao0717"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"wangtao0717"},"content":"     * Returns the part of command string for the given {@code EditResidenceDescriptor}\u0027s details.","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"wangtao0717"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"wangtao0717"},"content":"    public static String getEditResidenceDescriptorDetails(EditResidenceDescriptor descriptor) {","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"wangtao0717"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"wangtao0717"},"content":"        descriptor.getResidenceName().ifPresent(name -\u003e sb.append(PREFIX_NAME)","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"wangtao0717"},"content":"                .append(name.getValue()).append(\" \"));","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"wangtao0717"},"content":"        descriptor.getResidenceAddress().ifPresent(address -\u003e sb.append(PREFIX_RESIDENCE_ADDRESS)","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"wangtao0717"},"content":"                .append(address.getValue()).append(\" \"));","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"wangtao0717"},"content":"        descriptor.getCleanStatusTag().ifPresent(cleanStatusTag -\u003e sb.append(PREFIX_CLEAN_STATUS_TAG)","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"wangtao0717"},"content":"                .append(cleanStatusTag.getValue()).append(\" \"));","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"wangtao0717"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"wangtao0717"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"wangtao0717"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"wangtao0717"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"wangtao0717"},"content":"            } else {","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"wangtao0717"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"wangtao0717"},"content":"            }","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"wangtao0717"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"wangtao0717"},"content":"        return sb.toString();","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"wangtao0717"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"wangtao0717"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"wangtao0717":63}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"     * Returns the middle index of the residence in the {@code model}\u0027s residence list.","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"        return Index.fromOneBased(model.getFilteredResidenceList().size() / 2);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"     * Returns the last index of the residence in the {@code model}\u0027s residence list.","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        return Index.fromOneBased(model.getFilteredResidenceList().size());","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"     * Returns the residence in the {@code model}\u0027s residence list at {@code index}.","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"    public static Residence getResidence(Model model, Index index) {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"        return model.getFilteredResidenceList().get(index.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":47,"VRSoorya":8}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"    public static final Index INDEX_FIRST_RESIDENCE \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"    public static final Index INDEX_SECOND_RESIDENCE \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"    public static final Index INDEX_THIRD_RESIDENCE \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"    public static final Index INDEX_FOURTH_RESIDENCE \u003d Index.fromOneBased(4);","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"wangtao0717"},"content":"    public static final Index INDEX_FIFTH_RESIDENCE \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"wangtao0717"},"content":"    public static final Index INDEX_SIXTH_RESIDENCE \u003d Index.fromOneBased(6);","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"wangtao0717"},"content":"    public static final Index INDEX_SEVENTH_RESIDENCE \u003d Index.fromOneBased(7);","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"wangtao0717"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"    public static final Index INDEX_FIRST_BOOKING \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"    public static final Index INDEX_SECOND_BOOKING \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"whatthelump":1,"awzhenyi":7,"wangtao0717":4,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalResidences.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jaredtengsw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_RESIDENCE1;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jaredtengsw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_RESIDENCE2;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"jaredtengsw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLEAN_TAG;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"jaredtengsw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_RESIDENCE1;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"jaredtengsw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_RESIDENCE2;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"jaredtengsw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_REPAIR;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"jaredtengsw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_RESERVED;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.ResidenceTracker;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.booking.Booking;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.booking.Phone;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"import seedu.address.model.booking.TenantName;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"whatthelump"},"content":"import seedu.address.model.residence.Residence;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":" * A utility class containing a list of {@code Residence} objects to be used in tests.","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"public class TypicalResidences {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"    public static final Residence RESIDENCE_A \u003d new ResidenceBuilder().withName(\"Amber Heights\")","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withBookingList().withTags(\"valuable\").build();","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"whatthelump"},"content":"    public static final Residence RESIDENCE_B \u003d new ResidenceBuilder().withName(\"Beverly Hills\")","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withTags(\"repair\", \"popular\")","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"            .withBookingList(new ArrayList\u003cBooking\u003e(Arrays.asList(","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"                    new Booking(new TenantName(\"Amy\"), new Phone(\"91910606\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"                            LocalDate.parse(\"03-03-2020\", DATE_TIME_FORMATTER),","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"                            LocalDate.parse(\"04-03-2020\", DATE_TIME_FORMATTER)),","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"                    new Booking(new TenantName(\"Bob\"), new Phone(\"90241134\"),","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"                            LocalDate.parse(\"05-03-2020\", DATE_TIME_FORMATTER),","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"                            LocalDate.parse(\"06-03-2020\", DATE_TIME_FORMATTER))","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"            ))).withCleanStatusTag(\"n\").build();","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"whatthelump"},"content":"    public static final Residence RESIDENCE_C \u003d new ResidenceBuilder().withName(\"Casuarina Apartment\")","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"            .withAddress(\"wall street\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"whatthelump"},"content":"    public static final Residence RESIDENCE_D \u003d new ResidenceBuilder().withName(\"Dover Condominium\")","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"            .withAddress(\"10th street\").withTags(\"forFriends\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"    public static final Residence RESIDENCE_E \u003d new ResidenceBuilder().withName(\"Emerald Hills\")","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"whatthelump"},"content":"    public static final Residence RESIDENCE_F \u003d new ResidenceBuilder().withName(\"Floravale\")","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"            .withAddress(\"little tokyo\").withCleanStatusTag(\"n\").build();","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"whatthelump"},"content":"    public static final Residence RESIDENCE_G \u003d new ResidenceBuilder().withName(\"Gem Residences\")","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"    // Manually added","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"whatthelump"},"content":"    public static final Residence EXTRA_R1 \u003d new ResidenceBuilder().withName(\"Hillview\")","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"whatthelump"},"content":"    public static final Residence EXTRA_R2 \u003d new ResidenceBuilder().withName(\"iSuites\")","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"            .withAddress(\"chicago ave\").build();","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"whatthelump"},"content":"    // Manually added - Residence\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"    public static final Residence RESIDENCE1 \u003d new ResidenceBuilder().withName(VALID_NAME_RESIDENCE1)","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"            .withAddress(VALID_ADDRESS_RESIDENCE1).withBookingList()","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"            .withCleanStatusTag(VALID_CLEAN_TAG).withTags(VALID_TAG_RESERVED).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"    public static final Residence RESIDENCE2 \u003d new ResidenceBuilder().withName(VALID_NAME_RESIDENCE2)","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"            .withAddress(VALID_ADDRESS_RESIDENCE2).withBookingList()","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"            .withCleanStatusTag(VALID_CLEAN_TAG).withTags(VALID_TAG_REPAIR, VALID_TAG_RESERVED).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"    public static final String KEYWORD_MATCHING_HILLS \u003d \"Hills\"; // A keyword that matches MEIER","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"    private TypicalResidences() {} // prevents instantiation","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"     * Returns an {@code ResidenceTracker} with all the typical residences.","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"    public static ResidenceTracker getTypicalResidenceTracker() {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"        ResidenceTracker rt \u003d new ResidenceTracker();","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"        for (Residence residence : getTypicalResidences()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"            rt.addResidence(residence);","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"        return rt;","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"    public static List\u003cResidence\u003e getTypicalResidences() {","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(RESIDENCE_A, RESIDENCE_B, RESIDENCE_C,","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"                RESIDENCE_D, RESIDENCE_E, RESIDENCE_F, RESIDENCE_G));","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"whatthelump":16,"jaredtengsw":7,"awzhenyi":16,"VRSoorya":47}}]
