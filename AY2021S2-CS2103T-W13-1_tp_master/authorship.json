[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"# Dictionote","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"![CI Status](https://github.com/AY2021S2-CS2103T-W13-1/tp/workflows/Java%20CI/badge.svg)(https://github.com/AY2021S2-CS2103T-W13-1/tp/actions)","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"* This is a desktop Dictionote application. The image above shows the sample UI of Dictionote.","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"## Site Map","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"* [User Guide](https://ay2021s2-cs2103t-w13-1.github.io/tp/UserGuide.html)","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"* [Developer Guide](https://ay2021s2-cs2103t-w13-1.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"* [About us](https://ay2021s2-cs2103t-w13-1.github.io/tp/AboutUs.html)","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"## Acknowledgements","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"* This application was built upon the AddressBook-Level3 project created by [SE-EDU initiative](https://se-education.org/)","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"TeoHoeKeat":3,"jessen11":13,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"mainClassName \u003d \u0027seedu.dictionote.Main\u0027","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"    archiveName \u003d \u0027dictionote.jar\u0027","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"run {","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"TeoHoeKeat":3,"XindiTian":1,"-":72}},{"path":"definitionbook.json","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"{","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"  \"definitions\" : [ {","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"    \"term\" : \"\u003c\u003cInsert Term here\",","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"    \"defs\" : \"Paragraph 1\\n\\nparagraph 2\\n\\nparagraph 3\"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"  }","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"  ]","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"TeoHoeKeat":7}},{"path":"dictionarybook.json","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"{","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"  \"content\" : [ {","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"    \"week\" : \"Week 1\",","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"    \"header\" : \"\u003cInsert header here\u003e\",","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"    \"maincontent\" : \"Paragraph 1\\n\\nparagraph 2\\n\\nparagraph 3\"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"  }","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"  ]","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"TeoHoeKeat":8}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"### Alzahrani Riyadh Hamdan S","lastModifiedDate":"2021-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"\u003cimg src\u003d\"images/riyadh-h.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"[[github](https://github.com/riyadh-h)]","lastModifiedDate":"2021-02-26"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"[[portfolio](team/riyadh-h.md)]","lastModifiedDate":"2021-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"* Role: Member","lastModifiedDate":"2021-02-26"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"* Responsibilities: Full Stack Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"### Dick Jessen William","lastModifiedDate":"2021-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"\u003cimg src\u003d\"images/jessen11.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"[[github](http://github.com/jessen11)]","lastModifiedDate":"2021-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"* Role: Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"* Responsibilities: Full Stack Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"### Otto Alexander Sutianto","lastModifiedDate":"2021-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"\u003cimg src\u003d\"images/godjuansan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"[[github](http://github.com/godjuansan)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2021-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"* Role: Member","lastModifiedDate":"2021-02-26"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"* Responsibilities: Full-Stack Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"### Teo Hoe Keat","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cimg src\u003d\"images/teohoekeat.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"[[github](http://github.com/teohoekeat)]","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"* Role: Member","lastModifiedDate":"2021-02-27"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"* Responsibilities: Full Stack Developer","lastModifiedDate":"2021-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"### Tian Xindi","lastModifiedDate":"2021-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"\u003cimg src\u003d\"images/xinditian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"[[github](http://github.com/XindiTian)]","lastModifiedDate":"2021-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"* Role: Member","lastModifiedDate":"2021-02-26"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"* Responsibilities: Full Stack Developer","lastModifiedDate":"2021-02-26"}],"authorContributionMap":{"TeoHoeKeat":5,"jessen11":5,"godjuansan":5,"riyadh-h":6,"XindiTian":5,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"## **Introduction**","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"### Purpose","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"The purpose of this document is to cover the multi-level design architecture of Dictionote, so that the","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"intended audience of this document can understand the relationship between components that make up Dictionote.","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"### Audience","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"This developer guide is for anyone who wants to understand the internal software architecture of Dictionote.","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"The following groups of people are the intended audience:","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"* Dictionote developers: anyone who wish to upgrade Dictionote to support more functions.","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"* CS2103/T students: students of CS2103/T who want to improve their efficiency and productivity in learning.","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"### Dictionote Overview","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"Dictionote is a desktop app for CS2103/T Students, optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"while still having the benefits of a Graphical User Interface (GUI). Dictionote in general helps to organise content and","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"definitions from the CS2103/T textbook, provide Note-keeping functions to facilitate learning, and enhance the ability","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"for students to connect and learn together with their cohort mates.","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2021S2-CS2103T-W13-1/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2021S2-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/dictionote/Main.java) and [`MainApp`](https://github.com/AY2021S2-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/dictionote/ui/Ui.java)","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `DictionaryListPanel`, `DictionaryContentPanel` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2021S2-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2021S2-CS2103T-W13-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"[`Logic.java`](https://github.com/AY2021S2-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/dictionote/logic/Logic.java)","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"**API** : [`Model.java`](https://github.com/AY2021S2-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/dictionote/model/Model.java)","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":"**API** : [`Storage.java`](https://github.com/AY2021S2-CS2103T-W13-1/tp/tree/master/src/main/java/seedu/dictionote/storage/Storage.java)","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"XindiTian"},"content":"Classes used by multiple components are in the `seedu.dictionote.commons` package.","lastModifiedDate":"2021-02-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"riyadh-h"},"content":"### Contact features","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"riyadh-h"},"content":"#### Sending an email to a contact","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"riyadh-h"},"content":"##### Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"riyadh-h"},"content":"This feature is implemented as a command, `EmailCommand`, that extends `Command`. It is an index-dependent command, meaning that the user must provide an index number when typing the command as a reference to a specific contact on the contacts list.","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"riyadh-h"},"content":"The index number was selected to refer to a particular contact. This is due to its character length being shorter in most cases than any other field of information in `Contact` objects, making it both simple and sufficient.","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"riyadh-h"},"content":"The `execute()` method attempts to open a new window of the user\u0027s operating system (OS) default mail client. This is done by navigating to a `mailto` link with the contact\u0027s email address added to the end.","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"riyadh-h"},"content":"As an example, consider running Dictionote on a Windows 10 machine with Microsoft Outlook as the OS default mail client:","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"riyadh-h"},"content":"* Assume that the current state of the application is as follows (note the exisiting contacts on the left-side of the application\u0027s window):","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"riyadh-h"},"content":"![ContactEmailFeatureInitState](images/ContactEmailFeatureInitState.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"riyadh-h"},"content":"* After typing in `emailcontact 2` and executing it, the result would be:","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"riyadh-h"},"content":"![ContactEmailFeatureExecute](images/ContactEmailFeatureExecute.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"riyadh-h"},"content":"* A new window, belonging to Microsoft Outlook\u0027s `New Message` function, will pop up:","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"riyadh-h"},"content":"![ContactEmailFeatureOSClient](images/ContactEmailFeatureOSClient.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"riyadh-h"},"content":"* Note that the email of the selected contact, Bob (referred to in the command by his index number), is automatically written in the `To...` field of the email\u0027s header information.","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"riyadh-h"},"content":"Note that if the user does not have a mail client software set as default in their OS, then Dictionote will try to navigate to the `mailto` link through the user\u0027s default browser (i.e., the `mailto` link will be treated as an ordinary URL link).","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"riyadh-h"},"content":"##### Design Considerations","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"riyadh-h"},"content":"* **Alternative 1 (current choice):** make use of the OS mail client to facilitate email features.","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"riyadh-h"},"content":"\t* Pros: Easy to implement; utilizes a pre-existing and standardized system for invoking mail xyz.","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"riyadh-h"},"content":"\t* Cons: Requires the user to have a mail client installed on their OS, which is then set to be the default mail client of the system.","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"riyadh-h"},"content":"* **Alternative 2:** implement basic email features directly into Dictionote.","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"riyadh-h"},"content":"\t* Pros: Does not depened on the existence of external software in the OS.","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"riyadh-h"},"content":"\t* Cons: Much harder to implement, as it requires the implementation of network-related functions to handle the connections to email servers.","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"riyadh-h"},"content":"\t","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"riyadh-h"},"content":"\t","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"riyadh-h"},"content":"#### More implementation details to be added...","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"TeoHoeKeat"},"content":"### UI features","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":204,"author":{"gitId":"TeoHoeKeat"},"content":"#### Manipulation UI through Command","lastModifiedDate":"2021-03-27"},{"lineNumber":205,"author":{"gitId":"TeoHoeKeat"},"content":"#####  Implementation","lastModifiedDate":"2021-03-27"},{"lineNumber":206,"author":{"gitId":"TeoHoeKeat"},"content":"Dictionote provides a dynamic user interface that allows the user to open and close any panel. ","lastModifiedDate":"2021-03-27"},{"lineNumber":207,"author":{"gitId":"TeoHoeKeat"},"content":"When executing any given command, dictionote will have to be able to change the user interface. ","lastModifiedDate":"2021-03-27"},{"lineNumber":208,"author":{"gitId":"TeoHoeKeat"},"content":"While all commands can open or close the UI panel. The user is also given the ability to manipulate UI through user command. ","lastModifiedDate":"2021-03-27"},{"lineNumber":209,"author":{"gitId":"TeoHoeKeat"},"content":"The feature is implemented through the `CommandResult` that all `Command` in the system return.","lastModifiedDate":"2021-03-27"},{"lineNumber":210,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":211,"author":{"gitId":"TeoHoeKeat"},"content":"`CommandResult` store a string `feedbackToUser`, enum `UiAction` and enum `UiActionOption`. `feedbackToUser` will ","lastModifiedDate":"2021-03-27"},{"lineNumber":212,"author":{"gitId":"TeoHoeKeat"},"content":"be show on the `ResultDisplay` as the command execution feedback. ","lastModifiedDate":"2021-03-27"},{"lineNumber":213,"author":{"gitId":"TeoHoeKeat"},"content":"`UiAction` indicate the action the command the want the `UI` to take. ","lastModifiedDate":"2021-03-27"},{"lineNumber":214,"author":{"gitId":"TeoHoeKeat"},"content":"e.g `UiAction.OPEN`, `UiAction.CLOSE`, `UiAction.EXIT`, ... etc. `UiActionOption` is only applicable to some `UiAction`. ","lastModifiedDate":"2021-03-27"},{"lineNumber":215,"author":{"gitId":"TeoHoeKeat"},"content":"It indicate the specific option available for the `UiAction`. ","lastModifiedDate":"2021-03-27"},{"lineNumber":216,"author":{"gitId":"TeoHoeKeat"},"content":"e.g `UiActionOption.Dictionary` for `UiActionOpen` mean open dictionary panel.","lastModifiedDate":"2021-03-27"},{"lineNumber":217,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":218,"author":{"gitId":"TeoHoeKeat"},"content":"The following is the sequence diagram for  `OPENCOMMAND`","lastModifiedDate":"2021-03-27"},{"lineNumber":219,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":220,"author":{"gitId":"TeoHoeKeat"},"content":"![OpenCommandSequenceDiagram](images/OpenCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":221,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":222,"author":{"gitId":"TeoHoeKeat"},"content":"#### Design Consideration","lastModifiedDate":"2021-03-27"},{"lineNumber":223,"author":{"gitId":"TeoHoeKeat"},"content":"* **Alternative 1 (current choice):** Make use of the existing command `CommandResult` class","lastModifiedDate":"2021-03-27"},{"lineNumber":224,"author":{"gitId":"TeoHoeKeat"},"content":"    * Pros: make use of the existing system and easy to implement","lastModifiedDate":"2021-03-27"},{"lineNumber":225,"author":{"gitId":"TeoHoeKeat"},"content":"    * Cons: All command will have to decide on the response. (or use the default setting)","lastModifiedDate":"2021-03-27"},{"lineNumber":226,"author":{"gitId":"TeoHoeKeat"},"content":"* Alternative 2: Make use of the Model Component as an intermediary between Command and UI. The command will call a method available on the model to make a change to the UI.","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"TeoHoeKeat"},"content":"    * Pros: Only the class that requires to change in UI will be needed to call the method","lastModifiedDate":"2021-03-27"},{"lineNumber":228,"author":{"gitId":"TeoHoeKeat"},"content":"    * Cons: Increasing coupling.","lastModifiedDate":"2021-03-27"},{"lineNumber":229,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":230,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":231,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":232,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":233,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c!--","lastModifiedDate":"2021-03-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":315,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"TeoHoeKeat"},"content":"--\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"godjuansan"},"content":"* Tech-Savvy CS2103T Student","lastModifiedDate":"2021-02-27"},{"lineNumber":340,"author":{"gitId":"godjuansan"},"content":"* want to ask questions","lastModifiedDate":"2021-02-27"},{"lineNumber":341,"author":{"gitId":"godjuansan"},"content":"* need to find answers","lastModifiedDate":"2021-02-27"},{"lineNumber":342,"author":{"gitId":"godjuansan"},"content":"* prefers to take notes","lastModifiedDate":"2021-02-27"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":344,"author":{"gitId":"godjuansan"},"content":"**Value proposition**:","lastModifiedDate":"2021-02-27"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":346,"author":{"gitId":"godjuansan"},"content":"* Main problem: no organized platform to facilitate extra learning outside of class.","lastModifiedDate":"2021-02-27"},{"lineNumber":347,"author":{"gitId":"godjuansan"},"content":"* Sub-Problems","lastModifiedDate":"2021-02-27"},{"lineNumber":348,"author":{"gitId":"godjuansan"},"content":"    * Easy and quick way for students to get answers for CS2103T questions.","lastModifiedDate":"2021-02-27"},{"lineNumber":349,"author":{"gitId":"godjuansan"},"content":"    * Easy for students to take notes.","lastModifiedDate":"2021-02-27"},{"lineNumber":350,"author":{"gitId":"godjuansan"},"content":"    * Easy way for students to find their classmates.","lastModifiedDate":"2021-02-27"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":352,"author":{"gitId":"godjuansan"},"content":"* Limitations:","lastModifiedDate":"2021-02-27"},{"lineNumber":353,"author":{"gitId":"godjuansan"},"content":"    * Unable to provide students with thorough materials/all the answers.","lastModifiedDate":"2021-02-27"},{"lineNumber":354,"author":{"gitId":"godjuansan"},"content":"    * Unable to play videos from lectures.","lastModifiedDate":"2021-02-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"TeoHoeKeat"},"content":"#### User Stories : Main/UI","lastModifiedDate":"2021-02-28"},{"lineNumber":360,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":361,"author":{"gitId":"TeoHoeKeat"},"content":"| Priority | As a …​                                                   | I want to …​                                          | So that I can…​                                            | Category               |","lastModifiedDate":"2021-02-28"},{"lineNumber":362,"author":{"gitId":"XindiTian"},"content":"| -------- | -------------------------------------------------------------| -------------------------------------------------------- | ------------------------------------------------------------- | ---------------------- |","lastModifiedDate":"2021-03-25"},{"lineNumber":363,"author":{"gitId":"XindiTian"},"content":"|***Main***| | | |","lastModifiedDate":"2021-03-25"},{"lineNumber":364,"author":{"gitId":"XindiTian"},"content":"| `* *`    | CS2103 Student                                               | View note and dictionary side-by-side                    | Easily copy a note from dictionary                            | Main/UI/UX         |","lastModifiedDate":"2021-03-14"},{"lineNumber":365,"author":{"gitId":"TeoHoeKeat"},"content":"| `* *`    | CS2103 Student                                               | Open and close Contact panel                             | Have more space for other content                             | Main/Non-essential |","lastModifiedDate":"2021-02-28"},{"lineNumber":366,"author":{"gitId":"TeoHoeKeat"},"content":"| `* *`    | CS2103 Student                                               | Open and close Dictionary panel                          | Have more space for other content                             | Main/Non-essential |","lastModifiedDate":"2021-02-28"},{"lineNumber":367,"author":{"gitId":"TeoHoeKeat"},"content":"| `* *`    | CS2103 Student                                               | Open and close Dictionary manager panel                  | Have more space for other content                             | Main/Non-essential |","lastModifiedDate":"2021-02-28"},{"lineNumber":368,"author":{"gitId":"TeoHoeKeat"},"content":"| `* *`    | CS2103 Student                                               | Open and close Note panel                                | Have more space for other content                             | Main/Non-essential |","lastModifiedDate":"2021-02-28"},{"lineNumber":369,"author":{"gitId":"TeoHoeKeat"},"content":"| `* *`    | CS2103 Student                                               | Open and close Note Manager panel                        | Have more space for other content                             | Main/Non-essential |","lastModifiedDate":"2021-02-28"},{"lineNumber":370,"author":{"gitId":"TeoHoeKeat"},"content":"| `* *`    | CS2103 Student                                               | Save my UI configuration                                 | Save my time on re-adjust the Ui                              | Main/Non-essential |","lastModifiedDate":"2021-03-21"},{"lineNumber":371,"author":{"gitId":"TeoHoeKeat"},"content":"| `* *`    | CS2103 Student                                               | Change my UI configuration                               | do no need to adjust the UI using mouse                       | Main/Non-essential |","lastModifiedDate":"2021-03-21"},{"lineNumber":372,"author":{"gitId":"TeoHoeKeat"},"content":"| `* *`    | CS2103 Student                                               | Change my UI orientation                                 | use the space available more efficiently                      | Main/Non-essential |","lastModifiedDate":"2021-03-21"},{"lineNumber":373,"author":{"gitId":"TeoHoeKeat"},"content":"|***Dictionary*** | -- | -- | --  | -- |","lastModifiedDate":"2021-03-26"},{"lineNumber":374,"author":{"gitId":"XindiTian"},"content":"| `* * *`  | CS2103T student who find it troublesome to use the website   | Search for a definition of an SE term                    | Understand what it means                                      | Dictionary/Essential|","lastModifiedDate":"2021-03-25"},{"lineNumber":375,"author":{"gitId":"XindiTian"},"content":"| `* * *`  | CS2103T student                                              | Find content I need                                      | Save time having to dig through the textbook                  | Dictionary/Essential|","lastModifiedDate":"2021-03-25"},{"lineNumber":376,"author":{"gitId":"XindiTian"},"content":"| `* * *`  | CS2103T student                                              | List all the contents in the dictionary                  | View the extensive list of contents                           | Dictionary/Essential|","lastModifiedDate":"2021-03-25"},{"lineNumber":377,"author":{"gitId":"XindiTian"},"content":"| `* * *`  | CS2103T student                                              | List all the definitions in the dictionary               | View the extensive list of contents                           | Dictionary/Essential|","lastModifiedDate":"2021-03-25"},{"lineNumber":378,"author":{"gitId":"XindiTian"},"content":"| `*`      | CS2103T student                                              | Track my progress when reading through a summary         | Continue my preparation from where I left off                 | Dictionary/Non-essential|","lastModifiedDate":"2021-03-25"},{"lineNumber":379,"author":{"gitId":"XindiTian"},"content":"| `* *`    | CS2103T student                                              | Copy specific contents in the dictionary to the notes    | Keep track of the important content on my personal note list  | Dictionary/Non-essential|","lastModifiedDate":"2021-03-25"},{"lineNumber":380,"author":{"gitId":"TeoHoeKeat"},"content":"|***Note*** |  |  |  | |","lastModifiedDate":"2021-03-26"},{"lineNumber":381,"author":{"gitId":"jessen11"},"content":"| `* * *`  | CS2103T student                                              | Take a new note                                          | Have easy access to my materials whenever I need them         | Note/Essential  |","lastModifiedDate":"2021-03-15"},{"lineNumber":382,"author":{"gitId":"jessen11"},"content":"| `* * * ` | CS2103T student                                              | Delete an existing note                                  | Remove out-of-date notes.                                     | Note/Essential  |","lastModifiedDate":"2021-03-15"},{"lineNumber":383,"author":{"gitId":"jessen11"},"content":"| `* * * ` | CS2103T student                                              | Edit a note                                              | Revise a small typo in the note.                              | Note/Essential  |","lastModifiedDate":"2021-03-15"},{"lineNumber":384,"author":{"gitId":"jessen11"},"content":"| `* * * ` | CS2103T student                                              | Look at all notes                                        | Remember what is the content of the note                      | Note/Essential  |","lastModifiedDate":"2021-03-15"},{"lineNumber":385,"author":{"gitId":"jessen11"},"content":"| `* * * ` | CS2103T student                                              | Show a specific note                                     | To read the content of a specific note in detail              | Note/Essential  |","lastModifiedDate":"2021-03-15"},{"lineNumber":386,"author":{"gitId":"XindiTian"},"content":"| `* * * ` | CS2103T student                                              | Edit a note in edit mode                                 | Modify the content of the note easily.                        | Note/Essential  |","lastModifiedDate":"2021-03-25"},{"lineNumber":387,"author":{"gitId":"jessen11"},"content":"| `* * `   | CS2103T student                                              | Tag a note                                               | I can access notes easily.                                    | Note/Non-Essential  |","lastModifiedDate":"2021-03-15"},{"lineNumber":388,"author":{"gitId":"jessen11"},"content":"| `* * `   | CS2103T student                                              | Track the date and time the note is created              | Find the note according to the time created                   | Note/Non-Essential  |","lastModifiedDate":"2021-03-15"},{"lineNumber":389,"author":{"gitId":"jessen11"},"content":"| `* * `   | CS2103T student                                              | Sort a note alphabetically                               | I can read the notes in order.                                | Note/Non-Essential  |","lastModifiedDate":"2021-03-23"},{"lineNumber":390,"author":{"gitId":"jessen11"},"content":"| `* * `   | CS2103T student                                              | Search a note using keyword                              | Find out what notes contain the specific keyword.             | Note/Non-Essential  |","lastModifiedDate":"2021-03-23"},{"lineNumber":391,"author":{"gitId":"godjuansan"},"content":"| `* * `   | CS2103T student                                              | Mark a note as undone                                    | Remember which part of the notes I have not done yet.         | Note/Non-Essential  |","lastModifiedDate":"2021-03-24"},{"lineNumber":392,"author":{"gitId":"godjuansan"},"content":"| `* * `   | CS2103T student                                              | Mark all notes as undone                                 | Reset all the features I have marked as done.                 | Note/Non-Essential  |","lastModifiedDate":"2021-03-24"},{"lineNumber":393,"author":{"gitId":"XindiTian"},"content":"| `* `     | CS2103T student                                              | Track the date and time the note is last modified        | Find the note according to the time last modify.              | Note/Non-Essential  |","lastModifiedDate":"2021-03-25"},{"lineNumber":394,"author":{"gitId":"XindiTian"},"content":"| `* `     | CS2103T student                                              | Mark a content of a note as done                         | Remember which part of the notes I have done.                 | Note/Non-Essential  |","lastModifiedDate":"2021-03-25"},{"lineNumber":395,"author":{"gitId":"TeoHoeKeat"},"content":"|***Contact***| | | | |","lastModifiedDate":"2021-03-26"},{"lineNumber":396,"author":{"gitId":"riyadh-h"},"content":"| `* * *`  | CS2103T Student                                              | Add my contacts                                          | Easily manage the contacts list                               | Contact/Essential     |","lastModifiedDate":"2021-03-15"},{"lineNumber":397,"author":{"gitId":"riyadh-h"},"content":"| `* * *`  | CS2103T Student                                              | Edit my contacts                                         | Easily manage the contacts list                               | Contact/Essential     |","lastModifiedDate":"2021-03-15"},{"lineNumber":398,"author":{"gitId":"riyadh-h"},"content":"| `* * *`  | CS2103T Student                                              | Delete my contacts                                       | Easily manage the contacts list                               | Contact/Essential     |","lastModifiedDate":"2021-03-15"},{"lineNumber":399,"author":{"gitId":"riyadh-h"},"content":"| `* * *`  | CS2103T Student                                              | Look at all contacts                                     | Easily manage the contacts list                               | Contact/Essential     |","lastModifiedDate":"2021-03-15"},{"lineNumber":400,"author":{"gitId":"riyadh-h"},"content":"| `* *`    | CS2103T Student                                              | Tag a contact with a word                                | Find contacts based on their tags                             | Contact/Non-essential |","lastModifiedDate":"2021-03-15"},{"lineNumber":401,"author":{"gitId":"riyadh-h"},"content":"| `* *`    | CS2103T Student                                              | Search for contacts using tags                           | Contact anyone from a particular tag                          | Contact/Non-essential |","lastModifiedDate":"2021-03-15"},{"lineNumber":402,"author":{"gitId":"riyadh-h"},"content":"| `* *`    | CS2103T Student who wants to connect with others that I know | Email anyone from my contacts list                       | Ask questions, discuss topics, or exchange notes with them    | Contact/Non-essential |","lastModifiedDate":"2021-03-15"},{"lineNumber":403,"author":{"gitId":"TeoHoeKeat"},"content":"|***Guide*** | | | | |","lastModifiedDate":"2021-03-26"},{"lineNumber":404,"author":{"gitId":"TeoHoeKeat"},"content":"| `* * *`  | CS2103T student who is bad at remembering commands           | Access the list of commands with brief explanation       | Save time having to search through user guide for details     | Guide/Essential  |","lastModifiedDate":"2021-03-21"},{"lineNumber":405,"author":{"gitId":"TeoHoeKeat"},"content":"| `* * *`  | CS2103T student who uses commands often                      | Scan through the list of commands for a quick refresher  | Save time having to search through user guide for all command | Guide/Essential  |","lastModifiedDate":"2021-03-21"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":411,"author":{"gitId":"TeoHoeKeat"},"content":"(For all use cases below, the **System** is the `Dictionote` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-28"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"TeoHoeKeat"},"content":"**Use case: UC01 - Close Panel**","lastModifiedDate":"2021-03-03"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":415,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":416,"author":{"gitId":"TeoHoeKeat"},"content":"1.  User requests to close a specific display panel","lastModifiedDate":"2021-03-03"},{"lineNumber":417,"author":{"gitId":"TeoHoeKeat"},"content":"2.  Dictionote close the display Panel","lastModifiedDate":"2021-03-03"},{"lineNumber":418,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":419,"author":{"gitId":"TeoHoeKeat"},"content":"    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":420,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":421,"author":{"gitId":"TeoHoeKeat"},"content":"**Extensions**","lastModifiedDate":"2021-02-28"},{"lineNumber":422,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":423,"author":{"gitId":"TeoHoeKeat"},"content":"* 1a. The given display panel is invalid.","lastModifiedDate":"2021-03-03"},{"lineNumber":424,"author":{"gitId":"TeoHoeKeat"},"content":"    * 1a1. Dictionote shows an error message","lastModifiedDate":"2021-03-03"},{"lineNumber":425,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":426,"author":{"gitId":"TeoHoeKeat"},"content":"      Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":427,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":429,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"riyadh-h"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2021-03-24"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"riyadh-h"},"content":"1.  User requests to list contacts","lastModifiedDate":"2021-03-24"},{"lineNumber":436,"author":{"gitId":"riyadh-h"},"content":"2.  Dictionote shows a list of contacts","lastModifiedDate":"2021-03-24"},{"lineNumber":437,"author":{"gitId":"riyadh-h"},"content":"3.  User requests to delete a specific contact in the list","lastModifiedDate":"2021-03-24"},{"lineNumber":438,"author":{"gitId":"riyadh-h"},"content":"4.  Dictionote deletes the contact","lastModifiedDate":"2021-03-24"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"TeoHoeKeat"},"content":"    * 3a1. Dictionote shows an error message.","lastModifiedDate":"2021-02-28"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"TeoHoeKeat"},"content":"#### User Requirement","lastModifiedDate":"2021-02-27"},{"lineNumber":459,"author":{"gitId":"TeoHoeKeat"},"content":"1. Typing Preferred User","lastModifiedDate":"2021-02-27"},{"lineNumber":460,"author":{"gitId":"TeoHoeKeat"},"content":"    * user should be targeting user who can type fast","lastModifiedDate":"2021-02-27"},{"lineNumber":461,"author":{"gitId":"TeoHoeKeat"},"content":"    * user should have above average typing speed for regular English text","lastModifiedDate":"2021-02-27"},{"lineNumber":462,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":463,"author":{"gitId":"TeoHoeKeat"},"content":"#### Software Requirement","lastModifiedDate":"2021-02-27"},{"lineNumber":464,"author":{"gitId":"TeoHoeKeat"},"content":"1. Single User","lastModifiedDate":"2021-02-27"},{"lineNumber":465,"author":{"gitId":"TeoHoeKeat"},"content":"    * should be for single user.","lastModifiedDate":"2021-02-27"},{"lineNumber":466,"author":{"gitId":"TeoHoeKeat"},"content":"1. Human Editable File","lastModifiedDate":"2021-02-27"},{"lineNumber":467,"author":{"gitId":"TeoHoeKeat"},"content":"    * data should be stored locally and should be in a human editable text file.","lastModifiedDate":"2021-02-27"},{"lineNumber":468,"author":{"gitId":"TeoHoeKeat"},"content":"1. Single File","lastModifiedDate":"2021-02-27"},{"lineNumber":469,"author":{"gitId":"TeoHoeKeat"},"content":"    * should work with a single JAR file","lastModifiedDate":"2021-02-27"},{"lineNumber":470,"author":{"gitId":"TeoHoeKeat"},"content":"1. File Size","lastModifiedDate":"2021-02-27"},{"lineNumber":471,"author":{"gitId":"TeoHoeKeat"},"content":"    * file sizes of the deliverables should not exceed the `100MB`","lastModifiedDate":"2021-02-27"},{"lineNumber":472,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":473,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":474,"author":{"gitId":"TeoHoeKeat"},"content":"#### Dependency Requirement","lastModifiedDate":"2021-02-27"},{"lineNumber":475,"author":{"gitId":"TeoHoeKeat"},"content":"1. Platform Independent","lastModifiedDate":"2021-02-27"},{"lineNumber":476,"author":{"gitId":"TeoHoeKeat"},"content":"    * should work on Windows, Linux and OS-X platform.","lastModifiedDate":"2021-02-27"},{"lineNumber":477,"author":{"gitId":"TeoHoeKeat"},"content":"    * avoid using OS-dependent libraries and OS-specific features","lastModifiedDate":"2021-02-27"},{"lineNumber":478,"author":{"gitId":"TeoHoeKeat"},"content":"1. Java version","lastModifiedDate":"2021-02-27"},{"lineNumber":479,"author":{"gitId":"TeoHoeKeat"},"content":"    * Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2021-02-27"},{"lineNumber":480,"author":{"gitId":"TeoHoeKeat"},"content":"    * should work without requiring an installer","lastModifiedDate":"2021-02-27"},{"lineNumber":481,"author":{"gitId":"TeoHoeKeat"},"content":"1. Portable","lastModifiedDate":"2021-02-27"},{"lineNumber":482,"author":{"gitId":"TeoHoeKeat"},"content":"    * should work without requiring an installer","lastModifiedDate":"2021-02-27"},{"lineNumber":483,"author":{"gitId":"TeoHoeKeat"},"content":"1. External Software","lastModifiedDate":"2021-02-27"},{"lineNumber":484,"author":{"gitId":"TeoHoeKeat"},"content":"    * Third party frameworks/libraries is subjected to approval, and only if they,","lastModifiedDate":"2021-02-27"},{"lineNumber":485,"author":{"gitId":"TeoHoeKeat"},"content":"        * are free, open-source, and have permissive license.","lastModifiedDate":"2021-02-27"},{"lineNumber":486,"author":{"gitId":"TeoHoeKeat"},"content":"        * do not require any installation by the user of your software.","lastModifiedDate":"2021-02-27"},{"lineNumber":487,"author":{"gitId":"TeoHoeKeat"},"content":"        * do not violate other constraint.","lastModifiedDate":"2021-02-27"},{"lineNumber":488,"author":{"gitId":"TeoHoeKeat"},"content":"1. No Database Management System","lastModifiedDate":"2021-02-27"},{"lineNumber":489,"author":{"gitId":"TeoHoeKeat"},"content":"    * should not use any database management system to store data.","lastModifiedDate":"2021-02-27"},{"lineNumber":490,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":491,"author":{"gitId":"TeoHoeKeat"},"content":"#### Documentation Requirement","lastModifiedDate":"2021-02-27"},{"lineNumber":492,"author":{"gitId":"TeoHoeKeat"},"content":"1. PDF Friendly","lastModifiedDate":"2021-02-27"},{"lineNumber":493,"author":{"gitId":"TeoHoeKeat"},"content":"    * The Developer Guide and User Guide should be PDF-friendly.","lastModifiedDate":"2021-02-27"},{"lineNumber":494,"author":{"gitId":"TeoHoeKeat"},"content":"    * do not use expandable panels, embedded videos, animated GIFs etc.","lastModifiedDate":"2021-02-27"},{"lineNumber":495,"author":{"gitId":"TeoHoeKeat"},"content":"1. File Size","lastModifiedDate":"2021-02-27"},{"lineNumber":496,"author":{"gitId":"TeoHoeKeat"},"content":"    * file sizes of documents should not exceed the `15MB`","lastModifiedDate":"2021-02-27"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"TeoHoeKeat":118,"jessen11":9,"godjuansan":15,"riyadh-h":55,"XindiTian":30,"-":327}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"   1. Run the `seedu.dictionote.Main` and try a few commands.","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [Dictionote’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"XindiTian":2,"-":46}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"   e.g. `seedu.dictionote.commons.StringUtilTest`","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"   e.g. `seedu.dictionote.storage.StorageManagerTest`","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"   e.g. `seedu.dictionote.logic.LogicManagerTest`","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"XindiTian":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"**Dictionote** is a desktop application that helps CS2103T students in finding information about the module\u0027s materials and writing notes about them. It is optimised for Command Line Interface (CLI) users so that searching and writing operations can be done quickly by typing in commands.","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"1. Download the latest `dictionote.jar` from [here](https://github.com/AY2021S2-CS2103T-W13-1/tp/releases).","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Dictionote application.","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"1. Double-click the file to start the app. The GUI should appear in a few seconds. \u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"  e.g. in `addNote c/CONTENT`, `CONTENT` is a parameter which can be used as `addnote c/This is a note`.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `listcommand`, `exit` and `clearcontact`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-02-03"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"* Extraneous parameter for commands that only take in one parameters (such as `open`, `close`, and `setdividerc) will not be ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"  e.g. if the command specifies `open -c 123`, the command will be invalid.","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"  ","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"  ","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"### Guide Feature","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"#### Viewing help : `help`","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"#### Viewing Command List : `listcommand`","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"Shows a list of available command","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `listcommand`","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"### Dictionary Features","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"#### Finding content in the Dictionary using keywords: `findcontent`","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"Finds relevant content in the dictionary that matches the keywords.","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `findcontent KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"* The search is case-insensitive. e.g `programming` will match `PROGRAMMING` or `Programming`","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"* The order of the keywords does not matter. e.g. `content some` will match `some content`","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"* Only the content is searched, headers and week numbers are not included.","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"* Only full words will be matched e.g. `prog` will not match `programming`","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"* Contents matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"  e.g. `some different` will return `some content`, `different thing`","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"Examples:","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"* `findcontent programming` returns `Programming` and `PROGRAMMING LANGUAGE`","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"* `findcontent some different` returns `some content`, `different thing`\u003cbr\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"#### Finding definition in the Dictionary using keywords: `finddef`","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"Finds relevant content in the dictionary that matches the keywords.","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `finddef KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"* The search is case-insensitive. e.g `programming` will match `PROGRAMMING` or `Programming`","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"* The order of the keywords does not matter. e.g. `content some` will match `some content`","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"* Only the content is searched, headers and week numbers are not included.","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"* Only full words will be matched e.g. `prog` will not match `programming`","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"* Contents matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"  e.g. `some different` will return `some content`, `different thing`","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"Examples:","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"* `finddef programming` returns `Programming Language` and `Object-Oriented Programming` \u003cbr\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"#### Show a dictionary content : `showdc`","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"Showcases a dictionary content.","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `showdc INDEX​`","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"* Shows the dictionary content at the specified `INDEX`.","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"* The index refers to the index number shown in the displayed dictionary list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"XindiTian"},"content":"#### Listing all content : `listcontent`","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"XindiTian"},"content":"Shows a list of all contents in the Dictionary.","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"XindiTian"},"content":"Format: `listcontent`","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"XindiTian"},"content":"#### Listing all definitions : `listdef`","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"XindiTian"},"content":"Shows a list of all the definitions in the Dictionary.","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"XindiTian"},"content":"Format: `listdef`","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"### Note Features","lastModifiedDate":"2021-03-22"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"#### Add a new note: `addnote`","lastModifiedDate":"2021-03-22"},{"lineNumber":137,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"jessen11"},"content":"Adds a note equipped with some tags.","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"jessen11"},"content":"Format: `addnote c/CONTENT [t/TAG]...`","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"jessen11"},"content":"* Tags are optional. However, there must be exactly one content.","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"jessen11"},"content":"* In the current version, notes will be stored as a pure string.","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"jessen11"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"jessen11"},"content":"* `addnote c/Do Homework`","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"jessen11"},"content":"* `addnote c/Study for Midterms t/CS2103`","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"TeoHoeKeat"},"content":"#### Delete a new note: `deletenote`","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"jessen11"},"content":"Deletes the specified note from the note list.","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"jessen11"},"content":"Format: `deletenote INDEX`","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"jessen11"},"content":"* Deletes the note at the specified `INDEX`.","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"jessen11"},"content":"* The index refers to the index number shown in the displayed note list.","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"jessen11"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"TeoHoeKeat"},"content":"#### Mark a note as done: `markasdonenote`","lastModifiedDate":"2021-03-22"},{"lineNumber":160,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"jessen11"},"content":"Marks a note in a list as done.","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"jessen11"},"content":"Format: `markasdonenote INDEX`","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"jessen11"},"content":"* Marks the note at the specified `INDEX` as done.","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"jessen11"},"content":"* The index refers to the index number shown in the displayed note list.","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"jessen11"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"jessen11"},"content":"* After execution, the affected note will be marked with a green tick.","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"godjuansan"},"content":"#### Mark a note as undone: `markasundonenote`","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"godjuansan"},"content":"Marks a note in a list as undone.","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"jessen11"},"content":"Format: `markasundonenote INDEX`","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"godjuansan"},"content":"* Marks the note at the specified `INDEX` as undone.","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"godjuansan"},"content":"* The index refers to the index number shown in the displayed note list.","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"godjuansan"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"godjuansan"},"content":"* After execution, the affected note will not be marked with a green tick.","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"godjuansan"},"content":"#### Mark all notes as undone: `markallasundonenote`","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"godjuansan"},"content":"Marks all notes in a list as undone.","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"godjuansan"},"content":"Format: `markallasundonenote`","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"godjuansan"},"content":"* Marks all the notes as undone.","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"godjuansan"},"content":"* After execution, all notes marked with a green tick will be reset.","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"TeoHoeKeat"},"content":"#### Editing a note : `editnote`","lastModifiedDate":"2021-03-22"},{"lineNumber":191,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":192,"author":{"gitId":"jessen11"},"content":"Edits an existing note in the note list.","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":194,"author":{"gitId":"jessen11"},"content":"Format: `editnote INDEX c/CONTENT [t/TAG]…​`","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"jessen11"},"content":"* Edits the note at the specified `INDEX`. The index refers to the index number shown in the displayed note list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"jessen11"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"jessen11"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"jessen11"},"content":"* When editing tags, the existing tags of the note will be removed (i.e., adding of tags is not cumulative).","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"jessen11"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":202,"author":{"gitId":"jessen11"},"content":"*  `editnote 1 c/Hello t/Important` Edits the content and tags of the 1st contact to be `Hello` and `Important` respectively.","lastModifiedDate":"2021-03-15"},{"lineNumber":203,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":204,"author":{"gitId":"TeoHoeKeat"},"content":"#### Show a note : `shownote`","lastModifiedDate":"2021-03-22"},{"lineNumber":205,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":206,"author":{"gitId":"jessen11"},"content":"Showcases a note.","lastModifiedDate":"2021-03-15"},{"lineNumber":207,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":208,"author":{"gitId":"jessen11"},"content":"Format: `shownote INDEX​`","lastModifiedDate":"2021-03-15"},{"lineNumber":209,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":210,"author":{"gitId":"jessen11"},"content":"* Shows the note at the specified `INDEX`. The index refers to the index number shown in the displayed note list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-15"},{"lineNumber":211,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":212,"author":{"gitId":"TeoHoeKeat"},"content":"#### List all notes : `listnote`","lastModifiedDate":"2021-03-22"},{"lineNumber":213,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":214,"author":{"gitId":"jessen11"},"content":"Lists every note on the note list.","lastModifiedDate":"2021-03-15"},{"lineNumber":215,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":216,"author":{"gitId":"jessen11"},"content":"Format: `listnote​`","lastModifiedDate":"2021-03-15"},{"lineNumber":217,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":218,"author":{"gitId":"jessen11"},"content":"#### Sort all notes : `sortnote`","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"jessen11"},"content":"Sort every note on the note list alphabetically.","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":222,"author":{"gitId":"jessen11"},"content":"Format: `sortnote`","lastModifiedDate":"2021-03-23"},{"lineNumber":223,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":224,"author":{"gitId":"jessen11"},"content":"#### Find notes using a keyword : `findnote`","lastModifiedDate":"2021-03-23"},{"lineNumber":225,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"jessen11"},"content":"Find notes whose names contain any of—or tags contain all of—the given keywords.","lastModifiedDate":"2021-03-23"},{"lineNumber":227,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":228,"author":{"gitId":"jessen11"},"content":"Format: `findnote c/NAME_KEYWORD... [t/TAG_KEYWORD]...`","lastModifiedDate":"2021-03-27"},{"lineNumber":229,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"jessen11"},"content":"* The search is case-insensitive. e.g `c/cs2103` will match the name `CS2103`","lastModifiedDate":"2021-03-23"},{"lineNumber":231,"author":{"gitId":"jessen11"},"content":"* Only the content and tags are searched.","lastModifiedDate":"2021-03-23"},{"lineNumber":232,"author":{"gitId":"jessen11"},"content":"* Notes and tags will be matched if they contain the given keywords e.g. `c/CS` will match the note containing `CS2103T`","lastModifiedDate":"2021-03-23"},{"lineNumber":233,"author":{"gitId":"jessen11"},"content":"* Notes matching at least one content keyword will be returned (i.e. OR search). e.g. `c/CS c/Important` will return `CS Midterm`, `Important stuff`","lastModifiedDate":"2021-03-23"},{"lineNumber":234,"author":{"gitId":"jessen11"},"content":"* Notes matching all of the given tag keywords will be returned (i.e. AND search). e.g. `c/urgent` will return all notes that are tagged with `urgent`.","lastModifiedDate":"2021-03-23"},{"lineNumber":235,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":236,"author":{"gitId":"jessen11"},"content":"Examples:","lastModifiedDate":"2021-03-23"},{"lineNumber":237,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":238,"author":{"gitId":"jessen11"},"content":"* `findnote c/CS2103` returns note containing `CS2103`","lastModifiedDate":"2021-03-23"},{"lineNumber":239,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":240,"author":{"gitId":"TeoHoeKeat"},"content":"#### Edit a note in edit mode : `editmode`","lastModifiedDate":"2021-03-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"TeoHoeKeat"},"content":"Edits a note in edits mode.","lastModifiedDate":"2021-03-22"},{"lineNumber":243,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":244,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `editmodenote`","lastModifiedDate":"2021-03-22"},{"lineNumber":245,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":246,"author":{"gitId":"TeoHoeKeat"},"content":"* A note have to be show on the note content panel using `shownote` command.","lastModifiedDate":"2021-03-22"},{"lineNumber":247,"author":{"gitId":"TeoHoeKeat"},"content":"* In edit note mode, all others note related command will be disable.","lastModifiedDate":"2021-03-22"},{"lineNumber":248,"author":{"gitId":"TeoHoeKeat"},"content":"* To exit edit note mode, use `exitnote` to discard all changes or `savenote` to save all changes","lastModifiedDate":"2021-03-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":251,"author":{"gitId":"TeoHoeKeat"},"content":"Examples:","lastModifiedDate":"2021-03-22"},{"lineNumber":252,"author":{"gitId":"TeoHoeKeat"},"content":"* `editmodenote`","lastModifiedDate":"2021-03-22"},{"lineNumber":253,"author":{"gitId":"TeoHoeKeat"},"content":"  * note content will be editable","lastModifiedDate":"2021-03-22"},{"lineNumber":254,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":255,"author":{"gitId":"TeoHoeKeat"},"content":"#### Save and quit edit mode: `save`","lastModifiedDate":"2021-03-27"},{"lineNumber":256,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":257,"author":{"gitId":"TeoHoeKeat"},"content":"Save edited content and quit edits mode and.","lastModifiedDate":"2021-03-27"},{"lineNumber":258,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":259,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `save`","lastModifiedDate":"2021-03-27"},{"lineNumber":260,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":261,"author":{"gitId":"TeoHoeKeat"},"content":"* The program have to be in edit mode.","lastModifiedDate":"2021-03-27"},{"lineNumber":262,"author":{"gitId":"TeoHoeKeat"},"content":"* All changes will be saved.","lastModifiedDate":"2021-03-27"},{"lineNumber":263,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":264,"author":{"gitId":"TeoHoeKeat"},"content":"Examples:","lastModifiedDate":"2021-03-27"},{"lineNumber":265,"author":{"gitId":"TeoHoeKeat"},"content":"* `save`","lastModifiedDate":"2021-03-27"},{"lineNumber":266,"author":{"gitId":"TeoHoeKeat"},"content":"  * exit edit mode and save all changes.","lastModifiedDate":"2021-03-27"},{"lineNumber":267,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":268,"author":{"gitId":"TeoHoeKeat"},"content":"#### Quit edit mode : `quit`","lastModifiedDate":"2021-03-27"},{"lineNumber":269,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":270,"author":{"gitId":"TeoHoeKeat"},"content":"Quit edits mode.","lastModifiedDate":"2021-03-27"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":272,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `quit`","lastModifiedDate":"2021-03-27"},{"lineNumber":273,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":274,"author":{"gitId":"TeoHoeKeat"},"content":"* The program have to be in edit mode.","lastModifiedDate":"2021-03-27"},{"lineNumber":275,"author":{"gitId":"TeoHoeKeat"},"content":"* All changes will be discarded.","lastModifiedDate":"2021-03-27"},{"lineNumber":276,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":277,"author":{"gitId":"TeoHoeKeat"},"content":"Examples:","lastModifiedDate":"2021-03-27"},{"lineNumber":278,"author":{"gitId":"TeoHoeKeat"},"content":"* `quit`","lastModifiedDate":"2021-03-27"},{"lineNumber":279,"author":{"gitId":"TeoHoeKeat"},"content":"  * quit edit mode and discard all changes.","lastModifiedDate":"2021-03-27"},{"lineNumber":280,"author":{"gitId":"TeoHoeKeat"},"content":"  ","lastModifiedDate":"2021-03-27"},{"lineNumber":281,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":282,"author":{"gitId":"XindiTian"},"content":"### Contact Features","lastModifiedDate":"2021-03-26"},{"lineNumber":283,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":284,"author":{"gitId":"XindiTian"},"content":"#### Adding a contact: `addcontact`","lastModifiedDate":"2021-03-26"},{"lineNumber":285,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":286,"author":{"gitId":"XindiTian"},"content":"Adds a contact to the contacts list.","lastModifiedDate":"2021-03-26"},{"lineNumber":287,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":288,"author":{"gitId":"XindiTian"},"content":"Format: `addcontact n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2021-03-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":290,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-26"},{"lineNumber":291,"author":{"gitId":"XindiTian"},"content":"A contact can have any number of tags (including 0)","lastModifiedDate":"2021-03-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":294,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-26"},{"lineNumber":295,"author":{"gitId":"XindiTian"},"content":"* `addcontact n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2021-03-26"},{"lineNumber":296,"author":{"gitId":"XindiTian"},"content":"* `addcontact n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2021-03-26"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":298,"author":{"gitId":"XindiTian"},"content":"#### Listing all contacts : `listcontact`","lastModifiedDate":"2021-03-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":300,"author":{"gitId":"XindiTian"},"content":"Shows a list of all contacts in the contacts list.","lastModifiedDate":"2021-03-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":302,"author":{"gitId":"XindiTian"},"content":"Format: `listcontact`","lastModifiedDate":"2021-03-26"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":304,"author":{"gitId":"XindiTian"},"content":"#### Editing a contact : `editcontact`","lastModifiedDate":"2021-03-26"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":306,"author":{"gitId":"XindiTian"},"content":"Edits an existing contact in the contacts list.","lastModifiedDate":"2021-03-26"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":308,"author":{"gitId":"XindiTian"},"content":"Format: `editcontact INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2021-03-26"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":310,"author":{"gitId":"XindiTian"},"content":"* Edits the contact at the specified `INDEX`. The index refers to the index number shown in the displayed contacts list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-26"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-26"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-03-26"},{"lineNumber":313,"author":{"gitId":"XindiTian"},"content":"* When editing tags, the existing tags of the contact will be removed (i.e., adding of tags is not cumulative).","lastModifiedDate":"2021-03-26"},{"lineNumber":314,"author":{"gitId":"XindiTian"},"content":"* You can remove all of the contact’s tags by typing `t/` without","lastModifiedDate":"2021-03-26"},{"lineNumber":315,"author":{"gitId":"XindiTian"},"content":"  specifying any tags after it.","lastModifiedDate":"2021-03-26"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":317,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-26"},{"lineNumber":318,"author":{"gitId":"XindiTian"},"content":"*  `editcontact 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st contact to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-03-26"},{"lineNumber":319,"author":{"gitId":"XindiTian"},"content":"*  `editcontact 2 n/Betsy Crower t/` Edits the name of the 2nd contact to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-03-26"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":321,"author":{"gitId":"XindiTian"},"content":"#### Locating contacts: `findcontact`","lastModifiedDate":"2021-03-26"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":323,"author":{"gitId":"riyadh-h"},"content":"Finds contacts whose names and emails contain any of—or tags contain all of—the given keywords.","lastModifiedDate":"2021-03-27"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":325,"author":{"gitId":"riyadh-h"},"content":"Format: `findcontact [n/NAME_KEYWORD]... [e/EMAIL_KEYWORD]... [t/TAG_KEYWORD]...`","lastModifiedDate":"2021-03-27"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":327,"author":{"gitId":"XindiTian"},"content":"* The search is case-insensitive. e.g `n/hans` will match the name `Hans`","lastModifiedDate":"2021-03-26"},{"lineNumber":328,"author":{"gitId":"XindiTian"},"content":"* The order of the keywords does not matter. e.g. `n/Hans n/Bo` will match the name `Bo Hans`","lastModifiedDate":"2021-03-26"},{"lineNumber":329,"author":{"gitId":"riyadh-h"},"content":"* Only the name, email, and tags are searched.","lastModifiedDate":"2021-03-27"},{"lineNumber":330,"author":{"gitId":"riyadh-h"},"content":"* Names, emails, and tags will be matched if they contain the given keywords e.g. `n/Han` will match the name `Hans`","lastModifiedDate":"2021-03-27"},{"lineNumber":331,"author":{"gitId":"XindiTian"},"content":"* Contacts matching at least one name keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-03-26"},{"lineNumber":332,"author":{"gitId":"XindiTian"},"content":"  e.g. `n/Hans n/Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-03-26"},{"lineNumber":333,"author":{"gitId":"riyadh-h"},"content":"* Contacts matching at least one email keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-03-27"},{"lineNumber":334,"author":{"gitId":"riyadh-h"},"content":"  e.g. `e/@mail.com e/@mail.net` will return contacts with the following emails: `hans@mail.com`, `bo@mail.net`","lastModifiedDate":"2021-03-27"},{"lineNumber":335,"author":{"gitId":"XindiTian"},"content":"* Contacts matching all of the given tag keywords will be returned (i.e. `AND` search).","lastModifiedDate":"2021-03-26"},{"lineNumber":336,"author":{"gitId":"riyadh-h"},"content":"  e.g. `t/friends t/university` will only return all contacts that are tagged with both `Friends` and `University`","lastModifiedDate":"2021-03-27"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":338,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-26"},{"lineNumber":339,"author":{"gitId":"XindiTian"},"content":"* `findcontact n/John` returns `john` and `John Doe`","lastModifiedDate":"2021-03-26"},{"lineNumber":340,"author":{"gitId":"XindiTian"},"content":"* `findcontact n/alex n/david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2021-03-26"},{"lineNumber":342,"author":{"gitId":"riyadh-h"},"content":"* (More examples to be added...)","lastModifiedDate":"2021-03-27"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":344,"author":{"gitId":"XindiTian"},"content":"#### Deleting a contact : `deletecontact`","lastModifiedDate":"2021-03-26"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":346,"author":{"gitId":"XindiTian"},"content":"Deletes the specified contact from the contacts list.","lastModifiedDate":"2021-03-26"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":348,"author":{"gitId":"XindiTian"},"content":"Format: `deletecontact INDEX`","lastModifiedDate":"2021-03-26"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":350,"author":{"gitId":"XindiTian"},"content":"* Deletes the contact at the specified `INDEX`.","lastModifiedDate":"2021-03-26"},{"lineNumber":351,"author":{"gitId":"XindiTian"},"content":"* The index refers to the index number shown in the displayed contacts list.","lastModifiedDate":"2021-03-26"},{"lineNumber":352,"author":{"gitId":"XindiTian"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-26"},{"lineNumber":353,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":354,"author":{"gitId":"XindiTian"},"content":"#### Sending an email to a contact : `emailcontact`","lastModifiedDate":"2021-03-26"},{"lineNumber":355,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":356,"author":{"gitId":"XindiTian"},"content":"Opens a new window to send an email to the specified contact from the contacts list.","lastModifiedDate":"2021-03-26"},{"lineNumber":357,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":358,"author":{"gitId":"XindiTian"},"content":"Format: `emailcontact INDEX`","lastModifiedDate":"2021-03-26"},{"lineNumber":359,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":360,"author":{"gitId":"XindiTian"},"content":"* Opens a new message composition window with the *to* field containing the email address of the contact at the specified `INDEX`.","lastModifiedDate":"2021-03-26"},{"lineNumber":361,"author":{"gitId":"XindiTian"},"content":"* The application uses the user\u0027s default mailing application to provide email features.","lastModifiedDate":"2021-03-26"},{"lineNumber":362,"author":{"gitId":"XindiTian"},"content":"* The application **does not guarantee** the success of sending an email, as it is handled by the mailing application used.","lastModifiedDate":"2021-03-26"},{"lineNumber":363,"author":{"gitId":"XindiTian"},"content":"* The index refers to the index number shown in the displayed contacts list.","lastModifiedDate":"2021-03-26"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-26"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":366,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-26"},{"lineNumber":367,"author":{"gitId":"XindiTian"},"content":"* `listcontact` followed by `emailcontact 2` opens a new message composition window targeting the 2nd contact in the contacts list.","lastModifiedDate":"2021-03-26"},{"lineNumber":368,"author":{"gitId":"XindiTian"},"content":"* `findcontact n/Alice` followed by `emailcontact 1` opens a new message composition window targeting the 1st contact in the results of the `findcontact` command.","lastModifiedDate":"2021-03-26"},{"lineNumber":369,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":370,"author":{"gitId":"riyadh-h"},"content":"#### Sorting the contacts list by most frequently-contacted: `mostfreqcontact`","lastModifiedDate":"2021-03-27"},{"lineNumber":371,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":372,"author":{"gitId":"riyadh-h"},"content":"Sorts the contacts list in descending order based on the number of email sending attempts to each contact.","lastModifiedDate":"2021-03-27"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":374,"author":{"gitId":"riyadh-h"},"content":"Format: `mostfreqcontact`","lastModifiedDate":"2021-03-27"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":376,"author":{"gitId":"riyadh-h"},"content":"* Each sucessful execution of `emailcommand` will be counted as an email sending attempt, regardless of whether an email was actually sent or not.","lastModifiedDate":"2021-03-27"},{"lineNumber":377,"author":{"gitId":"riyadh-h"},"content":"* The ordering of the contacts list after sorting will replace the original ordering. (i.e., the sorted ordering is stored by Dictionote)","lastModifiedDate":"2021-03-27"},{"lineNumber":378,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":379,"author":{"gitId":"XindiTian"},"content":"#### Clearing the contacts list : `clearcontact`","lastModifiedDate":"2021-03-26"},{"lineNumber":380,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":381,"author":{"gitId":"XindiTian"},"content":"Clears the contacts list from all contacts.","lastModifiedDate":"2021-03-26"},{"lineNumber":382,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":383,"author":{"gitId":"XindiTian"},"content":"Format: `clearcontact`","lastModifiedDate":"2021-03-26"},{"lineNumber":384,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":385,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":386,"author":{"gitId":"TeoHoeKeat"},"content":"### User Interface Feature","lastModifiedDate":"2021-03-22"},{"lineNumber":387,"author":{"gitId":"TeoHoeKeat"},"content":"Dictionote allows the user to manipulate the user-interface via command. ","lastModifiedDate":"2021-03-27"},{"lineNumber":388,"author":{"gitId":"TeoHoeKeat"},"content":"The following are the 5 region where the user can manipulate","lastModifiedDate":"2021-03-27"},{"lineNumber":389,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":390,"author":{"gitId":"TeoHoeKeat"},"content":"![Ui Panel ](images/UiPanel.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":391,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":392,"author":{"gitId":"TeoHoeKeat"},"content":"The region name is as follow :","lastModifiedDate":"2021-03-27"},{"lineNumber":393,"author":{"gitId":"TeoHoeKeat"},"content":"1. Contact Panel","lastModifiedDate":"2021-03-27"},{"lineNumber":394,"author":{"gitId":"TeoHoeKeat"},"content":"1. Dictionary List Panel","lastModifiedDate":"2021-03-27"},{"lineNumber":395,"author":{"gitId":"TeoHoeKeat"},"content":"1. Dictionary Content Panel","lastModifiedDate":"2021-03-27"},{"lineNumber":396,"author":{"gitId":"TeoHoeKeat"},"content":"1. Note List Panel","lastModifiedDate":"2021-03-27"},{"lineNumber":397,"author":{"gitId":"TeoHoeKeat"},"content":"1. Dictionary Content Panel","lastModifiedDate":"2021-03-27"},{"lineNumber":398,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":399,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":400,"author":{"gitId":"TeoHoeKeat"},"content":"#### Opening and Closing UI Panel","lastModifiedDate":"2021-03-27"},{"lineNumber":401,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":402,"author":{"gitId":"TeoHoeKeat"},"content":"##### Opening UI Panel: `open`","lastModifiedDate":"2021-03-27"},{"lineNumber":403,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":404,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":405,"author":{"gitId":"TeoHoeKeat"},"content":"Open selected UI Panel.","lastModifiedDate":"2021-03-22"},{"lineNumber":406,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":407,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `open Option`","lastModifiedDate":"2021-03-22"},{"lineNumber":408,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":409,"author":{"gitId":"TeoHoeKeat"},"content":"* The following `Option` are supported","lastModifiedDate":"2021-03-22"},{"lineNumber":410,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-a`: All panel","lastModifiedDate":"2021-03-22"},{"lineNumber":411,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-c`: Contact panel","lastModifiedDate":"2021-03-22"},{"lineNumber":412,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-d`: Dictionary panel","lastModifiedDate":"2021-03-22"},{"lineNumber":413,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-dc`: Dictionary content panel","lastModifiedDate":"2021-03-22"},{"lineNumber":414,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-dl`: Dictionary list panel","lastModifiedDate":"2021-03-22"},{"lineNumber":415,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-n`: Note panel","lastModifiedDate":"2021-03-22"},{"lineNumber":416,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-nc`: Note content panel","lastModifiedDate":"2021-03-22"},{"lineNumber":417,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-nl`: Note list panel","lastModifiedDate":"2021-03-22"},{"lineNumber":418,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-l`: Both dictionary list and note list panel","lastModifiedDate":"2021-03-22"},{"lineNumber":419,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":420,"author":{"gitId":"XindiTian"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":421,"author":{"gitId":"TeoHoeKeat"},"content":"* `open -c`","lastModifiedDate":"2021-03-22"},{"lineNumber":422,"author":{"gitId":"TeoHoeKeat"},"content":"    * show contact panel","lastModifiedDate":"2021-03-22"},{"lineNumber":423,"author":{"gitId":"TeoHoeKeat"},"content":"* `open -a`","lastModifiedDate":"2021-03-22"},{"lineNumber":424,"author":{"gitId":"TeoHoeKeat"},"content":"    * show all panel","lastModifiedDate":"2021-03-22"},{"lineNumber":425,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":426,"author":{"gitId":"TeoHoeKeat"},"content":"##### Closing UI Panel: `close`","lastModifiedDate":"2021-03-27"},{"lineNumber":427,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":428,"author":{"gitId":"TeoHoeKeat"},"content":"Close selected UI Panel.","lastModifiedDate":"2021-03-22"},{"lineNumber":429,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":430,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `close Option`","lastModifiedDate":"2021-03-22"},{"lineNumber":431,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":432,"author":{"gitId":"TeoHoeKeat"},"content":"* The following `Option` are supported","lastModifiedDate":"2021-03-22"},{"lineNumber":433,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-a`: All panel","lastModifiedDate":"2021-03-22"},{"lineNumber":434,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-c`: Contact panel","lastModifiedDate":"2021-03-22"},{"lineNumber":435,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-d`: Both dictionary list panel and dictionary content panel","lastModifiedDate":"2021-03-27"},{"lineNumber":436,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-dc`: Dictionary content panel","lastModifiedDate":"2021-03-22"},{"lineNumber":437,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-dl`: Dictionary list panel","lastModifiedDate":"2021-03-22"},{"lineNumber":438,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-n`: Both note list panel and note content panel","lastModifiedDate":"2021-03-27"},{"lineNumber":439,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-nc`: Note content panel","lastModifiedDate":"2021-03-22"},{"lineNumber":440,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-nl`: Note list panel","lastModifiedDate":"2021-03-22"},{"lineNumber":441,"author":{"gitId":"TeoHoeKeat"},"content":"    * `-l`: Both dictionary list and note list panel","lastModifiedDate":"2021-03-22"},{"lineNumber":442,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":443,"author":{"gitId":"TeoHoeKeat"},"content":"Examples:","lastModifiedDate":"2021-03-22"},{"lineNumber":444,"author":{"gitId":"TeoHoeKeat"},"content":"* `close -c`","lastModifiedDate":"2021-03-22"},{"lineNumber":445,"author":{"gitId":"TeoHoeKeat"},"content":"    * close contact panel","lastModifiedDate":"2021-03-22"},{"lineNumber":446,"author":{"gitId":"TeoHoeKeat"},"content":"* `close -a`","lastModifiedDate":"2021-03-22"},{"lineNumber":447,"author":{"gitId":"TeoHoeKeat"},"content":"    * close all panel","lastModifiedDate":"2021-03-22"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":449,"author":{"gitId":"TeoHoeKeat"},"content":"#### Setting UI Divider Position","lastModifiedDate":"2021-03-27"},{"lineNumber":450,"author":{"gitId":"TeoHoeKeat"},"content":"Dictionote allows the user to manipulate the divider between the region via command.","lastModifiedDate":"2021-03-27"},{"lineNumber":451,"author":{"gitId":"TeoHoeKeat"},"content":"The following are the 4 divider where the user can manipulate","lastModifiedDate":"2021-03-27"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":453,"author":{"gitId":"TeoHoeKeat"},"content":"![Ui Panel ](images/UiDivider.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":454,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":455,"author":{"gitId":"TeoHoeKeat"},"content":"The divider name is as follow :","lastModifiedDate":"2021-03-27"},{"lineNumber":456,"author":{"gitId":"TeoHoeKeat"},"content":"1. Contact Divider","lastModifiedDate":"2021-03-27"},{"lineNumber":457,"author":{"gitId":"TeoHoeKeat"},"content":"1. Dictionary Divider","lastModifiedDate":"2021-03-27"},{"lineNumber":458,"author":{"gitId":"TeoHoeKeat"},"content":"1. Note Divider ","lastModifiedDate":"2021-03-27"},{"lineNumber":459,"author":{"gitId":"TeoHoeKeat"},"content":"1. Main Divider","lastModifiedDate":"2021-03-27"},{"lineNumber":460,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":461,"author":{"gitId":"TeoHoeKeat"},"content":"The following images show the position the divider will be set when user enter a value from 1 to 9 horizontally and vertically","lastModifiedDate":"2021-03-27"},{"lineNumber":462,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":463,"author":{"gitId":"TeoHoeKeat"},"content":"![Ui Panel ](images/UiDividerConfig.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":464,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":465,"author":{"gitId":"TeoHoeKeat"},"content":"##### Set contact divider position: `setdividerc`","lastModifiedDate":"2021-03-27"},{"lineNumber":466,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":467,"author":{"gitId":"TeoHoeKeat"},"content":"Sets the position of the contact divider.","lastModifiedDate":"2021-03-22"},{"lineNumber":468,"author":{"gitId":"TeoHoeKeat"},"content":"The note divider is the divider separating the contact and others user interface.","lastModifiedDate":"2021-03-22"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `setdividerc Position`","lastModifiedDate":"2021-03-22"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"TeoHoeKeat"},"content":"* The `Position` **must be a between 1 to 9** (inclusive)","lastModifiedDate":"2021-03-27"},{"lineNumber":473,"author":{"gitId":"TeoHoeKeat"},"content":"* The `Position` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-27"},{"lineNumber":474,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":475,"author":{"gitId":"TeoHoeKeat"},"content":"Examples:","lastModifiedDate":"2021-03-22"},{"lineNumber":476,"author":{"gitId":"TeoHoeKeat"},"content":"* `setdividerc 8`","lastModifiedDate":"2021-03-27"},{"lineNumber":477,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":478,"author":{"gitId":"TeoHoeKeat"},"content":"##### Set dictionary divider position: `setdividerd`","lastModifiedDate":"2021-03-27"},{"lineNumber":479,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":480,"author":{"gitId":"TeoHoeKeat"},"content":"Sets the position of the dictionary divider.","lastModifiedDate":"2021-03-22"},{"lineNumber":481,"author":{"gitId":"TeoHoeKeat"},"content":"The dictionary divider is the divider separating the dictionary list and dictionary content.","lastModifiedDate":"2021-03-27"},{"lineNumber":482,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":483,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `setdividerd Position`","lastModifiedDate":"2021-03-22"},{"lineNumber":484,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":485,"author":{"gitId":"TeoHoeKeat"},"content":"* The `Position` **must be a between 1 to 9** (inclusive)","lastModifiedDate":"2021-03-27"},{"lineNumber":486,"author":{"gitId":"TeoHoeKeat"},"content":"* The `Position` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-27"},{"lineNumber":487,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":488,"author":{"gitId":"TeoHoeKeat"},"content":"Examples:","lastModifiedDate":"2021-03-22"},{"lineNumber":489,"author":{"gitId":"TeoHoeKeat"},"content":"* `setdividerd 5`","lastModifiedDate":"2021-03-27"},{"lineNumber":490,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":491,"author":{"gitId":"TeoHoeKeat"},"content":"##### Set note divider position: `setdividern`","lastModifiedDate":"2021-03-27"},{"lineNumber":492,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":493,"author":{"gitId":"TeoHoeKeat"},"content":"Sets the position of the note divider.","lastModifiedDate":"2021-03-22"},{"lineNumber":494,"author":{"gitId":"TeoHoeKeat"},"content":"The note divider is the divider separating the note list and note content.","lastModifiedDate":"2021-03-22"},{"lineNumber":495,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":496,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `setdividern Position`","lastModifiedDate":"2021-03-22"},{"lineNumber":497,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":498,"author":{"gitId":"TeoHoeKeat"},"content":"* The `Position` **must be a between 1 to 9** (inclusive)","lastModifiedDate":"2021-03-27"},{"lineNumber":499,"author":{"gitId":"TeoHoeKeat"},"content":"* The `Position` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-27"},{"lineNumber":500,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":501,"author":{"gitId":"TeoHoeKeat"},"content":"Examples:","lastModifiedDate":"2021-03-22"},{"lineNumber":502,"author":{"gitId":"TeoHoeKeat"},"content":"* `setdividern 6`","lastModifiedDate":"2021-03-27"},{"lineNumber":503,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":504,"author":{"gitId":"TeoHoeKeat"},"content":"##### Set main divider position: `setdividerm`","lastModifiedDate":"2021-03-27"},{"lineNumber":505,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":506,"author":{"gitId":"TeoHoeKeat"},"content":"Sets the position of the main divider.","lastModifiedDate":"2021-03-22"},{"lineNumber":507,"author":{"gitId":"TeoHoeKeat"},"content":"The main divider is the divider separating the note and dictionary.","lastModifiedDate":"2021-03-22"},{"lineNumber":508,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":509,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `setdividerm Position`","lastModifiedDate":"2021-03-22"},{"lineNumber":510,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":511,"author":{"gitId":"TeoHoeKeat"},"content":"* The `Position` **must be a between 1 to 9** (inclusive)","lastModifiedDate":"2021-03-27"},{"lineNumber":512,"author":{"gitId":"TeoHoeKeat"},"content":"* The `Position` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-27"},{"lineNumber":513,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":514,"author":{"gitId":"TeoHoeKeat"},"content":"Examples:","lastModifiedDate":"2021-03-22"},{"lineNumber":515,"author":{"gitId":"TeoHoeKeat"},"content":"* `setdividerm 3`","lastModifiedDate":"2021-03-27"},{"lineNumber":516,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":517,"author":{"gitId":"TeoHoeKeat"},"content":"#### Toggle Divider Orientation","lastModifiedDate":"2021-03-27"},{"lineNumber":518,"author":{"gitId":"TeoHoeKeat"},"content":"Dictionote allows the user to change the orientation of the divider between the region via command.","lastModifiedDate":"2021-03-27"},{"lineNumber":519,"author":{"gitId":"TeoHoeKeat"},"content":"The following are the 2 divider where the user can manipulate","lastModifiedDate":"2021-03-27"},{"lineNumber":520,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":521,"author":{"gitId":"TeoHoeKeat"},"content":"![Ui Panel ](images/UiOrientation.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":522,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":523,"author":{"gitId":"TeoHoeKeat"},"content":"The divider name is as follow :","lastModifiedDate":"2021-03-27"},{"lineNumber":524,"author":{"gitId":"TeoHoeKeat"},"content":"1. Dictionary Divider","lastModifiedDate":"2021-03-27"},{"lineNumber":525,"author":{"gitId":"TeoHoeKeat"},"content":"1. Note Divider","lastModifiedDate":"2021-03-27"},{"lineNumber":526,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":527,"author":{"gitId":"TeoHoeKeat"},"content":"##### Toggle dictionary divider orientation: `toggledividerd`","lastModifiedDate":"2021-03-27"},{"lineNumber":528,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":529,"author":{"gitId":"TeoHoeKeat"},"content":"Toggle the orientation of the dictionary divider.","lastModifiedDate":"2021-03-22"},{"lineNumber":530,"author":{"gitId":"TeoHoeKeat"},"content":"If the current orientation of the dictionary divider on horizontal,","lastModifiedDate":"2021-03-27"},{"lineNumber":531,"author":{"gitId":"TeoHoeKeat"},"content":"it will be changed to vertical and vice versa.","lastModifiedDate":"2021-03-22"},{"lineNumber":532,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":533,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `toggledividerd`","lastModifiedDate":"2021-03-23"},{"lineNumber":534,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":535,"author":{"gitId":"TeoHoeKeat"},"content":"Examples:","lastModifiedDate":"2021-03-22"},{"lineNumber":536,"author":{"gitId":"TeoHoeKeat"},"content":"* `togglerdividerd`","lastModifiedDate":"2021-03-22"},{"lineNumber":537,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":538,"author":{"gitId":"TeoHoeKeat"},"content":"##### Toggle note divider orientation: `toggledividern`","lastModifiedDate":"2021-03-27"},{"lineNumber":539,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":540,"author":{"gitId":"TeoHoeKeat"},"content":"Toggle the orientation of the note divider.","lastModifiedDate":"2021-03-22"},{"lineNumber":541,"author":{"gitId":"TeoHoeKeat"},"content":"If the current orientation of the note divider horizontal,","lastModifiedDate":"2021-03-22"},{"lineNumber":542,"author":{"gitId":"TeoHoeKeat"},"content":"it will be changed to vertical and vice versa.","lastModifiedDate":"2021-03-22"},{"lineNumber":543,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":544,"author":{"gitId":"TeoHoeKeat"},"content":"Format: `toggledividern`","lastModifiedDate":"2021-03-23"},{"lineNumber":545,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":546,"author":{"gitId":"TeoHoeKeat"},"content":"Examples:","lastModifiedDate":"2021-03-22"},{"lineNumber":547,"author":{"gitId":"TeoHoeKeat"},"content":"* `toggledividern`","lastModifiedDate":"2021-03-23"},{"lineNumber":548,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":549,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":550,"author":{"gitId":"TeoHoeKeat"},"content":"### Others Feature","lastModifiedDate":"2021-03-22"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"TeoHoeKeat"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-03-22"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"TeoHoeKeat"},"content":"#### Saving the data","lastModifiedDate":"2021-03-22"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"TeoHoeKeat"},"content":"#### Editing the data file","lastModifiedDate":"2021-03-22"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":564,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":566,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":567,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":568,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":570,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"XindiTian"},"content":"**Viewing help** | `help`","lastModifiedDate":"2021-03-26"},{"lineNumber":585,"author":{"gitId":"XindiTian"},"content":"**Viewing Command List** | `listcommand`","lastModifiedDate":"2021-03-26"},{"lineNumber":586,"author":{"gitId":"XindiTian"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-03-26"},{"lineNumber":587,"author":{"gitId":"XindiTian"},"content":"***Dictionary Features*** | -","lastModifiedDate":"2021-03-26"},{"lineNumber":588,"author":{"gitId":"XindiTian"},"content":"**Find content** | `findcontent KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-26"},{"lineNumber":589,"author":{"gitId":"XindiTian"},"content":"**Find definition** | `finddef KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-26"},{"lineNumber":590,"author":{"gitId":"XindiTian"},"content":"**Show specific content** | `showdc INDEX`","lastModifiedDate":"2021-03-26"},{"lineNumber":591,"author":{"gitId":"XindiTian"},"content":"**List content** | `listcontent`","lastModifiedDate":"2021-03-26"},{"lineNumber":592,"author":{"gitId":"XindiTian"},"content":"**List Definitions** | `listdef`","lastModifiedDate":"2021-03-26"},{"lineNumber":593,"author":{"gitId":"XindiTian"},"content":"***Note Features*** | -","lastModifiedDate":"2021-03-26"},{"lineNumber":594,"author":{"gitId":"jessen11"},"content":"**Add note** | `addnote c/CONTENT [t/TAG]…​`","lastModifiedDate":"2021-03-27"},{"lineNumber":595,"author":{"gitId":"XindiTian"},"content":"**Delete note** | `deletenote INDEX`","lastModifiedDate":"2021-03-26"},{"lineNumber":596,"author":{"gitId":"jessen11"},"content":"**Mark note as done** | `markasdonenote INDEX`","lastModifiedDate":"2021-03-27"},{"lineNumber":597,"author":{"gitId":"jessen11"},"content":"**Mark note as undone** | `markasundonenote INDEX`","lastModifiedDate":"2021-03-27"},{"lineNumber":598,"author":{"gitId":"XindiTian"},"content":"**Mark all notes as undone** | `markallasundonenote`","lastModifiedDate":"2021-03-26"},{"lineNumber":599,"author":{"gitId":"jessen11"},"content":"**Edit note** | `editnote INDEX c/CONTEXT [t/TAG]…​`","lastModifiedDate":"2021-03-27"},{"lineNumber":600,"author":{"gitId":"XindiTian"},"content":"**Show note** | `shownote`","lastModifiedDate":"2021-03-26"},{"lineNumber":601,"author":{"gitId":"XindiTian"},"content":"**List all notes** | `listnote`","lastModifiedDate":"2021-03-26"},{"lineNumber":602,"author":{"gitId":"XindiTian"},"content":"**Sort all notes** | `sortnote`","lastModifiedDate":"2021-03-26"},{"lineNumber":603,"author":{"gitId":"jessen11"},"content":"**Find notes using keywords** | `findnote c/NAME_KEYWORD…​ [t/TAG_KEYWORD]…​`","lastModifiedDate":"2021-03-27"},{"lineNumber":604,"author":{"gitId":"XindiTian"},"content":"**Edit note in edit mode** | `editmodenote`","lastModifiedDate":"2021-03-26"},{"lineNumber":605,"author":{"gitId":"XindiTian"},"content":"**Exit edit mode** | `exitnote`","lastModifiedDate":"2021-03-26"},{"lineNumber":606,"author":{"gitId":"XindiTian"},"content":"**Save changes to note** | `savenote`","lastModifiedDate":"2021-03-26"},{"lineNumber":607,"author":{"gitId":"XindiTian"},"content":"***Contact Features*** | -","lastModifiedDate":"2021-03-26"},{"lineNumber":608,"author":{"gitId":"riyadh-h"},"content":"**Add contact** | `addcontact n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `addcontact n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2021-03-15"},{"lineNumber":609,"author":{"gitId":"riyadh-h"},"content":"**List all contacts** | `listcontact`","lastModifiedDate":"2021-03-15"},{"lineNumber":610,"author":{"gitId":"riyadh-h"},"content":"**Edit contact** | `editcontact INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`editcontact 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-03-27"},{"lineNumber":611,"author":{"gitId":"riyadh-h"},"content":"**Find contacts** | `findcontact [n/NAME_KEYWORD]... [e/EMAIL_KEYWORD]... [t/TAG_KEYWORD]...`\u003cbr\u003e e.g., `findcontact n/James e/@mail.com t/family`","lastModifiedDate":"2021-03-27"},{"lineNumber":612,"author":{"gitId":"riyadh-h"},"content":"**Delete contact** | `deletecontact INDEX`\u003cbr\u003e e.g., `deletecontact 3`","lastModifiedDate":"2021-03-27"},{"lineNumber":613,"author":{"gitId":"riyadh-h"},"content":"**Send email to contact** | `emailcontact INDEX`\u003cbr\u003e e.g., `emailcontact 2`","lastModifiedDate":"2021-03-27"},{"lineNumber":614,"author":{"gitId":"riyadh-h"},"content":"**Sort contacts by most-frequent** | `mostfreqcontact`","lastModifiedDate":"2021-03-27"},{"lineNumber":615,"author":{"gitId":"XindiTian"},"content":"**Clear contacts list** | `clearcontact`","lastModifiedDate":"2021-03-26"},{"lineNumber":616,"author":{"gitId":"XindiTian"},"content":"***UI Features*** | -","lastModifiedDate":"2021-03-26"},{"lineNumber":617,"author":{"gitId":"TeoHoeKeat"},"content":"**Open** | `open Option` \u003cbr\u003e e.g., `open -c`","lastModifiedDate":"2021-02-28"},{"lineNumber":618,"author":{"gitId":"XindiTian"},"content":"**Close** | `close Option` \u003cbr\u003e e.g., `close -c`","lastModifiedDate":"2021-03-26"},{"lineNumber":619,"author":{"gitId":"TeoHoeKeat"},"content":"**Set contact divider position** | `setdividerc POSITION`","lastModifiedDate":"2021-03-27"},{"lineNumber":620,"author":{"gitId":"TeoHoeKeat"},"content":"**Set dictionary divider position** | `setdividerd POSITION`","lastModifiedDate":"2021-03-27"},{"lineNumber":621,"author":{"gitId":"TeoHoeKeat"},"content":"**Set note divider position** | `setdividern POSITION`","lastModifiedDate":"2021-03-27"},{"lineNumber":622,"author":{"gitId":"TeoHoeKeat"},"content":"**Set main divider position** | `setdividerm POSITION`","lastModifiedDate":"2021-03-27"},{"lineNumber":623,"author":{"gitId":"XindiTian"},"content":"**Toggle dictionary divider orientation** | `toggledividerd`","lastModifiedDate":"2021-03-26"},{"lineNumber":624,"author":{"gitId":"XindiTian"},"content":"**Toggle note divider orientation** | `toggledividern`","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"TeoHoeKeat":269,"jessen11":85,"godjuansan":19,"riyadh-h":27,"XindiTian":99,"-":125}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"TeoHoeKeat"},"content":"    content: \"Dictionote\";","lastModifiedDate":"2021-03-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"TeoHoeKeat":1,"-":294}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"Class DictionoteParser","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"LogicManager --\u003e\"1\" DictionoteParser","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"DictionoteParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"note right of XYZCommand: XYZCommand \u003d AddNoteCommand, \\nFindContentCommand, etc","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"godjuansan":4,"-":58}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"Interface NoteContentConfig \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"Interface DictionaryContentConfig \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"Class ReadOnlyContactsList","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"Class ReadOnlyDefinitionBook","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"Class ReadOnlyNoteBook","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"Class FilteredList\u003cDefinition\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"Class DefinitionBook","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"Class FilteredList\u003cContent\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"Class Dictionary","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"Class FilteredList\u003cContact\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"Class NoteBook","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"Class FilteredList\u003cNote\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"Class UserPrefs","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"Class DictionaryBook","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"Class ContactsList","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"Package Contact {","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"Class Contact","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"Class UniqueContactList","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"Package Note {","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"Class Note","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"Class UniqueNoteList","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"Package Dictionary {","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"Class Content","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"Class Definition","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"Class UniqueContentList","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"Class UniqueDefinitionList","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"ContactsList .up.|\u003e ReadOnlyContactsList","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"NoteBook .up.|\u003e ReadOnlyNoteBook","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"DefinitionBook .up.|\u003e ReadOnlyDefinitionBook","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"ModelManager o--\u003e \"1\" ContactsList","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"ModelManager o--\u003e \"1\" NoteBook","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"ModelManager o--\u003e \"1\" DefinitionBook","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"ContactsList *--\u003e \"1\" UniqueContactList","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"UniqueContactList o--\u003e \"*\" Contact","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"Contact *--\u003e Name","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"Contact *--\u003e Phone","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"Contact *--\u003e Email","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"Contact *--\u003e Address","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"Contact *--\u003e \"*\" Tag","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":"NoteBook *--\u003e \"1\" UniqueNoteList","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"UniqueNoteList o--\u003e \"*\" Note","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"DictionaryBook *--\u003e \"1\" UniqueDefinitionList","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"UniqueDefinitionList o--\u003e \"*\" Definition","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"UniqueDefinitionList o--\u003e \"*\" Content","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":93,"author":{"gitId":"jessen11"},"content":"ModelManager -----\u003e\" ~* filtered list\" Contact","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"jessen11"},"content":"ModelManager -----\u003e\" ~* filtered list\" Note","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"jessen11"},"content":"ModelManager -----\u003e\" ~* filtered list\" Dictionary","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jessen11":57,"-":40}},{"path":"docs/diagrams/UISequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"@startuml","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"!include style.puml","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"box Model UI_COLOR_T1","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"end box","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"participant \":DictionoteParser\" as DictionoteParser LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"participant \"o:OpenCommand\" as OpenCommand LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"end box","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"[-\u003e MainWindow : executeCommand(\"open -c\")","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"activate MainWindow","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"MainWindow-\u003e LogicManager : execute(\"open -c\")","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"activate LogicManager","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"LogicManager -\u003e DictionoteParser : parseCommand(\"open -c\")","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"activate DictionoteParser","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"create OpenCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"DictionoteParser -\u003e OpenCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"activate OpenCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"OpenCommand --\u003e DictionoteParser : o","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"deactivate OpenCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"DictionoteParser --\u003e LogicManager : o","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"deactivate DictionoteParser","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"LogicManager -\u003e OpenCommand : execute()","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"activate OpenCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"create CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"OpenCommand -\u003e CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"activate CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"CommandResult --\u003e OpenCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"OpenCommand --\u003e LogicManager : r","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"deactivate OpenCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"LogicManager --\u003e MainWindow : r","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"MainWindow --\u003e MainWindow : executeUiAAction(action, option)","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"activate MainWindow","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"MainWindow --\u003e MainWindow","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"deactivate MainWindow","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"[\u003c--MainWindow","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"deactivate MainWindow","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"@enduml","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"TeoHoeKeat":60}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"Interface DictionaryContentConfig \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"Interface NoteContentConfig \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"Class ContactListPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"Class ContactCard","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"Class DictionaryListPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"Class DictionaryListContentCard","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"Class DictionaryListDefinitionCard","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"Class DictionaryContentPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"Class NoteListPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"Class NoteCard","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"Class NoteContentPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"MainWindow *-down-\u003e ContactListPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"MainWindow *-down-\u003e DictionaryListPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"MainWindow *-down-\u003e NoteListPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"MainWindow *-down-\u003e DictionaryContentPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"MainWindow *-down-\u003e NoteContentPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"ContactListPanel -down-\u003e ContactCard","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"DictionaryListPanel -down-\u003e DictionaryListContentCard","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"DictionaryListPanel -down-\u003e DictionaryListDefinitionCard","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"NoteListPanel -down-\u003e NoteCard","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"ContactCard..\u003e Model","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"DictionaryListContentCard..\u003e Model","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"DictionaryListDefinitionCard..\u003e Model","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"NoteCard..\u003e Model","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"DictionaryContentConfig..\u003e Model","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"NoteContentConfig..\u003e Model","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"UiManager -up-\u003e Logic","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"MainWindow -right-\u003e Logic","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"CommandBox -[hidden]up- ResultDisplay","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"StatusBarFooter -[hidden]up- CommandBox","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"HelpWindow -[hidden]left- StatusBarFooter","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"ContactListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"NoteListPanel -[hidden]left- ContactListPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"DictionaryListPanel -[hidden]left- NoteListPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"NoteContentPanel -[hidden]left- DictionaryListPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"DictionaryContentPanel -[hidden]left- NoteContentPanel","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"UiPart -[hidden]down- Model","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"NoteContentPanel .down.|\u003e NoteContentConfig","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"DictionaryContentPanel .down.|\u003e DictionaryContentConfig","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"ContactListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"ContactCard --|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"DictionaryListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"DictionaryListContentCard --|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"DictionaryListDefinitionCard --|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"NoteListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"NoteCard --|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"DictionaryContentPanel --|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"NoteContentPanel --|\u003e UiPart","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TeoHoeKeat":56,"-":43}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"XindiTian"},"content":"Create a `RemarkCommandParser` class in the `seedu.dictionote.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-02-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"riyadh-h"},"content":"Create a new `Remark` in `seedu.dictionote.model.contact`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-03-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"XindiTian"},"content":"Simply add the following to [`seedu.dictionote.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-02-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"riyadh-h":1,"XindiTian":5,"-":388}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"The `address` field in `Person` is actually an instance of the `seedu.dictionote.model.contact.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"riyadh-h":1,"-":102}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.dictionote.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"       persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"XindiTian":1,"-":249}},{"path":"src/main/java/seedu/dictionote/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.FileUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"XindiTian":3,"-":61}},{"path":"src/main/java/seedu/dictionote/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"XindiTian":1,"-":24}},{"path":"src/main/java/seedu/dictionote/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.Config;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.Version;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.ConfigUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.StringUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.Logic;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.LogicManager;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.DefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Dictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.NoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyNoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.util.SampleDataUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.storage.ContactsListStorage;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.DefinitionBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.DictionaryStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.storage.JsonContactsListStorage;","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.JsonDefinitionBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.JsonDictionaryStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.JsonNoteBookStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.NoteBookStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.Storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.StorageManager;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.ui.Ui;","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.ui.UiManager;","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"riyadh-h"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ContactsList ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"godjuansan"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing NoteBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Dictionary ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing DefinitionBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":74,"author":{"gitId":"riyadh-h"},"content":"        ContactsListStorage contactsListStorage \u003d new JsonContactsListStorage(userPrefs.getContactsListFilePath());","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"godjuansan"},"content":"        NoteBookStorage noteBookStorage \u003d new JsonNoteBookStorage(userPrefs.getNoteBookFilePath());","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"XindiTian"},"content":"        DictionaryStorage dictionaryStorage \u003d new JsonDictionaryStorage(userPrefs.getDictionaryFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"XindiTian"},"content":"        DefinitionBookStorage definitionBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"XindiTian"},"content":"                new JsonDefinitionBookStorage(userPrefs.getDefinitionBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"riyadh-h"},"content":"        storage \u003d new StorageManager(contactsListStorage, userPrefsStorage, noteBookStorage,","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"XindiTian"},"content":"                dictionaryStorage, definitionBookStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"XindiTian"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s dictionote book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":93,"author":{"gitId":"XindiTian"},"content":"     * The data from the sample dictionote book will be used instead if {@code storage}\u0027s dictionote book is not found,","lastModifiedDate":"2021-02-27"},{"lineNumber":94,"author":{"gitId":"XindiTian"},"content":"     * or an empty dictionote book will be used instead if errors occur when reading {@code storage}\u0027s dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"        Optional\u003cReadOnlyContactsList\u003e addressBookOptional;","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"riyadh-h"},"content":"        ReadOnlyContactsList initialDataAddress;","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"godjuansan"},"content":"        Optional\u003cReadOnlyNoteBook\u003e noteBookOptional;","lastModifiedDate":"2021-03-03"},{"lineNumber":100,"author":{"gitId":"godjuansan"},"content":"        ReadOnlyNoteBook initialDataNote;","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"XindiTian"},"content":"        Optional\u003cReadOnlyDictionary\u003e dictionaryOptional;","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"XindiTian"},"content":"        ReadOnlyDictionary initialDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"XindiTian"},"content":"        Optional\u003cReadOnlyDefinitionBook\u003e definitionBookOptional;","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"XindiTian"},"content":"        ReadOnlyDefinitionBook initialDataDefinition;","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"riyadh-h"},"content":"            addressBookOptional \u003d storage.readContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"riyadh-h"},"content":"            initialDataAddress \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleContactsList);","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"godjuansan"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-03"},{"lineNumber":113,"author":{"gitId":"godjuansan"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"riyadh-h"},"content":"            initialDataAddress \u003d new ContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"godjuansan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-03"},{"lineNumber":116,"author":{"gitId":"godjuansan"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2021-03-03"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"            initialDataAddress \u003d new ContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":119,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":120,"author":{"gitId":"godjuansan"},"content":"        try {","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"godjuansan"},"content":"            noteBookOptional \u003d storage.readNoteBook();","lastModifiedDate":"2021-03-03"},{"lineNumber":122,"author":{"gitId":"godjuansan"},"content":"            if (!noteBookOptional.isPresent()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":123,"author":{"gitId":"godjuansan"},"content":"                logger.info(\"Data file not found. Will be starting with a sample NoteBook\");","lastModifiedDate":"2021-03-03"},{"lineNumber":124,"author":{"gitId":"godjuansan"},"content":"            }","lastModifiedDate":"2021-03-03"},{"lineNumber":125,"author":{"gitId":"godjuansan"},"content":"            initialDataNote \u003d noteBookOptional.orElseGet(SampleDataUtil::getSampleNoteBook);","lastModifiedDate":"2021-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"godjuansan"},"content":"            initialDataNote \u003d new NoteBook();","lastModifiedDate":"2021-03-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":131,"author":{"gitId":"godjuansan"},"content":"            initialDataNote \u003d new NoteBook();","lastModifiedDate":"2021-03-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"XindiTian"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"XindiTian"},"content":"            dictionaryOptional \u003d storage.readDictionary();","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"XindiTian"},"content":"            if (!dictionaryOptional.isPresent()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"XindiTian"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Dictionary\");","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"XindiTian"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"XindiTian"},"content":"            initialDictionary \u003d dictionaryOptional.orElseGet(SampleDataUtil::getSampleDictionary);","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"XindiTian"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"XindiTian"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Dictionary\");","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"XindiTian"},"content":"            initialDictionary \u003d new Dictionary();","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"XindiTian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"XindiTian"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Dictionary\");","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"XindiTian"},"content":"            initialDictionary \u003d new Dictionary();","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"XindiTian"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"XindiTian"},"content":"            definitionBookOptional \u003d storage.readDefinitionBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"XindiTian"},"content":"            if (!definitionBookOptional.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"XindiTian"},"content":"                logger.info(\"Data file not found. Will be starting with a sample DefinitionBook\");","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"XindiTian"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"XindiTian"},"content":"            initialDataDefinition \u003d definitionBookOptional.orElseGet(SampleDataUtil::getSampleDefinitionBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"XindiTian"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"XindiTian"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty DefinitionBook\");","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"XindiTian"},"content":"            initialDataDefinition \u003d new DefinitionBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"XindiTian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"XindiTian"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty DefinitionBook\");","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"XindiTian"},"content":"            initialDataDefinition \u003d new DefinitionBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"XindiTian"},"content":"        return new ModelManager(initialDataAddress, userPrefs, initialDataNote,","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"XindiTian"},"content":"                initialDictionary, initialDataDefinition);","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TeoHoeKeat":1,"godjuansan":19,"riyadh-h":13,"XindiTian":75,"-":145}},{"path":"src/main/java/seedu/dictionote/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.core;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XindiTian":1,"-":62}},{"path":"src/main/java/seedu/dictionote/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.core;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.geometry.Orientation;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final double MIN_SPLIT_RATIO \u003d 0.1;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final double MAX_SPLIT_RATIO \u003d 0.9;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final double DEFAULT_CONTACT_SPLIT_RATIO \u003d 0.25;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final double DEFAULT_DICTIONARY_SPLIT_RATIO \u003d 0.3;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final double DEFAULT_NOTE_SPLIT_RATIO \u003d 0.3;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final double DEFAULT_MAIN_SPLIT_RATIO \u003d 0.5;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final boolean DEFAULT_CONTACT_PANEL_IS_VISIBLE \u003d true;","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final boolean DEFAULT_NOTE_LIST_PANEL_IS_VISIBLE \u003d true;","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final boolean DEFAULT_NOTE_CONTENT_PANEL_IS_VISIBLE \u003d true;","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final boolean DEFAULT_DICTIONARY_LIST_PANEL_IS_VISIBLE \u003d true;","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final boolean DEFAULT_DICTIONARY_CONTENT_PANEL_IS_VISIBLE \u003d true;","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final boolean DEFAULT_NOTE_ORIENTATION_ISVERTICIAL \u003d false;","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final boolean DEFAULT_DICTIONARY_ORIENTATION_ISVERTICIAL \u003d false;","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    private boolean isDictionaryPanelVerticial;","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    private boolean isNotePanelVerticial;","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    private double contactSplitRatio;","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    private double dictionarySplitRatio;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    private double noteSplitRatio;","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    private double mainSplitRatio;","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    private final boolean isContactPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    private final boolean isNoteListPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    private final boolean isNoteContentPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    private final boolean isDictionaryListPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"    private final boolean isDictionaryContentPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        windowWidth \u003d 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        windowHeight \u003d 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        contactSplitRatio \u003d DEFAULT_CONTACT_SPLIT_RATIO;","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionarySplitRatio \u003d DEFAULT_DICTIONARY_SPLIT_RATIO;","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        noteSplitRatio \u003d DEFAULT_NOTE_SPLIT_RATIO;","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        mainSplitRatio \u003d DEFAULT_MAIN_SPLIT_RATIO;","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        isContactPanelVisible \u003d DEFAULT_CONTACT_PANEL_IS_VISIBLE;","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        isDictionaryContentPanelVisible \u003d DEFAULT_DICTIONARY_CONTENT_PANEL_IS_VISIBLE;","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        isDictionaryListPanelVisible \u003d DEFAULT_DICTIONARY_LIST_PANEL_IS_VISIBLE;","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        isNoteContentPanelVisible \u003d DEFAULT_NOTE_CONTENT_PANEL_IS_VISIBLE;","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"        isNoteListPanelVisible \u003d DEFAULT_NOTE_LIST_PANEL_IS_VISIBLE;","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"        isDictionaryPanelVerticial \u003d DEFAULT_DICTIONARY_ORIENTATION_ISVERTICIAL;","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"        isNotePanelVerticial \u003d DEFAULT_NOTE_ORIENTATION_ISVERTICIAL;","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition,","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"                       double contactSplitRatio, double dictionarySplitRatio,","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"                       double noteSplitRatio, double mainSplitRatio,","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"                       boolean isContactPanelVisible, boolean isDictionaryContentPanelVisible,","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"                       boolean isDictionaryListPanelVisible, boolean isNoteContentPanelVisible,","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"                       boolean isNoteListPanelVisible, boolean isDictionaryPanelVerticial,","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"                       boolean isNotePanelVerticial) {","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"        setContactSplitRatio(contactSplitRatio);","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"        setDictionarySplitRatio(dictionarySplitRatio);","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"        setNoteSplitRatio(noteSplitRatio);","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"        setMainSplitRatio(mainSplitRatio);","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"        this.isContactPanelVisible \u003d isContactPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"        this.isDictionaryContentPanelVisible \u003d isDictionaryContentPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"        this.isDictionaryListPanelVisible \u003d isDictionaryListPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"        this.isNoteContentPanelVisible \u003d isNoteContentPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"        this.isNoteListPanelVisible \u003d isNoteListPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"        this.isDictionaryPanelVerticial \u003d isDictionaryPanelVerticial;","lastModifiedDate":"2021-03-26"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"        this.isNotePanelVerticial \u003d isNotePanelVerticial;","lastModifiedDate":"2021-03-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean isContactPanelVisible() {","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"        return isContactPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean isNoteListPanelVisible() {","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"        return isNoteListPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean isNoteContentPanelVisible() {","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"        return isNoteContentPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean isDictionaryListPanelVisible() {","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"        return isDictionaryListPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean isDictionaryContentPanelVisible() {","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"        return isDictionaryContentPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"    public double getContactSplitRatio() {","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"        return contactSplitRatio;","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":"    public double getDictionarySplitRatio() {","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":"        return dictionarySplitRatio;","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"TeoHoeKeat"},"content":"    public double getNoteSplitRatio() {","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"TeoHoeKeat"},"content":"        return noteSplitRatio;","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"TeoHoeKeat"},"content":"    public double getMainSplitRatio() {","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"TeoHoeKeat"},"content":"        return mainSplitRatio;","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"TeoHoeKeat"},"content":"    public void setContactSplitRatio(double contactSplitRatio) {","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"TeoHoeKeat"},"content":"        if (isValidSplitRatio(contactSplitRatio)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"TeoHoeKeat"},"content":"            this.contactSplitRatio \u003d getRoundedValue(contactSplitRatio);","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"TeoHoeKeat"},"content":"    public void setDictionarySplitRatio(double dictionarySplitRatio) {","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"TeoHoeKeat"},"content":"        if (isValidSplitRatio(dictionarySplitRatio)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"TeoHoeKeat"},"content":"            this.dictionarySplitRatio \u003d getRoundedValue(dictionarySplitRatio);","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"TeoHoeKeat"},"content":"    public void setNoteSplitRatio(double noteSplitRatio) {","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"TeoHoeKeat"},"content":"        if (isValidSplitRatio(noteSplitRatio)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"TeoHoeKeat"},"content":"            this.noteSplitRatio \u003d getRoundedValue(noteSplitRatio);","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"TeoHoeKeat"},"content":"    public void setMainSplitRatio(double mainSplitRatio) {","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"TeoHoeKeat"},"content":"        if (isValidSplitRatio(mainSplitRatio)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"TeoHoeKeat"},"content":"            this.mainSplitRatio \u003d getRoundedValue(mainSplitRatio);","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"TeoHoeKeat"},"content":"    private boolean isValidSplitRatio(double ratio) {","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"TeoHoeKeat"},"content":"        return ratio \u003e\u003d MIN_SPLIT_RATIO \u0026\u0026 ratio \u003c\u003d MAX_SPLIT_RATIO;","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"TeoHoeKeat"},"content":"    private double getRoundedValue(double d) {","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"TeoHoeKeat"},"content":"        return ((double) Math.round(d * 10000)) / 10000;","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":199,"author":{"gitId":"TeoHoeKeat"},"content":"            \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates)","lastModifiedDate":"2021-03-14"},{"lineNumber":200,"author":{"gitId":"TeoHoeKeat"},"content":"            \u0026\u0026 contactSplitRatio \u003d\u003d o.contactSplitRatio","lastModifiedDate":"2021-03-14"},{"lineNumber":201,"author":{"gitId":"TeoHoeKeat"},"content":"            \u0026\u0026 dictionarySplitRatio \u003d\u003d o.dictionarySplitRatio","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"TeoHoeKeat"},"content":"            \u0026\u0026 noteSplitRatio \u003d\u003d o.noteSplitRatio","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"TeoHoeKeat"},"content":"            \u0026\u0026 mainSplitRatio \u003d\u003d o.mainSplitRatio","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"TeoHoeKeat"},"content":"            \u0026\u0026 isContactPanelVisible \u003d\u003d o.isContactPanelVisible","lastModifiedDate":"2021-03-14"},{"lineNumber":205,"author":{"gitId":"TeoHoeKeat"},"content":"            \u0026\u0026 isNoteListPanelVisible \u003d\u003d o.isNoteListPanelVisible","lastModifiedDate":"2021-03-14"},{"lineNumber":206,"author":{"gitId":"TeoHoeKeat"},"content":"            \u0026\u0026 isNoteContentPanelVisible \u003d\u003d o.isNoteContentPanelVisible","lastModifiedDate":"2021-03-14"},{"lineNumber":207,"author":{"gitId":"TeoHoeKeat"},"content":"            \u0026\u0026 isDictionaryListPanelVisible \u003d\u003d o.isDictionaryListPanelVisible","lastModifiedDate":"2021-03-14"},{"lineNumber":208,"author":{"gitId":"TeoHoeKeat"},"content":"            \u0026\u0026 isDictionaryContentPanelVisible \u003d\u003d o.isDictionaryContentPanelVisible;","lastModifiedDate":"2021-03-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":213,"author":{"gitId":"TeoHoeKeat"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates, contactSplitRatio, dictionarySplitRatio,","lastModifiedDate":"2021-03-14"},{"lineNumber":214,"author":{"gitId":"TeoHoeKeat"},"content":"            noteSplitRatio, mainSplitRatio, isContactPanelVisible, isDictionaryContentPanelVisible,","lastModifiedDate":"2021-03-14"},{"lineNumber":215,"author":{"gitId":"TeoHoeKeat"},"content":"            isDictionaryListPanelVisible, isNoteContentPanelVisible, isNoteListPanelVisible, isDictionaryPanelVerticial,","lastModifiedDate":"2021-03-26"},{"lineNumber":216,"author":{"gitId":"TeoHoeKeat"},"content":"            isNotePanelVerticial","lastModifiedDate":"2021-03-26"},{"lineNumber":217,"author":{"gitId":"TeoHoeKeat"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":226,"author":{"gitId":"TeoHoeKeat"},"content":"        sb.append(\"ContactSplitRatio : \" + contactSplitRatio + \"\\n\");","lastModifiedDate":"2021-03-14"},{"lineNumber":227,"author":{"gitId":"TeoHoeKeat"},"content":"        sb.append(\"DictionarySplitRatio : \" + dictionarySplitRatio + \"\\n\");","lastModifiedDate":"2021-03-14"},{"lineNumber":228,"author":{"gitId":"TeoHoeKeat"},"content":"        sb.append(\"NoteSplitRatio : \" + noteSplitRatio + \"\\n\");","lastModifiedDate":"2021-03-14"},{"lineNumber":229,"author":{"gitId":"TeoHoeKeat"},"content":"        sb.append(\"MainSplitRatio : \" + mainSplitRatio + \"\\n\");","lastModifiedDate":"2021-03-14"},{"lineNumber":230,"author":{"gitId":"TeoHoeKeat"},"content":"        sb.append(\"IsContactPanelVisible : \" + isContactPanelVisible + \"\\n\");","lastModifiedDate":"2021-03-14"},{"lineNumber":231,"author":{"gitId":"TeoHoeKeat"},"content":"        sb.append(\"IsDictionaryContentPanelVisible : \" + isDictionaryContentPanelVisible + \"\\n\");","lastModifiedDate":"2021-03-14"},{"lineNumber":232,"author":{"gitId":"TeoHoeKeat"},"content":"        sb.append(\"IsDictionaryListPanelVisible : \" + isDictionaryListPanelVisible + \"\\n\");","lastModifiedDate":"2021-03-14"},{"lineNumber":233,"author":{"gitId":"TeoHoeKeat"},"content":"        sb.append(\"IsNoteContentPanelVisible : \" + isNoteContentPanelVisible + \"\\n\");","lastModifiedDate":"2021-03-14"},{"lineNumber":234,"author":{"gitId":"TeoHoeKeat"},"content":"        sb.append(\"IsNoteListPanelVisible : \" + isNoteListPanelVisible + \"\\n\");","lastModifiedDate":"2021-03-14"},{"lineNumber":235,"author":{"gitId":"TeoHoeKeat"},"content":"        sb.append(\"isDictionaryPanelVerticial : \" + isDictionaryPanelVerticial + \"\\n\");","lastModifiedDate":"2021-03-26"},{"lineNumber":236,"author":{"gitId":"TeoHoeKeat"},"content":"        sb.append(\"isNotePanelVerticial : \" + isNotePanelVerticial + \"\\n\");","lastModifiedDate":"2021-03-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":239,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":240,"author":{"gitId":"TeoHoeKeat"},"content":"    public Orientation getDictionaryPanelOrientation() {","lastModifiedDate":"2021-03-26"},{"lineNumber":241,"author":{"gitId":"TeoHoeKeat"},"content":"        return isDictionaryPanelVerticial ? Orientation.VERTICAL : Orientation.HORIZONTAL;","lastModifiedDate":"2021-03-26"},{"lineNumber":242,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":243,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":244,"author":{"gitId":"TeoHoeKeat"},"content":"    public void toggleDictionaryPanelOrientation() {","lastModifiedDate":"2021-03-26"},{"lineNumber":245,"author":{"gitId":"TeoHoeKeat"},"content":"        isDictionaryPanelVerticial \u003d !isDictionaryPanelVerticial;","lastModifiedDate":"2021-03-26"},{"lineNumber":246,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":247,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":248,"author":{"gitId":"TeoHoeKeat"},"content":"    public Orientation getNotePanelOrientation() {","lastModifiedDate":"2021-03-26"},{"lineNumber":249,"author":{"gitId":"TeoHoeKeat"},"content":"        return isNotePanelVerticial ? Orientation.VERTICAL : Orientation.HORIZONTAL;","lastModifiedDate":"2021-03-26"},{"lineNumber":250,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":251,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":252,"author":{"gitId":"TeoHoeKeat"},"content":"    public void toggleNotePanelOrientation() {","lastModifiedDate":"2021-03-26"},{"lineNumber":253,"author":{"gitId":"TeoHoeKeat"},"content":"        isNotePanelVerticial \u003d !isNotePanelVerticial;","lastModifiedDate":"2021-03-26"},{"lineNumber":254,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TeoHoeKeat":184,"XindiTian":1,"-":70}},{"path":"src/main/java/seedu/dictionote/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.core;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XindiTian":1,"-":111}},{"path":"src/main/java/seedu/dictionote/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.core;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE \u003d \"Command disabled on edit mode!\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"        + \"Type `save` or `quit` to exit edit mode\";","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"        + \"type \u0027listcommand\u0027 to show list of available command\";","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"    public static final String MESSAGE_INVALID_NOTE_FORMAT \u003d \"Invalid note format! \\n%1$s\";","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX \u003d \"The contact index provided is invalid\";","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"    public static final String MESSAGE_INVALID_NOTE_DISPLAYED_INDEX \u003d \"The note index provided is invalid\";","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_INVALID_DICTIONARY_CONTENT_DISPLAYED_INDEX \u003d \"The dictionary\"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        + \"content index provided is invalid\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_CONTACTS_LISTED_OVERVIEW \u003d \"%1$d contacts listed!\";","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    public static final String MESSAGE_NOTES_LISTED_OVERVIEW \u003d \"%1$d notes listed!\";","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_CONTENTS_LISTED_OVERVIEW \u003d \"%1$d relevant content listed!\";","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_DEFINITIONS_LISTED_OVERVIEW \u003d \"%1$d relevant definition found!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String STANDARD_DATE_TIME_DISPLAY_FORMAT \u003d \"dd/MM/yyyy HH:mm:ss\";","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TeoHoeKeat":9,"jessen11":3,"riyadh-h":2,"XindiTian":3,"-":9}},{"path":"src/main/java/seedu/dictionote/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.core;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XindiTian":1,"-":115}},{"path":"src/main/java/seedu/dictionote/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.core.index;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"XindiTian":1,"-":53}},{"path":"src/main/java/seedu/dictionote/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.exceptions;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XindiTian":1,"-":10}},{"path":"src/main/java/seedu/dictionote/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.exceptions;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"XindiTian":1,"-":20}},{"path":"src/main/java/seedu/dictionote/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.util;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.MainApp;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"XindiTian":2,"-":40}},{"path":"src/main/java/seedu/dictionote/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.util;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"XindiTian":1,"-":34}},{"path":"src/main/java/seedu/dictionote/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.util;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.Config;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"XindiTian":3,"-":20}},{"path":"src/main/java/seedu/dictionote/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.util;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XindiTian":1,"-":82}},{"path":"src/main/java/seedu/dictionote/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.util;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XindiTian":3,"-":140}},{"path":"src/main/java/seedu/dictionote/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.util;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"     * Returns true if {@code keyword} is contained within {@sentence}, with case ignored.","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"     * @param sentence  The sentence which might contain {@code keyword}.","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"     * @param keyword   The keyword whose existence in {@code sentence} is checked.","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"    public static boolean containsIgnoreCase(String sentence, String keyword) {","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"        return sentence.toLowerCase()","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"                .contains(keyword.toLowerCase());","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"riyadh-h":13,"XindiTian":2,"-":66}},{"path":"src/main/java/seedu/dictionote/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.GuiSettings;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.CommandResult;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.DisplayableContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.ui.DictionaryContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.ui.NoteContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"     * @see seedu.dictionote.model.Model#getContactsList()","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"    ReadOnlyContactsList getContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"    ObservableList\u003cContact\u003e getFilteredContactList();","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"    /** Returns an unmodifiable view of the filtered list of notes */","lastModifiedDate":"2021-03-05"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"    ObservableList\u003cNote\u003e getFilteredNoteList();","lastModifiedDate":"2021-03-05"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"    /** Returns an unmodifiable view of the filtered list of content */","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"    ObservableList\u003cContent\u003e getFilteredContentList();","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"    /** Returns an unmodifiable view of the filtered list of definitions */","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"    ObservableList\u003cDefinition\u003e getFilteredDefinitionList();","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    /** Returns an unmodifiable view of the filtered list of current viewable list */","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"    ObservableList\u003c? extends DisplayableContent\u003e getFilteredCurrentDictionaryList();","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"     * Returns the user prefs\u0027 contacts list file path.","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"    Path getContactsListFilePath();","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"     * Set Dictionary UI Configuration Interface","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"    void setDictionaryContentConfig(DictionaryContentConfig dictionaryContentConfig);","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"     * Set Note UI Configuration Interface","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"    void setNoteContentConfig(NoteContentConfig noteContentConfig);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"TeoHoeKeat":17,"jessen11":4,"godjuansan":2,"riyadh-h":7,"XindiTian":13,"-":38}},{"path":"src/main/java/seedu/dictionote/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.GuiSettings;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.AddContentCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.AddDefinitionCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.AddNoteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.Command;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.CommandResult;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.EditModeSaveCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.EditNoteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.MarkAsDoneNoteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.MarkAsUndoneNoteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.MergeNoteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.SortNoteByTimeCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.SortNoteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.parser.DictionoteParser;","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.DisplayableContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.Storage;","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.ui.DictionaryContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.ui.NoteContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    private final DictionoteParser dictionoteParser;","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionoteParser \u003d new DictionoteParser();","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        Command command \u003d dictionoteParser.parseCommand(commandText);","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"            if (command instanceof AddNoteCommand || command instanceof DeleteNoteCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"                || command instanceof EditNoteCommand || command instanceof MarkAsDoneNoteCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"                || command instanceof SortNoteCommand || command instanceof MarkAsUndoneNoteCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"                || command instanceof EditModeSaveCommand || command instanceof SortNoteByTimeCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"                || command instanceof MergeNoteCommand) {","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"                storage.saveNoteBook(model.getNoteBook());","lastModifiedDate":"2021-03-05"},{"lineNumber":71,"author":{"gitId":"XindiTian"},"content":"            } else if (command instanceof AddContentCommand) {","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":"                storage.saveDictionary(model.getDictionary());","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"XindiTian"},"content":"            } else if (command instanceof AddDefinitionCommand) {","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"                storage.saveDefinitionBook(model.getDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"godjuansan"},"content":"            } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"riyadh-h"},"content":"                storage.saveContactsList(model.getContactsList());","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"            }","lastModifiedDate":"2021-03-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":86,"author":{"gitId":"riyadh-h"},"content":"    public ReadOnlyContactsList getContactsList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"riyadh-h"},"content":"        return model.getContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"riyadh-h"},"content":"    public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"riyadh-h"},"content":"        return model.getFilteredContactList();","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":95,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":96,"author":{"gitId":"jessen11"},"content":"    public ObservableList\u003cNote\u003e getFilteredNoteList() {","lastModifiedDate":"2021-03-05"},{"lineNumber":97,"author":{"gitId":"jessen11"},"content":"        return model.getFilteredNoteList();","lastModifiedDate":"2021-03-05"},{"lineNumber":98,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":99,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":100,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"XindiTian"},"content":"    public ObservableList\u003cContent\u003e getFilteredContentList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"XindiTian"},"content":"        return model.getFilteredContentList();","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"XindiTian"},"content":"    public ObservableList\u003cDefinition\u003e getFilteredDefinitionList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"XindiTian"},"content":"        return model.getFilteredDefinitionList();","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"    public ObservableList\u003c? extends DisplayableContent\u003e getFilteredCurrentDictionaryList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"        return model.getFilteredCurrentDictionaryList();","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"riyadh-h"},"content":"    public Path getContactsListFilePath() {","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"        return model.getContactsListFilePath();","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"    public void setDictionaryContentConfig(DictionaryContentConfig dictionaryContentConfig) {","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setDictionaryContentConfig(dictionaryContentConfig);","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"    public void setNoteContentConfig(NoteContentConfig noteContentConfig) {","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNoteContentConfig(noteContentConfig);","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"TeoHoeKeat":23,"jessen11":22,"godjuansan":3,"riyadh-h":9,"XindiTian":24,"-":58}},{"path":"src/main/java/seedu/dictionote/logic/commands/AddContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":" * Adds a contact to the contacts list.","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"public class AddContactCommand extends Command {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"    public static final String COMMAND_WORD \u003d \"addcontact\";","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a contact to the contacts list.\\n\"","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New contact added: %1$s\";","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"This contact already exists in the contacts list.\";","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"    private final Contact toAdd;","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"     * Creates an AddContactCommand to add the specified {@code Contact}","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"    public AddContactCommand(Contact contact) {","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"        requireNonNull(contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"        toAdd \u003d contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"        if (model.hasContact(toAdd)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"        model.addContact(toAdd);","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), UiAction.OPEN, UiActionOption.CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"riyadh-h"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"riyadh-h"},"content":"                || (other instanceof AddContactCommand // instanceof handles nulls","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 toAdd.equals(((AddContactCommand) other).toAdd));","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"TeoHoeKeat":3,"riyadh-h":66}},{"path":"src/main/java/seedu/dictionote/logic/commands/AddContentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_HEADER;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_MAINCONTENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":" * Adds content to the dictionote book.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"public class AddContentCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    public static final String COMMAND_WORD \u003d \"addcontent\";","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds content to the dictionote book. \"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"            + PREFIX_WEEK + \"WEEK \"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"            + PREFIX_HEADER + \"HEADER \"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"            + PREFIX_MAINCONTENT + \"MAINCONTENT \"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"            + PREFIX_WEEK + \"Week 1 \"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"            + PREFIX_HEADER + \"OOP: Class and Objects\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"            + \"W1.1a Paradigms → OOP → Introduction → What \"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"            + PREFIX_MAINCONTENT + \"Object-Oriented Programming (OOP) is a programming paradigm.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"            + \"A programming paradigm guides programmers to analyze programming problems, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"            + \"and structure programming solutions, in a specific way.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Content added: %1$s\";","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_DUPLICATE_CONTENT \u003d \"This content already exists in the dictionary\";","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"    private final Content toAdd;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"    /** Initializes a command to add the given content","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"     * @param content","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"    public AddContentCommand(Content content) {","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(content);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"        toAdd \u003d content;","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"        if (model.hasContent(toAdd)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CONTENT);","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"        model.addContent(toAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"                || (other instanceof AddContentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 toAdd.equals(((AddContentCommand) other).toAdd));","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":64}},{"path":"src/main/java/seedu/dictionote/logic/commands/AddDefinitionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_DEFINITION;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TERM;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" * Adds a definition to the dictionote book.","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"public class AddDefinitionCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    public static final String COMMAND_WORD \u003d \"adddef\";","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a definition to the dictionote book. \"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"            + PREFIX_TERM + \"TERM \"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"            + PREFIX_DEFINITION + \"DEFINITION \"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"            + PREFIX_TERM + \"OOP \"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"            + PREFIX_DEFINITION + \"A programming paradigm\";","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New definition added: %1$s\";","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_DUPLICATE_DEFINITION \u003d \"This definition already exists in the dictionote book\";","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    private final Definition toAdd;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"    /** Initializes a command to add the given definition","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"     * @param definition","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"    public AddDefinitionCommand(Definition definition) {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(definition);","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"        toAdd \u003d definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"        if (model.hasDefinition(toAdd)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DEFINITION);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"        model.addDefinition(toAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"                || (other instanceof AddDefinitionCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 toAdd.equals(((AddDefinitionCommand) other).toAdd));","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":58}},{"path":"src/main/java/seedu/dictionote/logic/commands/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_CONTENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":" * Adds a note to the dictionote book.","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"    public static final String COMMAND_WORD \u003d \"addnote\";","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a note to the dictionote book. \"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"            + PREFIX_CONTENT + \"CONTENT \"","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"            + PREFIX_CONTENT + \"I love you\"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"            + PREFIX_TAG + \"CS2103 Test Tag\";","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New note added: %1$s\";","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_DUPLICATE_NOTE \u003d \"This note already exists in the dictionote book\";","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"    private final Note toAdd;","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"    /** Initializes a command to add the given note","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"     * @param note","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"    public AddNoteCommand(Note note) {","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(note);","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"        toAdd \u003d note;","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        if (model.onEditModeNote()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE);","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"        if (model.hasNote(toAdd)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_NOTE);","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"        model.addNote(toAdd);","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), UiAction.OPEN, UiActionOption.NOTE_LIST);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"godjuansan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"godjuansan"},"content":"                || (other instanceof AddNoteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"godjuansan"},"content":"                \u0026\u0026 toAdd.equals(((AddNoteCommand) other).toAdd));","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":10,"jessen11":10,"godjuansan":45}},{"path":"src/main/java/seedu/dictionote/logic/commands/ClearContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":" * Clears the contacts list.","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"public class ClearContactCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"    public static final String COMMAND_WORD \u003d \"clearcontact\";","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Contacts list has been cleared!\";","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"        model.setContactsList(new ContactsList());","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(MESSAGE_SUCCESS, UiAction.OPEN, UiActionOption.CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TeoHoeKeat":3,"riyadh-h":6,"XindiTian":2,"-":14}},{"path":"src/main/java/seedu/dictionote/logic/commands/CloseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_ALL_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_CONTACT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_DICTIONARY_CONTENT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_DICTIONARY_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_DICTIONARY_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_NOTE_CONTENT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_NOTE_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_NOTE_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"public class CloseCommand extends Command {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String COMMAND_WORD \u003d \"close\";","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        + \": Close UI Panel.\\n\"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        + \"Option Available: \"","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_ALL_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_CONTACT_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_DICTIONARY_CONTENT_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_DICTIONARY_LIST_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_DICTIONARY_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_LIST_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_NOTE_CONTENT_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_NOTE_LIST_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_NOTE_PANEL + \".\\n\"","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        + \"Example: \" + COMMAND_WORD + \" -c\";","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String SHOWING_CLOSE_MESSAGE \u003d \"Panel closed.\";","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    private final UiActionOption uiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates an CloseCommand of a the specified Option {@code UiActionOption}","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    public CloseCommand(UiActionOption uiActionOption) {","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"        requireNonNull(uiActionOption);","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        this.uiActionOption \u003d uiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(SHOWING_CLOSE_MESSAGE, UiAction.CLOSE, uiActionOption);","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"            || (other instanceof CloseCommand // instanceof handles nulls","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"            \u0026\u0026 uiActionOption.equals(((CloseCommand) other).uiActionOption));","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":67}},{"path":"src/main/java/seedu/dictionote/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"XindiTian":3,"-":17}},{"path":"src/main/java/seedu/dictionote/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    /** The action UI should take.*/","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    private final UiAction uiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    /** The option of the action UI.*/","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    private final UiActionOption uiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult(String feedbackToUser, UiAction uiAction, UiActionOption uiActionOption) {","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        this.uiAction \u003d uiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        this.uiActionOption \u003d uiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        this(feedbackToUser, UiAction.NONE, UiActionOption.NONE);","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}. {@code UiAction},","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult(String feedbackToUser, UiAction uiAction) {","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        this(feedbackToUser, uiAction, UiActionOption.NONE);","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"    public UiAction getUiAction() {","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        return uiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"    public UiActionOption getUiActionOption() {","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        return uiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser);","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"        return Objects.hash(feedbackToUser, uiAction, uiActionOption);","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TeoHoeKeat":30,"XindiTian":1,"-":51}},{"path":"src/main/java/seedu/dictionote/logic/commands/ConvertTxtNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":" * Converts a note identified using it\u0027s displayed index from the notes list into txt file.","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"public class ConvertTxtNoteCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"    public static final String COMMAND_WORD \u003d \"converttxtnote\";","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"            + \": Converts the note identified by the index number used in \"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"            + \"the displayed note list into txt file.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_CONVERT_TXT_NOTE_SUCCESS \u003d \"Converted note: %1$s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"    private static String FILE_PATH \u003d \"./data/\";","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"    public ConvertTxtNoteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"        if (model.onEditModeNote()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"            throw new CommandException(MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE);","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"        List\u003cNote\u003e lastShownList \u003d model.getFilteredNoteList();","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"        Note noteToConvert \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"godjuansan"},"content":"            convertTxtNote(noteToConvert);","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"godjuansan"},"content":"            System.out.println(\"Something is wrong in the converting txt Note Process\");","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"godjuansan"},"content":"        return new CommandResult(String.format(MESSAGE_CONVERT_TXT_NOTE_SUCCESS, noteToConvert),","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"                UiAction.OPEN, UiActionOption.NOTE_LIST);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"    private void convertTxtNote(Note note) throws IOException {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"        String noteToString \u003d note.toString();","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"godjuansan"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH + note.createFileName()));","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"godjuansan"},"content":"        writer.write(noteToString);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"godjuansan"},"content":"        writer.close();","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"godjuansan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"godjuansan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"godjuansan"},"content":"                || (other instanceof ConvertTxtNoteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"godjuansan"},"content":"                \u0026\u0026 targetIndex.equals(((ConvertTxtNoteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"godjuansan":81}},{"path":"src/main/java/seedu/dictionote/logic/commands/DeleteContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":" * Deletes a contact identified using it\u0027s displayed index from the contacts list.","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"public class DeleteContactCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"    public static final String COMMAND_WORD \u003d \"deletecontact\";","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"            + \": Deletes the contact identified by the index number used in the displayed contacts list.\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_DELETE_CONTACT_SUCCESS \u003d \"Deleted contact: %1$s\";","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"    public DeleteContactCommand(Index targetIndex) {","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredContactList();","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"        Contact contactToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        model.deleteContact(contactToDelete);","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CONTACT_SUCCESS, contactToDelete),","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"            UiAction.OPEN, UiActionOption.CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"                || (other instanceof DeleteContactCommand // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteContactCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TeoHoeKeat":4,"riyadh-h":13,"XindiTian":5,"-":34}},{"path":"src/main/java/seedu/dictionote/logic/commands/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import java.util.List;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":" * Deletes a note identified using it\u0027s displayed index from the notes list.","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"public class DeleteNoteCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    public static final String COMMAND_WORD \u003d \"deletenote\";","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"            + \": Deletes the note identified by the index number used in the displayed note list.\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    public static final String MESSAGE_DELETE_NOTE_SUCCESS \u003d \"Deleted note: %1$s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    public DeleteNoteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        if (model.onEditModeNote()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        List\u003cNote\u003e lastShownList \u003d model.getFilteredNoteList();","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"        Note noteToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"        model.deleteNote(noteToDelete);","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_NOTE_SUCCESS, noteToDelete),","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"            UiAction.OPEN, UiActionOption.NOTE_LIST);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"                || (other instanceof DeleteNoteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteNoteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"TeoHoeKeat":10,"jessen11":52}},{"path":"src/main/java/seedu/dictionote/logic/commands/EditContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.model.Model.PREDICATE_SHOW_ALL_CONTACTS;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.CollectionUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Address;","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Email;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":" * Edits the details of an existing contact in the contacts list.","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"public class EditContactCommand extends Command {","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"    public static final String COMMAND_WORD \u003d \"editcontact\";","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the contact identified \"","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"            + \"by the index number used in the displayed contacts list. \"","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_EDIT_CONTACT_SUCCESS \u003d \"Edited contact: %1$s\";","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"This contact already exists in the contacts list.\";","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"    private final EditContactDescriptor editContactDescriptor;","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"     * @param index of the contact in the filtered contacts to edit","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"riyadh-h"},"content":"     * @param editContactDescriptor details to edit the contact with","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"riyadh-h"},"content":"    public EditContactCommand(Index index, EditContactDescriptor editContactDescriptor) {","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"        requireNonNull(editContactDescriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"        this.editContactDescriptor \u003d new EditContactDescriptor(editContactDescriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"riyadh-h"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredContactList();","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"riyadh-h"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"riyadh-h"},"content":"        Contact contactToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"        Contact editedContact \u003d createEditedContact(contactToEdit, editContactDescriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"        if (!contactToEdit.isSameContact(editedContact) \u0026\u0026 model.hasContact(editedContact)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"riyadh-h"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"riyadh-h"},"content":"        model.setContact(contactToEdit, editedContact);","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"riyadh-h"},"content":"        model.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CONTACT_SUCCESS, editedContact),","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"            UiAction.OPEN, UiActionOption.CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"riyadh-h"},"content":"     * Creates and returns a {@code Contact} with the details of {@code contactToEdit}","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"riyadh-h"},"content":"     * edited with {@code editContactDescriptor}.","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"riyadh-h"},"content":"    private static Contact createEditedContact(Contact contactToEdit, EditContactDescriptor editContactDescriptor) {","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"        assert contactToEdit !\u003d null;","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"riyadh-h"},"content":"        Name updatedName \u003d editContactDescriptor.getName().orElse(contactToEdit.getName());","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"riyadh-h"},"content":"        Phone updatedPhone \u003d editContactDescriptor.getPhone().orElse(contactToEdit.getPhone());","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"riyadh-h"},"content":"        Email updatedEmail \u003d editContactDescriptor.getEmail().orElse(contactToEdit.getEmail());","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"riyadh-h"},"content":"        Address updatedAddress \u003d editContactDescriptor.getAddress().orElse(contactToEdit.getAddress());","lastModifiedDate":"2021-03-11"},{"lineNumber":103,"author":{"gitId":"riyadh-h"},"content":"        Set\u003cTag\u003e updatedTags \u003d editContactDescriptor.getTags().orElse(contactToEdit.getTags());","lastModifiedDate":"2021-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"riyadh-h"},"content":"        return new Contact(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"riyadh-h"},"content":"        if (!(other instanceof EditContactCommand)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand e \u003d (EditContactCommand) other;","lastModifiedDate":"2021-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 editContactDescriptor.equals(e.editContactDescriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"riyadh-h"},"content":"     * Stores the details to edit the contact with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-11"},{"lineNumber":128,"author":{"gitId":"riyadh-h"},"content":"     * corresponding field value of the contact.","lastModifiedDate":"2021-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"riyadh-h"},"content":"    public static class EditContactDescriptor {","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"jessen11"},"content":"        private Address address;","lastModifiedDate":"2021-03-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"riyadh-h"},"content":"        public EditContactDescriptor() {}","lastModifiedDate":"2021-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"riyadh-h"},"content":"        public EditContactDescriptor(EditContactDescriptor toCopy) {","lastModifiedDate":"2021-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-03-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2021-03-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-03-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-03-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-03-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-03-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"riyadh-h"},"content":"            if (!(other instanceof EditContactDescriptor)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"riyadh-h"},"content":"            EditContactDescriptor e \u003d (EditContactDescriptor) other;","lastModifiedDate":"2021-03-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2021-03-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"TeoHoeKeat":4,"jessen11":2,"riyadh-h":47,"XindiTian":12,"-":165}},{"path":"src/main/java/seedu/dictionote/logic/commands/EditModeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":" * Edit the note in edit mode.","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"public class EditModeCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String COMMAND_WORD \u003d \"editmode\";","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"            + \": Enter Edit Mode to edit the current note.\"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"            + \" use `shownote` command to show the note for editing\";","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_EDIT_MODE_NOTE_SUCCESS \u003d \"Enter edit mode\";","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_ALREADY_IN_EDIT_MODE \u003d \"Currently in edit mode.\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        + \"type in `save` to save the edited content and quit edit mode\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        + \"type in `quit` to quit edit mode without saving\";","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!model.hasNoteShown()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_USAGE);","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        if (model.onEditModeNote()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_ALREADY_IN_EDIT_MODE);","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(MESSAGE_EDIT_MODE_NOTE_SUCCESS,","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"                UiAction.EDITMODEENTER);","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"                || other instanceof EditModeCommand; // instanceof handles nulls","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"TeoHoeKeat":45}},{"path":"src/main/java/seedu/dictionote/logic/commands/EditModeQuitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":" * Edit the note in edit mode.","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"public class EditModeQuitCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String COMMAND_WORD \u003d \"quit\";","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_EDIT_MODE_EXIT_SUCCESS \u003d \"Quit edit mode.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_NOT_IN_EDIT_MODE \u003d \"Not in edit mode.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!model.onEditModeNote()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_NOT_IN_EDIT_MODE);","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        model.resetNoteShown();","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(MESSAGE_EDIT_MODE_EXIT_SUCCESS,","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"                UiAction.EDITMODEEXIT);","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"                || other instanceof EditModeQuitCommand; // instanceof handles nulls","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"TeoHoeKeat":37}},{"path":"src/main/java/seedu/dictionote/logic/commands/EditModeSaveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static java.time.LocalDateTime.now;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.EditNoteCommand.MESSAGE_DUPLICATE_NOTE;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.EditNoteCommand.MESSAGE_NOTHING_CHANGE_NOTE;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.model.Model.PREDICATE_SHOW_ALL_CONTACTS;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":" * Edit the note in edit mode.","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"public class EditModeSaveCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String COMMAND_WORD \u003d \"save\";","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_EDIT_MODE_EXIT_SUCCESS \u003d \"Save and quit edit mode.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_NOT_IN_EDIT_MODE \u003d \"Not in edit mode.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!model.onEditModeNote()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_NOT_IN_EDIT_MODE);","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        Note noteToEdit \u003d model.getNoteShown();","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        if (model.getEditedNoteShownContent().equals(noteToEdit.getNote())) {","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_NOTHING_CHANGE_NOTE);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        Note editedNote \u003d noteToEdit.createEditedNote(model.getEditedNoteShownContent(), noteToEdit.getTags(),","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"            noteToEdit.getCreateTime(), now(), noteToEdit.isDone());","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        if (model.hasNote(editedNote)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_NOTE);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNote(noteToEdit, editedNote);","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        model.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        model.showNote(editedNote);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(MESSAGE_EDIT_MODE_EXIT_SUCCESS,","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"                UiAction.EDITMODEEXIT);","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"                || other instanceof EditModeSaveCommand; // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"TeoHoeKeat":57}},{"path":"src/main/java/seedu/dictionote/logic/commands/EditNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static java.time.LocalDateTime.now;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_CONTENT;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.model.Model.PREDICATE_SHOW_ALL_CONTACTS;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":" * Edits the details of an existing contact in the contacts list.","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"public class EditNoteCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    public static final String COMMAND_WORD \u003d \"editnote\";","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the note identified \"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"            + \"by the index number used in the displayed note list. \"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"            + \"[\" + PREFIX_CONTENT + \"CONTENT] \"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"            + PREFIX_CONTENT + \"Study for CS2106 Midterms\";","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"    public static final String MESSAGE_EDIT_NOTE_SUCCESS \u003d \"Edited note: %1$s\";","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_DUPLICATE_NOTE \u003d \"This note already exists in the note list.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_NOTHING_CHANGE_NOTE \u003d \"This note have not been change.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"    private final Index index;","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"    private final EditNoteDescriptor editNoteDescriptor;","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"     * @param index of the contact in the filtered contacts to edit","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"     * @param editNoteDescriptor details to edit the contact with","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"    public EditNoteCommand(Index index, EditNoteDescriptor editNoteDescriptor) {","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"        requireNonNull(editNoteDescriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"        this.editNoteDescriptor \u003d new EditNoteDescriptor(editNoteDescriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        if (model.onEditModeNote()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE);","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"        List\u003cNote\u003e lastShownList \u003d model.getFilteredNoteList();","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"        Note noteToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"        Note editedNote \u003d createEditedNote(noteToEdit, editNoteDescriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"        if (noteToEdit.isSameNote(editedNote)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_NOTHING_CHANGE_NOTE);","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"        if (model.hasNote(editedNote)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_NOTE);","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"jessen11"},"content":"        model.setNote(noteToEdit, editedNote);","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"jessen11"},"content":"        model.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_NOTE_SUCCESS, editedNote),","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"            UiAction.OPEN, UiActionOption.NOTE_LIST);","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"jessen11"},"content":"     * Creates and returns a {@code Note} with the details of {@code noteToEdit}","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"jessen11"},"content":"     * edited with {@code editNoteDescriptor}.","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"jessen11"},"content":"    private static Note createEditedNote(Note noteToEdit, EditNoteDescriptor editNoteDescriptor) {","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"jessen11"},"content":"        assert noteToEdit !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"jessen11"},"content":"        Note updatedNote \u003d editNoteDescriptor.getNote().orElse(noteToEdit);","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"godjuansan"},"content":"        Set\u003cTag\u003e updatedTags \u003d editNoteDescriptor.getTags().orElse(noteToEdit.getTags());","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"godjuansan"},"content":"        return updatedNote.createEditedNote(updatedNote.getNote(), updatedTags,","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"jessen11"},"content":"                noteToEdit.getCreateTime(), now(), updatedNote.isDone());","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"jessen11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"jessen11"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"jessen11"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"jessen11"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"jessen11"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"jessen11"},"content":"        if (!(other instanceof EditNoteCommand)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"jessen11"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"jessen11"},"content":"        // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"jessen11"},"content":"        EditNoteCommand e \u003d (EditNoteCommand) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"jessen11"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"jessen11"},"content":"                \u0026\u0026 editNoteDescriptor.equals(e.editNoteDescriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"jessen11"},"content":"     * Stores the details to edit the contact with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"jessen11"},"content":"     * corresponding field value of the contact.","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"jessen11"},"content":"    public static class EditNoteDescriptor {","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"jessen11"},"content":"        private Note note;","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"godjuansan"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"jessen11"},"content":"        private LocalDateTime createTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"jessen11"},"content":"        private LocalDateTime editTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"jessen11"},"content":"        private Boolean isDone;","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"jessen11"},"content":"        public EditNoteDescriptor() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"jessen11"},"content":"        /**","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"jessen11"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"jessen11"},"content":"         */","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"jessen11"},"content":"        public EditNoteDescriptor(EditNoteDescriptor toCopy) {","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"jessen11"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"godjuansan"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"jessen11"},"content":"            setCreateTime(toCopy.createTime);","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"jessen11"},"content":"            setEditTime(now());","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"jessen11"},"content":"            setIsDone(toCopy.isDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"jessen11"},"content":"        /**","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"jessen11"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"jessen11"},"content":"         */","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"jessen11"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"godjuansan"},"content":"            return CollectionUtil.isAnyNonNull(note, tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":155,"author":{"gitId":"jessen11"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2021-03-13"},{"lineNumber":156,"author":{"gitId":"jessen11"},"content":"            this.note \u003d note;","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"jessen11"},"content":"        public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"jessen11"},"content":"            return Optional.ofNullable(note);","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"godjuansan"},"content":"        /**","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"godjuansan"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"godjuansan"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"godjuansan"},"content":"         */","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"godjuansan"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"godjuansan"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"godjuansan"},"content":"        /**","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"godjuansan"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"godjuansan"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"godjuansan"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"godjuansan"},"content":"         */","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"godjuansan"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"godjuansan"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"jessen11"},"content":"        /**","lastModifiedDate":"2021-03-15"},{"lineNumber":180,"author":{"gitId":"jessen11"},"content":"         * Sets {@code createTime} to this object\u0027s {@code createTime}.","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"jessen11"},"content":"         * A defensive copy of {@code createTime} is used internally.","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"jessen11"},"content":"         */","lastModifiedDate":"2021-03-15"},{"lineNumber":183,"author":{"gitId":"jessen11"},"content":"        public void setCreateTime(LocalDateTime createTime) {","lastModifiedDate":"2021-03-15"},{"lineNumber":184,"author":{"gitId":"jessen11"},"content":"            this.createTime \u003d createTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":185,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":186,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":187,"author":{"gitId":"jessen11"},"content":"        /**","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"jessen11"},"content":"         * Returns an unmodifiable createTime, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"jessen11"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"jessen11"},"content":"         * Returns {@code Optional#empty()} if {@code createTime} is null.","lastModifiedDate":"2021-03-15"},{"lineNumber":191,"author":{"gitId":"jessen11"},"content":"         */","lastModifiedDate":"2021-03-15"},{"lineNumber":192,"author":{"gitId":"jessen11"},"content":"        public Optional\u003cLocalDateTime\u003e getCreateTime() {","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"jessen11"},"content":"            return Optional.ofNullable(createTime);","lastModifiedDate":"2021-03-15"},{"lineNumber":194,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":195,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"jessen11"},"content":"        /**","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"jessen11"},"content":"         * Sets {@code editTime} to this object\u0027s {@code editTime}.","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"jessen11"},"content":"         * A defensive copy of {@code editTime} is used internally.","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"jessen11"},"content":"         */","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"jessen11"},"content":"        public void setEditTime(LocalDateTime editTime) {","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"jessen11"},"content":"            this.editTime \u003d editTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":202,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":203,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":204,"author":{"gitId":"jessen11"},"content":"        /**","lastModifiedDate":"2021-03-15"},{"lineNumber":205,"author":{"gitId":"jessen11"},"content":"         * Returns an unmodifiable editTime, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-15"},{"lineNumber":206,"author":{"gitId":"jessen11"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-15"},{"lineNumber":207,"author":{"gitId":"jessen11"},"content":"         * Returns {@code Optional#empty()} if {@code editTime} is null.","lastModifiedDate":"2021-03-15"},{"lineNumber":208,"author":{"gitId":"jessen11"},"content":"         */","lastModifiedDate":"2021-03-15"},{"lineNumber":209,"author":{"gitId":"jessen11"},"content":"        public Optional\u003cLocalDateTime\u003e getEditTime() {","lastModifiedDate":"2021-03-15"},{"lineNumber":210,"author":{"gitId":"jessen11"},"content":"            return Optional.ofNullable(editTime);","lastModifiedDate":"2021-03-15"},{"lineNumber":211,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":212,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":213,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":214,"author":{"gitId":"jessen11"},"content":"        /**","lastModifiedDate":"2021-03-15"},{"lineNumber":215,"author":{"gitId":"jessen11"},"content":"         * Sets {@code isDone} to this object\u0027s {@code isDone}.","lastModifiedDate":"2021-03-15"},{"lineNumber":216,"author":{"gitId":"jessen11"},"content":"         * A defensive copy of {@code isDone} is used internally.","lastModifiedDate":"2021-03-15"},{"lineNumber":217,"author":{"gitId":"jessen11"},"content":"         */","lastModifiedDate":"2021-03-15"},{"lineNumber":218,"author":{"gitId":"jessen11"},"content":"        public void setIsDone(Boolean isDone) {","lastModifiedDate":"2021-03-15"},{"lineNumber":219,"author":{"gitId":"jessen11"},"content":"            this.isDone \u003d isDone;","lastModifiedDate":"2021-03-15"},{"lineNumber":220,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":221,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":222,"author":{"gitId":"jessen11"},"content":"        public Optional\u003cBoolean\u003e getIsDone() {","lastModifiedDate":"2021-03-15"},{"lineNumber":223,"author":{"gitId":"jessen11"},"content":"            return Optional.ofNullable(this.isDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":224,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":225,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":226,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":227,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":228,"author":{"gitId":"jessen11"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":229,"author":{"gitId":"jessen11"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":230,"author":{"gitId":"jessen11"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":231,"author":{"gitId":"jessen11"},"content":"                return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":232,"author":{"gitId":"jessen11"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":233,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":234,"author":{"gitId":"jessen11"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":235,"author":{"gitId":"jessen11"},"content":"            if (!(other instanceof EditNoteDescriptor)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":236,"author":{"gitId":"jessen11"},"content":"                return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":237,"author":{"gitId":"jessen11"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":238,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":239,"author":{"gitId":"jessen11"},"content":"            // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":240,"author":{"gitId":"jessen11"},"content":"            EditNoteDescriptor e \u003d (EditNoteDescriptor) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":241,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":242,"author":{"gitId":"godjuansan"},"content":"            return getNote().equals(e.getNote())","lastModifiedDate":"2021-03-14"},{"lineNumber":243,"author":{"gitId":"godjuansan"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-03-14"},{"lineNumber":244,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":245,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":246,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"TeoHoeKeat":17,"jessen11":199,"godjuansan":30}},{"path":"src/main/java/seedu/dictionote/logic/commands/EmailContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":" * Opens a new window to send an email to a contact identified using it\u0027s displayed index from the contacts list.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"public class EmailContactCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"    public static final String COMMAND_WORD \u003d \"emailcontact\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"            + \": Opens a new window to send an email to the contact identified by the index number used in the \"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"            + \"displayed contacts list.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_EMAIL_CONTACT_SUCCESS \u003d \"New email window open: to %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"    public EmailContactCommand(Index targetIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredContactList();","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"        Contact contactToEmail \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"        model.emailContact(contactToEmail);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"        return new CommandResult(String.format(MESSAGE_EMAIL_CONTACT_SUCCESS, contactToEmail));","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"                || (other instanceof EmailContactCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 targetIndex.equals(((EmailContactCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"riyadh-h":55}},{"path":"src/main/java/seedu/dictionote/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        if (model.onEditModeNote()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE);","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, UiAction.EXIT);","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"TeoHoeKeat":10,"XindiTian":2,"-":15}},{"path":"src/main/java/seedu/dictionote/logic/commands/FindContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":" * Finds and lists all contacts in the contacts list whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"public class FindContactCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"    public static final String COMMAND_WORD \u003d \"findcontact\";","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all contacts whose names and emails contain \"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"            + \"any of, and tags contain all of, the specified keywords (case-insensitive) \"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"            + \"[\" + PREFIX_NAME + \"NAME_KEYWORDS]... \"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL_KEYWORDS]... \"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"            + \"[\" + PREFIX_TAG + \"TAG_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_NAME + \"alice \"","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_NAME + \"bob \"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_EMAIL + \"example.com \"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"            + PREFIX_TAG + \"tutors \";","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"    private final EmailContainsKeywordsPredicate emailPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"    private final TagsContainKeywordsPredicate tagsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"     * Creates a new {@code FindContactCommand} with two predicates (i.e., conditions):","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"     * one applies to the contacts\u0027 names, and the other applies to their tags.","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"     * @param namePredicate The predicate to be evaluated against the contacts\u0027 names.","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"     * @param tagsPredicate The predicate to be evaluated against the contacts\u0027 tags.","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"    public FindContactCommand(NameContainsKeywordsPredicate namePredicate,","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"                              EmailContainsKeywordsPredicate emailPredicate,","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"                              TagsContainKeywordsPredicate tagsPredicate) {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"        this.emailPredicate \u003d emailPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"        this.tagsPredicate \u003d tagsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"        // satisfy both name- and tag-matching.","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"riyadh-h"},"content":"        model.updateFilteredContactList(namePredicate.and(emailPredicate).and(tagsPredicate));","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"riyadh-h"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"                String.format(Messages.MESSAGE_CONTACTS_LISTED_OVERVIEW, model.getFilteredContactList().size()),","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"                UiAction.OPEN, UiActionOption.CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"riyadh-h"},"content":"                || (other instanceof FindContactCommand // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 namePredicate.equals(((FindContactCommand) other).namePredicate)","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 emailPredicate.equals(((FindContactCommand) other).emailPredicate)","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 tagsPredicate.equals(((FindContactCommand) other).tagsPredicate)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"TeoHoeKeat":4,"riyadh-h":70}},{"path":"src/main/java/seedu/dictionote/logic/commands/FindContentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.ContentContainsKeywordsPredicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":" * Finds and lists all persons in dictionote book whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"public class FindContentCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    public static final String COMMAND_WORD \u003d \"findcontent\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all relevant content which contain any of \"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"            + \"Example: \" + COMMAND_WORD + \" programming language\";","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    private final ContentContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    public FindContentCommand(ContentContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"        model.updateFilteredContentList(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"                String.format(Messages.MESSAGE_CONTENTS_LISTED_OVERVIEW, model.getFilteredContentList().size()));","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"                || (other instanceof FindContentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 predicate.equals(((FindContentCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"XindiTian":42}},{"path":"src/main/java/seedu/dictionote/logic/commands/FindDefinitionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.DefinitionContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":" * Finds and lists all persons in dictionote book whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"public class FindDefinitionCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    public static final String COMMAND_WORD \u003d \"finddef\";","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all relevant definition which contain any of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"            + \"Example: \" + COMMAND_WORD + \" programming language\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    private final DefinitionContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    public FindDefinitionCommand(DefinitionContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"        model.updateFilteredDefinitionList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"                String.format(Messages.MESSAGE_DEFINITIONS_LISTED_OVERVIEW, model.getFilteredDefinitionList().size()));","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"                || (other instanceof FindDefinitionCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 predicate.equals(((FindDefinitionCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":42}},{"path":"src/main/java/seedu/dictionote/logic/commands/FindNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_CONTENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.NoteContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.TagNoteContainKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":" * Finds and lists all note in the note list whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"public class FindNoteCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    public static final String COMMAND_WORD \u003d \"findnote\";","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all note whose content contain any of, \"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"            + \"and tags contain all of, the specified keywords (case-insensitive) \"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"            + \"[\" + PREFIX_CONTENT + \"CONTENT_KEYWORDS]... \"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"            + \"[\" + PREFIX_TAG + \"TAG_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"            + PREFIX_CONTENT + \"CS2103 \"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"            + PREFIX_CONTENT + \"Midterms \"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"            + PREFIX_TAG + \"important \";","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"    private final NoteContainsKeywordsPredicate notePredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"    private final TagNoteContainKeywordsPredicate tagsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"     * Creates a new {@code FindContactCommand} with two predicates (i.e., conditions):","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"     * one applies to the contacts\u0027 names, and the other applies to their tags.","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"     * @param notePredicate The predicate to be evaluated against the contacts\u0027 names.","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"     * @param tagsPredicate The predicate to be evaluated against the contacts\u0027 tags.","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"    public FindNoteCommand(NoteContainsKeywordsPredicate notePredicate,","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"                              TagNoteContainKeywordsPredicate tagsPredicate) {","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        this.notePredicate \u003d notePredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"        this.tagsPredicate \u003d tagsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"        // satisfy both name- and tag-matching.","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"        model.updateFilteredNoteList(notePredicate.and(tagsPredicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"                String.format(Messages.MESSAGE_NOTES_LISTED_OVERVIEW, model.getFilteredNoteList().size()),","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"                UiAction.OPEN, UiActionOption.NOTE);","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"                || (other instanceof FindNoteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"                \u0026\u0026 notePredicate.equals(((FindNoteCommand) other).notePredicate)","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"                \u0026\u0026 tagsPredicate.equals(((FindNoteCommand) other).tagsPredicate)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"jessen11":66}},{"path":"src/main/java/seedu/dictionote/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, UiAction.HELP);","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TeoHoeKeat":2,"XindiTian":2,"-":18}},{"path":"src/main/java/seedu/dictionote/logic/commands/ListCommandCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":" * Format every available  command for display.","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"public class ListCommandCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String COMMAND_WORD \u003d \"listcommand\";","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String SHOWING_LIST_COMMAND_MESSAGE \u003d \"Dictionary Command List: \\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"        + FindContentCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"        + FindDefinitionCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"        + ListContentCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"        + ListDefinitionCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        + ShowDictionaryContentCommand.COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        + \"Note Command List: \\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        + AddNoteCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        + EditNoteCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        + ShowNoteCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        + DeleteNoteCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"        + ListNoteCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        + SortNoteCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"        + SortNoteByTimeCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        + MarkAsDoneNoteCommand.COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        + \"Contact Command List: \\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        + AddContactCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        + EditContactCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        + DeleteContactCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        + ListContactCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        + FindContactCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        + EmailContactCommand.COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        + \"Others Command List: \\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        + OpenCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"        + CloseCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        + HelpCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        + ExitCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(SHOWING_LIST_COMMAND_MESSAGE);","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"TeoHoeKeat":42,"jessen11":3,"XindiTian":2}},{"path":"src/main/java/seedu/dictionote/logic/commands/ListContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.model.Model.PREDICATE_SHOW_ALL_CONTACTS;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":" * Lists all contacts in the contacts list to the user.","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"public class ListContactCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"    public static final String COMMAND_WORD \u003d \"listcontact\";","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all contacts\";","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"        model.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(MESSAGE_SUCCESS, UiAction.OPEN, UiActionOption.CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TeoHoeKeat":3,"godjuansan":1,"riyadh-h":6,"XindiTian":2,"-":15}},{"path":"src/main/java/seedu/dictionote/logic/commands/ListContentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.model.Model.PREDICATE_SHOW_ALL_CONTENTS;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":" * Lists all contacts in the contacts list to the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"public class ListContentCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    public static final String COMMAND_WORD \u003d \"listcontent\";","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Dictionary shown.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"        model.updateFilteredContentList(PREDICATE_SHOW_ALL_CONTENTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"        return new CommandResult(MESSAGE_SUCCESS, UiAction.OPEN, UiActionOption.DICTIONARY_CONTENT);","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":27}},{"path":"src/main/java/seedu/dictionote/logic/commands/ListDefinitionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.model.Model.PREDICATE_SHOW_ALL_DEFINITION;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":" * Lists all contacts in the contacts list to the user.","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"public class ListDefinitionCommand extends Command {","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    public static final String COMMAND_WORD \u003d \"listdef\";","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All existing definitions shown.\";","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"        model.updateFilteredDefinitionList(PREDICATE_SHOW_ALL_DEFINITION);","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"        return new CommandResult(MESSAGE_SUCCESS, UiAction.OPEN, UiActionOption.DICTIONARY_LIST);","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"XindiTian":27}},{"path":"src/main/java/seedu/dictionote/logic/commands/ListNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.model.Model.PREDICATE_SHOW_ALL_NOTES;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":" * Lists all notes in the notes list to the user.","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"public class ListNoteCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"    public static final String COMMAND_WORD \u003d \"listnote\";","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all notes\";","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"        model.updateFilteredNoteList(PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"godjuansan":21}},{"path":"src/main/java/seedu/dictionote/logic/commands/MarkAllAsUndoneNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.model.Model.PREDICATE_SHOW_ALL_NOTES;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"public class MarkAllAsUndoneNoteCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"    public static final String COMMAND_WORD \u003d \"markallasundonenote\";","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"            + \": Mark all note as not done.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_MARK_ALL_AS_UNDONE_NOTE_SUCCESS \u003d \"Mark all notes as not done.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"    public MarkAllAsUndoneNoteCommand() {}","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"        model.updateFilteredNoteList(PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"        List\u003cNote\u003e lastShownList \u003d model.getFilteredNoteList();","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"            Note noteToMarkAsUndone \u003d lastShownList.get(i);","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"            Note markAsUndoneNote \u003d noteToMarkAsUndone.markAsUndoneNote(noteToMarkAsUndone.getNote(),","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"                    noteToMarkAsUndone.getTags(), noteToMarkAsUndone.getCreateTime());","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"            model.setNote(noteToMarkAsUndone, markAsUndoneNote);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_ALL_AS_UNDONE_NOTE_SUCCESS));","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"                || (other instanceof MarkAllAsUndoneNoteCommand); // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"godjuansan":43}},{"path":"src/main/java/seedu/dictionote/logic/commands/MarkAsDoneNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"public class MarkAsDoneNoteCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"    public static final String COMMAND_WORD \u003d \"markasdonenote\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"            + \": Mark a note as done.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_MARK_AS_DONE_NOTE_SUCCESS \u003d \"Mark as done note: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    public MarkAsDoneNoteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        if (model.onEditModeNote()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE);","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"        List\u003cNote\u003e lastShownList \u003d model.getFilteredNoteList();","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"        Note noteToMarkAsDone \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"        Note markAsDoneNote \u003d noteToMarkAsDone.markAsDoneNote(noteToMarkAsDone.getNote(),","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"                noteToMarkAsDone.getTags(), noteToMarkAsDone.getCreateTime());","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"        model.setNote(noteToMarkAsDone, markAsDoneNote);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_AS_DONE_NOTE_SUCCESS, markAsDoneNote));","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"godjuansan"},"content":"                || (other instanceof MarkAsDoneNoteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"                \u0026\u0026 targetIndex.equals(((MarkAsDoneNoteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"TeoHoeKeat":6,"godjuansan":52}},{"path":"src/main/java/seedu/dictionote/logic/commands/MarkAsUndoneNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"public class MarkAsUndoneNoteCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"    public static final String COMMAND_WORD \u003d \"markasundonenote\";","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"            + \": Mark a note as not done.\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_MARK_AS_UNDONE_NOTE_SUCCESS \u003d \"Mark as not done note: %1$s\";","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"    public MarkAsUndoneNoteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"        List\u003cNote\u003e lastShownList \u003d model.getFilteredNoteList();","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"        Note noteToMarkAsUndone \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"        Note markAsUndoneNote \u003d noteToMarkAsUndone.markAsUndoneNote(noteToMarkAsUndone.getNote(),","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"                noteToMarkAsUndone.getTags(), noteToMarkAsUndone.getCreateTime());","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"        model.setNote(noteToMarkAsUndone, markAsUndoneNote);","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_AS_UNDONE_NOTE_SUCCESS, markAsUndoneNote));","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"                || (other instanceof MarkAsUndoneNoteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"                \u0026\u0026 targetIndex.equals(((MarkAsUndoneNoteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"godjuansan":52}},{"path":"src/main/java/seedu/dictionote/logic/commands/MergeNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"public class MergeNoteCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"    public static final String COMMAND_WORD \u003d \"mergenote\";","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"            + \": Merges the two note identified by the two indexes used in the displayed note list.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"            + \"INDEX1 (must be a positive integer) \"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"            + \"INDEX2 (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" 2\";","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_MERGE_NOTE_SUCCESS \u003d \"Merged note: %1$s and %2$s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"    private final Index firstIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"    private final Index secondIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"     * Merges two notes identified using it\u0027s displayed index from the notes list.","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"    public MergeNoteCommand(Index firstIndex, Index secondIndex) {","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"        this.firstIndex \u003d firstIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"        this.secondIndex \u003d secondIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"        if (model.onEditModeNote()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"            throw new CommandException(MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"        List\u003cNote\u003e lastShownList \u003d model.getFilteredNoteList();","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"        if (firstIndex.getZeroBased() \u003e\u003d lastShownList.size()","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"                || secondIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"        Note firstNote \u003d lastShownList.get(firstIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"godjuansan"},"content":"        Note secondNote \u003d lastShownList.get(secondIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"        model.mergeNote(firstNote, secondNote);","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"        return new CommandResult(String.format(MESSAGE_MERGE_NOTE_SUCCESS, firstNote, secondNote),","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"godjuansan"},"content":"                UiAction.OPEN, UiActionOption.NOTE_LIST);","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"godjuansan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"godjuansan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"                || (other instanceof MergeNoteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"                \u0026\u0026 firstIndex.equals(((MergeNoteCommand) other).firstIndex)","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"                \u0026\u0026 secondIndex.equals(((MergeNoteCommand) other).secondIndex)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"godjuansan":69}},{"path":"src/main/java/seedu/dictionote/logic/commands/MostFreqContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.model.Model.PREDICATE_SHOW_ALL_CONTACTS;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":" * Lists all contacts in the contacts list to the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"public class MostFreqContactCommand extends Command {","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"    public static final String COMMAND_WORD \u003d \"mostfreqcontact\";","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all contacts, sorted by most frequently-contacted\";","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"        model.sortContactsByFrequencyCounter();","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"        model.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"        return new CommandResult(MESSAGE_SUCCESS, UiAction.OPEN, UiActionOption.CONTACT);","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"riyadh-h":28}},{"path":"src/main/java/seedu/dictionote/logic/commands/OpenCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_ALL_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_CONTACT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_DICTIONARY_CONTENT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_DICTIONARY_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_DICTIONARY_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_NOTE_CONTENT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_NOTE_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_NOTE_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"public class OpenCommand extends Command {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String COMMAND_WORD \u003d \"open\";","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        + \": Open UI Panel.\\n\"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        + \"Option Available: \"","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_ALL_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_CONTACT_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_DICTIONARY_CONTENT_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_DICTIONARY_LIST_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_DICTIONARY_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_LIST_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_NOTE_CONTENT_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_NOTE_LIST_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_NOTE_PANEL + \".\\n\"","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        + \"Example: \" + COMMAND_WORD + \" -c\";","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String SHOWING_OPEN_MESSAGE \u003d \"Panel opened.\";","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    private final UiActionOption uiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates an OpenCommand of a the specified Option {@code UiActionOption}","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    public OpenCommand(UiActionOption uiActionOption) {","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"        requireNonNull(uiActionOption);","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        this.uiActionOption \u003d uiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(SHOWING_OPEN_MESSAGE, UiAction.OPEN, uiActionOption);","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"            || (other instanceof OpenCommand // instanceof handles nulls","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"            \u0026\u0026 uiActionOption.equals(((OpenCommand) other).uiActionOption));","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":66}},{"path":"src/main/java/seedu/dictionote/logic/commands/SetContactDividerPositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":" * Sets the position of contact divider.","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"public class SetContactDividerPositionCommand extends SetDividerPositionCommand {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String COMMAND_WORD \u003d \"setdividerc\";","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"            + \": Set the position of contact divider.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Parameters: Position (must be a integer between 1 to 9 inclusively)\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_SET_DIVIDER_SUCCESS \u003d \"Contact Divider Position Set to \";","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates an SetContactDividerPositionCommand that set the contact divider to a the specified position","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    public SetContactDividerPositionCommand(int position) {","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        super(position);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        model.getGuiSettings().setContactSplitRatio(position / NORMALIZE_RATIO);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(String.format(MESSAGE_SET_DIVIDER_SUCCESS + position),","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"                UiAction.OPEN, UiActionOption.CONTACT);","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"                || (other instanceof SetContactDividerPositionCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"                \u0026\u0026 position \u003d\u003d (((SetContactDividerPositionCommand) other).position)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"TeoHoeKeat":45}},{"path":"src/main/java/seedu/dictionote/logic/commands/SetDictionaryDividerPositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":" * Sets the position of contact divider.","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"public class SetDictionaryDividerPositionCommand extends SetDividerPositionCommand {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String COMMAND_WORD \u003d \"setdividerd\";","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"            + \": Set the position of dictionary divider.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Parameters: Position (must be a integer between 1 to 9 inclusively)\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_SET_DIVIDER_SUCCESS \u003d \"Dictionary Divider Position Set to \";","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates an SetDictionaryDividerPositionCommand that set the not divider to a the specified position","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    public SetDictionaryDividerPositionCommand(int position) {","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        super(position);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        model.getGuiSettings().setDictionarySplitRatio(position / NORMALIZE_RATIO);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(String.format(MESSAGE_SET_DIVIDER_SUCCESS + position),","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"                UiAction.OPEN, UiActionOption.DICTIONARY);","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"                || (other instanceof SetDictionaryDividerPositionCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"                \u0026\u0026 position \u003d\u003d (((SetDictionaryDividerPositionCommand) other).position)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"TeoHoeKeat":45}},{"path":"src/main/java/seedu/dictionote/logic/commands/SetDividerPositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":" * Sets the position of contact divider.","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"public abstract class SetDividerPositionCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final double NORMALIZE_RATIO \u003d 10;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    protected final int position;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates an SetDividerPositionCommand that set an divider to a the specified position","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    public SetDividerPositionCommand(int position) {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"        assert position \u003c\u003d 9 || position \u003e\u003d 1 : \"Position should be parsed and validate before passing in\";","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"        this.position \u003d position;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"TeoHoeKeat":17}},{"path":"src/main/java/seedu/dictionote/logic/commands/SetMainDividerPositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":" * Sets the position of contact divider.","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"public class SetMainDividerPositionCommand extends SetDividerPositionCommand {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String COMMAND_WORD \u003d \"setdividerm\";","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"            + \": Set the position of main divider.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Parameters: Position (must be a integer between 1 to 9 inclusively)\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_SET_DIVIDER_SUCCESS \u003d \"Main Divider Position Set to \";","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates an SetMainDividerPositionCommand that set the main divider to a the specified position","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    public SetMainDividerPositionCommand(int position) {","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        super(position);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        model.getGuiSettings().setMainSplitRatio(position / NORMALIZE_RATIO);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(String.format(MESSAGE_SET_DIVIDER_SUCCESS + position),","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"                UiAction.OPEN, UiActionOption.LIST);","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"                || (other instanceof SetMainDividerPositionCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"                \u0026\u0026 position \u003d\u003d (((SetMainDividerPositionCommand) other).position)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"TeoHoeKeat":45}},{"path":"src/main/java/seedu/dictionote/logic/commands/SetNoteDividerPositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":" * Sets the position of contact divider.","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"public class SetNoteDividerPositionCommand extends SetDividerPositionCommand {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String COMMAND_WORD \u003d \"setdividern\";","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"            + \": Set the position of note divider.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Parameters: Position (must be a integer between 1 to 9 inclusively)\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_SET_DIVIDER_SUCCESS \u003d \"Note Divider Position Set to \";","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates an SetNoteDividerPositionCommand that set the not divider to a the specified position","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    public SetNoteDividerPositionCommand(int position) {","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        super(position);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        model.getGuiSettings().setNoteSplitRatio(position / NORMALIZE_RATIO);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(String.format(MESSAGE_SET_DIVIDER_SUCCESS + position),","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"                UiAction.OPEN, UiActionOption.NOTE);","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"                || (other instanceof SetNoteDividerPositionCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"                \u0026\u0026 position \u003d\u003d (((SetNoteDividerPositionCommand) other).position)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"TeoHoeKeat":45}},{"path":"src/main/java/seedu/dictionote/logic/commands/ShowDictionaryContentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.DisplayableContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":" * Show a specific dictionary content in the content list to the user.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"public class ShowDictionaryContentCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String COMMAND_WORD \u003d \"showdc\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"            + \": Showed a specific dictionary content identified by the index number used in the displayed\"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"dictionary content list.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_SHOW_CONTENT_SUCCESS \u003d \"Here is the content\";","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    public ShowDictionaryContentCommand(Index targetIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003c? extends DisplayableContent\u003e lastShownList \u003d model.getFilteredCurrentDictionaryList();","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DICTIONARY_CONTENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        DisplayableContent contentToShow \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        model.showDictionaryContent(contentToShow);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(String.format(MESSAGE_SHOW_CONTENT_SUCCESS, contentToShow),","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"                UiAction.OPEN, UiActionOption.DICTIONARY_CONTENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"                || (other instanceof ShowDictionaryContentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"                \u0026\u0026 targetIndex.equals(((ShowDictionaryContentCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":56}},{"path":"src/main/java/seedu/dictionote/logic/commands/ShowNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":" * Show a specific note in the notes list to the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"public class ShowNoteCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"    public static final String COMMAND_WORD \u003d \"shownote\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"            + \": Showed a specific note identified by the index number used in the displayed note list.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_SHOW_NOTE_SUCCESS \u003d \"Here is the note\";","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"    public ShowNoteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"        if (model.onEditModeNote()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE);","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"        List\u003cNote\u003e lastShownList \u003d model.getFilteredNoteList();","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"        Note noteToShow \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"        model.showNote(noteToShow);","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"        return new CommandResult(String.format(MESSAGE_SHOW_NOTE_SUCCESS, noteToShow),","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"                UiAction.OPEN, UiActionOption.NOTE_CONTENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"                || (other instanceof ShowNoteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"godjuansan"},"content":"                \u0026\u0026 targetIndex.equals(((ShowNoteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"TeoHoeKeat":7,"godjuansan":54}},{"path":"src/main/java/seedu/dictionote/logic/commands/SortNoteByTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.model.Model.PREDICATE_SHOW_ALL_NOTES;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":" * Sort notes in the note list.","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"public class SortNoteByTimeCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"    public static final String COMMAND_WORD \u003d \"sortnotebytime\";","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"            + \": Sorts all note the note list chronologically.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"            + \"Parameters: sortnotebytime\\n\";","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"    public static final String MESSAGE_SORT_NOTE_SUCCESS \u003d \"Note sorted\";","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"     * Sort notes in the note list.","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"        model.sortNoteByTime();","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"        model.updateFilteredNoteList(PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        return new CommandResult(MESSAGE_SORT_NOTE_SUCCESS);","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"jessen11":30}},{"path":"src/main/java/seedu/dictionote/logic/commands/SortNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.model.Model.PREDICATE_SHOW_ALL_NOTES;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":" * Sort notes in the note list.","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"public class SortNoteCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"    public static final String COMMAND_WORD \u003d \"sortnote\";","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"            + \": Sorts all note the note list alphabetically.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"            + \"Parameters: sortnote\\n\";","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"    public static final String MESSAGE_SORT_NOTE_SUCCESS \u003d \"Note sorted\";","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"     * Sort notes in the note list.","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"        model.sortNote();","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"        model.updateFilteredNoteList(PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        return new CommandResult(MESSAGE_SORT_NOTE_SUCCESS);","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"jessen11":30}},{"path":"src/main/java/seedu/dictionote/logic/commands/ToggleDictionaryOrientationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":" * Toggles the orientation of dictionary panel.","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"public class ToggleDictionaryOrientationCommand extends Command {","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String COMMAND_WORD \u003d \"toggledividerd\";","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_TOGGLE_SUCCESS \u003d \"Dictionary Panel Orientation changed\";","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        model.getGuiSettings().toggleDictionaryPanelOrientation();;","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(MESSAGE_TOGGLE_SUCCESS, UiAction.OPEN, UiActionOption.DICTIONARY);","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"TeoHoeKeat":25}},{"path":"src/main/java/seedu/dictionote/logic/commands/ToggleNoteOrientationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":" * Toggles the orientation of note panel.","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"public class ToggleNoteOrientationCommand extends Command {","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String COMMAND_WORD \u003d \"toggledividern\";","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_TOGGLE_SUCCESS \u003d \"Note Panel Orientation changed\";","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        model.getGuiSettings().toggleNotePanelOrientation();;","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        return new CommandResult(MESSAGE_TOGGLE_SUCCESS, UiAction.OPEN, UiActionOption.NOTE);","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"TeoHoeKeat":25}},{"path":"src/main/java/seedu/dictionote/logic/commands/enums/UiAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands.enums;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":" * UiFeedback enums is used in CommandResult to indicate the desire UI actions from the UI.","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"public enum UiAction {","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"    NONE, HELP, EXIT, OPEN, CLOSE, EDITMODEENTER, EDITMODEEXIT;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":8}},{"path":"src/main/java/seedu/dictionote/logic/commands/enums/UiActionOption.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands.enums;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_ALL_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_CONTACT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_DICTIONARY_CONTENT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_DICTIONARY_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_DICTIONARY_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_NOTE_CONTENT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_NOTE_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_NOTE_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":" * UiFeedback enums is used in CommandResult to indicate the desire UI actions from the UI.","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"public enum UiActionOption {","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    DICTIONARY, DICTIONARY_LIST, DICTIONARY_CONTENT,","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    NOTE, NOTE_LIST, NOTE_CONTENT,","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    LIST, CONTACT, ALL, NONE;","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Options have to be one of the following: \"","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_ALL_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_CONTACT_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_DICTIONARY_CONTENT_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_DICTIONARY_LIST_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_DICTIONARY_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_LIST_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_NOTE_CONTENT_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_NOTE_LIST_PANEL + \", \"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        + OPTION_NOTE_PANEL + \".\";","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"     * Return the corresponding UiActionOption, return NONE if the option is invalid","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param option a string","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    public static UiActionOption getUiActionOption(String option) {","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"        switch (option) {","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_ALL_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"            return UiActionOption.ALL;","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_CONTACT_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"            return UiActionOption.CONTACT;","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_DICTIONARY_CONTENT_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"            return UiActionOption.DICTIONARY_CONTENT;","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_DICTIONARY_LIST_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"            return UiActionOption.DICTIONARY_LIST;","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_DICTIONARY_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"            return UiActionOption.DICTIONARY;","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_LIST_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"            return UiActionOption.LIST;","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_NOTE_CONTENT_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"            return UiActionOption.NOTE_CONTENT;","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_NOTE_LIST_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"            return UiActionOption.NOTE_LIST;","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_NOTE_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"            return UiActionOption.NOTE;","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        default:","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"            return UiActionOption.NONE;","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns true if a given string is a valid option.","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"    public static boolean isValidOption(String option) {","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        switch (option) {","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_ALL_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_CONTACT_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_DICTIONARY_CONTENT_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_DICTIONARY_LIST_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_DICTIONARY_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_LIST_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_NOTE_CONTENT_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_NOTE_LIST_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPTION_NOTE_PANEL:","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"            return true;","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"        default:","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"            return false;","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":82}},{"path":"src/main/java/seedu/dictionote/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands.exceptions;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"XindiTian":1,"-":16}},{"path":"src/main/java/seedu/dictionote/logic/parser/AddContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.AddContactCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Address;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Email;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"public class AddContactCommandParser implements Parser\u003cAddContactCommand\u003e {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"    public AddContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"        Contact contact \u003d new Contact(name, phone, email, address, tagList);","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"        return new AddContactCommand(contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jessen11":1,"riyadh-h":11,"XindiTian":9,"-":38}},{"path":"src/main/java/seedu/dictionote/logic/parser/AddContentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_HEADER;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_MAINCONTENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.AddContentCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":" * Parses input arguments and creates a new AddNoteCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"public class AddContentCommandParser implements Parser\u003cAddContentCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"     * Parses the given {@code String} of arguments in the context of the AddContentCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"     * and returns an AddContentCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    public AddContentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_WEEK, PREFIX_HEADER, PREFIX_MAINCONTENT);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_WEEK, PREFIX_HEADER, PREFIX_MAINCONTENT)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"        String week \u003d ParserUtil.parseWeek(argMultimap.getValue(PREFIX_WEEK).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"        String header \u003d ParserUtil.parseHeader(argMultimap.getValue(PREFIX_HEADER).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"        String maincontent \u003d ParserUtil.parseMainContent(argMultimap.getValue(PREFIX_MAINCONTENT).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"        Content content \u003d new Content(week, header, maincontent);","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"        return new AddContentCommand(content);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":49}},{"path":"src/main/java/seedu/dictionote/logic/parser/AddDefinitionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_DEFINITION;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TERM;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.AddDefinitionCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":" * Parses input arguments and creates a new AddNoteCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"public class AddDefinitionCommandParser implements Parser\u003cAddDefinitionCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"     * Parses the given {@code String} of arguments in the context of the AddContentCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"     * and returns an AddContentCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"    public AddDefinitionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TERM, PREFIX_DEFINITION);","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TERM, PREFIX_DEFINITION)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDefinitionCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"        String term \u003d ParserUtil.parseWeek(argMultimap.getValue(PREFIX_TERM).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"        String defs \u003d ParserUtil.parseHeader(argMultimap.getValue(PREFIX_DEFINITION).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"        Definition definition \u003d new Definition(term, defs);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"        return new AddDefinitionCommand(definition);","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":47}},{"path":"src/main/java/seedu/dictionote/logic/parser/AddNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_CONTENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.AddNoteCommand;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":" * Parses input arguments and creates a new AddNoteCommand object","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"public class AddNoteCommandParser implements Parser\u003cAddNoteCommand\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"     * Parses the given {@code String} of arguments in the context of the AddNoteCommand","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"     * and returns an AddNoteCommand object for execution.","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"    public AddNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CONTENT, PREFIX_TAG);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CONTENT)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"        String noteContent \u003d ParserUtil.parseNote(argMultimap.getValue(PREFIX_CONTENT).get()).getNote();","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"        Note note \u003d new Note(noteContent, tagList);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"        return new AddNoteCommand(note);","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"jessen11":12,"godjuansan":37}},{"path":"src/main/java/seedu/dictionote/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"XindiTian":1,"-":59}},{"path":"src/main/java/seedu/dictionote/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"XindiTian":1,"-":147}},{"path":"src/main/java/seedu/dictionote/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"    public static final Prefix PREFIX_CONTENT \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    public static final Prefix PREFIX_WEEK \u003d new Prefix(\"w/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    public static final Prefix PREFIX_HEADER \u003d new Prefix(\"h/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    public static final Prefix PREFIX_MAINCONTENT \u003d new Prefix(\"mc/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    public static final Prefix PREFIX_TERM \u003d new Prefix(\"tm/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"    public static final Prefix PREFIX_DEFINITION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    /* Option Syntax for UI Command*/","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String OPTION_ALL_PANEL \u003d \"-a\";","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String OPTION_CONTACT_PANEL \u003d \"-c\";","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String OPTION_DICTIONARY_CONTENT_PANEL \u003d \"-dc\";","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String OPTION_DICTIONARY_LIST_PANEL \u003d \"-dl\";","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String OPTION_DICTIONARY_PANEL \u003d \"-d\";","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String OPTION_LIST_PANEL \u003d \"-l\";","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String OPTION_NOTE_CONTENT_PANEL \u003d \"-nc\";","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String OPTION_NOTE_LIST_PANEL \u003d \"-nl\";","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String OPTION_NOTE_PANEL \u003d \"-n\";","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"TeoHoeKeat":13,"godjuansan":1,"XindiTian":6,"-":14}},{"path":"src/main/java/seedu/dictionote/logic/parser/CloseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.CloseCommand;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":" * Parses input arguments and creates a new CloseCommand object","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"public class CloseCommandParser implements Parser\u003cCloseCommand\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"     * Parses the given {@code String} of arguments in the context of the CloseCommand","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"     * and returns a CloseCommand object for execution.","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    public CloseCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        try {","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"            return new CloseCommand(ParserUtil.parseUiActionOption(args));","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CloseCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":27}},{"path":"src/main/java/seedu/dictionote/logic/parser/ConvertTxtNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.ConvertTxtNoteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":" * Parses input arguments and creates a new ConvertTxtNoteCommand object","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"public class ConvertTxtNoteCommandParser implements Parser\u003cConvertTxtNoteCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"     * Parses the given {@code String} of arguments in the context of the ConvertTxtNoteCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"     * and returns a ConvertTxtNoteCommand object for execution.","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"    public ConvertTxtNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"            return new ConvertTxtNoteCommand(index);","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"                            ConvertTxtNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"godjuansan":28}},{"path":"src/main/java/seedu/dictionote/logic/parser/DeleteContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"public class DeleteContactCommandParser implements Parser\u003cDeleteContactCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"    public DeleteContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"            return new DeleteContactCommand(index);","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"riyadh-h":5,"XindiTian":4,"-":20}},{"path":"src/main/java/seedu/dictionote/logic/parser/DeleteNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":" * Parses input arguments and creates a new DeleteNoteCommand object","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"public class DeleteNoteCommandParser implements Parser\u003cDeleteNoteCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteNoteCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"     * and returns a DeleteNoteCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"    public DeleteNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"            return new DeleteNoteCommand(index);","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"jessen11":25,"godjuansan":4}},{"path":"src/main/java/seedu/dictionote/logic/parser/DictionoteParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.AddContactCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.AddContentCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.AddDefinitionCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.AddNoteCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.ClearContactCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.CloseCommand;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.Command;","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.ConvertTxtNoteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EditContactCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.EditModeCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.EditModeQuitCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.EditModeSaveCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.EditNoteCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EmailContactCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.ExitCommand;","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.FindContactCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.FindContentCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.FindDefinitionCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.FindNoteCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.HelpCommand;","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.ListCommandCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.ListContactCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.ListContentCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.ListDefinitionCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.ListNoteCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.MarkAllAsUndoneNoteCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.MarkAsDoneNoteCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.MarkAsUndoneNoteCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.MergeNoteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.MostFreqContactCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.OpenCommand;","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.SetContactDividerPositionCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.SetDictionaryDividerPositionCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.SetMainDividerPositionCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.SetNoteDividerPositionCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.ShowDictionaryContentCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.ShowNoteCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.SortNoteByTimeCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.SortNoteCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.ToggleDictionaryOrientationCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.ToggleNoteOrientationCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"public class DictionoteParser {","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"riyadh-h"},"content":"        case AddContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"            return new AddContactCommandParser().parse(arguments);","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"godjuansan"},"content":"        case AddNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"godjuansan"},"content":"            return new AddNoteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"XindiTian"},"content":"        case AddContentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"XindiTian"},"content":"            return new AddContentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"XindiTian"},"content":"        case AddDefinitionCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"XindiTian"},"content":"            return new AddDefinitionCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"riyadh-h"},"content":"        case EditContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"riyadh-h"},"content":"            return new EditContactCommandParser().parse(arguments);","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":96,"author":{"gitId":"jessen11"},"content":"        case EditNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jessen11"},"content":"            return new EditNoteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"        case EditModeCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"            return new EditModeCommand();","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"        case EditModeQuitCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"            return new EditModeQuitCommand();","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"        case EditModeSaveCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"            return new EditModeSaveCommand();","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"riyadh-h"},"content":"        case DeleteContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"riyadh-h"},"content":"            return new DeleteContactCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"jessen11"},"content":"        case DeleteNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"jessen11"},"content":"            return new DeleteNoteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"riyadh-h"},"content":"        case ClearContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"riyadh-h"},"content":"            return new ClearContactCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"        case FindContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"riyadh-h"},"content":"            return new FindContactCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"jessen11"},"content":"        case FindNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"jessen11"},"content":"            return new FindNoteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"XindiTian"},"content":"        case FindContentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"XindiTian"},"content":"            return new FindContentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"XindiTian"},"content":"        case FindDefinitionCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"XindiTian"},"content":"            return new FindDefinitionCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"riyadh-h"},"content":"        case ListContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"riyadh-h"},"content":"            return new ListContactCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"riyadh-h"},"content":"        case EmailContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"riyadh-h"},"content":"            return new EmailContactCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"riyadh-h"},"content":"        case MostFreqContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"riyadh-h"},"content":"            return new MostFreqContactCommand();","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"godjuansan"},"content":"        case ListNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"godjuansan"},"content":"            return new ListNoteCommand();","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"XindiTian"},"content":"        case ListContentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"XindiTian"},"content":"            return new ListContentCommand();","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"XindiTian"},"content":"        case ListDefinitionCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"XindiTian"},"content":"            return new ListDefinitionCommand();","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"godjuansan"},"content":"        case MarkAsDoneNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"godjuansan"},"content":"            return new MarkAsDoneNoteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"godjuansan"},"content":"        case MarkAsUndoneNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-22"},{"lineNumber":151,"author":{"gitId":"godjuansan"},"content":"            return new MarkAsUndoneNoteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-22"},{"lineNumber":152,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":153,"author":{"gitId":"godjuansan"},"content":"        case MarkAllAsUndoneNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"godjuansan"},"content":"            return new MarkAllAsUndoneNoteCommand();","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"godjuansan"},"content":"        case MergeNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"godjuansan"},"content":"            return new MergeNoteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"godjuansan"},"content":"        case ShowNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"godjuansan"},"content":"            return new ShowNoteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"TeoHoeKeat"},"content":"        case ShowDictionaryContentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"TeoHoeKeat"},"content":"            return new ShowDictionaryContentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"TeoHoeKeat"},"content":"        case OpenCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-03"},{"lineNumber":166,"author":{"gitId":"TeoHoeKeat"},"content":"            return new OpenCommandParser().parse(arguments);","lastModifiedDate":"2021-03-03"},{"lineNumber":167,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":168,"author":{"gitId":"TeoHoeKeat"},"content":"        case CloseCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-03"},{"lineNumber":169,"author":{"gitId":"TeoHoeKeat"},"content":"            return new CloseCommandParser().parse(arguments);","lastModifiedDate":"2021-03-03"},{"lineNumber":170,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":171,"author":{"gitId":"TeoHoeKeat"},"content":"        case SetContactDividerPositionCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"TeoHoeKeat"},"content":"            return new SetContactDividerPositionCommand(ParserUtil.parsePosition(arguments));","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"TeoHoeKeat"},"content":"        case SetDictionaryDividerPositionCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"TeoHoeKeat"},"content":"            return new SetDictionaryDividerPositionCommand(ParserUtil.parsePosition(arguments));","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"TeoHoeKeat"},"content":"        case SetNoteDividerPositionCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"TeoHoeKeat"},"content":"            return new SetNoteDividerPositionCommand(ParserUtil.parsePosition(arguments));","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":180,"author":{"gitId":"TeoHoeKeat"},"content":"        case SetMainDividerPositionCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":181,"author":{"gitId":"TeoHoeKeat"},"content":"            return new SetMainDividerPositionCommand(ParserUtil.parsePosition(arguments));","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"TeoHoeKeat"},"content":"        case ToggleNoteOrientationCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-26"},{"lineNumber":184,"author":{"gitId":"TeoHoeKeat"},"content":"            return new ToggleNoteOrientationCommand();","lastModifiedDate":"2021-03-26"},{"lineNumber":185,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":186,"author":{"gitId":"TeoHoeKeat"},"content":"        case ToggleDictionaryOrientationCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-26"},{"lineNumber":187,"author":{"gitId":"TeoHoeKeat"},"content":"            return new ToggleDictionaryOrientationCommand();","lastModifiedDate":"2021-03-26"},{"lineNumber":188,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":195,"author":{"gitId":"TeoHoeKeat"},"content":"        case ListCommandCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"TeoHoeKeat"},"content":"            return new ListCommandCommand();","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"jessen11"},"content":"        case SortNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":199,"author":{"gitId":"jessen11"},"content":"            return new SortNoteCommand();","lastModifiedDate":"2021-03-23"},{"lineNumber":200,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":201,"author":{"gitId":"godjuansan"},"content":"        case ConvertTxtNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"godjuansan"},"content":"            return new ConvertTxtNoteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-28"},{"lineNumber":203,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":204,"author":{"gitId":"jessen11"},"content":"        case SortNoteByTimeCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":205,"author":{"gitId":"jessen11"},"content":"            return new SortNoteByTimeCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":206,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TeoHoeKeat":53,"jessen11":20,"godjuansan":32,"riyadh-h":25,"XindiTian":32,"-":50}},{"path":"src/main/java/seedu/dictionote/logic/parser/EditContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EditContactCommand;","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"public class EditContactCommandParser implements Parser\u003cEditContactCommand\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"    public EditContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditContactCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"                    pe);","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor editContactDescriptor \u003d new EditContactDescriptor();","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"            editContactDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"            editContactDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-03-05"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"            editContactDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"riyadh-h"},"content":"            editContactDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":61,"author":{"gitId":"riyadh-h"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editContactDescriptor::setTags);","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"riyadh-h"},"content":"        if (!editContactDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"            throw new ParseException(EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"        return new EditContactCommand(index, editContactDescriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"riyadh-h":15,"XindiTian":10,"-":59}},{"path":"src/main/java/seedu/dictionote/logic/parser/EditNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_CONTENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.EditContactCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.EditNoteCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.EditNoteCommand.EditNoteDescriptor;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"public class EditNoteCommandParser implements Parser\u003cEditNoteCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    public EditNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CONTENT, PREFIX_TAG);","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"        Index index;","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditNoteCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"                    pe);","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"        EditNoteDescriptor editNoteDescriptor \u003d new EditNoteDescriptor();","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        if (argMultimap.getValue(PREFIX_CONTENT).isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"            editNoteDescriptor.setNote(ParserUtil.parseNote(argMultimap.getValue(PREFIX_CONTENT).get()));","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editNoteDescriptor::setTags);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"        if (!editNoteDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"            throw new ParseException(EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"        return new EditNoteCommand(index, editNoteDescriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"godjuansan"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"godjuansan"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"godjuansan"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jessen11":43,"godjuansan":26}},{"path":"src/main/java/seedu/dictionote/logic/parser/EmailContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EmailContactCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":" * Parses input arguments and creates a new EmailContactCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"public class EmailContactCommandParser implements Parser\u003cEmailContactCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"     * Parses the given {@code String} of arguments in the context of the EmailContactCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"     * and returns an EmailContactCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"    public EmailContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"            return new EmailContactCommand(index);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EmailContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"riyadh-h":29}},{"path":"src/main/java/seedu/dictionote/logic/parser/FindContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.FindContactCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"public class FindContactCommandParser implements Parser\u003cFindContactCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"     * Parses the given {@code String} of arguments in the context of the FindContactCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"     * and returns a FindContactCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    public FindContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"        if (!isAnyOfPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EMAIL, PREFIX_TAG)","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"        List\u003cString\u003e emailKeywords \u003d argMultimap.getAllValues(PREFIX_EMAIL);","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"        List\u003cString\u003e tagsKeywords \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"        return new FindContactCommand(","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"                new NameContainsKeywordsPredicate(nameKeywords),","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"                new EmailContainsKeywordsPredicate(emailKeywords),","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"                new TagsContainKeywordsPredicate(tagsKeywords)","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"        );","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"     * Returns true if at least one of the prefixes contains some {@code Optional} values in the given","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"    private static boolean isAnyOfPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"riyadh-h":55}},{"path":"src/main/java/seedu/dictionote/logic/parser/FindContentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.FindContentCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.ContentContainsKeywordsPredicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"public class FindContentCommandParser implements Parser\u003cFindContentCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"    public FindContentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"        return new FindContentCommand(new ContentContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"XindiTian":33}},{"path":"src/main/java/seedu/dictionote/logic/parser/FindDefinitionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.FindDefinitionCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.DefinitionContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"public class FindDefinitionCommandParser implements Parser\u003cFindDefinitionCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"    public FindDefinitionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindDefinitionCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"        return new FindDefinitionCommand(new DefinitionContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":33}},{"path":"src/main/java/seedu/dictionote/logic/parser/FindNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_CONTENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.FindNoteCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.NoteContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.TagNoteContainKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"public class FindNoteCommandParser implements Parser\u003cFindNoteCommand\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"     * Parses the given {@code String} of arguments in the context of the FindContactCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"     * and returns a FindNoteCommand object for execution.","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"    public FindNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CONTENT, PREFIX_TAG);","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"        if (!isAnyOfPrefixesPresent(argMultimap, PREFIX_CONTENT, PREFIX_TAG)","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_CONTENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"        List\u003cString\u003e tagsKeywords \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"        return new FindNoteCommand(","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"                new NoteContainsKeywordsPredicate(nameKeywords),","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"                new TagNoteContainKeywordsPredicate(tagsKeywords)","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"        );","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"     * Returns true if at least one of the prefixes contains some {@code Optional} values in the given","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"    private static boolean isAnyOfPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"jessen11":51}},{"path":"src/main/java/seedu/dictionote/logic/parser/MarkAsDoneNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.MarkAsDoneNoteCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"public class MarkAsDoneNoteCommandParser implements Parser\u003cMarkAsDoneNoteCommand\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkAsDoneNoteCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"     * and returns a MarkAsDoneNoteCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"    public MarkAsDoneNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"            return new MarkAsDoneNoteCommand(index);","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAsDoneNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"godjuansan":26}},{"path":"src/main/java/seedu/dictionote/logic/parser/MarkAsUndoneNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.MarkAsUndoneNoteCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"public class MarkAsUndoneNoteCommandParser implements Parser\u003cMarkAsUndoneNoteCommand\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkAsUndoneNoteCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"     * and returns a MarkAsUndoneNoteCommand object for execution.","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"    public MarkAsUndoneNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"        try {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"            return new MarkAsUndoneNoteCommand(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"                            MarkAsUndoneNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"godjuansan":25}},{"path":"src/main/java/seedu/dictionote/logic/parser/MergeNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.MergeNoteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"public class MergeNoteCommandParser implements Parser\u003cMergeNoteCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"     * Parses the given {@code String} of arguments in the context of the MergeNoteCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"     * and returns a MergeNoteCommand object for execution.","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"    public MergeNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"            String[] splittedArgs \u003d args.split(\" \");","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"            Index firstIndex \u003d ParserUtil.parseIndex(splittedArgs[1]);","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"            Index secondIndex \u003d ParserUtil.parseIndex(splittedArgs[2]);","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"            return new MergeNoteCommand(firstIndex, secondIndex);","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MergeNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"godjuansan":27}},{"path":"src/main/java/seedu/dictionote/logic/parser/OpenCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.OpenCommand;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":" * Parses input arguments and creates a new OpenCommand object","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"public class OpenCommandParser implements Parser\u003cOpenCommand\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"     * Parses the given {@code String} of arguments in the context of the OpenCommand","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"     * and returns a OpenCommand object for execution.","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    public OpenCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        try {","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"            return new OpenCommand(ParserUtil.parseUiActionOption(args));","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, OpenCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":27}},{"path":"src/main/java/seedu/dictionote/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.Command;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"XindiTian":3,"-":13}},{"path":"src/main/java/seedu/dictionote/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.StringUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Address;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Email;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String MESSAGE_INVALID_POSITION \u003d \"Position is not a between 1 to 9 (inclusively).\";","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":"     * Parses a {@code String dictionote} into an {@code Address}.","lastModifiedDate":"2021-02-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"XindiTian"},"content":"     * @throws ParseException if the given {@code dictionote} is invalid.","lastModifiedDate":"2021-02-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2021-03-05"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"        requireNonNull(address);","lastModifiedDate":"2021-03-05"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2021-03-05"},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2021-03-05"},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2021-03-05"},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":129,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":130,"author":{"gitId":"godjuansan"},"content":"     * Parses a {@code String noteContent} into a {@code String}.","lastModifiedDate":"2021-03-03"},{"lineNumber":131,"author":{"gitId":"godjuansan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-03"},{"lineNumber":132,"author":{"gitId":"godjuansan"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":133,"author":{"gitId":"godjuansan"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2021-03-03"},{"lineNumber":134,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":135,"author":{"gitId":"jessen11"},"content":"    public static Note parseNote(String noteContent) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(noteContent);","lastModifiedDate":"2021-03-03"},{"lineNumber":137,"author":{"gitId":"jessen11"},"content":"        Note note \u003d new Note(noteContent);","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"jessen11"},"content":"        return note;","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":140,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":141,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"XindiTian"},"content":"     * Parses a {@code String week} into a {@code String}.","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"XindiTian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"XindiTian"},"content":"     * @throws ParseException if the given {@code week} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"XindiTian"},"content":"    public static String parseWeek(String week) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(week);","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"XindiTian"},"content":"        String trimmedWeek \u003d week.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"XindiTian"},"content":"        return trimmedWeek;","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"XindiTian"},"content":"     * Parses a {@code String header} into a {@code String}.","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"XindiTian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"XindiTian"},"content":"     * @throws ParseException if the given {@code header} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"XindiTian"},"content":"    public static String parseHeader(String header) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(header);","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"XindiTian"},"content":"        String trimmedHeader \u003d header.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"XindiTian"},"content":"        return trimmedHeader;","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"XindiTian"},"content":"     * Parses a {@code String maincontent} into a {@code String}.","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"XindiTian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"XindiTian"},"content":"     * @throws ParseException if the given {@code maincontent} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"XindiTian"},"content":"    public static String parseMainContent(String maincontent) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(maincontent);","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"XindiTian"},"content":"        String trimmedMainContent \u003d maincontent.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"XindiTian"},"content":"        return trimmedMainContent;","lastModifiedDate":"2021-03-15"},{"lineNumber":175,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":178,"author":{"gitId":"XindiTian"},"content":"     * Parses a {@code String term} into a {@code String}.","lastModifiedDate":"2021-03-15"},{"lineNumber":179,"author":{"gitId":"XindiTian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":180,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"XindiTian"},"content":"     * @throws ParseException if the given {@code term} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":183,"author":{"gitId":"XindiTian"},"content":"    public static String parseTerm(String term) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":184,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(term);","lastModifiedDate":"2021-03-15"},{"lineNumber":185,"author":{"gitId":"XindiTian"},"content":"        String trimmedTerm \u003d term.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":186,"author":{"gitId":"XindiTian"},"content":"        return trimmedTerm;","lastModifiedDate":"2021-03-15"},{"lineNumber":187,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"XindiTian"},"content":"     * Parses a {@code String defs} into a {@code String}.","lastModifiedDate":"2021-03-15"},{"lineNumber":191,"author":{"gitId":"XindiTian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":192,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"XindiTian"},"content":"     * @throws ParseException if the given {@code defs} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":194,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":195,"author":{"gitId":"XindiTian"},"content":"    public static String parseDefs(String defs) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(defs);","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"XindiTian"},"content":"        String trimmedDefs \u003d defs.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"XindiTian"},"content":"        return trimmedDefs;","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"godjuansan"},"content":"    /** Parses a {@code String option} into a {@code UiOptionAction}.","lastModifiedDate":"2021-03-03"},{"lineNumber":202,"author":{"gitId":"TeoHoeKeat"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-03"},{"lineNumber":203,"author":{"gitId":"TeoHoeKeat"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":204,"author":{"gitId":"TeoHoeKeat"},"content":"     * @throws ParseException if the given {@code option} is invalid.","lastModifiedDate":"2021-03-03"},{"lineNumber":205,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":206,"author":{"gitId":"TeoHoeKeat"},"content":"    public static UiActionOption parseUiActionOption(String option) throws ParseException {","lastModifiedDate":"2021-03-03"},{"lineNumber":207,"author":{"gitId":"TeoHoeKeat"},"content":"        requireNonNull(option);","lastModifiedDate":"2021-03-03"},{"lineNumber":208,"author":{"gitId":"TeoHoeKeat"},"content":"        String trimmedOption \u003d option.trim();","lastModifiedDate":"2021-03-03"},{"lineNumber":209,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!UiActionOption.isValidOption(trimmedOption)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":210,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new ParseException(UiActionOption.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":211,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":212,"author":{"gitId":"TeoHoeKeat"},"content":"        return UiActionOption.getUiActionOption(trimmedOption);","lastModifiedDate":"2021-03-03"},{"lineNumber":213,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":214,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":215,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"TeoHoeKeat"},"content":"     * Parses {@code position} into an {@code int} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"TeoHoeKeat"},"content":"     * trimmed.","lastModifiedDate":"2021-03-28"},{"lineNumber":218,"author":{"gitId":"TeoHoeKeat"},"content":"     * @throws ParseException if the specified position is invalid (not between 1 to 9).","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"TeoHoeKeat"},"content":"    public static int parsePosition(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"TeoHoeKeat"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2021-03-28"},{"lineNumber":222,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new ParseException(MESSAGE_INVALID_POSITION);","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"TeoHoeKeat"},"content":"        int position \u003d Integer.parseInt(trimmedIndex);","lastModifiedDate":"2021-03-28"},{"lineNumber":227,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":228,"author":{"gitId":"TeoHoeKeat"},"content":"        if (position \u003e 9 || position \u003c 1) {","lastModifiedDate":"2021-03-28"},{"lineNumber":229,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new ParseException(MESSAGE_INVALID_POSITION);","lastModifiedDate":"2021-03-28"},{"lineNumber":230,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":231,"author":{"gitId":"TeoHoeKeat"},"content":"        return position;","lastModifiedDate":"2021-03-28"},{"lineNumber":232,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"TeoHoeKeat":33,"jessen11":13,"godjuansan":11,"riyadh-h":4,"XindiTian":67,"-":105}},{"path":"src/main/java/seedu/dictionote/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"XindiTian":1,"-":38}},{"path":"src/main/java/seedu/dictionote/logic/parser/ShowDictionaryContentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.ShowDictionaryContentCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":" * Parses input arguments and creates a new ShowDictionaryContentCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"public class ShowDictionaryContentCommandParser implements Parser\u003cShowDictionaryContentCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"     * Parses the given {@code String} of arguments in the context of the ShowDictionaryContentCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"     * and returns a ShowDictionaryContentCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    public ShowDictionaryContentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"            return new ShowDictionaryContentCommand(index);","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowDictionaryContentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":27}},{"path":"src/main/java/seedu/dictionote/logic/parser/ShowNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.ShowNoteCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":" * Parses input arguments and creates a new ShowNoteCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"public class ShowNoteCommandParser implements Parser\u003cShowNoteCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"     * Parses the given {@code String} of arguments in the context of the ShowNoteCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"     * and returns a ShowNoteCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"    public ShowNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"            return new ShowNoteCommand(index);","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"godjuansan":27}},{"path":"src/main/java/seedu/dictionote/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser.exceptions;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"XindiTian":2,"-":15}},{"path":"src/main/java/seedu/dictionote/model/ContactsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import java.net.URI;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.UniqueContactList;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.exceptions.InvalidContactMailtoLinkException;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":" * Wraps all data at the dictionote-book level","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"public class ContactsList implements ReadOnlyContactsList {","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"    private final UniqueContactList contacts;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"        contacts \u003d new UniqueContactList();","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"    public ContactsList() {}","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"     * Creates a ContactsList using the Persons in the {@code toBeCopied}","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"    public ContactsList(ReadOnlyContactsList toBeCopied) {","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"    public void setContacts(List\u003cContact\u003e contacts) {","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"        this.contacts.setContacts(contacts);","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"    public void resetData(ReadOnlyContactsList newData) {","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"        setContacts(newData.getContactList());","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"riyadh-h"},"content":"     * Returns true if a contact with the same identity as {@code contact} exists in the contacts list.","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"    public boolean hasContact(Contact contact) {","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"        requireNonNull(contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"riyadh-h"},"content":"        return contacts.contains(contact);","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"XindiTian"},"content":"     * Adds a person to the dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"     * The person must not already exist in the dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"riyadh-h"},"content":"    public void addContact(Contact p) {","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"riyadh-h"},"content":"        contacts.add(p);","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"     * Adds a person to the dictionote book.","lastModifiedDate":"2021-03-05"},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":"     * The person must not already exist in the dictionote book.","lastModifiedDate":"2021-03-05"},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":83,"author":{"gitId":"riyadh-h"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"riyadh-h"},"content":"        requireNonNull(editedContact);","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"riyadh-h"},"content":"        contacts.setContact(target, editedContact);","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"riyadh-h"},"content":"     * Invokes the user\u0027s OS email client to send a new email to the given contact.","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"riyadh-h"},"content":"     * {@code contact} must exist in the contacts list.","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"riyadh-h"},"content":"    public void emailContact(Contact contact) throws InvalidContactMailtoLinkException {","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"riyadh-h"},"content":"        URI contactMailtoLink \u003d URI.create(\"mailto:\" + contact.getEmail());","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"riyadh-h"},"content":"        Desktop userDesktop \u003d Desktop.getDesktop();","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"riyadh-h"},"content":"        // credit to TorstenH. and alexey_s from CodeProject for the URL invocation code.","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"        // link to the posts: https://www.codeproject.com/questions/398241/how-to-open-url-in-java","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"riyadh-h"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"riyadh-h"},"content":"            // invoke user\u0027s OS default mail client.","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"riyadh-h"},"content":"            userDesktop.mail(contactMailtoLink);","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"riyadh-h"},"content":"            // Update the contact\u0027s frequency counter.","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"riyadh-h"},"content":"            setContact(contact, incrementContactFrequency(contact));","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"riyadh-h"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"riyadh-h"},"content":"            throw new InvalidContactMailtoLinkException();","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"riyadh-h"},"content":"     * Generates a copy of the given {@code Contact} with its frequency counter incremented by one.","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"riyadh-h"},"content":"     * @param contact the {@code Contact} object to be updated.","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"riyadh-h"},"content":"     * @return a new {@code Contact} object that has the same attributes as the given one, but with a frequency","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"riyadh-h"},"content":"     *         counter greater by one.","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"riyadh-h"},"content":"    protected Contact incrementContactFrequency(Contact contact) {","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"riyadh-h"},"content":"        return new Contact(","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"                contact.getName(),","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"riyadh-h"},"content":"                contact.getPhone(),","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"riyadh-h"},"content":"                contact.getEmail(),","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"riyadh-h"},"content":"                contact.getAddress(),","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"riyadh-h"},"content":"                contact.getTags(),","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"riyadh-h"},"content":"                contact.getFrequencyCounter().increment()","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"riyadh-h"},"content":"        );","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"riyadh-h"},"content":"     * Sorts the contacts in the contacts list in descending order by their frequency counters.","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"riyadh-h"},"content":"    public void sortByFrequencyCounter() {","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"riyadh-h"},"content":"        contacts.sortByFrequencyCounter();","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"XindiTian"},"content":"     * {@code key} must exist in the dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"riyadh-h"},"content":"    public void removeContact(Contact key) {","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"riyadh-h"},"content":"        contacts.remove(key);","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"riyadh-h"},"content":"        return contacts.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"riyadh-h"},"content":"    public ObservableList\u003cContact\u003e getContactList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":151,"author":{"gitId":"riyadh-h"},"content":"        return contacts.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"riyadh-h"},"content":"                || (other instanceof ContactsList // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 contacts.equals(((ContactsList) other).contacts));","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"riyadh-h"},"content":"        return contacts.hashCode();","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jessen11":4,"riyadh-h":78,"XindiTian":5,"-":78}},{"path":"src/main/java/seedu/dictionote/model/DefinitionBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.UniqueDefinitionList;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" * Wraps all data at the definitionbook level","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":" * Duplicates are not allowed (by .isSameDefinition comparison)","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"public class DefinitionBook implements ReadOnlyDefinitionBook {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    private final UniqueDefinitionList definitions;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"        definitions \u003d new UniqueDefinitionList();","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    public DefinitionBook() {}","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    /** Make a Definitionbook","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"     * @param toBeCopied ReadOnlyDefinitionBook","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    public DefinitionBook(ReadOnlyDefinitionBook toBeCopied) {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"        this();","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"     * Replaces the contents of the content list with {@code notes}.","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"     * {@code content} must not contain duplicate content.","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"    public void setDefinition(List\u003cDefinition\u003e definitions) {","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"        this.definitions.setDefinition(definitions);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"     * Resets the existing data of this {@code Dictionary} with {@code newData}.","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"    public void resetData(ReadOnlyDefinitionBook newData) {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"        setDefinition(newData.getDefinitionList());","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"    //// note-level operations","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"     * Returns true if a content with the same content as {@code note} exists in the dictionote book.","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"    public boolean hasDefinition(Definition definition) {","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(definition);","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"        return definitions.contains(definition);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"     * Adds a definition to the dictionote book.","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"     * The definition must not already exist in the dictionote book.","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":"    public void addDefinition(Definition n) {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"XindiTian"},"content":"        definitions.add(n);","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":"    //// util methods","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"XindiTian"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"XindiTian"},"content":"        return definitions.asUnmodifiableObservableList().size() + \" definition\";","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"XindiTian"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"XindiTian"},"content":"    public ObservableList\u003cDefinition\u003e getDefinitionList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"XindiTian"},"content":"        return definitions.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"XindiTian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"XindiTian"},"content":"                || (other instanceof DefinitionBook // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 definitions.equals(((DefinitionBook) other).definitions));","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"XindiTian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"XindiTian"},"content":"        return definitions.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":97}},{"path":"src/main/java/seedu/dictionote/model/Dictionary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.UniqueContentList;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" * Wraps all data at the notebook level","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"public class Dictionary implements ReadOnlyDictionary {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    private final UniqueContentList contents;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"        contents \u003d new UniqueContentList();","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    public Dictionary() {}","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    /** Make a dictionarybook","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"     * @param toBeCopied ReadOnlyDictionary","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    public Dictionary(ReadOnlyDictionary toBeCopied) {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"        this();","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"     * Replaces the contents of the content list with {@code notes}.","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"     * {@code content} must not contain duplicate content.","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"    public void setContents(List\u003cContent\u003e contents) {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"        this.contents.setContent(contents);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"     * Resets the existing data of this {@code Dictionary} with {@code newData}.","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"    public void resetData(ReadOnlyDictionary newData) {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"        setContents(newData.getContentList());","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"    //// note-level operations","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"     * Returns true if a content with the same content as {@code note} exists in the dictionote book.","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"    public boolean hasContent(Content content) {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(content);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"        return contents.contains(content);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"     * Adds a content to the dictionote book.","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"     * The content must not already exist in the dictionote book.","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":"    public void addContent(Content n) {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"XindiTian"},"content":"        contents.add(n);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"XindiTian"},"content":"    public void deleteContent(Content n) {","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":"        contents.delete(n);","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"XindiTian"},"content":"    //// util methods","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"XindiTian"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"XindiTian"},"content":"        return contents.asUnmodifiableObservableList().size() + \" content\";","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"XindiTian"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"XindiTian"},"content":"    public ObservableList\u003cContent\u003e getContentList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"XindiTian"},"content":"        return contents.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"XindiTian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"XindiTian"},"content":"                || (other instanceof Dictionary // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 contents.equals(((Dictionary) other).contents));","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"XindiTian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"XindiTian"},"content":"        return contents.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"XindiTian":101}},{"path":"src/main/java/seedu/dictionote/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.GuiSettings;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.DisplayableContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.ui.DictionaryContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.ui.NoteContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"    Predicate\u003cContact\u003e PREDICATE_SHOW_ALL_CONTACTS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"    Predicate\u003cContent\u003e PREDICATE_SHOW_ALL_CONTENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    /**{@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"    Predicate\u003cDefinition\u003e PREDICATE_SHOW_ALL_DEFINITION \u003d unused -\u003e true;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    /**{@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"    Predicate\u003cNote\u003e PREDICATE_SHOW_ALL_NOTES \u003d unused -\u003e true;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"     * Sets the user prefs\u0027 contacts list book file path.","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"    void setContactsFilePath(Path addressBookFilePath);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"    void setNoteBookFilePath(Path noteBookFilePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"    void setDictionaryFilePath(Path getDictionaryFilePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"    void setDefinitionBookFilePath(Path getDefinitionBookFilePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns the user prefs\u0027 dictionote book file path.","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"riyadh-h"},"content":"    Path getContactsListFilePath();","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"    Path getNoteBookFilePath();","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"    Path getDictionaryFilePath();","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"    Path getDefinitionBookFilePath();","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d NoteBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"godjuansan"},"content":"     * Returns true if a note with the same content as {@code note} exists in the dictionote book.","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"godjuansan"},"content":"    boolean hasNote(Note note);","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"godjuansan"},"content":"     * Adds the given note.","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"godjuansan"},"content":"     * {@code note} must not already exist in the dictpersonionote book.","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"godjuansan"},"content":"    void addNote(Note note);","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"     * Deletes the given note.","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"     * The note must exist in the dictionote book.","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"    void deleteNote(Note target);","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"     * Show the given note.","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"    void showNote(Note note);","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"     * Check if there is note shown on note content panel.","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"    boolean hasNoteShown();","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"     * Reset the note shown to it original content.","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"    void resetNoteShown();","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get the note shown.","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"    Note getNoteShown();","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get the edited note shown content.","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"    String getEditedNoteShownContent();","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"     * Check if the UI is on edit note mode.","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"    boolean onEditModeNote();","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"    /** Returns the NoteBook */","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"    ReadOnlyNoteBook getNoteBook();","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"     * Replaces the given note {@code target} with {@code editedNote}.","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"     * {@code target} must exist in the dictionote book.","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"    void setNote(Note target, Note editedNote);","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"jessen11"},"content":"     * Sorts the note in the note book.","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"jessen11"},"content":"    void sortNote();","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"jessen11"},"content":"     * Sorts the note in the note book chronologically.","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"jessen11"},"content":"    void sortNoteByTime();","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"godjuansan"},"content":"     * Merges the given note.","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"godjuansan"},"content":"     * The note must exist in the dictionote book.","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"godjuansan"},"content":"    void mergeNote(Note firstNote, Note secondNote);","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":"     * Set Note UI Configuration Interface","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"TeoHoeKeat"},"content":"    void setNoteContentConfig(NoteContentConfig noteContentConfig);","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"TeoHoeKeat"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Dictionary \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns true if a text with the same content as {@code content} exists in the dictionote book.","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"TeoHoeKeat"},"content":"    boolean hasContent(Content content);","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"TeoHoeKeat"},"content":"     * Adds the given content.","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"TeoHoeKeat"},"content":"     * {@code content} must not already exist in the dictionote book.","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"TeoHoeKeat"},"content":"    void addContent(Content content);","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"TeoHoeKeat"},"content":"    /** Returns the Dictionary */","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"TeoHoeKeat"},"content":"    ReadOnlyDictionary getDictionary();","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":161,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"XindiTian"},"content":"     * Returns true if a definition with the same content as {@code definition} exists in the dictionote book.","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"XindiTian"},"content":"    boolean hasDefinition(Definition definition);","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"XindiTian"},"content":"     * Adds the given definition.","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"XindiTian"},"content":"     * {@code definition} must not already exist in the dictionote book.","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"XindiTian"},"content":"    void addDefinition(Definition definition);","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"TeoHoeKeat"},"content":"     * Show the given content.","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"TeoHoeKeat"},"content":"    void showDictionaryContent(DisplayableContent content);","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"TeoHoeKeat"},"content":"     * Set Dictionary UI Configuration Interface","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"TeoHoeKeat"},"content":"    void setDictionaryContentConfig(DictionaryContentConfig dictionaryContentConfig);","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"TeoHoeKeat"},"content":"    /** Returns the DefinitionBook */","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"TeoHoeKeat"},"content":"    ReadOnlyDefinitionBook getDefinitionBook();","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":187,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":188,"author":{"gitId":"TeoHoeKeat"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":190,"author":{"gitId":"XindiTian"},"content":"     * Replaces dictionote book data with the data in {@code addressBook}.","lastModifiedDate":"2021-02-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"riyadh-h"},"content":"    void setContactsList(ReadOnlyContactsList contactsList);","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":195,"author":{"gitId":"riyadh-h"},"content":"    ReadOnlyContactsList getContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":198,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns true if a person with the same identity as {@code contact} exists in the dictionote book.","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":200,"author":{"gitId":"riyadh-h"},"content":"    boolean hasContact(Contact contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"XindiTian"},"content":"     * The person must exist in the dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"riyadh-h"},"content":"    void deleteContact(Contact target);","lastModifiedDate":"2021-03-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"XindiTian"},"content":"     * {@code person} must not already exist in the dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"riyadh-h"},"content":"    void addContact(Contact contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":214,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":215,"author":{"gitId":"riyadh-h"},"content":"     * Invokes the user\u0027s OS email client to send a new email to the given contact.","lastModifiedDate":"2021-03-14"},{"lineNumber":216,"author":{"gitId":"riyadh-h"},"content":"     * {@code contact} must exist in the contacts list.","lastModifiedDate":"2021-03-14"},{"lineNumber":217,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":218,"author":{"gitId":"riyadh-h"},"content":"    void emailContact(Contact contact);","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":221,"author":{"gitId":"riyadh-h"},"content":"     * Sorts the contacts in the contacts list by their frequency counters.","lastModifiedDate":"2021-03-27"},{"lineNumber":222,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":223,"author":{"gitId":"riyadh-h"},"content":"    void sortContactsByFrequencyCounter();","lastModifiedDate":"2021-03-27"},{"lineNumber":224,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":227,"author":{"gitId":"XindiTian"},"content":"     * {@code target} must exist in the dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":228,"author":{"gitId":"XindiTian"},"content":"     * The person identity of {@code editedPerson} must not be the same as","lastModifiedDate":"2021-02-27"},{"lineNumber":229,"author":{"gitId":"XindiTian"},"content":"     * another existing person in the dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":231,"author":{"gitId":"riyadh-h"},"content":"    void setContact(Contact target, Contact editedContact);","lastModifiedDate":"2021-03-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":233,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":234,"author":{"gitId":"TeoHoeKeat"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":235,"author":{"gitId":"TeoHoeKeat"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2021-03-16"},{"lineNumber":236,"author":{"gitId":"TeoHoeKeat"},"content":"    ObservableList\u003cNote\u003e getFilteredNoteList();","lastModifiedDate":"2021-03-16"},{"lineNumber":237,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":239,"author":{"gitId":"riyadh-h"},"content":"    ObservableList\u003cContact\u003e getFilteredContactList();","lastModifiedDate":"2021-03-11"},{"lineNumber":240,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":241,"author":{"gitId":"XindiTian"},"content":"    /** Returns an unmodifiable view of the filtered list of content */","lastModifiedDate":"2021-03-15"},{"lineNumber":242,"author":{"gitId":"XindiTian"},"content":"    ObservableList\u003cContent\u003e getFilteredContentList();","lastModifiedDate":"2021-03-14"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":244,"author":{"gitId":"XindiTian"},"content":"    /** Returns an unmodifiable view of the filtered list of definitions */","lastModifiedDate":"2021-03-15"},{"lineNumber":245,"author":{"gitId":"XindiTian"},"content":"    ObservableList\u003cDefinition\u003e getFilteredDefinitionList();","lastModifiedDate":"2021-03-15"},{"lineNumber":246,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":247,"author":{"gitId":"TeoHoeKeat"},"content":"    /** Returns an unmodifiable view of the filtered list of current viewable list */","lastModifiedDate":"2021-03-16"},{"lineNumber":248,"author":{"gitId":"TeoHoeKeat"},"content":"    ObservableList\u003c? extends DisplayableContent\u003e getFilteredCurrentDictionaryList();","lastModifiedDate":"2021-03-16"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":253,"author":{"gitId":"riyadh-h"},"content":"    void updateFilteredContactList(Predicate\u003cContact\u003e predicate);","lastModifiedDate":"2021-03-11"},{"lineNumber":254,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":255,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":256,"author":{"gitId":"jessen11"},"content":"     * Updates the filter of the filtered note list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-12"},{"lineNumber":257,"author":{"gitId":"jessen11"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-12"},{"lineNumber":258,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":259,"author":{"gitId":"jessen11"},"content":"    void updateFilteredNoteList(Predicate\u003cNote\u003e predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":260,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":261,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":262,"author":{"gitId":"XindiTian"},"content":"     * Updates the filter of the filtered content list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-15"},{"lineNumber":263,"author":{"gitId":"XindiTian"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-15"},{"lineNumber":264,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":265,"author":{"gitId":"XindiTian"},"content":"    void updateFilteredContentList(Predicate\u003cContent\u003e predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":266,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":267,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":268,"author":{"gitId":"XindiTian"},"content":"     * Updates the filter of the filtered definition list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-15"},{"lineNumber":269,"author":{"gitId":"XindiTian"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-15"},{"lineNumber":270,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":271,"author":{"gitId":"XindiTian"},"content":"    void updateFilteredDefinitionList(Predicate\u003cDefinition\u003e predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":272,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"TeoHoeKeat":98,"jessen11":20,"godjuansan":18,"riyadh-h":24,"XindiTian":48,"-":65}},{"path":"src/main/java/seedu/dictionote/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static java.time.LocalDateTime.now;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.GuiSettings;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.DisplayableContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.ui.DictionaryContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.ui.NoteContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":" * Represents the in-memory model of the dictionote book data.","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"    private final ContactsList contactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"    private final FilteredList\u003cNote\u003e filteredNote;","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"    private final NoteBook noteBook;","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"    private final FilteredList\u003cContact\u003e filteredContacts;","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"    private final Dictionary dictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    private final FilteredList\u003cContent\u003e filteredContent;","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"    private final DefinitionBook definitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"    private final FilteredList\u003cDefinition\u003e filteredDefinition;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    private DictionaryContentConfig dictionaryContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    private NoteContentConfig noteContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"    public ModelManager(ReadOnlyContactsList addressBook, ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"                        ReadOnlyNoteBook noteBook, ReadOnlyDictionary dictionary,","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"                        ReadOnlyDefinitionBook definitionBook) {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"        requireAllNonNull(addressBook, userPrefs, noteBook, dictionary, definitionBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"        logger.fine(\"Initializing with dictionote book: \" + addressBook","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"                + \" and user prefs \" + userPrefs","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"                + \" and note book \" + noteBook","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"                + \" and dictionary content \" + dictionary","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"                + \" and definition book \" + definitionBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"riyadh-h"},"content":"        this.contactsList \u003d new ContactsList(addressBook);","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"godjuansan"},"content":"        this.noteBook \u003d new NoteBook(noteBook);","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"        this.dictionary \u003d new Dictionary(dictionary);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"        this.definitionBook \u003d new DefinitionBook(definitionBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"        filteredNote \u003d new FilteredList\u003c\u003e(this.noteBook.getNoteList());","lastModifiedDate":"2021-03-05"},{"lineNumber":66,"author":{"gitId":"riyadh-h"},"content":"        filteredContacts \u003d new FilteredList\u003c\u003e(this.contactsList.getContactList());","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":"        filteredContent \u003d new FilteredList\u003c\u003e(this.dictionary.getContentList());","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"XindiTian"},"content":"        filteredDefinition \u003d new FilteredList\u003c\u003e(this.definitionBook.getDefinitionList());","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"        this(new ContactsList(), new UserPrefs(), new NoteBook(), new Dictionary(), new DefinitionBook());","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"riyadh-h"},"content":"    public Path getContactsListFilePath() {","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"riyadh-h"},"content":"        return userPrefs.getContactsListFilePath();","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"riyadh-h"},"content":"    public void setContactsFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"riyadh-h"},"content":"        userPrefs.setContactsListFilePath(addressBookFilePath);","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":110,"author":{"gitId":"jessen11"},"content":"    public Path getNoteBookFilePath() {","lastModifiedDate":"2021-03-05"},{"lineNumber":111,"author":{"gitId":"jessen11"},"content":"        return userPrefs.getNoteBookFilePath();","lastModifiedDate":"2021-03-05"},{"lineNumber":112,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":113,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":114,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":115,"author":{"gitId":"jessen11"},"content":"    public void setNoteBookFilePath(Path noteBookFilePath) {","lastModifiedDate":"2021-03-05"},{"lineNumber":116,"author":{"gitId":"jessen11"},"content":"        requireNonNull(noteBookFilePath);","lastModifiedDate":"2021-03-05"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"        userPrefs.setContactsListFilePath(noteBookFilePath);","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"XindiTian"},"content":"    public Path getDictionaryFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"XindiTian"},"content":"        return userPrefs.getDictionaryFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"XindiTian"},"content":"    public void setDictionaryFilePath(Path dictionaryFilePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(dictionaryFilePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"XindiTian"},"content":"        userPrefs.setDictionaryFilePath(dictionaryFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"XindiTian"},"content":"    public Path getDefinitionBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"XindiTian"},"content":"        return userPrefs.getDefinitionBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"XindiTian"},"content":"    public void setDefinitionBookFilePath(Path definitionBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(definitionBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"XindiTian"},"content":"        userPrefs.setDefinitionBookFilePath(definitionBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"godjuansan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d NoteBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-03"},{"lineNumber":143,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":144,"author":{"gitId":"godjuansan"},"content":"    public boolean hasNote(Note note) {","lastModifiedDate":"2021-03-03"},{"lineNumber":145,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(note);","lastModifiedDate":"2021-03-03"},{"lineNumber":146,"author":{"gitId":"godjuansan"},"content":"        return noteBook.hasNote(note);","lastModifiedDate":"2021-03-03"},{"lineNumber":147,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":148,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":149,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":150,"author":{"gitId":"godjuansan"},"content":"    public void addNote(Note note) {","lastModifiedDate":"2021-03-03"},{"lineNumber":151,"author":{"gitId":"godjuansan"},"content":"        noteBook.addNote(note);","lastModifiedDate":"2021-03-03"},{"lineNumber":152,"author":{"gitId":"godjuansan"},"content":"        updateFilteredNoteList(PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":154,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":155,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":156,"author":{"gitId":"jessen11"},"content":"    public void deleteNote(Note note) {","lastModifiedDate":"2021-03-12"},{"lineNumber":157,"author":{"gitId":"jessen11"},"content":"        noteBook.deleteNote(note);","lastModifiedDate":"2021-03-12"},{"lineNumber":158,"author":{"gitId":"godjuansan"},"content":"        updateFilteredNoteList(PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"godjuansan"},"content":"    public void showNote(Note note) {","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"TeoHoeKeat"},"content":"        requireAllNonNull(note);","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"TeoHoeKeat"},"content":"        requireAllNonNull(noteContentConfig);","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"TeoHoeKeat"},"content":"        noteContentConfig.setNote(note);","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":167,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":168,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean hasNoteShown() {","lastModifiedDate":"2021-03-22"},{"lineNumber":170,"author":{"gitId":"TeoHoeKeat"},"content":"        requireAllNonNull(noteContentConfig);","lastModifiedDate":"2021-03-22"},{"lineNumber":171,"author":{"gitId":"TeoHoeKeat"},"content":"        return noteContentConfig.haveNote();","lastModifiedDate":"2021-03-22"},{"lineNumber":172,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":174,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"TeoHoeKeat"},"content":"    public void resetNoteShown() {","lastModifiedDate":"2021-03-22"},{"lineNumber":176,"author":{"gitId":"TeoHoeKeat"},"content":"        requireAllNonNull(noteContentConfig);","lastModifiedDate":"2021-03-22"},{"lineNumber":177,"author":{"gitId":"TeoHoeKeat"},"content":"        noteContentConfig.resetNote();","lastModifiedDate":"2021-03-22"},{"lineNumber":178,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":180,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":181,"author":{"gitId":"TeoHoeKeat"},"content":"    public Note getNoteShown() {","lastModifiedDate":"2021-03-22"},{"lineNumber":182,"author":{"gitId":"TeoHoeKeat"},"content":"        return noteContentConfig.getNote();","lastModifiedDate":"2021-03-22"},{"lineNumber":183,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":184,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":185,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":186,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getEditedNoteShownContent() {","lastModifiedDate":"2021-03-22"},{"lineNumber":187,"author":{"gitId":"TeoHoeKeat"},"content":"        requireAllNonNull(noteContentConfig);","lastModifiedDate":"2021-03-22"},{"lineNumber":188,"author":{"gitId":"TeoHoeKeat"},"content":"        return noteContentConfig.getEditedContent();","lastModifiedDate":"2021-03-22"},{"lineNumber":189,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":190,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":191,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":192,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean onEditModeNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":193,"author":{"gitId":"TeoHoeKeat"},"content":"        requireAllNonNull(noteContentConfig);","lastModifiedDate":"2021-03-22"},{"lineNumber":194,"author":{"gitId":"TeoHoeKeat"},"content":"        return noteContentConfig.onEditMode();","lastModifiedDate":"2021-03-22"},{"lineNumber":195,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":196,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":197,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":198,"author":{"gitId":"godjuansan"},"content":"    public ReadOnlyNoteBook getNoteBook() {","lastModifiedDate":"2021-03-03"},{"lineNumber":199,"author":{"gitId":"godjuansan"},"content":"        return noteBook;","lastModifiedDate":"2021-03-03"},{"lineNumber":200,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":201,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":202,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":203,"author":{"gitId":"jessen11"},"content":"    public void setNote(Note target, Note editedContact) {","lastModifiedDate":"2021-03-13"},{"lineNumber":204,"author":{"gitId":"jessen11"},"content":"        requireAllNonNull(target, editedContact);","lastModifiedDate":"2021-03-13"},{"lineNumber":205,"author":{"gitId":"jessen11"},"content":"        noteBook.setNote(target, editedContact);","lastModifiedDate":"2021-03-13"},{"lineNumber":206,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":207,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":208,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"TeoHoeKeat"},"content":"    public void setNoteContentConfig(NoteContentConfig noteContentConfig) {","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"TeoHoeKeat"},"content":"        requireAllNonNull(noteContentConfig);","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"TeoHoeKeat"},"content":"        this.noteContentConfig \u003d noteContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":212,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":213,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":214,"author":{"gitId":"jessen11"},"content":"    public void sortNote() {","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"jessen11"},"content":"        noteBook.sortNote();","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":217,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":218,"author":{"gitId":"jessen11"},"content":"    public void sortNoteByTime() {","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"jessen11"},"content":"        noteBook.sortNoteByTime();","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":222,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"godjuansan"},"content":"    public void mergeNote(Note firstNote, Note secondNote) {","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"godjuansan"},"content":"        noteBook.deleteNote(firstNote);","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"godjuansan"},"content":"        noteBook.deleteNote(secondNote);","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"godjuansan"},"content":"        Note updatedNote \u003d combineNote(firstNote, secondNote);","lastModifiedDate":"2021-03-28"},{"lineNumber":227,"author":{"gitId":"godjuansan"},"content":"        noteBook.addNote(updatedNote);","lastModifiedDate":"2021-03-28"},{"lineNumber":228,"author":{"gitId":"godjuansan"},"content":"        updateFilteredNoteList(PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2021-03-28"},{"lineNumber":229,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":230,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":231,"author":{"gitId":"godjuansan"},"content":"    private Note combineNote(Note firstNote, Note secondNote) {","lastModifiedDate":"2021-03-28"},{"lineNumber":232,"author":{"gitId":"godjuansan"},"content":"        String firstNoteContent \u003d firstNote.getNote();","lastModifiedDate":"2021-03-28"},{"lineNumber":233,"author":{"gitId":"godjuansan"},"content":"        String secondNoteContent \u003d secondNote.getNote();","lastModifiedDate":"2021-03-28"},{"lineNumber":234,"author":{"gitId":"godjuansan"},"content":"        String combinedNote \u003d firstNoteContent + \" \" + secondNoteContent;","lastModifiedDate":"2021-03-28"},{"lineNumber":235,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":236,"author":{"gitId":"godjuansan"},"content":"        Set\u003cTag\u003e firstNoteTag \u003d firstNote.getTags();","lastModifiedDate":"2021-03-28"},{"lineNumber":237,"author":{"gitId":"godjuansan"},"content":"        Set\u003cTag\u003e secondNoteTag \u003d secondNote.getTags();","lastModifiedDate":"2021-03-28"},{"lineNumber":238,"author":{"gitId":"godjuansan"},"content":"        Set\u003cTag\u003e combinedTag \u003d combineTag(firstNoteTag, secondNoteTag);","lastModifiedDate":"2021-03-28"},{"lineNumber":239,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":240,"author":{"gitId":"godjuansan"},"content":"        LocalDateTime createTime \u003d now();","lastModifiedDate":"2021-03-28"},{"lineNumber":241,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":242,"author":{"gitId":"godjuansan"},"content":"        LocalDateTime lastEditTime \u003d now();","lastModifiedDate":"2021-03-28"},{"lineNumber":243,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":244,"author":{"gitId":"godjuansan"},"content":"        Boolean firstNoteIsDone \u003d firstNote.isDone();","lastModifiedDate":"2021-03-28"},{"lineNumber":245,"author":{"gitId":"godjuansan"},"content":"        Boolean secondNoteIsDone \u003d secondNote.isDone();","lastModifiedDate":"2021-03-28"},{"lineNumber":246,"author":{"gitId":"godjuansan"},"content":"        Boolean combinedIsDone \u003d firstNoteIsDone \u0026\u0026 secondNoteIsDone;","lastModifiedDate":"2021-03-28"},{"lineNumber":247,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":248,"author":{"gitId":"godjuansan"},"content":"        return new Note(combinedNote, combinedTag, createTime, lastEditTime, combinedIsDone);","lastModifiedDate":"2021-03-28"},{"lineNumber":249,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":250,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":251,"author":{"gitId":"godjuansan"},"content":"    private Set\u003cTag\u003e combineTag(Set\u003cTag\u003e firstNoteTag, Set\u003cTag\u003e secondNoteTag) {","lastModifiedDate":"2021-03-28"},{"lineNumber":252,"author":{"gitId":"godjuansan"},"content":"        Set\u003cTag\u003e combinedTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":253,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":254,"author":{"gitId":"godjuansan"},"content":"        for (Tag tag : firstNoteTag) {","lastModifiedDate":"2021-03-28"},{"lineNumber":255,"author":{"gitId":"godjuansan"},"content":"            combinedTag.add(tag);","lastModifiedDate":"2021-03-28"},{"lineNumber":256,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":257,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":258,"author":{"gitId":"godjuansan"},"content":"        for (Tag tag : secondNoteTag) {","lastModifiedDate":"2021-03-28"},{"lineNumber":259,"author":{"gitId":"godjuansan"},"content":"            if (!firstNoteTag.contains(tag)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":260,"author":{"gitId":"godjuansan"},"content":"                combinedTag.add(tag);","lastModifiedDate":"2021-03-28"},{"lineNumber":261,"author":{"gitId":"godjuansan"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":262,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":263,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":264,"author":{"gitId":"godjuansan"},"content":"        return combinedTag;","lastModifiedDate":"2021-03-28"},{"lineNumber":265,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":266,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":267,"author":{"gitId":"XindiTian"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Dictionary \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":268,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":269,"author":{"gitId":"XindiTian"},"content":"    public boolean hasContent(Content content) {","lastModifiedDate":"2021-03-14"},{"lineNumber":270,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(content);","lastModifiedDate":"2021-03-14"},{"lineNumber":271,"author":{"gitId":"XindiTian"},"content":"        return dictionary.hasContent(content);","lastModifiedDate":"2021-03-14"},{"lineNumber":272,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":273,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":274,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":275,"author":{"gitId":"XindiTian"},"content":"    public void addContent(Content content) {","lastModifiedDate":"2021-03-15"},{"lineNumber":276,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(content);","lastModifiedDate":"2021-03-15"},{"lineNumber":277,"author":{"gitId":"XindiTian"},"content":"        updateFilteredContentList(PREDICATE_SHOW_ALL_CONTENTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":278,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":279,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":280,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":281,"author":{"gitId":"XindiTian"},"content":"    public ReadOnlyDictionary getDictionary() {","lastModifiedDate":"2021-03-14"},{"lineNumber":282,"author":{"gitId":"XindiTian"},"content":"        return dictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":283,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":284,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":285,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":286,"author":{"gitId":"XindiTian"},"content":"    public boolean hasDefinition(Definition definition) {","lastModifiedDate":"2021-03-15"},{"lineNumber":287,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(definition);","lastModifiedDate":"2021-03-15"},{"lineNumber":288,"author":{"gitId":"XindiTian"},"content":"        return definitionBook.hasDefinition(definition);","lastModifiedDate":"2021-03-15"},{"lineNumber":289,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":290,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":291,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":292,"author":{"gitId":"XindiTian"},"content":"    public void addDefinition(Definition definition) {","lastModifiedDate":"2021-03-15"},{"lineNumber":293,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(definition);","lastModifiedDate":"2021-03-15"},{"lineNumber":294,"author":{"gitId":"XindiTian"},"content":"        updateFilteredDefinitionList(PREDICATE_SHOW_ALL_DEFINITION);","lastModifiedDate":"2021-03-15"},{"lineNumber":295,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":296,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":297,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":298,"author":{"gitId":"XindiTian"},"content":"    public ReadOnlyDefinitionBook getDefinitionBook() {","lastModifiedDate":"2021-03-15"},{"lineNumber":299,"author":{"gitId":"XindiTian"},"content":"        return definitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":300,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":301,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":302,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":303,"author":{"gitId":"TeoHoeKeat"},"content":"    public void showDictionaryContent(DisplayableContent content) {","lastModifiedDate":"2021-03-16"},{"lineNumber":304,"author":{"gitId":"TeoHoeKeat"},"content":"        requireAllNonNull(content);","lastModifiedDate":"2021-03-16"},{"lineNumber":305,"author":{"gitId":"TeoHoeKeat"},"content":"        requireAllNonNull(dictionaryContentConfig);","lastModifiedDate":"2021-03-16"},{"lineNumber":306,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionaryContentConfig.setDisplayContent(content);","lastModifiedDate":"2021-03-16"},{"lineNumber":307,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":308,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":309,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":310,"author":{"gitId":"TeoHoeKeat"},"content":"    public void setDictionaryContentConfig(DictionaryContentConfig dictionaryContentConfig) {","lastModifiedDate":"2021-03-16"},{"lineNumber":311,"author":{"gitId":"TeoHoeKeat"},"content":"        requireAllNonNull(dictionaryContentConfig);","lastModifiedDate":"2021-03-16"},{"lineNumber":312,"author":{"gitId":"TeoHoeKeat"},"content":"        this.dictionaryContentConfig \u003d dictionaryContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":313,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":314,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":318,"author":{"gitId":"riyadh-h"},"content":"    public void setContactsList(ReadOnlyContactsList contactsList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":319,"author":{"gitId":"riyadh-h"},"content":"        this.contactsList.resetData(contactsList);","lastModifiedDate":"2021-03-24"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":323,"author":{"gitId":"riyadh-h"},"content":"    public ReadOnlyContactsList getContactsList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":324,"author":{"gitId":"riyadh-h"},"content":"        return contactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":328,"author":{"gitId":"riyadh-h"},"content":"    public boolean hasContact(Contact contact) {","lastModifiedDate":"2021-03-07"},{"lineNumber":329,"author":{"gitId":"riyadh-h"},"content":"        requireNonNull(contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":330,"author":{"gitId":"riyadh-h"},"content":"        return contactsList.hasContact(contact);","lastModifiedDate":"2021-03-24"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":334,"author":{"gitId":"riyadh-h"},"content":"    public void deleteContact(Contact target) {","lastModifiedDate":"2021-03-09"},{"lineNumber":335,"author":{"gitId":"riyadh-h"},"content":"        contactsList.removeContact(target);","lastModifiedDate":"2021-03-24"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":339,"author":{"gitId":"riyadh-h"},"content":"    public void addContact(Contact contact) {","lastModifiedDate":"2021-03-07"},{"lineNumber":340,"author":{"gitId":"riyadh-h"},"content":"        contactsList.addContact(contact);","lastModifiedDate":"2021-03-24"},{"lineNumber":341,"author":{"gitId":"riyadh-h"},"content":"        updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":344,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":345,"author":{"gitId":"riyadh-h"},"content":"    public void emailContact(Contact contact) {","lastModifiedDate":"2021-03-14"},{"lineNumber":346,"author":{"gitId":"riyadh-h"},"content":"        requireNonNull(contact);","lastModifiedDate":"2021-03-14"},{"lineNumber":347,"author":{"gitId":"riyadh-h"},"content":"        contactsList.emailContact(contact);","lastModifiedDate":"2021-03-24"},{"lineNumber":348,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":349,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":350,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":351,"author":{"gitId":"riyadh-h"},"content":"    public void sortContactsByFrequencyCounter() {","lastModifiedDate":"2021-03-27"},{"lineNumber":352,"author":{"gitId":"riyadh-h"},"content":"        contactsList.sortByFrequencyCounter();","lastModifiedDate":"2021-03-27"},{"lineNumber":353,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":354,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":356,"author":{"gitId":"riyadh-h"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2021-03-11"},{"lineNumber":357,"author":{"gitId":"riyadh-h"},"content":"        requireAllNonNull(target, editedContact);","lastModifiedDate":"2021-03-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":359,"author":{"gitId":"riyadh-h"},"content":"        contactsList.setContact(target, editedContact);","lastModifiedDate":"2021-03-24"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":362,"author":{"gitId":"TeoHoeKeat"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":365,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":366,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":367,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":369,"author":{"gitId":"riyadh-h"},"content":"    public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2021-03-11"},{"lineNumber":370,"author":{"gitId":"riyadh-h"},"content":"        return filteredContacts;","lastModifiedDate":"2021-03-07"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":373,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":374,"author":{"gitId":"jessen11"},"content":"    public ObservableList\u003cNote\u003e getFilteredNoteList() {","lastModifiedDate":"2021-03-05"},{"lineNumber":375,"author":{"gitId":"jessen11"},"content":"        return filteredNote;","lastModifiedDate":"2021-03-05"},{"lineNumber":376,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":377,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":378,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":379,"author":{"gitId":"XindiTian"},"content":"    public ObservableList\u003cContent\u003e getFilteredContentList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":380,"author":{"gitId":"XindiTian"},"content":"        return filteredContent;","lastModifiedDate":"2021-03-14"},{"lineNumber":381,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":382,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":383,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":384,"author":{"gitId":"XindiTian"},"content":"    public ObservableList\u003cDefinition\u003e getFilteredDefinitionList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":385,"author":{"gitId":"XindiTian"},"content":"        return filteredDefinition;","lastModifiedDate":"2021-03-15"},{"lineNumber":386,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":387,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":388,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":389,"author":{"gitId":"TeoHoeKeat"},"content":"    public ObservableList\u003c? extends DisplayableContent\u003e getFilteredCurrentDictionaryList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":390,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":391,"author":{"gitId":"TeoHoeKeat"},"content":"        return dictionaryContentConfig.isContentVisible() ? filteredContent : filteredDefinition;","lastModifiedDate":"2021-03-16"},{"lineNumber":392,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":393,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":395,"author":{"gitId":"riyadh-h"},"content":"    public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2021-03-11"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":397,"author":{"gitId":"riyadh-h"},"content":"        filteredContacts.setPredicate(predicate);","lastModifiedDate":"2021-03-07"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":400,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":401,"author":{"gitId":"jessen11"},"content":"    public void updateFilteredNoteList(Predicate\u003cNote\u003e predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":402,"author":{"gitId":"jessen11"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":403,"author":{"gitId":"jessen11"},"content":"        filteredNote.setPredicate(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":404,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":405,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":406,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":407,"author":{"gitId":"XindiTian"},"content":"    public void updateFilteredContentList(Predicate\u003cContent\u003e predicate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":408,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":409,"author":{"gitId":"XindiTian"},"content":"        filteredContent.setPredicate(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":410,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":411,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":412,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":413,"author":{"gitId":"XindiTian"},"content":"    public void updateFilteredDefinitionList(Predicate\u003cDefinition\u003e predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":414,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":415,"author":{"gitId":"XindiTian"},"content":"        filteredDefinition.setPredicate(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":416,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":417,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":422,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":432,"author":{"gitId":"riyadh-h"},"content":"        return contactsList.equals(other.contactsList)","lastModifiedDate":"2021-03-24"},{"lineNumber":433,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":434,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 filteredContacts.equals(other.filteredContacts);","lastModifiedDate":"2021-03-07"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":436,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TeoHoeKeat":63,"jessen11":44,"godjuansan":75,"riyadh-h":44,"XindiTian":100,"-":110}},{"path":"src/main/java/seedu/dictionote/model/NoteBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.UniqueNoteList;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":" * Wraps all data at the notebook level","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"public class NoteBook implements ReadOnlyNoteBook {","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"    private final UniqueNoteList notes;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"    {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"        notes \u003d new UniqueNoteList();","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"    public NoteBook() {}","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    /** Make a notebook","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"     * @param toBeCopied ReadOnlyNotebook","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"    public NoteBook(ReadOnlyNoteBook toBeCopied) {","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"        this();","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"     * Replaces the contents of the note list with {@code notes}.","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"     * {@code notes} must not contain duplicate notes.","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"    public void setNotes(List\u003cNote\u003e notes) {","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"        this.notes.setNotes(notes);","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"    public void resetData(ReadOnlyNoteBook newData) {","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"        setNotes(newData.getNoteList());","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"    //// note-level operations","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"godjuansan"},"content":"     * Returns true if a note with the same content as {@code note} exists in the dictionote book.","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"    public boolean hasNote(Note note) {","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(note);","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"godjuansan"},"content":"        return notes.contains(note);","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"godjuansan"},"content":"     * Adds a note to the dictionote book.","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"godjuansan"},"content":"     * The note must not already exist in the dictionote book.","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"    public void addNote(Note n) {","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"        notes.add(n);","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"    public void deleteNote(Note n) {","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"        notes.delete(n);","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"    public void setNote(Note target, Note editedNote) {","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"        requireNonNull(editedNote);","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"        notes.setNote(target, editedNote);","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"godjuansan"},"content":"    //// util methods","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"godjuansan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"godjuansan"},"content":"        return notes.asUnmodifiableObservableList().size() + \" notes\";","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"godjuansan"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"godjuansan"},"content":"    public ObservableList\u003cNote\u003e getNoteList() {","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"godjuansan"},"content":"        return notes.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"jessen11"},"content":"    public void sortNote() {","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"jessen11"},"content":"        notes.sort();","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"jessen11"},"content":"    public void sortNoteByTime() {","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"jessen11"},"content":"        notes.sortByTime();","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"godjuansan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":102,"author":{"gitId":"godjuansan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"godjuansan"},"content":"                || (other instanceof NoteBook // instanceof handles nulls","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"godjuansan"},"content":"                \u0026\u0026 notes.equals(((NoteBook) other).notes));","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":107,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"godjuansan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":109,"author":{"gitId":"godjuansan"},"content":"        return notes.hashCode();","lastModifiedDate":"2021-03-03"},{"lineNumber":110,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":111,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"jessen11":30,"godjuansan":82}},{"path":"src/main/java/seedu/dictionote/model/ReadOnlyContactsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":" * Unmodifiable view of an dictionote book","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"public interface ReadOnlyContactsList {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"    ObservableList\u003cContact\u003e getContactList();","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"riyadh-h":3,"XindiTian":2,"-":12}},{"path":"src/main/java/seedu/dictionote/model/ReadOnlyDefinitionBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"public interface ReadOnlyDefinitionBook {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"    ObservableList\u003cDefinition\u003e getDefinitionList();","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":9}},{"path":"src/main/java/seedu/dictionote/model/ReadOnlyDictionary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"public interface ReadOnlyDictionary {","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"    ObservableList\u003cContent\u003e getContentList();","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"XindiTian":9}},{"path":"src/main/java/seedu/dictionote/model/ReadOnlyNoteBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"public interface ReadOnlyNoteBook {","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"     * Returns an unmodifiable view of the notes list.","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"     * This list will not contain any duplicate notes.","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"    ObservableList\u003cNote\u003e getNoteList();","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"godjuansan":12}},{"path":"src/main/java/seedu/dictionote/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.GuiSettings;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"    Path getContactsListFilePath();","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"    Path getNoteBookFilePath();","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    Path getDictionaryFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"    Path getDefinitionBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"godjuansan":2,"riyadh-h":1,"XindiTian":6,"-":13}},{"path":"src/main/java/seedu/dictionote/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.GuiSettings;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"    private Path contactsListFilePath \u003d Paths.get(\"data\" , \"contactslist.json\");","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"    private Path noteBookFilePath \u003d Paths.get(\"data\" , \"notebook.json\");","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"    private Path dictionaryFilePath \u003d Paths.get(\"data\", \"dictionarybook.json\");","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"    private Path definitionBookFilePath \u003d Paths.get(\"data\", \"definitionbook.json\");","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    private final String localPath \u003d \"\\nLocal data file location : \";","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"        setContactsListFilePath(newUserPrefs.getContactsListFilePath());","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"        setNoteBookFilePath(newUserPrefs.getNoteBookFilePath());","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"        setDictionaryFilePath(newUserPrefs.getDictionaryFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"        setDefinitionBookFilePath(newUserPrefs.getDefinitionBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"    public Path getContactsListFilePath() {","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"riyadh-h"},"content":"        return contactsListFilePath;","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"riyadh-h"},"content":"    public void setContactsListFilePath(Path contactsListFilePath) {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"riyadh-h"},"content":"        requireNonNull(contactsListFilePath);","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"riyadh-h"},"content":"        this.contactsListFilePath \u003d contactsListFilePath;","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"    public Path getNoteBookFilePath() {","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"        return noteBookFilePath;","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"godjuansan"},"content":"    public void setNoteBookFilePath(Path noteBookFilePath) {","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(noteBookFilePath);","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"godjuansan"},"content":"        this.noteBookFilePath \u003d noteBookFilePath;","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"XindiTian"},"content":"    public Path getDictionaryFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"XindiTian"},"content":"        return dictionaryFilePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"XindiTian"},"content":"    public void setDictionaryFilePath(Path dictionaryFilePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(dictionaryFilePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"XindiTian"},"content":"        this.dictionaryFilePath \u003d dictionaryFilePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"XindiTian"},"content":"    public Path getDefinitionBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"XindiTian"},"content":"        return definitionBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"XindiTian"},"content":"    public void setDefinitionBookFilePath(Path definitionBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(definitionBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"XindiTian"},"content":"        this.definitionBookFilePath \u003d definitionBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 contactsListFilePath.equals(o.contactsListFilePath)","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 noteBookFilePath.equals(o.noteBookFilePath)","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 dictionaryFilePath.equals(o.dictionaryFilePath)","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 definitionBookFilePath.equals(o.definitionBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"riyadh-h"},"content":"        return Objects.hash(guiSettings, contactsListFilePath, noteBookFilePath,","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"XindiTian"},"content":"                dictionaryFilePath, definitionBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"riyadh-h"},"content":"        sb.append(localPath + contactsListFilePath);","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"jessen11"},"content":"        sb.append(localPath + noteBookFilePath);","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"XindiTian"},"content":"        sb.append(localPath + dictionaryFilePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"XindiTian"},"content":"        sb.append(localPath + definitionBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jessen11":2,"godjuansan":11,"riyadh-h":10,"XindiTian":30,"-":75}},{"path":"src/main/java/seedu/dictionote/model/contact/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":" * Represents a Person\u0027s dictionote in the dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"     * The first character of the dictionote must not be a whitespace,","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"     * @param address A valid dictionote.","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"riyadh-h":1,"XindiTian":4,"-":52}},{"path":"src/main/java/seedu/dictionote/model/contact/Contact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":" * Represents a Person in the dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"public class Contact {","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"    // Counter","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"    private final FrequencyCounter frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"    public Contact(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"        this(name, phone, email, address, tags, new FrequencyCounter());","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"    public Contact(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, FrequencyCounter frequency) {","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2021-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"    public FrequencyCounter getFrequencyCounter() {","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"riyadh-h"},"content":"        return frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"    public boolean isSameContact(Contact otherContact) {","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"riyadh-h"},"content":"        if (otherContact \u003d\u003d this) {","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"riyadh-h"},"content":"        return otherContact !\u003d null","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 otherContact.getName().equals(getName());","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"riyadh-h"},"content":"        if (!(other instanceof Contact)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"riyadh-h"},"content":"        Contact otherContact \u003d (Contact) other;","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"riyadh-h"},"content":"        return otherContact.getName().equals(getName())","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 otherContact.getPhone().equals(getPhone())","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 otherContact.getEmail().equals(getEmail())","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 otherContact.getAddress().equals(getAddress())","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 otherContact.getTags().equals(getTags());","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2021-03-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2021-03-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2021-03-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2021-03-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"riyadh-h":28,"XindiTian":3,"-":106}},{"path":"src/main/java/seedu/dictionote/model/contact/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":" * Represents a Person\u0027s email in the dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"     * @param email A valid email dictionote.","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"riyadh-h":1,"XindiTian":3,"-":63}},{"path":"src/main/java/seedu/dictionote/model/contact/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import java.util.List;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.commons.util.StringUtil;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":" * Tests that a {@code Contact}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cContact\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"    public boolean test(Contact contact) {","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"        // avoid returning false by anyMatch if no name keywords are provided.","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"            return true;","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsIgnoreCase(contact.getEmail().value, keyword));","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"                || (other instanceof EmailContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 keywords.equals(((EmailContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"riyadh-h":36}},{"path":"src/main/java/seedu/dictionote/model/contact/FrequencyCounter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":" * Represents a Contact\u0027s frequency counter in the contacts list.","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFrequencyCounter(int)}","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"public class FrequencyCounter {","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Frequency counter values should be non-negative\";","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"    public final int value;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"     * Constructs a {@code FrequencyCounter} with its value set to 0.","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"    public FrequencyCounter() {","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"        this(0);","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"     * Constructs a {@code FrequencyCounter}.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"     * @param frequencyCounter A valid frequency counter value.","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    public FrequencyCounter(int frequencyCounter) {","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"        checkArgument(isValidFrequencyCounter(frequencyCounter), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"        value \u003d frequencyCounter;","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"    public FrequencyCounter increment() {","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"        return new FrequencyCounter(value + 1);","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"     * Returns true if a given integer is a valid frequency counter value.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"    public static boolean isValidFrequencyCounter(int test) {","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"        return test \u003e\u003d 0;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        return String.format(\"%d\", value);","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"                || (other instanceof FrequencyCounter // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 value \u003d\u003d ((FrequencyCounter) other).value); // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"        return Integer.hashCode(value);","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"riyadh-h":59}},{"path":"src/main/java/seedu/dictionote/model/contact/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":" * Represents a Person\u0027s name in the dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"     * The first character of the dictionote must not be a whitespace,","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"riyadh-h":1,"XindiTian":3,"-":55}},{"path":"src/main/java/seedu/dictionote/model/contact/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.StringUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cContact\u003e {","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"    public boolean test(Contact contact) {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"        // avoid returning false by anyMatch if no name keywords are provided.","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsIgnoreCase(contact.getName().fullName, keyword));","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"riyadh-h":9,"XindiTian":1,"-":26}},{"path":"src/main/java/seedu/dictionote/model/contact/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":" * Represents a Person\u0027s phone number in the dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"riyadh-h":1,"XindiTian":2,"-":50}},{"path":"src/main/java/seedu/dictionote/model/contact/TagsContainKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":" * Tests that a {@code Person}\u0027s {@code Tag}s match all of the keywords given.","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"public class TagsContainKeywordsPredicate implements Predicate\u003cContact\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"    public TagsContainKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"    public boolean test(Contact contact) {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"                .allMatch(keyword -\u003e contact.getTags()","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"                        .toString()","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"                        .toLowerCase()","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"                        .contains(keyword.toLowerCase()));","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"                || (other instanceof TagsContainKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 keywords.equals(((TagsContainKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"riyadh-h":32}},{"path":"src/main/java/seedu/dictionote/model/contact/UniqueContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.exceptions.ContactNotFoundException;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":" * @see Contact#isSameContact(Contact)","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"public class UniqueContactList implements Iterable\u003cContact\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    private final ObservableList\u003cContact\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"    private final ObservableList\u003cContact\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"    public boolean contains(Contact toCheck) {","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"        return internalList.stream().anyMatch(toCheck::isSameContact);","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"    public void add(Contact toAdd) {","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"        requireAllNonNull(target, editedContact);","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"riyadh-h"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"        if (!target.isSameContact(editedContact) \u0026\u0026 contains(editedContact)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"riyadh-h"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"        internalList.set(index, editedContact);","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"riyadh-h"},"content":"    public void remove(Contact toRemove) {","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"riyadh-h"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"    public void setContacts(UniqueContactList replacement) {","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"riyadh-h"},"content":"    public void setContacts(List\u003cContact\u003e contacts) {","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"riyadh-h"},"content":"        requireAllNonNull(contacts);","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"riyadh-h"},"content":"        if (!contactsAreUnique(contacts)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"riyadh-h"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"        internalList.setAll(contacts);","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"riyadh-h"},"content":"     * Sorts the contacts in the contacts list in descending order by their frequency counters.","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"riyadh-h"},"content":"    public void sortByFrequencyCounter() {","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"riyadh-h"},"content":"        List\u003cContact\u003e sortedList \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"riyadh-h"},"content":"                internalList.sorted((c1, c2) -\u003e c2.getFrequencyCounter().value - c1.getFrequencyCounter().value);","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"riyadh-h"},"content":"        setContacts(sortedList);","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"riyadh-h"},"content":"    public ObservableList\u003cContact\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"    public Iterator\u003cContact\u003e iterator() {","lastModifiedDate":"2021-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"riyadh-h"},"content":"                || (other instanceof UniqueContactList // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"riyadh-h"},"content":"                        \u0026\u0026 internalList.equals(((UniqueContactList) other).internalList));","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"riyadh-h"},"content":"     * Returns true if {@code contacts} contains only unique contacts.","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"riyadh-h"},"content":"    private boolean contactsAreUnique(List\u003cContact\u003e contacts) {","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"riyadh-h"},"content":"        for (int i \u003d 0; i \u003c contacts.size() - 1; i++) {","lastModifiedDate":"2021-03-07"},{"lineNumber":138,"author":{"gitId":"riyadh-h"},"content":"            for (int j \u003d i + 1; j \u003c contacts.size(); j++) {","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"riyadh-h"},"content":"                if (contacts.get(i).isSameContact(contacts.get(j))) {","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"riyadh-h":41,"XindiTian":1,"-":104}},{"path":"src/main/java/seedu/dictionote/model/contact/exceptions/ContactNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact.exceptions;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":" * Signals that the operation is unable to find the specified contact.","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"public class ContactNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"riyadh-h":3,"-":3}},{"path":"src/main/java/seedu/dictionote/model/contact/exceptions/DuplicateContactException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact.exceptions;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"public class DuplicateContactException extends RuntimeException {","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"    public DuplicateContactException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"riyadh-h":3,"-":8}},{"path":"src/main/java/seedu/dictionote/model/contact/exceptions/InvalidContactMailtoLinkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact.exceptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":" * Signals that the provided {@code mailto} link for invoking the OS\u0027s mail client is invalid.","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"public class InvalidContactMailtoLinkException extends RuntimeException {","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"    public InvalidContactMailtoLinkException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"        super(\"Invalid email link\");","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"riyadh-h":10}},{"path":"src/main/java/seedu/dictionote/model/contact/exceptions/NoteNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.model.contact.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":" * Signals that the operation is unable to find the specified note.","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"public class NoteNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jessen11":6}},{"path":"src/main/java/seedu/dictionote/model/dictionary/Content.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model.dictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":" * Represents a Note in the dictionote book.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"public class Content implements DisplayableContent {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"    private final String week;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"    private final String header;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    private final String maincontent;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"    public Content(String week, String header, String maincontent) {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"        requireAllNonNull(week, header, maincontent);","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"        this.week \u003d week;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"        this.header \u003d header;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"        this.maincontent \u003d maincontent;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"    public String getMainContent() {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"        return maincontent;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"    public String getWeek() {","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"        return week;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"    public String getHeader() {","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"        return header;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"     * Returns true if both notes have the same note.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"    public boolean isSameContent(Content otherContent) {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"        if (otherContent \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"        return otherContent !\u003d null","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 otherContent.getWeek().equals(getWeek())","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 otherContent.getHeader().equals(getHeader())","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 otherContent.getMainContent().equals(getMainContent());","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"     * Returns true if both notes have the same identity and data fields.","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"     * This defines a stronger notion of equality between two notes.","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"        if (!(other instanceof Content)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":"        Content otherContent \u003d (Content) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"XindiTian"},"content":"        return otherContent.getWeek().equals(getWeek())","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 otherContent.getHeader().equals(getHeader())","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 otherContent.getMainContent().equals(getMainContent());","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"XindiTian"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"XindiTian"},"content":"        return Objects.hash(week, header, maincontent);","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"XindiTian"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"XindiTian"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"XindiTian"},"content":"        builder.append(getWeek())","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"XindiTian"},"content":"            .append(getHeader())","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"XindiTian"},"content":"            .append(getMainContent());","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"XindiTian"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDictionaryWeek() {","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"        return getWeek();","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDictionaryHeader() {","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"        return getHeader();","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDictionaryContent() {","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"        return getMainContent();","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"TeoHoeKeat":16,"XindiTian":86}},{"path":"src/main/java/seedu/dictionote/model/dictionary/ContentContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model.dictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.StringUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"public class ContentContainsKeywordsPredicate implements Predicate\u003cContent\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"    public ContentContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    public boolean test(Content content) {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(content.getMainContent(), keyword));","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"                || (other instanceof ContentContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 keywords.equals(((ContentContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"XindiTian":27}},{"path":"src/main/java/seedu/dictionote/model/dictionary/Definition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model.dictionary;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":" * Represents a DefinitionBook in the dictionote book.","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"public class Definition implements DisplayableContent {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"    private final String term;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"    private final String defs;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"    public Definition(String term, String defs) {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"        requireAllNonNull(term, defs);","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"        this.term \u003d term;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"        this.defs \u003d defs;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"    public String getTerm() {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"        return term;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    public String getDefs() {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"        return defs;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"     * Returns true if both definitions have the same content.","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"    public boolean isSameDefinition(Definition otherDefinition) {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"        if (otherDefinition \u003d\u003d this) {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"        return otherDefinition !\u003d null","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 otherDefinition.getDefs().equals(getDefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"     * Returns true if both definition have the same identity and data fields.","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"     * This defines a stronger notion of equality between two notes.","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"        if (!(other instanceof Definition)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"        Definition otherDefinition \u003d (Definition) other;","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"        return otherDefinition.getTerm().equals(getTerm())","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 otherDefinition.getDefs().equals(getDefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":"        return Objects.hash(term, defs);","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"XindiTian"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"XindiTian"},"content":"        builder.append(getTerm() + \": \")","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"                .append(getDefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"XindiTian"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDictionaryWeek() {","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"        return null;","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDictionaryHeader() {","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"        return getTerm();","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDictionaryContent() {","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"        return getDefs();","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"TeoHoeKeat":17,"XindiTian":76}},{"path":"src/main/java/seedu/dictionote/model/dictionary/DefinitionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model.dictionary;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.StringUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"public class DefinitionContainsKeywordsPredicate implements Predicate\u003cDefinition\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"    public DefinitionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    public boolean test(Definition definition) {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(definition.getTerm(), keyword));","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"                || (other instanceof DefinitionContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 keywords.equals(((DefinitionContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":28}},{"path":"src/main/java/seedu/dictionote/model/dictionary/DisplayableContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.model.dictionary;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"public interface DisplayableContent {","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"    String getDictionaryWeek();","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"    String getDictionaryHeader();","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    String getDictionaryContent();","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":11}},{"path":"src/main/java/seedu/dictionote/model/dictionary/UniqueContentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model.dictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.exceptions.DuplicateContentException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":" * A list of notes that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":" * A note is considered unique by comparing using {@code Note#isSameNote(Note)}. As such, adding and updating of","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":" * notes uses Note#isSameNote(Note) for equality so as to ensure that the note being added or updated is","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":" * unique in terms of identity in the UniqueNoteList. However, the removal of a note uses Note#equals(Object) so","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":" * @see Content#isSameContent(Content)","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"public class UniqueContentList implements Iterable\u003cContent\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    private final ObservableList\u003cContent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"    private final ObservableList\u003cContent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"     * Returns true if the list contains an equivalent note as the given argument.","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"    public boolean contains(Content toCheck) {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"        return internalList.stream().anyMatch(toCheck::isSameContent);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"     * Adds content to the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"     * The content must not already exist in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"    public void add(Content toAdd) {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"            throw new DuplicateContentException();","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"     * Deletes a note to the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"    public void delete(Content toRemove) {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"        internalList.remove(toRemove);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"     * Replaces the contents of this list with {@code notes}.","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"     * {@code notes} must not contain duplicate persons.","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"    public void setContent(List\u003cContent\u003e content) {","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"        requireAllNonNull(content);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"        if (!contentAreUnique(content)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"            throw new DuplicateContentException();","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"XindiTian"},"content":"        internalList.setAll(content);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"    public ObservableList\u003cContent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"XindiTian"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"XindiTian"},"content":"    public Iterator\u003cContent\u003e iterator() {","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"XindiTian"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"XindiTian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"XindiTian"},"content":"                || (other instanceof UniqueContentList // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 internalList.equals(((UniqueContentList) other).internalList));","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"XindiTian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"XindiTian"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"XindiTian"},"content":"     * Returns true if {@code notes} contains only unique notes.","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"XindiTian"},"content":"    private boolean contentAreUnique(List\u003cContent\u003e content) {","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"XindiTian"},"content":"        for (int i \u003d 0; i \u003c content.size() - 1; i++) {","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"XindiTian"},"content":"            for (int j \u003d i + 1; j \u003c content.size(); j++) {","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"XindiTian"},"content":"                if (content.get(i).isSameContent(content.get(j))) {","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"XindiTian"},"content":"                    return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"XindiTian"},"content":"                }","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"XindiTian"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"XindiTian"},"content":"        return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"XindiTian":108}},{"path":"src/main/java/seedu/dictionote/model/dictionary/UniqueDefinitionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model.dictionary;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.exceptions.DuplicateDefinitionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":" * A list of definitions that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":" * A definition is considered unique by comparing using {@code DefinitionBook#isSameDefinition(DefinitionBook)}.","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":" * As such, adding and updating of definitions uses Definitions#isSameDefinitions(Definitions) for equality so","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":" * as to ensure that the definition being added or updated is unique in terms of identity in the UniqueDefinitionList.","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":" * However, the removal of a DefinitionBook uses DefinitionBook#equals(Object) so as to ensure that","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":" * the definition with exactly the same fields will be removed.","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":" *","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":" *","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":" * @see Definition#isSameDefinition(Definition)","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"public class UniqueDefinitionList implements Iterable\u003cDefinition\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"    private final ObservableList\u003cDefinition\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    private final ObservableList\u003cDefinition\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"     * Returns true if the list contains an equivalent note as the given argument.","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"    public boolean contains(Definition toCheck) {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"        return internalList.stream().anyMatch(toCheck::isSameDefinition);","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"     * Adds content to the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"     * The content must not already exist in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"    public void add(Definition toAdd) {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"            throw new DuplicateDefinitionException();","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"     * Deletes a note to the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"    public void delete(Definition toRemove) {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"        internalList.remove(toRemove);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"     * Replaces the contents of this list with {@code notes}.","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"     * {@code notes} must not contain duplicate persons.","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"    public void setDefinition(List\u003cDefinition\u003e definition) {","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"        requireAllNonNull(definition);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"        if (!definitionAreUnique(definition)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"            throw new DuplicateDefinitionException();","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"XindiTian"},"content":"        internalList.setAll(definition);","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"XindiTian"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"XindiTian"},"content":"    public ObservableList\u003cDefinition\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"XindiTian"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"XindiTian"},"content":"    public Iterator\u003cDefinition\u003e iterator() {","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"XindiTian"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"XindiTian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"XindiTian"},"content":"                || (other instanceof UniqueDefinitionList // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 internalList.equals(((UniqueDefinitionList) other).internalList));","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"XindiTian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"XindiTian"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"XindiTian"},"content":"     * Returns true if {@code notes} contains only unique notes.","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"XindiTian"},"content":"    private boolean definitionAreUnique(List\u003cDefinition\u003e definitions) {","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"XindiTian"},"content":"        for (int i \u003d 0; i \u003c definitions.size() - 1; i++) {","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"XindiTian"},"content":"            for (int j \u003d i + 1; j \u003c definitions.size(); j++) {","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"XindiTian"},"content":"                if (definitions.get(i).isSameDefinition(definitions.get(j))) {","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"XindiTian"},"content":"                    return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"XindiTian"},"content":"                }","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"XindiTian"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"XindiTian"},"content":"        return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":109}},{"path":"src/main/java/seedu/dictionote/model/dictionary/exceptions/ContentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model.dictionary.exceptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":" * Signals that the operation is unable to find the specified content.","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"public class ContentNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"    public ContentNotFoundException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"        super(\"Unfortunately, we weren\u0027t able to find any matching results.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"XindiTian":10}},{"path":"src/main/java/seedu/dictionote/model/dictionary/exceptions/DuplicateContentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model.dictionary.exceptions;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":" * Signals that the operation will result in duplicate Content (Content are considered duplicates if they have the same","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":" * content).","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"public class DuplicateContentException extends RuntimeException {","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"    public DuplicateContentException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"        super(\"Operation would result in duplicate content\");","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":11}},{"path":"src/main/java/seedu/dictionote/model/dictionary/exceptions/DuplicateDefinitionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model.dictionary.exceptions;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":" * Signals that the operation will result in duplicate Content (Content are considered duplicates if they have the same","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":" * content).","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"public class DuplicateDefinitionException extends RuntimeException {","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"    public DuplicateDefinitionException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"        super(\"Operation would result in duplicate definitions\");","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":11}},{"path":"src/main/java/seedu/dictionote/model/note/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.model.note;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static java.time.LocalDateTime.now;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":" * Represents a Note in the dictionote book.","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"public class Note implements Comparable\u003cNote\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"    private final String note;","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"    // Data fields","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    private LocalDateTime createTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    private LocalDateTime lastEditTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"    private Boolean isDone;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    public Note(String note) {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"        requireAllNonNull(note, tags);","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"        this.createTime \u003d now();","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"        this.lastEditTime \u003d now();","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"     * Constructor with the note and tag","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"    public Note(String note, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"        requireAllNonNull(note, tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"        this.createTime \u003d now();","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"        this.lastEditTime \u003d now();","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"    private Note(String note, Set\u003cTag\u003e tags, LocalDateTime createdTime, Boolean isDone) {","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"        requireAllNonNull(note, tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"godjuansan"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"        this.createTime \u003d createdTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"        this.lastEditTime \u003d now();","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"     * Constructor with the note and tag","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"    public Note(String note, Set\u003cTag\u003e tags, LocalDateTime createdTime,","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"                 LocalDateTime lastEditTime, Boolean isDone) {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"        requireAllNonNull(note, tags);","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"        this.createTime \u003d createdTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"        this.lastEditTime \u003d lastEditTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"     * Method to call the above private constructor for note.","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"godjuansan"},"content":"    public Note createEditedNote(String note, Set\u003cTag\u003e tags, LocalDateTime createdTime,","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"godjuansan"},"content":"                                 Boolean isDone) {","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"godjuansan"},"content":"        return new Note(note, tags, createdTime, isDone);","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":"    public Note createEditedNote(String note, Set\u003cTag\u003e tags, LocalDateTime createdTime,","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"                                 LocalDateTime lastEditTime, Boolean isDone) {","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"        return new Note(note, tags, createdTime, lastEditTime, isDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"godjuansan"},"content":"     * Method to call the above private constructor for note.","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"godjuansan"},"content":"    public Note markAsDoneNote(String note, Set\u003cTag\u003e tags, LocalDateTime createdTime) {","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"godjuansan"},"content":"        return new Note(note, tags, createdTime, true);","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"godjuansan"},"content":"     * Method to call the above private constructor for note.","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"godjuansan"},"content":"    public Note markAsUndoneNote(String note, Set\u003cTag\u003e tags, LocalDateTime createdTime) {","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"godjuansan"},"content":"        return new Note(note, tags, createdTime, false);","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"godjuansan"},"content":"    public String getNote() {","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"godjuansan"},"content":"        return note;","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":107,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"godjuansan"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"godjuansan"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"godjuansan"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"godjuansan"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"jessen11"},"content":"    public LocalDateTime getCreateTime() {","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"jessen11"},"content":"        return createTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"jessen11"},"content":"    public LocalDateTime getLastEditTime() {","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"jessen11"},"content":"        return lastEditTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"    public Boolean isDone() {","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"godjuansan"},"content":"        return isDone;","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"jessen11"},"content":"    public void setLastEditTime(LocalDateTime time) {","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"jessen11"},"content":"        this.lastEditTime \u003d time;","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":132,"author":{"gitId":"godjuansan"},"content":"     * Returns true if both notes have the same note.","lastModifiedDate":"2021-03-03"},{"lineNumber":133,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":134,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"godjuansan"},"content":"    public boolean isSameNote(Note otherNote) {","lastModifiedDate":"2021-03-03"},{"lineNumber":136,"author":{"gitId":"godjuansan"},"content":"        if (otherNote \u003d\u003d this) {","lastModifiedDate":"2021-03-03"},{"lineNumber":137,"author":{"gitId":"godjuansan"},"content":"            return true;","lastModifiedDate":"2021-03-03"},{"lineNumber":138,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":139,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":140,"author":{"gitId":"godjuansan"},"content":"        return otherNote !\u003d null","lastModifiedDate":"2021-03-03"},{"lineNumber":141,"author":{"gitId":"godjuansan"},"content":"                \u0026\u0026 otherNote.getNote().equals(getNote());","lastModifiedDate":"2021-03-03"},{"lineNumber":142,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":143,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":144,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":145,"author":{"gitId":"godjuansan"},"content":"     * Returns true if both notes have the same identity and data fields.","lastModifiedDate":"2021-03-03"},{"lineNumber":146,"author":{"gitId":"godjuansan"},"content":"     * This defines a stronger notion of equality between two notes.","lastModifiedDate":"2021-03-03"},{"lineNumber":147,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":148,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":149,"author":{"gitId":"godjuansan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":150,"author":{"gitId":"godjuansan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-03"},{"lineNumber":151,"author":{"gitId":"godjuansan"},"content":"            return true;","lastModifiedDate":"2021-03-03"},{"lineNumber":152,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":153,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":154,"author":{"gitId":"godjuansan"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":155,"author":{"gitId":"godjuansan"},"content":"            return false;","lastModifiedDate":"2021-03-03"},{"lineNumber":156,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":157,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":158,"author":{"gitId":"godjuansan"},"content":"        Note otherNote \u003d (Note) other;","lastModifiedDate":"2021-03-03"},{"lineNumber":159,"author":{"gitId":"godjuansan"},"content":"        return otherNote.getNote().equals(getNote())","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"godjuansan"},"content":"                \u0026\u0026 otherNote.getTags().equals(getTags())","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"godjuansan"},"content":"                \u0026\u0026 otherNote.isDone().equals(isDone());","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":163,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":164,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":165,"author":{"gitId":"godjuansan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":166,"author":{"gitId":"godjuansan"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-03"},{"lineNumber":167,"author":{"gitId":"godjuansan"},"content":"        return Objects.hash(note, tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":169,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":170,"author":{"gitId":"jessen11"},"content":"    //Sorting by alphabet","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"jessen11"},"content":"    public int compareTo(Note otherNote) {","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"jessen11"},"content":"        return this.getNote().compareTo(otherNote.getNote());","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"godjuansan"},"content":"    public String createFileName() {","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"godjuansan"},"content":"        return this.getNote() + \".txt\";","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":180,"author":{"gitId":"godjuansan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-03"},{"lineNumber":181,"author":{"gitId":"godjuansan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-03"},{"lineNumber":182,"author":{"gitId":"godjuansan"},"content":"        builder.append(getNote() + \"\\n\");","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"godjuansan"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"godjuansan"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"godjuansan"},"content":"            builder.append(\"Tags: \");","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"godjuansan"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"godjuansan"},"content":"        builder.append(\"\\n\");","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"godjuansan"},"content":"        builder.append(\"Time Created: \");","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"godjuansan"},"content":"        builder.append(this.createTime.toString() + \"\\n\");","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"godjuansan"},"content":"        builder.append(\"Last Edited: \");","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"godjuansan"},"content":"        builder.append(this.lastEditTime.toString() + \"\\n\");","lastModifiedDate":"2021-03-28"},{"lineNumber":194,"author":{"gitId":"godjuansan"},"content":"        builder.append(\"Done Status: \");","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"godjuansan"},"content":"        builder.append(this.isDone.toString() + \"\\n\");","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"godjuansan"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-03"},{"lineNumber":198,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":199,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":1,"jessen11":66,"godjuansan":132}},{"path":"src/main/java/seedu/dictionote/model/note/NoteContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.model.note;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.util.StringUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"public class NoteContainsKeywordsPredicate implements Predicate\u003cNote\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"    public NoteContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"    public boolean test(Note note) {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(note.getNote(), keyword));","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"                || (other instanceof NoteContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"                \u0026\u0026 keywords.equals(((NoteContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"jessen11":27}},{"path":"src/main/java/seedu/dictionote/model/note/TagNoteContainKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.model.note;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":" * Tests that a {@code Note}\u0027s {@code Tag}s match all of the keywords given.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"public class TagNoteContainKeywordsPredicate implements Predicate\u003cNote\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"    public TagNoteContainKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"    public boolean test(Note note) {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"                .allMatch(keyword -\u003e note.getTags()","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"                        .toString()","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"                        .toLowerCase()","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"                        .contains(keyword.toLowerCase()));","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"                || (other instanceof TagNoteContainKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"                \u0026\u0026 keywords.equals(((TagNoteContainKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"jessen11":32}},{"path":"src/main/java/seedu/dictionote/model/note/UniqueNoteList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.model.note;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.contact.exceptions.NoteNotFoundException;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":" * A list of notes that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":" * A note is considered unique by comparing using {@code Note#isSameNote(Note)}. As such, adding and updating of","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":" * notes uses Note#isSameNote(Note) for equality so as to ensure that the note being added or updated is","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":" * unique in terms of identity in the UniqueNoteList. However, the removal of a note uses Note#equals(Object) so","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":" *","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":" *","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":" * @see Note#isSameNote(Note)","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"public class UniqueNoteList implements Iterable\u003cNote\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"    private final ObservableList\u003cNote\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"    private final ObservableList\u003cNote\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"     * Returns true if the list contains an equivalent note as the given argument.","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"    public boolean contains(Note toCheck) {","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"        return internalList.stream().anyMatch(toCheck::isSameNote);","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"     * Adds a note to the list.","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"     * The note must not already exist in the list.","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"    public void add(Note toAdd) {","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"     * Deletes a note from the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"    public void delete(Note toRemove) {","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"        internalList.remove(toRemove);","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"godjuansan"},"content":"     * Replaces the contents of this list with {@code notes}.","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"godjuansan"},"content":"     * {@code notes} must not contain duplicate persons.","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"godjuansan"},"content":"    public void setNotes(List\u003cNote\u003e notes) {","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"        requireAllNonNull(notes);","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"        if (!notesAreUnique(notes)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"godjuansan"},"content":"        internalList.setAll(notes);","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"    public void setNote(Note target, Note editedNote) {","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"        requireAllNonNull(target, editedNote);","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"            throw new NoteNotFoundException();","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"        internalList.set(index, editedNote);","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"godjuansan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"godjuansan"},"content":"    public ObservableList\u003cNote\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"godjuansan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"godjuansan"},"content":"    public Iterator\u003cNote\u003e iterator() {","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"godjuansan"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"godjuansan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":99,"author":{"gitId":"godjuansan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-03"},{"lineNumber":100,"author":{"gitId":"godjuansan"},"content":"                || (other instanceof UniqueNoteList // instanceof handles nulls","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"godjuansan"},"content":"                \u0026\u0026 internalList.equals(((UniqueNoteList) other).internalList));","lastModifiedDate":"2021-03-03"},{"lineNumber":102,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"godjuansan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"godjuansan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-03"},{"lineNumber":107,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":109,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":110,"author":{"gitId":"godjuansan"},"content":"     * Returns true if {@code notes} contains only unique notes.","lastModifiedDate":"2021-03-03"},{"lineNumber":111,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"godjuansan"},"content":"    private boolean notesAreUnique(List\u003cNote\u003e notes) {","lastModifiedDate":"2021-03-03"},{"lineNumber":113,"author":{"gitId":"godjuansan"},"content":"        for (int i \u003d 0; i \u003c notes.size() - 1; i++) {","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"godjuansan"},"content":"            for (int j \u003d i + 1; j \u003c notes.size(); j++) {","lastModifiedDate":"2021-03-03"},{"lineNumber":115,"author":{"gitId":"godjuansan"},"content":"                if (notes.get(i).isSameNote(notes.get(j))) {","lastModifiedDate":"2021-03-03"},{"lineNumber":116,"author":{"gitId":"godjuansan"},"content":"                    return false;","lastModifiedDate":"2021-03-03"},{"lineNumber":117,"author":{"gitId":"godjuansan"},"content":"                }","lastModifiedDate":"2021-03-03"},{"lineNumber":118,"author":{"gitId":"godjuansan"},"content":"            }","lastModifiedDate":"2021-03-03"},{"lineNumber":119,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":120,"author":{"gitId":"godjuansan"},"content":"        return true;","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":122,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"jessen11"},"content":"    public void sort() {","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"jessen11"},"content":"        FXCollections.sort(internalList, Note::compareTo);","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"jessen11"},"content":"    /** Sorting note by time last edited","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"jessen11"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"jessen11"},"content":"    public void sortByTime() {","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"jessen11"},"content":"        Comparator\u003cNote\u003e compare \u003d (x, y) -\u003e x.getLastEditTime().compareTo(y.getLastEditTime());","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"jessen11"},"content":"        FXCollections.sort(internalList, compare.reversed());","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"jessen11":34,"godjuansan":100}},{"path":"src/main/java/seedu/dictionote/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model.tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":" * Represents a Tag in the dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"XindiTian":3,"-":51}},{"path":"src/main/java/seedu/dictionote/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model.util;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.DefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Dictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.NoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyNoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Address;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Email;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":" * Contains utility methods for populating the contacts list with sample data.","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"    public static Contact[] getSampleContacts() {","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"        return new Contact[] {","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"            new Contact(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"            new Contact(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"            new Contact(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"            new Contact(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"            new Contact(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"            new Contact(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"    public static ReadOnlyContactsList getSampleContactsList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"        ContactsList sampleAb \u003d new ContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"        for (Contact sampleContact : getSampleContacts()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"            sampleAb.addContact(sampleContact);","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"    public static Note[] getSampleNotes() {","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"godjuansan"},"content":"        return new Note[] {","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"godjuansan"},"content":"            new Note(\"CS2103T exam is coming.\", getTagSet(\"Exam\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"godjuansan"},"content":"            new Note(\"My friend is an idiot.\", getTagSet(\"Friends\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"godjuansan"},"content":"            new Note(\"My Teacher Best Teacher\", getTagSet(\"Teacher\"))","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"godjuansan"},"content":"        };","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"godjuansan"},"content":"    public static ReadOnlyNoteBook getSampleNoteBook() {","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"godjuansan"},"content":"        NoteBook sampleNb \u003d new NoteBook();","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"godjuansan"},"content":"        for (Note sampleNote : getSampleNotes()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"godjuansan"},"content":"            sampleNb.addNote(sampleNote);","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"godjuansan"},"content":"        return sampleNb;","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"XindiTian"},"content":"    public static Content[] getSampleContent() {","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"XindiTian"},"content":"        return new Content[] {","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"XindiTian"},"content":"            new Content(\"Week 1\", \"OOP programming.\",","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"XindiTian"},"content":"                    \"Object-Oriented Programming (OOP) is a programming paradigm.\"),","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"XindiTian"},"content":"            new Content(\"Week #\", \"Some Topic\", \"some content\")","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"XindiTian"},"content":"        };","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"XindiTian"},"content":"    public static ReadOnlyDictionary getSampleDictionary() {","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"XindiTian"},"content":"        Dictionary sampleCt \u003d new Dictionary();","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"XindiTian"},"content":"        for (Content sampleContent : getSampleContent()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"XindiTian"},"content":"            sampleCt.addContent(sampleContent);","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"XindiTian"},"content":"        return sampleCt;","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"XindiTian"},"content":"    public static Definition[] getSampleDefinition() {","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"XindiTian"},"content":"        return new Definition[] {","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"XindiTian"},"content":"            new Definition(\"Object-Oriented Programming (OOP)\", \"a programming paradigm.\"),","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"XindiTian"},"content":"            new Definition(\"term\", \"Some Definition\")","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"XindiTian"},"content":"        };","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"XindiTian"},"content":"    public static ReadOnlyDefinitionBook getSampleDefinitionBook() {","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"XindiTian"},"content":"        DefinitionBook sampleDb \u003d new DefinitionBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"XindiTian"},"content":"        for (Definition sampleDefinition : getSampleDefinition()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"XindiTian"},"content":"            sampleDb.addDefinition(sampleDefinition);","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"XindiTian"},"content":"        return sampleDb;","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"godjuansan":16,"riyadh-h":20,"XindiTian":41,"-":38}},{"path":"src/main/java/seedu/dictionote/storage/ContactsListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":" * Represents a storage for {@link ContactsList}.","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"public interface ContactsListStorage {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"    Path getContactsListFilePath();","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"     * Returns AddressBook data as a {@link ReadOnlyContactsList}.","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    Optional\u003cReadOnlyContactsList\u003e readContactsList() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"     * @see #getContactsListFilePath()","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"    Optional\u003cReadOnlyContactsList\u003e readContactsList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"     * Saves the given {@link ReadOnlyContactsList} to the storage.","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"    void saveContactsList(ReadOnlyContactsList addressBook) throws IOException;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"     * @see #saveContactsList(ReadOnlyContactsList)","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"    void saveContactsList(ReadOnlyContactsList addressBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"riyadh-h":46}},{"path":"src/main/java/seedu/dictionote/storage/DefinitionBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":" * Represents a storage for {@link seedu.dictionote.model.DefinitionBook}.","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"public interface DefinitionBookStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    Path getDefinitionBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"     * Returns Definition Book data as a {@link ReadOnlyDefinitionBook}.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    Optional\u003cReadOnlyDefinitionBook\u003e readDefinitionBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"     * @see #getDefinitionBookFilePath()","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"    Optional\u003cReadOnlyDefinitionBook\u003e readDefinitionBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"     * Saves the given {@link ReadOnlyDefinitionBook} to the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"     * @param definition cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"    void saveDefinitionBook(ReadOnlyDefinitionBook definition) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"     * @see #saveDefinitionBook(ReadOnlyDefinitionBook)","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"    void saveDefinitionBook(ReadOnlyDefinitionBook definitionBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":45}},{"path":"src/main/java/seedu/dictionote/storage/DictionaryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Dictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" * Represents a storage for {@link Dictionary}.","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"public interface DictionaryStorage {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"    Path getDictionaryFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"     * Returns Dictionary data as a {@link ReadOnlyDictionary}.","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"    Optional\u003cReadOnlyDictionary\u003e readDictionary() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"     * @see #getDictionaryFilePath()","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"    Optional\u003cReadOnlyDictionary\u003e readDictionary(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"     * Saves the given {@link ReadOnlyDictionary} to the storage.","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"     * @param dictionary cannot be null.","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    void saveDictionary(ReadOnlyDictionary dictionary) throws IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"     * @see #saveDictionary(ReadOnlyDictionary)","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"    void saveDictionary(ReadOnlyDictionary dictionary, Path filePath) throws IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"XindiTian":46}},{"path":"src/main/java/seedu/dictionote/storage/JsonAdaptedContact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Address;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Email;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.FrequencyCounter;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":" * Jackson-friendly version of {@link Contact}.","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"class JsonAdaptedContact {","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Contact\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2021-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"    private final int frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"     * Constructs a {@code JsonAdaptedContact} with the given person details.","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"    public JsonAdaptedContact(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"                              @JsonProperty(\"frequency\") int frequency) {","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"     * Converts a given {@code Contact} into this class for Jackson use.","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"    public JsonAdaptedContact(Contact source) {","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2021-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"riyadh-h"},"content":"        frequency \u003d source.getFrequencyCounter().value;","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"riyadh-h"},"content":"     * Converts this Jackson-friendly adapted contact object into the model\u0027s {@code Contact} object.","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"riyadh-h"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted contact.","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"riyadh-h"},"content":"    public Contact toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-03-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2021-03-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-03-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-03-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"riyadh-h"},"content":"        if (!FrequencyCounter.isValidFrequencyCounter(frequency)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"riyadh-h"},"content":"            throw new IllegalValueException(FrequencyCounter.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"        final FrequencyCounter modelFrequency \u003d new FrequencyCounter(frequency);","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"riyadh-h"},"content":"        return new Contact(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelFrequency);","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jessen11":2,"riyadh-h":29,"XindiTian":3,"-":88}},{"path":"src/main/java/seedu/dictionote/storage/JsonAdaptedContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":" * Jackson-friendly version of {@link Content}.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"class JsonAdaptedContent {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Content\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    private final String week;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    private final String header;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    private final String maincontent;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"     * Constructs a {@code JsonAdaptedContent} with the given person d.","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    public JsonAdaptedContent(@JsonProperty(\"week\") String week,","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"                              @JsonProperty(\"header\") String header,","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"                              @JsonProperty(\"maincontent\") String maincontent) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"        this.week \u003d week;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"        this.header \u003d header;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"        this.maincontent \u003d maincontent;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"     * Converts a given {@code Content} into this class for Jackson use.","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"    public JsonAdaptedContent(Content source) {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"        week \u003d source.getWeek();","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"        header \u003d source.getHeader();","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"        maincontent \u003d source.getMainContent();","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"     * Converts this Jackson-friendly adapted object into the model\u0027s {@code Content} object.","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted content.","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"    public Content toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"        if (week \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Content.class.getSimpleName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"        if (header \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Content.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"        if (maincontent \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Content.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"        return new Content(week, header, maincontent);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"XindiTian":59}},{"path":"src/main/java/seedu/dictionote/storage/JsonAdaptedDefinition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":" * Jackson-friendly version of {@link Definition}.","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"class JsonAdaptedDefinition {","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Definition\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    private final String term;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    private final String defs;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"     * Constructs a {@code JsonAdaptedDefinition} with the given term.","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"    public JsonAdaptedDefinition(@JsonProperty(\"term\") String term,","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"                              @JsonProperty(\"defs\") String defs) {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"        this.term \u003d term;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"        this.defs \u003d defs;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"     * Converts a given {@code Definition} into this class for Jackson use.","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"    public JsonAdaptedDefinition(Definition source) {","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"        term \u003d source.getTerm();","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"        defs \u003d source.getDefs();","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"     * Converts this Jackson-friendly adapted object into the model\u0027s {@code Definition} object.","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted definition.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"    public Definition toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"        if (term \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"                    Definition.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"        if (defs \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"                    Definition.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"        return new Definition(term, defs);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":54}},{"path":"src/main/java/seedu/dictionote/storage/JsonAdaptedNote.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.contact.Name;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":" * Jackson-friendly version of {@link Note}.","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"class JsonAdaptedNote {","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Note\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"    private final String note;","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"    private final LocalDateTime createTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    private final LocalDateTime editTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"    private final Boolean isDone;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"     * Constructs a {@code JsonAdaptedNote} with the given person details.","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"    public JsonAdaptedNote(@JsonProperty(\"note\") String note,","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"                           @JsonProperty(\"createTime\") LocalDateTime createTime,","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"                           @JsonProperty(\"editTime\") LocalDateTime editTime,","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"                           @JsonProperty(\"isDone\") Boolean isDone) {","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"        this.createTime \u003d createTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"        this.editTime \u003d editTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"     * Converts a given {@code Note} into this class for Jackson use.","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"    public JsonAdaptedNote(Note source) {","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"        this.note \u003d source.getNote();","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"        this.tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"        this.createTime \u003d source.getCreateTime();","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"        this.editTime \u003d source.getLastEditTime();","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"        this.isDone \u003d source.isDone();","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"     * Converts this Jackson-friendly adapted note object into the model\u0027s {@code Note} object.","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted note.","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"    public Note toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"godjuansan"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"godjuansan"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"godjuansan"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"godjuansan"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"godjuansan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"godjuansan"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"        return new Note(note, modelTags, createTime, editTime, isDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"jessen11":19,"godjuansan":63}},{"path":"src/main/java/seedu/dictionote/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XindiTian":3,"-":45}},{"path":"src/main/java/seedu/dictionote/storage/JsonContactsListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.FileUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.JsonUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"public class JsonContactsListStorage implements ContactsListStorage {","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonContactsListStorage.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"    public JsonContactsListStorage(Path filePath) {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"    public Path getContactsListFilePath() {","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"    public Optional\u003cReadOnlyContactsList\u003e readContactsList() throws DataConversionException {","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"        return readContactsList(filePath);","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"     * Similar to {@link #readContactsList()}.","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"    public Optional\u003cReadOnlyContactsList\u003e readContactsList(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"        Optional\u003cJsonSerializableContactsList\u003e jsonContactsList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"                filePath, JsonSerializableContactsList.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"        if (!jsonContactsList.isPresent()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"            return Optional.of(jsonContactsList.get().toModelType());","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"riyadh-h"},"content":"    public void saveContactsList(ReadOnlyContactsList addressBook) throws IOException {","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"        saveContactsList(addressBook, filePath);","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"     * Similar to {@link #saveContactsList(ReadOnlyContactsList)}.","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"    public void saveContactsList(ReadOnlyContactsList addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"riyadh-h"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableContactsList(addressBook), filePath);","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"riyadh-h":18,"XindiTian":6,"-":56}},{"path":"src/main/java/seedu/dictionote/storage/JsonDefinitionBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.FileUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.JsonUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":" * A class to access DefinitionBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"public class JsonDefinitionBookStorage implements DefinitionBookStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDefinitionBookStorage.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    public JsonDefinitionBookStorage(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"    public Path getDefinitionBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"        return filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"    public Optional\u003cReadOnlyDefinitionBook\u003e readDefinitionBook() throws DataConversionException {","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"        return readDefinitionBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"     * Similar to {@link #readDefinitionBook()}.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"    public Optional\u003cReadOnlyDefinitionBook\u003e readDefinitionBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"        Optional\u003cJsonSerializableDefinitionBook\u003e jsonDefinitionBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"                filePath, JsonSerializableDefinitionBook.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"        if (!jsonDefinitionBook.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"            return Optional.of(jsonDefinitionBook.get().toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"    public void saveDefinitionBook(ReadOnlyDefinitionBook definitionBook) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"        saveDefinitionBook(definitionBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"XindiTian"},"content":"     * Similar to {@link #saveDefinitionBook(ReadOnlyDefinitionBook)}.","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"XindiTian"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":"    public void saveDefinitionBook(ReadOnlyDefinitionBook definitionBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(definitionBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"XindiTian"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"XindiTian"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDefinitionBook(definitionBook), filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":80}},{"path":"src/main/java/seedu/dictionote/storage/JsonDictionaryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.FileUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.JsonUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":" * A class to access NoteBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"public class JsonDictionaryStorage implements DictionaryStorage {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDictionaryStorage.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    public JsonDictionaryStorage(Path filePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"    public Path getDictionaryFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"        return filePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"    public Optional\u003cReadOnlyDictionary\u003e readDictionary() throws DataConversionException {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"        return readDictionary(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"     * Similar to {@link #readDictionary()}.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"    public Optional\u003cReadOnlyDictionary\u003e readDictionary(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"        Optional\u003cJsonSerializableDictionary\u003e jsonDictionary \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"                filePath, JsonSerializableDictionary.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"        if (!jsonDictionary.isPresent()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"            return Optional.of(jsonDictionary.get().toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"    public void saveDictionary(ReadOnlyDictionary dictionary) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"        saveDictionary(dictionary, filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"XindiTian"},"content":"     * Similar to {@link #saveDictionary(ReadOnlyDictionary)}.","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"XindiTian"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":"    public void saveDictionary(ReadOnlyDictionary dictionary, Path filePath) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(dictionary);","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"XindiTian"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"XindiTian"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDictionary(dictionary), filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"XindiTian":80}},{"path":"src/main/java/seedu/dictionote/storage/JsonNoteBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.util.FileUtil;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.util.JsonUtil;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.ReadOnlyNoteBook;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":" * A class to access NoteBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"public class JsonNoteBookStorage implements NoteBookStorage {","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonNoteBookStorage.class);","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    public JsonNoteBookStorage(Path filePath) {","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"    public Path getNoteBookFilePath() {","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"        return filePath;","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"    public Optional\u003cReadOnlyNoteBook\u003e readNoteBook() throws DataConversionException {","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"        return readNoteBook(filePath);","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"     * Similar to {@link #readNoteBook()}.","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"    public Optional\u003cReadOnlyNoteBook\u003e readNoteBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"        Optional\u003cJsonSerializableNoteBook\u003e jsonNoteBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"                filePath, JsonSerializableNoteBook.class);","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"        if (!jsonNoteBook.isPresent()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"        try {","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"godjuansan"},"content":"            return Optional.of(jsonNoteBook.get().toModelType());","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"godjuansan"},"content":"    public void saveNoteBook(ReadOnlyNoteBook noteBook) throws IOException {","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"godjuansan"},"content":"        saveNoteBook(noteBook, filePath);","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"     * Similar to {@link #saveNoteBook(ReadOnlyNoteBook)}.","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"godjuansan"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"godjuansan"},"content":"    public void saveNoteBook(ReadOnlyNoteBook noteBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(noteBook);","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"godjuansan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"godjuansan"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"godjuansan"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableNoteBook(noteBook), filePath);","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"jessen11":1,"godjuansan":79}},{"path":"src/main/java/seedu/dictionote/storage/JsonSerializableContactsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":" * An Immutable ContactsList that is serializable to JSON format.","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"@JsonRootName(value \u003d \"contactslist\")","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"class JsonSerializableContactsList {","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"Contacts list contains duplicate contacts(s).\";","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"    private final List\u003cJsonAdaptedContact\u003e contacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"     * Constructs a {@code JsonSerializableContactsList} with the given persons.","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"    public JsonSerializableContactsList(@JsonProperty(\"contacts\") List\u003cJsonAdaptedContact\u003e contacts) {","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"        this.contacts.addAll(contacts);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"     * Converts a given {@code ReadOnlyContactsList} into this class for Jackson use.","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableContactsList}.","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"    public JsonSerializableContactsList(ReadOnlyContactsList source) {","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"        contacts.addAll(source.getContactList().stream().map(JsonAdaptedContact::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"     * Converts this contacts list into the model\u0027s {@code ContactsList} object.","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"    public ContactsList toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"        ContactsList contactsList \u003d new ContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"        for (JsonAdaptedContact jsonAdaptedContact : contacts) {","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"            Contact contact \u003d jsonAdaptedContact.toModelType();","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"            if (contactsList.hasContact(contact)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"            contactsList.addContact(contact);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"        return contactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"riyadh-h":24,"XindiTian":2,"-":34}},{"path":"src/main/java/seedu/dictionote/storage/JsonSerializableDefinitionBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.DefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":" * An Immutable DefinitionBook that is serializable to JSON format.","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"@JsonRootName(value \u003d \"definitionbook\")","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"class JsonSerializableDefinitionBook {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_DUPLICATE_DEFINITIONS \u003d \"definition list contains duplicate definition(s).\";","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    private final List\u003cJsonAdaptedDefinition\u003e definitions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"     * Constructs a {@code JsonSerializableDefinitionBook} with the given definition.","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"    public JsonSerializableDefinitionBook(@JsonProperty(\"definitions\") List\u003cJsonAdaptedDefinition\u003e definitions) {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"        this.definitions.addAll(definitions);","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"     * Converts a given {@code ReadOnlyDefinitionBook} into this class for Jackson use.","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableDefinitionsBook}.","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    public JsonSerializableDefinitionBook(ReadOnlyDefinitionBook source) {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"        definitions.addAll(source.getDefinitionList().stream()","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"                .map(JsonAdaptedDefinition::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"     * Converts this dictionote book into the model\u0027s {@code DefinitionBook} object.","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"    public DefinitionBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"        DefinitionBook definitionBook \u003d new DefinitionBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"        for (JsonAdaptedDefinition jsonAdaptedDefinition : definitions) {","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"            Definition definition \u003d jsonAdaptedDefinition.toModelType();","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"            if (definitionBook.hasDefinition(definition)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_DEFINITIONS);","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"            definitionBook.addDefinition(definition);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"        return definitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":61}},{"path":"src/main/java/seedu/dictionote/storage/JsonSerializableDictionary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Dictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":" * An Immutable Dictionary that is serializable to JSON format.","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"@JsonRootName(value \u003d \"dictionary\")","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"class JsonSerializableDictionary {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    public static final String MESSAGE_DUPLICATE_CONTENT \u003d \"Content list contains duplicate content.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    private final List\u003cJsonAdaptedContent\u003e contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"     * Constructs a {@code JsonSerializableDictionary} with the given content.","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"    public JsonSerializableDictionary(@JsonProperty(\"content\") List\u003cJsonAdaptedContent\u003e contents) {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"        this.contents.addAll(contents);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"     * Converts a given {@code ReadOnlyDictionary} into this class for Jackson use.","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableContent}.","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    public JsonSerializableDictionary(ReadOnlyDictionary source) {","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"        contents.addAll(source.getContentList().stream().map(JsonAdaptedContent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"     * Converts this dictionote book into the model\u0027s {@code Dictionary} object.","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"    public Dictionary toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"        Dictionary dictionary \u003d new Dictionary();","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"        for (JsonAdaptedContent jsonAdaptedContent : contents) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"            Content content \u003d jsonAdaptedContent.toModelType();","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"            if (dictionary.hasContent(content)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CONTENT);","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"            dictionary.addContent(content);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"        return dictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"XindiTian":60}},{"path":"src/main/java/seedu/dictionote/storage/JsonSerializableNoteBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.NoteBook;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.ReadOnlyNoteBook;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":" * An Immutable NoteBook that is serializable to JSON format.","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"@JsonRootName(value \u003d \"notebook\")","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"class JsonSerializableNoteBook {","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"    public static final String MESSAGE_DUPLICATE_NOTE \u003d \"Notes list contains duplicate note(s).\";","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"    private final List\u003cJsonAdaptedNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"     * Constructs a {@code JsonSerializableNoteBook} with the given notes.","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"    public JsonSerializableNoteBook(@JsonProperty(\"notes\") List\u003cJsonAdaptedNote\u003e notes) {","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"        this.notes.addAll(notes);","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"     * Converts a given {@code ReadOnlyNoteBook} into this class for Jackson use.","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableNoteBook}.","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"    public JsonSerializableNoteBook(ReadOnlyNoteBook source) {","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"        notes.addAll(source.getNoteList().stream().map(JsonAdaptedNote::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"     * Converts this dictionote book into the model\u0027s {@code NoteBook} object.","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"    public NoteBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"        NoteBook noteBook \u003d new NoteBook();","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"        for (JsonAdaptedNote jsonAdaptedNote : notes) {","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"            Note note \u003d jsonAdaptedNote.toModelType();","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"            if (noteBook.hasNote(note)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_NOTE);","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"            }","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"godjuansan"},"content":"            noteBook.addNote(note);","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"        return noteBook;","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"godjuansan":60}},{"path":"src/main/java/seedu/dictionote/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.JsonUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"XindiTian":5,"-":42}},{"path":"src/main/java/seedu/dictionote/storage/NoteBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.ReadOnlyNoteBook;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":" * Represents a storage for {@link seedu.dictionote.model.NoteBook}.","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"public interface NoteBookStorage {","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"    Path getNoteBookFilePath();","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"     * Returns NoteBook data as a {@link ReadOnlyNoteBook}.","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    Optional\u003cReadOnlyNoteBook\u003e readNoteBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"     * @see #getNoteBookFilePath()","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"    Optional\u003cReadOnlyNoteBook\u003e readNoteBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"     * Saves the given {@link ReadOnlyNoteBook} to the storage.","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"     * @param noteBook cannot be null.","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"    void saveNoteBook(ReadOnlyNoteBook noteBook) throws IOException;","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"     * @see #saveNoteBook(ReadOnlyNoteBook)","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"    void saveNoteBook(ReadOnlyNoteBook noteBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"godjuansan":45}},{"path":"src/main/java/seedu/dictionote/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyNoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"public interface Storage extends ContactsListStorage, UserPrefsStorage, NoteBookStorage,","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"        DictionaryStorage, DefinitionBookStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"    Path getContactsListFilePath();","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"    Optional\u003cReadOnlyContactsList\u003e readContactsList() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"    void saveContactsList(ReadOnlyContactsList addressBook) throws IOException;","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"    Path getNoteBookFilePath();","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"    Optional\u003cReadOnlyNoteBook\u003e readNoteBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"    void saveNoteBook(ReadOnlyNoteBook noteBook) throws IOException;","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"    Path getDictionaryFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"    Optional\u003cReadOnlyDictionary\u003e readDictionary() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"    void saveDictionary(ReadOnlyDictionary dictionary) throws IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"    Path getDefinitionBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"    Optional\u003cReadOnlyDefinitionBook\u003e readDefinitionBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"    void saveDefinitionBook(ReadOnlyDefinitionBook definitionBook) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"godjuansan":9,"riyadh-h":5,"XindiTian":26,"-":23}},{"path":"src/main/java/seedu/dictionote/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyNoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"    private ContactsListStorage contactsListStorage;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    private NoteBookStorage noteBookStorage;","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"    private DictionaryStorage dictionaryStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    private DefinitionBookStorage definitionBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"    public StorageManager(ContactsListStorage contactsListStorage,","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"                          UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"                          NoteBookStorage noteBookStorage,","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"                          DictionaryStorage dictionaryStorage,","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"                          DefinitionBookStorage definitionBookStorage) {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"        this.contactsListStorage \u003d contactsListStorage;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"        this.noteBookStorage \u003d noteBookStorage;","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"        this.dictionaryStorage \u003d dictionaryStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"        this.definitionBookStorage \u003d definitionBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"godjuansan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d NoteBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"    public Path getNoteBookFilePath() {","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"        return noteBookStorage.getNoteBookFilePath();","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"godjuansan"},"content":"    public Optional\u003cReadOnlyNoteBook\u003e readNoteBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"godjuansan"},"content":"        return readNoteBook(noteBookStorage.getNoteBookFilePath());","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"godjuansan"},"content":"    public Optional\u003cReadOnlyNoteBook\u003e readNoteBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"godjuansan"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"godjuansan"},"content":"        return noteBookStorage.readNoteBook(filePath);","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"godjuansan"},"content":"    public void saveNoteBook(ReadOnlyNoteBook noteBook) throws IOException {","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"godjuansan"},"content":"        saveNoteBook(noteBook, noteBookStorage.getNoteBookFilePath());","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"godjuansan"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"godjuansan"},"content":"    public void saveNoteBook(ReadOnlyNoteBook noteBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"godjuansan"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"godjuansan"},"content":"        noteBookStorage.saveNoteBook(noteBook, filePath);","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"riyadh-h"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ContactsList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"riyadh-h"},"content":"    public Path getContactsListFilePath() {","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"riyadh-h"},"content":"        return contactsListStorage.getContactsListFilePath();","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"riyadh-h"},"content":"    public Optional\u003cReadOnlyContactsList\u003e readContactsList() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"riyadh-h"},"content":"        return readContactsList(contactsListStorage.getContactsListFilePath());","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":105,"author":{"gitId":"riyadh-h"},"content":"    public Optional\u003cReadOnlyContactsList\u003e readContactsList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":107,"author":{"gitId":"riyadh-h"},"content":"        return contactsListStorage.readContactsList(filePath);","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"riyadh-h"},"content":"    public void saveContactsList(ReadOnlyContactsList addressBook) throws IOException {","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"riyadh-h"},"content":"        saveContactsList(addressBook, contactsListStorage.getContactsListFilePath());","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":116,"author":{"gitId":"riyadh-h"},"content":"    public void saveContactsList(ReadOnlyContactsList addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":118,"author":{"gitId":"riyadh-h"},"content":"        contactsListStorage.saveContactsList(addressBook, filePath);","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"XindiTian"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Dictionary methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"XindiTian"},"content":"    public Path getDictionaryFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"XindiTian"},"content":"        return dictionaryStorage.getDictionaryFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"XindiTian"},"content":"    public Optional\u003cReadOnlyDictionary\u003e readDictionary() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"XindiTian"},"content":"        return readDictionary(dictionaryStorage.getDictionaryFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"XindiTian"},"content":"    public Optional\u003cReadOnlyDictionary\u003e readDictionary(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"XindiTian"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"XindiTian"},"content":"        return dictionaryStorage.readDictionary(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"XindiTian"},"content":"    public void saveDictionary(ReadOnlyDictionary dictionary) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"XindiTian"},"content":"        saveDictionary(dictionary, dictionaryStorage.getDictionaryFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"XindiTian"},"content":"    public void saveDictionary(ReadOnlyDictionary dictionary, Path filePath) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"XindiTian"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"XindiTian"},"content":"        dictionaryStorage.saveDictionary(dictionary, filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"XindiTian"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DefinitionBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"XindiTian"},"content":"    public Path getDefinitionBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"XindiTian"},"content":"        return definitionBookStorage.getDefinitionBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"XindiTian"},"content":"    public Optional\u003cReadOnlyDefinitionBook\u003e readDefinitionBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"XindiTian"},"content":"        return readDefinitionBook(definitionBookStorage.getDefinitionBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"XindiTian"},"content":"    public Optional\u003cReadOnlyDefinitionBook\u003e readDefinitionBook(Path filePath)","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"XindiTian"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"XindiTian"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"XindiTian"},"content":"        return definitionBookStorage.readDefinitionBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"XindiTian"},"content":"    public void saveDefinitionBook(ReadOnlyDefinitionBook definitionBook) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"XindiTian"},"content":"        saveDefinitionBook(definitionBook, definitionBookStorage.getDefinitionBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":175,"author":{"gitId":"XindiTian"},"content":"    public void saveDefinitionBook(ReadOnlyDefinitionBook definitionBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":176,"author":{"gitId":"XindiTian"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":177,"author":{"gitId":"XindiTian"},"content":"        definitionBookStorage.saveDefinitionBook(definitionBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":178,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"godjuansan":31,"riyadh-h":15,"XindiTian":75,"-":58}},{"path":"src/main/java/seedu/dictionote/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" * Represents a storage for {@link seedu.dictionote.model.UserPrefs}.","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"     * Saves the given {@link seedu.dictionote.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"XindiTian":6,"-":30}},{"path":"src/main/java/seedu/dictionote/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.CommandResult;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"XindiTian"},"content":"         * @see seedu.dictionote.logic.Logic#execute(String)","lastModifiedDate":"2021-02-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"     * Request focus on input command box","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"    public void requestFocus() {","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"        commandTextField.requestFocus();;","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"TeoHoeKeat":7,"XindiTian":5,"-":80}},{"path":"src/main/java/seedu/dictionote/ui/ContactCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"public class ContactCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String FXML \u003d \"ContactListCard.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    public final Contact contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    public ContactCard(Contact contact, int displayedIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"        name.setText(contact.getName().fullName);","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"        phone.setText(contact.getPhone().value);","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"        address.setText(contact.getAddress().value);","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"        email.setText(contact.getEmail().value);","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"        contact.getTags().stream()","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!(other instanceof ContactCard)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"        ContactCard card \u003d (ContactCard) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"riyadh-h"},"content":"                \u0026\u0026 contact.equals(card.contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"TeoHoeKeat":5,"riyadh-h":9,"XindiTian":1,"-":62}},{"path":"src/main/java/seedu/dictionote/ui/ContactListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"public class ContactListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String FXML \u003d \"ContactListPanel.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ContactListPanel.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    private ListView\u003cContact\u003e contactListView;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates a {@code ContactListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    public ContactListPanel(ObservableList\u003cContact\u003e contactList) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        contactListView.setItems(contactList);","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        contactListView.setCellFactory(listView -\u003e new ContactListViewCell());","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Contact} using a {@code ContactCard}.","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    class ContactListViewCell extends ListCell\u003cContact\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"        protected void updateItem(Contact contact, boolean empty) {","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"            super.updateItem(contact, empty);","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"            if (empty || contact \u003d\u003d null) {","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"                setGraphic(new ContactCard(contact, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"TeoHoeKeat":11,"riyadh-h":4,"XindiTian":2,"-":32}},{"path":"src/main/java/seedu/dictionote/ui/DictionaryContentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.DisplayableContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"public class DictionaryContentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String FXML \u003d \"DictionaryContentCard.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    private DisplayableContent displayableContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label header;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label content;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label week;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates a {@code DictionaryListContentCard} with the given {@code DisplayableContent} and index to display.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    public DictionaryContentCard(DisplayableContent displayableContent) {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        this.displayableContent \u003d displayableContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        header.setText(displayableContent.getDictionaryHeader());","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"        content.setText(displayableContent.getDictionaryContent());","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        if (displayableContent.getDictionaryWeek() \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"            week.setVisible(false);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"            week.setText(displayableContent.getDictionaryWeek());","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"            return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!(other instanceof DictionaryListContentCard)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"        // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        DictionaryListContentCard contents \u003d (DictionaryListContentCard) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        return content.equals(contents.content);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":63}},{"path":"src/main/java/seedu/dictionote/ui/DictionaryContentConfig.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.DisplayableContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"public interface DictionaryContentConfig {","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"    void setDisplayContent(DisplayableContent displayableContent);","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"    boolean isContentVisible();","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":8}},{"path":"src/main/java/seedu/dictionote/ui/DictionaryContentPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.DisplayableContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":" * An UI component that displays information of a {@code DisplayableContent}.","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"public class DictionaryContentPanel extends UiPart\u003cRegion\u003e implements DictionaryContentConfig {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String FXML \u003d \"DictionaryContentPanel.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    private DictionaryListPanelConfig dictionaryListPanelConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    private ObservableList\u003cDisplayableContent\u003e contentList;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    private ListView\u003cDisplayableContent\u003e dictionaryContentListView;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates a {@code DictionaryContentPanel} for {@code DisplayableContent}.","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    public DictionaryContentPanel(DictionaryListPanel dictionaryListPanelConfig) {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        this.dictionaryListPanelConfig \u003d dictionaryListPanelConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    public void setDisplayContent(DisplayableContent displayableContent) {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        dialogContainer.getChildren().clear();","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        dialogContainer.getChildren().add(new DictionaryContentCard(displayableContent).getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean isContentVisible() {","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        return dictionaryListPanelConfig.isContentVisible();","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":59}},{"path":"src/main/java/seedu/dictionote/ui/DictionaryListContentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":" * An UI component that displays information of a {@code Content}.","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"public class DictionaryListContentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String FXML \u003d \"DictionaryListContentCard.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"    public final Content content;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"    private Label id;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"    private Label header;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label mainContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label week;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates a {@code DictionaryListContentCard} with the given {@code content} and index to display.","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public DictionaryListContentCard(Content content, int displayedIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"        this.content \u003d content;","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"        header.setText(content.getHeader());","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        mainContent.setText(content.getMainContent());","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        week.setText(content.getWeek());","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!(other instanceof DictionaryListContentCard)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"        // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        DictionaryListContentCard contents \u003d (DictionaryListContentCard) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"        return id.getText().equals(contents.id.getText())","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"                \u0026\u0026 content.equals(contents.content);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"TeoHoeKeat":12,"XindiTian":54}},{"path":"src/main/java/seedu/dictionote/ui/DictionaryListDefinitionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":" * An UI component that displays information of a {@code Definition}.","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"public class DictionaryListDefinitionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String FXML \u003d \"DictionaryListDefinitionCard.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    public final Definition definition;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"    private Label id;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"    private Label header;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label content;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"     * Creates a {@code NoteCard} with the given {@code Note} and index to display.","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    public DictionaryListDefinitionCard(Definition definition, int displayedIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        this.definition \u003d definition;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        header.setText(definition.getTerm());","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        content.setText(definition.getDefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!(other instanceof DictionaryListDefinitionCard)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"        // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"        DictionaryListDefinitionCard contents \u003d (DictionaryListDefinitionCard) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"        return id.getText().equals(contents.id.getText())","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"                \u0026\u0026 definition.equals(contents.definition);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"TeoHoeKeat":13,"XindiTian":50}},{"path":"src/main/java/seedu/dictionote/ui/DictionaryListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"public class DictionaryListPanel extends UiPart\u003cRegion\u003e implements DictionaryListPanelConfig {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String FXML \u003d \"DictionaryListPanel.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DictionaryListPanel.class);","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    private VBox vBox;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    private ListView\u003cContent\u003e dictionaryContentListView;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    private ListView\u003cDefinition\u003e dictionaryDefinitionListView;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates a {@code DictionaryListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    public DictionaryListPanel(ObservableList\u003cContent\u003e contentList, ObservableList\u003cDefinition\u003e definitionList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionaryDefinitionListView.managedProperty().bind(dictionaryDefinitionListView.visibleProperty());","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionaryContentListView.managedProperty().bind(dictionaryContentListView.visibleProperty());","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionaryDefinitionListView.setItems(definitionList);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionaryDefinitionListView.setCellFactory(listView -\u003e new DefinitionListViewCell());","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionaryContentListView.setItems(contentList);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionaryContentListView.setCellFactory(listView -\u003e new ContentListViewCell());","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"     * Display content list view","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    public void openContentDisplay() {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!dictionaryContentListView.isVisible()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"            dictionaryContentListView.setVisible(true);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        if (dictionaryDefinitionListView.isVisible()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"            dictionaryDefinitionListView.setVisible(false);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"     * Display definition display","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"    public void openDefinitionDisplay() {","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!dictionaryDefinitionListView.isVisible()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"            dictionaryDefinitionListView.setVisible(true);","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        if (dictionaryContentListView.isVisible()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"            dictionaryContentListView.setVisible(false);","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean isContentVisible() {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"        return dictionaryContentListView.isVisible();","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"    /**r","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Content}","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"     * using a {@code DictionaryContentCard}.","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"    class ContentListViewCell extends ListCell\u003cContent\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"        protected void updateItem(Content content, boolean empty) {","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"            super.updateItem(content, empty);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"            if (empty || content \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"                setText(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"                setGraphic(new DictionaryListContentCard(content, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"            openContentDisplay();","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"    /**r","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Definition}","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"     * using a {@code DictionaryDefinitionCard}.","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"    class DefinitionListViewCell extends ListCell\u003cDefinition\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"        protected void updateItem(Definition definition, boolean empty) {","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"            super.updateItem(definition, empty);","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"            if (empty || definition \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"                setText(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"                setGraphic(new DictionaryListDefinitionCard(definition, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"            openDefinitionDisplay();","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":113}},{"path":"src/main/java/seedu/dictionote/ui/DictionaryListPanelConfig.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"interface DictionaryListPanelConfig {","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"    boolean isContentVisible();","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":5}},{"path":"src/main/java/seedu/dictionote/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w13-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"TeoHoeKeat":1,"XindiTian":2,"-":99}},{"path":"src/main/java/seedu/dictionote/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.geometry.Orientation;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.SplitPane;","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.stage.Screen;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.GuiSettings;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.Logic;","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.CommandResult;","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final float DEFAULT_WINDOW_WIDTH_RATIO \u003d 0.5f;","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final float DEFAULT_WINDOW_HEIGHT_RATIO \u003d 0.66f;","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    private ContactListPanel contactListPanel;","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"    private NoteListPanel noteListPanel;","lastModifiedDate":"2021-03-05"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    private NoteContentPanel noteContentPanel;","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    private DictionaryListPanel dictionaryListPanel;","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"    private DictionaryContentPanel dictionaryContentPanel;","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    private CommandBox commandBox;","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"    private StackPane contactListPanelPlaceholder;","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"    private StackPane dictionaryListPlaceholder;","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"    private StackPane dictionaryContentPlaceholder;","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"    private StackPane noteListPlaceholder;","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"    private StackPane noteContentPlaceholder;","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"    // For show/hide function","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"    private AnchorPane contactDisplay;","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"    private AnchorPane dictionaryListDisplay;","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"    private AnchorPane dictionaryContentDisplay;","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"    private AnchorPane noteListDisplay;","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"    private AnchorPane noteContentDisplay;","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"    private SplitPane contactSplitPanel;","lastModifiedDate":"2021-03-03"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"    private SplitPane dictionarySplitPanel;","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"    private SplitPane noteSplitPanel;","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"    //Split Panel between dictionary and Note","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"    private SplitPane mainSplitPanel;","lastModifiedDate":"2021-03-03"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"        setWindowDefaultSize(logic.getGuiSettings(), primaryStage);","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"     * Setup event listener for divider.","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"    private void addSplitPaneListener() {","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"        mainSplitPanel.getDividers().get(0).positionProperty().addListener((observeValue, oldValue, newValue) -\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"            logic.getGuiSettings().setMainSplitRatio(newValue.doubleValue());","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"        });","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"        contactSplitPanel.getDividers().get(0).positionProperty().addListener((observeValue, oldValue, newValue) -\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"            logic.getGuiSettings().setContactSplitRatio(newValue.doubleValue());","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"        });","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionarySplitPanel.getDividers().get(0).positionProperty().addListener((observeValue, oldValue, newValue) -\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":"            logic.getGuiSettings().setDictionarySplitRatio(newValue.doubleValue());","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":"        });","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"TeoHoeKeat"},"content":"        noteSplitPanel.getDividers().get(0).positionProperty().addListener((observeValue, oldValue, newValue) -\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"TeoHoeKeat"},"content":"            logic.getGuiSettings().setNoteSplitRatio(newValue.doubleValue());","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"TeoHoeKeat"},"content":"        });","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":160,"author":{"gitId":"TeoHoeKeat"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":185,"author":{"gitId":"TeoHoeKeat"},"content":"            handleKey(event);","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"TeoHoeKeat"},"content":"        contactListPanel \u003d new ContactListPanel(logic.getFilteredContactList());","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"TeoHoeKeat"},"content":"        contactListPanelPlaceholder.getChildren().add(contactListPanel.getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":196,"author":{"gitId":"jessen11"},"content":"        noteListPanel \u003d new NoteListPanel(logic.getFilteredNoteList());","lastModifiedDate":"2021-03-05"},{"lineNumber":197,"author":{"gitId":"jessen11"},"content":"        noteListPlaceholder.getChildren().add(noteListPanel.getRoot());","lastModifiedDate":"2021-03-06"},{"lineNumber":198,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":199,"author":{"gitId":"TeoHoeKeat"},"content":"        noteContentPanel \u003d new NoteContentPanel();","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"TeoHoeKeat"},"content":"        noteContentPlaceholder.getChildren().add(noteContentPanel.getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"TeoHoeKeat"},"content":"        logic.setNoteContentConfig(noteContentPanel);","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionaryListPanel \u003d new DictionaryListPanel(logic.getFilteredContentList(),","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"TeoHoeKeat"},"content":"            logic.getFilteredDefinitionList());","lastModifiedDate":"2021-03-16"},{"lineNumber":206,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionaryListPlaceholder.getChildren().add(dictionaryListPanel.getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":207,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionaryContentPanel \u003d new DictionaryContentPanel(dictionaryListPanel);","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionaryContentPlaceholder.getChildren().add(dictionaryContentPanel.getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"TeoHoeKeat"},"content":"        logic.setDictionaryContentConfig(dictionaryContentPanel);","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":215,"author":{"gitId":"riyadh-h"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getContactsListFilePath());","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":218,"author":{"gitId":"TeoHoeKeat"},"content":"        commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":220,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":226,"author":{"gitId":"TeoHoeKeat"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings, Stage primaryStage) {","lastModifiedDate":"2021-03-14"},{"lineNumber":227,"author":{"gitId":"TeoHoeKeat"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":232,"author":{"gitId":"TeoHoeKeat"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":233,"author":{"gitId":"TeoHoeKeat"},"content":"            primaryStage.setHeight(Screen.getPrimary().getBounds().getHeight() * DEFAULT_WINDOW_HEIGHT_RATIO);","lastModifiedDate":"2021-03-14"},{"lineNumber":234,"author":{"gitId":"TeoHoeKeat"},"content":"            primaryStage.setWidth(Screen.getPrimary().getBounds().getWidth() * DEFAULT_WINDOW_WIDTH_RATIO);","lastModifiedDate":"2021-03-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":238,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":239,"author":{"gitId":"TeoHoeKeat"},"content":"     * Dynamically detect and change the split ratio depending on the content","lastModifiedDate":"2021-03-03"},{"lineNumber":240,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":241,"author":{"gitId":"TeoHoeKeat"},"content":"    void configSplit() {","lastModifiedDate":"2021-03-03"},{"lineNumber":242,"author":{"gitId":"TeoHoeKeat"},"content":"        configOrientation();","lastModifiedDate":"2021-03-26"},{"lineNumber":243,"author":{"gitId":"TeoHoeKeat"},"content":"        configContactSplit();","lastModifiedDate":"2021-03-03"},{"lineNumber":244,"author":{"gitId":"TeoHoeKeat"},"content":"        configNoteSplit();","lastModifiedDate":"2021-03-03"},{"lineNumber":245,"author":{"gitId":"TeoHoeKeat"},"content":"        configDictionarySplit();","lastModifiedDate":"2021-03-03"},{"lineNumber":246,"author":{"gitId":"TeoHoeKeat"},"content":"        configMainSplit();","lastModifiedDate":"2021-03-03"},{"lineNumber":247,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":248,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":249,"author":{"gitId":"TeoHoeKeat"},"content":"     * Detect the change in orientation setting","lastModifiedDate":"2021-03-26"},{"lineNumber":250,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":251,"author":{"gitId":"TeoHoeKeat"},"content":"    private void configOrientation() {","lastModifiedDate":"2021-03-26"},{"lineNumber":252,"author":{"gitId":"TeoHoeKeat"},"content":"        if (noteSplitPanel.getOrientation() !\u003d logic.getGuiSettings().getNotePanelOrientation()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":253,"author":{"gitId":"TeoHoeKeat"},"content":"            noteSplitPanel.setOrientation(logic.getGuiSettings().getNotePanelOrientation());","lastModifiedDate":"2021-03-26"},{"lineNumber":254,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":255,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":256,"author":{"gitId":"TeoHoeKeat"},"content":"        if (dictionarySplitPanel.getOrientation() !\u003d logic.getGuiSettings().getDictionaryPanelOrientation()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":257,"author":{"gitId":"TeoHoeKeat"},"content":"            dictionarySplitPanel.setOrientation(logic.getGuiSettings().getDictionaryPanelOrientation());","lastModifiedDate":"2021-03-26"},{"lineNumber":258,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":259,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":260,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":261,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":262,"author":{"gitId":"TeoHoeKeat"},"content":"     * Dynamically detect and change the split ratio depending on contact visible visibility","lastModifiedDate":"2021-03-03"},{"lineNumber":263,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":264,"author":{"gitId":"TeoHoeKeat"},"content":"    private void configContactSplit() {","lastModifiedDate":"2021-03-03"},{"lineNumber":265,"author":{"gitId":"TeoHoeKeat"},"content":"        if (contactDisplay.isVisible()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":266,"author":{"gitId":"TeoHoeKeat"},"content":"            setDividerPosition(contactSplitPanel, logic.getGuiSettings().getContactSplitRatio());","lastModifiedDate":"2021-03-14"},{"lineNumber":267,"author":{"gitId":"TeoHoeKeat"},"content":"        } else {","lastModifiedDate":"2021-03-03"},{"lineNumber":268,"author":{"gitId":"TeoHoeKeat"},"content":"            setDividerPosition(contactSplitPanel, 0);","lastModifiedDate":"2021-03-14"},{"lineNumber":269,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":270,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":271,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":272,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":273,"author":{"gitId":"TeoHoeKeat"},"content":"     * Dynamically detect and change the split ratio depending on the dictionary list and content visibility","lastModifiedDate":"2021-03-03"},{"lineNumber":274,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":275,"author":{"gitId":"TeoHoeKeat"},"content":"    private void configDictionarySplit() {","lastModifiedDate":"2021-03-03"},{"lineNumber":276,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!dictionaryListDisplay.isVisible()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":277,"author":{"gitId":"TeoHoeKeat"},"content":"            setDividerPosition(dictionarySplitPanel, 0);","lastModifiedDate":"2021-03-14"},{"lineNumber":278,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (!dictionaryContentDisplay.isVisible()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":279,"author":{"gitId":"TeoHoeKeat"},"content":"            setDividerPosition(dictionarySplitPanel, 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":280,"author":{"gitId":"TeoHoeKeat"},"content":"        } else {","lastModifiedDate":"2021-03-03"},{"lineNumber":281,"author":{"gitId":"TeoHoeKeat"},"content":"            setDividerPosition(dictionarySplitPanel, logic.getGuiSettings().getDictionarySplitRatio());","lastModifiedDate":"2021-03-14"},{"lineNumber":282,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":283,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":284,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":285,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":286,"author":{"gitId":"TeoHoeKeat"},"content":"     * Dynamically detect and change the split ratio depending on the note list and note visibility","lastModifiedDate":"2021-03-03"},{"lineNumber":287,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":288,"author":{"gitId":"TeoHoeKeat"},"content":"    private void configNoteSplit() {","lastModifiedDate":"2021-03-03"},{"lineNumber":289,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!noteListDisplay.isVisible()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":290,"author":{"gitId":"TeoHoeKeat"},"content":"            setDividerPosition(noteSplitPanel, 0);","lastModifiedDate":"2021-03-14"},{"lineNumber":291,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (!noteContentDisplay.isVisible()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":292,"author":{"gitId":"TeoHoeKeat"},"content":"            setDividerPosition(noteSplitPanel, 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":293,"author":{"gitId":"TeoHoeKeat"},"content":"        } else {","lastModifiedDate":"2021-03-03"},{"lineNumber":294,"author":{"gitId":"TeoHoeKeat"},"content":"            setDividerPosition(noteSplitPanel, logic.getGuiSettings().getNoteSplitRatio());","lastModifiedDate":"2021-03-14"},{"lineNumber":295,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":296,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":297,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":298,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":299,"author":{"gitId":"TeoHoeKeat"},"content":"     * Dynamically detect and change the split ratio depending on the dictionary and note visibility","lastModifiedDate":"2021-03-03"},{"lineNumber":300,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":301,"author":{"gitId":"TeoHoeKeat"},"content":"    private void configMainSplit() {","lastModifiedDate":"2021-03-03"},{"lineNumber":302,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!noteListDisplay.isVisible() \u0026\u0026 !noteContentDisplay.isVisible()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":303,"author":{"gitId":"TeoHoeKeat"},"content":"            setDividerPosition(mainSplitPanel, 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":304,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (!dictionaryListDisplay.isVisible() \u0026\u0026 !dictionaryContentDisplay.isVisible()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":305,"author":{"gitId":"TeoHoeKeat"},"content":"            setDividerPosition(mainSplitPanel, 0);","lastModifiedDate":"2021-03-14"},{"lineNumber":306,"author":{"gitId":"TeoHoeKeat"},"content":"        } else {","lastModifiedDate":"2021-03-03"},{"lineNumber":307,"author":{"gitId":"TeoHoeKeat"},"content":"            setDividerPosition(mainSplitPanel, logic.getGuiSettings().getMainSplitRatio());","lastModifiedDate":"2021-03-14"},{"lineNumber":308,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":309,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":310,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":311,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":312,"author":{"gitId":"TeoHoeKeat"},"content":"     * set divider position for splitpane","lastModifiedDate":"2021-03-14"},{"lineNumber":313,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":314,"author":{"gitId":"TeoHoeKeat"},"content":"    private void setDividerPosition(SplitPane splitPane, double position) {","lastModifiedDate":"2021-03-14"},{"lineNumber":315,"author":{"gitId":"TeoHoeKeat"},"content":"        if (splitPane.getDividerPositions()[0] !\u003d position) {","lastModifiedDate":"2021-03-14"},{"lineNumber":316,"author":{"gitId":"TeoHoeKeat"},"content":"            splitPane.setDividerPositions(position);","lastModifiedDate":"2021-03-14"},{"lineNumber":317,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":318,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":319,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":321,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":333,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":338,"author":{"gitId":"TeoHoeKeat"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY(), logic.getGuiSettings().getContactSplitRatio(),","lastModifiedDate":"2021-03-14"},{"lineNumber":339,"author":{"gitId":"TeoHoeKeat"},"content":"            logic.getGuiSettings().getDictionarySplitRatio(), logic.getGuiSettings().getNoteSplitRatio(),","lastModifiedDate":"2021-03-14"},{"lineNumber":340,"author":{"gitId":"TeoHoeKeat"},"content":"            logic.getGuiSettings().getMainSplitRatio(), contactDisplay.isVisible(),","lastModifiedDate":"2021-03-14"},{"lineNumber":341,"author":{"gitId":"TeoHoeKeat"},"content":"            dictionaryContentDisplay.isVisible(), dictionaryListDisplay.isVisible(), noteContentDisplay.isVisible(),","lastModifiedDate":"2021-03-26"},{"lineNumber":342,"author":{"gitId":"TeoHoeKeat"},"content":"            noteListDisplay.isVisible(), dictionarySplitPanel.getOrientation() \u003d\u003d Orientation.VERTICAL,","lastModifiedDate":"2021-03-26"},{"lineNumber":343,"author":{"gitId":"TeoHoeKeat"},"content":"            noteSplitPanel.getOrientation() \u003d\u003d Orientation.VERTICAL);","lastModifiedDate":"2021-03-26"},{"lineNumber":344,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":350,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":351,"author":{"gitId":"TeoHoeKeat"},"content":"    void handleKey(KeyEvent event) {","lastModifiedDate":"2021-03-22"},{"lineNumber":352,"author":{"gitId":"TeoHoeKeat"},"content":"        if (event.getCode() \u003d\u003d KeyCode.ESCAPE) {","lastModifiedDate":"2021-03-22"},{"lineNumber":353,"author":{"gitId":"TeoHoeKeat"},"content":"            commandBox.requestFocus();","lastModifiedDate":"2021-03-22"},{"lineNumber":354,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":355,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":356,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":357,"author":{"gitId":"TeoHoeKeat"},"content":"    void show() {","lastModifiedDate":"2021-03-22"},{"lineNumber":358,"author":{"gitId":"TeoHoeKeat"},"content":"        primaryStage.show();","lastModifiedDate":"2021-03-22"},{"lineNumber":359,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":360,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":361,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":362,"author":{"gitId":"TeoHoeKeat"},"content":"     * Set the visiable of the panel.","lastModifiedDate":"2021-03-03"},{"lineNumber":363,"author":{"gitId":"TeoHoeKeat"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":364,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param pane to hide.","lastModifiedDate":"2021-03-03"},{"lineNumber":365,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":366,"author":{"gitId":"TeoHoeKeat"},"content":"    private void setPanelVisibility(Pane pane, boolean visible) {","lastModifiedDate":"2021-03-03"},{"lineNumber":367,"author":{"gitId":"TeoHoeKeat"},"content":"        pane.setVisible(visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":368,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":369,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":370,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":371,"author":{"gitId":"TeoHoeKeat"},"content":"     * Setup display panel.","lastModifiedDate":"2021-03-14"},{"lineNumber":372,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":373,"author":{"gitId":"TeoHoeKeat"},"content":"    private void setupDisplayPanel() {","lastModifiedDate":"2021-03-14"},{"lineNumber":374,"author":{"gitId":"TeoHoeKeat"},"content":"        setPanelVisibility(contactDisplay, logic.getGuiSettings().isContactPanelVisible());","lastModifiedDate":"2021-03-14"},{"lineNumber":375,"author":{"gitId":"TeoHoeKeat"},"content":"        setPanelVisibility(dictionaryListDisplay, logic.getGuiSettings().isDictionaryListPanelVisible());","lastModifiedDate":"2021-03-14"},{"lineNumber":376,"author":{"gitId":"TeoHoeKeat"},"content":"        setPanelVisibility(dictionaryContentDisplay, logic.getGuiSettings().isDictionaryContentPanelVisible());","lastModifiedDate":"2021-03-14"},{"lineNumber":377,"author":{"gitId":"TeoHoeKeat"},"content":"        setPanelVisibility(noteListDisplay, logic.getGuiSettings().isNoteListPanelVisible());","lastModifiedDate":"2021-03-14"},{"lineNumber":378,"author":{"gitId":"TeoHoeKeat"},"content":"        setPanelVisibility(noteContentDisplay, logic.getGuiSettings().isNoteContentPanelVisible());","lastModifiedDate":"2021-03-14"},{"lineNumber":379,"author":{"gitId":"TeoHoeKeat"},"content":"        configSplit();","lastModifiedDate":"2021-03-14"},{"lineNumber":380,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":381,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":382,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":383,"author":{"gitId":"TeoHoeKeat"},"content":"     * Configure window after shown","lastModifiedDate":"2021-03-14"},{"lineNumber":384,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":385,"author":{"gitId":"TeoHoeKeat"},"content":"    public void handleShown() {","lastModifiedDate":"2021-03-14"},{"lineNumber":386,"author":{"gitId":"TeoHoeKeat"},"content":"        setupDisplayPanel();","lastModifiedDate":"2021-03-14"},{"lineNumber":387,"author":{"gitId":"TeoHoeKeat"},"content":"        commandBox.requestFocus();","lastModifiedDate":"2021-03-14"},{"lineNumber":388,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":389,"author":{"gitId":"TeoHoeKeat"},"content":"        addSplitPaneListener();","lastModifiedDate":"2021-03-14"},{"lineNumber":390,"author":{"gitId":"TeoHoeKeat"},"content":"        dictionaryListPanel.openContentDisplay();","lastModifiedDate":"2021-03-16"},{"lineNumber":391,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":392,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":393,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":394,"author":{"gitId":"TeoHoeKeat"},"content":"     * * Set the visiable of the panels.","lastModifiedDate":"2021-03-03"},{"lineNumber":395,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":396,"author":{"gitId":"TeoHoeKeat"},"content":"    private void handlePanelVisibility(UiActionOption uiActionOption, boolean visible) {","lastModifiedDate":"2021-03-03"},{"lineNumber":397,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":398,"author":{"gitId":"TeoHoeKeat"},"content":"        switch (uiActionOption) {","lastModifiedDate":"2021-03-03"},{"lineNumber":399,"author":{"gitId":"TeoHoeKeat"},"content":"        case DICTIONARY:","lastModifiedDate":"2021-03-03"},{"lineNumber":400,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(dictionaryContentDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":401,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(dictionaryListDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":402,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":403,"author":{"gitId":"TeoHoeKeat"},"content":"        case DICTIONARY_LIST:","lastModifiedDate":"2021-03-03"},{"lineNumber":404,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(dictionaryListDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":405,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":406,"author":{"gitId":"TeoHoeKeat"},"content":"        case DICTIONARY_CONTENT:","lastModifiedDate":"2021-03-03"},{"lineNumber":407,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(dictionaryContentDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":408,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":409,"author":{"gitId":"TeoHoeKeat"},"content":"        case NOTE:","lastModifiedDate":"2021-03-03"},{"lineNumber":410,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(noteContentDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":411,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(noteListDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":412,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":413,"author":{"gitId":"TeoHoeKeat"},"content":"        case NOTE_LIST:","lastModifiedDate":"2021-03-03"},{"lineNumber":414,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(noteListDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":415,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":416,"author":{"gitId":"TeoHoeKeat"},"content":"        case NOTE_CONTENT:","lastModifiedDate":"2021-03-03"},{"lineNumber":417,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(noteContentDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":418,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":419,"author":{"gitId":"TeoHoeKeat"},"content":"        case LIST:","lastModifiedDate":"2021-03-03"},{"lineNumber":420,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(dictionaryListDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":421,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(noteListDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":422,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":423,"author":{"gitId":"TeoHoeKeat"},"content":"        case CONTACT:","lastModifiedDate":"2021-03-03"},{"lineNumber":424,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(contactDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":425,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":426,"author":{"gitId":"TeoHoeKeat"},"content":"        case ALL:","lastModifiedDate":"2021-03-03"},{"lineNumber":427,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(contactDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":428,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(dictionaryListDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":429,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(dictionaryContentDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":430,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(noteListDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":431,"author":{"gitId":"TeoHoeKeat"},"content":"            setPanelVisibility(noteContentDisplay, visible);","lastModifiedDate":"2021-03-03"},{"lineNumber":432,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":433,"author":{"gitId":"TeoHoeKeat"},"content":"        case NONE:","lastModifiedDate":"2021-03-03"},{"lineNumber":434,"author":{"gitId":"TeoHoeKeat"},"content":"            //Do nothing","lastModifiedDate":"2021-03-03"},{"lineNumber":435,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":436,"author":{"gitId":"TeoHoeKeat"},"content":"        default:","lastModifiedDate":"2021-03-03"},{"lineNumber":437,"author":{"gitId":"TeoHoeKeat"},"content":"            assert false : uiActionOption.toString() + \" UiAction is not handle\";","lastModifiedDate":"2021-03-03"},{"lineNumber":438,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":439,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":440,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":441,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":442,"author":{"gitId":"TeoHoeKeat"},"content":"     * Open a panel of a selected type.","lastModifiedDate":"2021-03-03"},{"lineNumber":443,"author":{"gitId":"TeoHoeKeat"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":444,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param uiActionOption desire display to open.","lastModifiedDate":"2021-03-03"},{"lineNumber":445,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":446,"author":{"gitId":"TeoHoeKeat"},"content":"    private void handleOpen(UiActionOption uiActionOption) {","lastModifiedDate":"2021-03-03"},{"lineNumber":447,"author":{"gitId":"TeoHoeKeat"},"content":"        handlePanelVisibility(uiActionOption, true);","lastModifiedDate":"2021-03-03"},{"lineNumber":448,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":449,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":450,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":451,"author":{"gitId":"TeoHoeKeat"},"content":"     * Close display panel of a selected type.","lastModifiedDate":"2021-03-03"},{"lineNumber":452,"author":{"gitId":"TeoHoeKeat"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":453,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param uiActionOption desire display to close.","lastModifiedDate":"2021-03-03"},{"lineNumber":454,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":455,"author":{"gitId":"TeoHoeKeat"},"content":"    private void handleClose(UiActionOption uiActionOption) {","lastModifiedDate":"2021-03-03"},{"lineNumber":456,"author":{"gitId":"TeoHoeKeat"},"content":"        handlePanelVisibility(uiActionOption, false);","lastModifiedDate":"2021-03-03"},{"lineNumber":457,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":458,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":459,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":460,"author":{"gitId":"TeoHoeKeat"},"content":"     * Enter Edit Mode.","lastModifiedDate":"2021-03-22"},{"lineNumber":461,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":462,"author":{"gitId":"TeoHoeKeat"},"content":"    private void handleEditModeEnter() {","lastModifiedDate":"2021-03-22"},{"lineNumber":463,"author":{"gitId":"TeoHoeKeat"},"content":"        setPanelVisibility(noteContentDisplay, true);","lastModifiedDate":"2021-03-23"},{"lineNumber":464,"author":{"gitId":"TeoHoeKeat"},"content":"        noteContentPanel.enterEditMode();","lastModifiedDate":"2021-03-22"},{"lineNumber":465,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":466,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":467,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":468,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":469,"author":{"gitId":"TeoHoeKeat"},"content":"     * Exit Edit Mode.","lastModifiedDate":"2021-03-22"},{"lineNumber":470,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":471,"author":{"gitId":"TeoHoeKeat"},"content":"    private void handleEditModeExit() {","lastModifiedDate":"2021-03-22"},{"lineNumber":472,"author":{"gitId":"TeoHoeKeat"},"content":"        noteContentPanel.exitEditMode();","lastModifiedDate":"2021-03-22"},{"lineNumber":473,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":474,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":475,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":476,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":478,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":479,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":480,"author":{"gitId":"XindiTian"},"content":"     * @see seedu.dictionote.logic.Logic#execute(String)","lastModifiedDate":"2021-02-27"},{"lineNumber":481,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":484,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":485,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":486,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":487,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":489,"author":{"gitId":"TeoHoeKeat"},"content":"            executeUiAction(commandResult.getUiAction(), commandResult.getUiActionOption());","lastModifiedDate":"2021-03-03"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":491,"author":{"gitId":"TeoHoeKeat"},"content":"            configSplit();","lastModifiedDate":"2021-03-14"},{"lineNumber":492,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":493,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":495,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":496,"author":{"gitId":"TeoHoeKeat"},"content":"            resultDisplay.setErrorFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":497,"author":{"gitId":"TeoHoeKeat"},"content":"            configSplit();","lastModifiedDate":"2021-03-14"},{"lineNumber":498,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":501,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":502,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":503,"author":{"gitId":"TeoHoeKeat"},"content":"     * Executes the Ui Action desired from the command.","lastModifiedDate":"2021-03-03"},{"lineNumber":504,"author":{"gitId":"TeoHoeKeat"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":505,"author":{"gitId":"TeoHoeKeat"},"content":"     * @see seedu.dictionote.logic.Logic#execute(String)","lastModifiedDate":"2021-03-03"},{"lineNumber":506,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":507,"author":{"gitId":"TeoHoeKeat"},"content":"    private void executeUiAction(UiAction action, UiActionOption uiActionOption) {","lastModifiedDate":"2021-03-03"},{"lineNumber":508,"author":{"gitId":"TeoHoeKeat"},"content":"        switch (action) {","lastModifiedDate":"2021-03-03"},{"lineNumber":509,"author":{"gitId":"TeoHoeKeat"},"content":"        case HELP:","lastModifiedDate":"2021-03-03"},{"lineNumber":510,"author":{"gitId":"TeoHoeKeat"},"content":"            handleHelp();","lastModifiedDate":"2021-03-03"},{"lineNumber":511,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":512,"author":{"gitId":"TeoHoeKeat"},"content":"        case EXIT:","lastModifiedDate":"2021-03-03"},{"lineNumber":513,"author":{"gitId":"TeoHoeKeat"},"content":"            handleExit();","lastModifiedDate":"2021-03-03"},{"lineNumber":514,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":515,"author":{"gitId":"TeoHoeKeat"},"content":"        case OPEN:","lastModifiedDate":"2021-03-03"},{"lineNumber":516,"author":{"gitId":"TeoHoeKeat"},"content":"            handleOpen(uiActionOption);","lastModifiedDate":"2021-03-03"},{"lineNumber":517,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":518,"author":{"gitId":"TeoHoeKeat"},"content":"        case CLOSE:","lastModifiedDate":"2021-03-03"},{"lineNumber":519,"author":{"gitId":"TeoHoeKeat"},"content":"            handleClose(uiActionOption);","lastModifiedDate":"2021-03-03"},{"lineNumber":520,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":521,"author":{"gitId":"TeoHoeKeat"},"content":"        case EDITMODEENTER:","lastModifiedDate":"2021-03-22"},{"lineNumber":522,"author":{"gitId":"TeoHoeKeat"},"content":"            handleEditModeEnter();","lastModifiedDate":"2021-03-22"},{"lineNumber":523,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-22"},{"lineNumber":524,"author":{"gitId":"TeoHoeKeat"},"content":"        case EDITMODEEXIT:","lastModifiedDate":"2021-03-22"},{"lineNumber":525,"author":{"gitId":"TeoHoeKeat"},"content":"            handleEditModeExit();","lastModifiedDate":"2021-03-22"},{"lineNumber":526,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-22"},{"lineNumber":527,"author":{"gitId":"TeoHoeKeat"},"content":"        case NONE:","lastModifiedDate":"2021-03-03"},{"lineNumber":528,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":529,"author":{"gitId":"TeoHoeKeat"},"content":"        default:","lastModifiedDate":"2021-03-03"},{"lineNumber":530,"author":{"gitId":"TeoHoeKeat"},"content":"            assert false : action.toString() + \" UiAction is not handle\";","lastModifiedDate":"2021-03-03"},{"lineNumber":531,"author":{"gitId":"TeoHoeKeat"},"content":"            break;","lastModifiedDate":"2021-03-03"},{"lineNumber":532,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":533,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":534,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"TeoHoeKeat":360,"jessen11":5,"riyadh-h":1,"XindiTian":8,"-":160}},{"path":"src/main/java/seedu/dictionote/ui/NoteCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.STANDARD_DATE_TIME_DISPLAY_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":" * An UI component that displays information of a {@code Note}.","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"public class NoteCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String DONE_STYLE_CLASS \u003d \"done\";","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    private static final String FXML \u003d \"NoteListCard.fxml\";","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-05"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"     *","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    public final Note note;","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"    @FXML","lastModifiedDate":"2021-03-05"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"    private Label id;","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"    @FXML","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-05"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"    @FXML","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"    private Label notecontent;","lastModifiedDate":"2021-03-05"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label create;","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label update;","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label done;","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    private DateTimeFormatter displayFormat;","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"     * Creates a {@code NoteCard} with the given {@code Note} and index to display.","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"    public NoteCard(Note note, int displayedIndex) {","lastModifiedDate":"2021-03-05"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"        super(FXML);","lastModifiedDate":"2021-03-05"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        displayFormat \u003d DateTimeFormatter.ofPattern(STANDARD_DATE_TIME_DISPLAY_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-03-05"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-05"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"        notecontent.setText(note.getNote());","lastModifiedDate":"2021-03-05"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"        create.setText(\"Created: \" + displayFormat.format(note.getCreateTime()));","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        update.setText(\" Updated: \" + displayFormat.format(note.getLastEditTime()));","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        note.getTags().stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        if (note.isDone()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"            done.setText(\"✓\");","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"            notecontent.getStyleClass().add(DONE_STYLE_CLASS);","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"            create.getStyleClass().add(DONE_STYLE_CLASS);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"            update.getStyleClass().add(DONE_STYLE_CLASS);","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"            id.getStyleClass().add(DONE_STYLE_CLASS);","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"            done.getStyleClass().add(DONE_STYLE_CLASS);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-05"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-05"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-05"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"            return true;","lastModifiedDate":"2021-03-05"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-05"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!(other instanceof NoteCard)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"            return false;","lastModifiedDate":"2021-03-05"},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":"        // state check","lastModifiedDate":"2021-03-05"},{"lineNumber":88,"author":{"gitId":"jessen11"},"content":"        NoteCard note \u003d (NoteCard) other;","lastModifiedDate":"2021-03-05"},{"lineNumber":89,"author":{"gitId":"jessen11"},"content":"        return this.note.getNote().equals(note.note.getNote());","lastModifiedDate":"2021-03-05"},{"lineNumber":90,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":91,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"TeoHoeKeat":33,"jessen11":58}},{"path":"src/main/java/seedu/dictionote/ui/NoteContentConfig.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"public interface NoteContentConfig {","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"     * set and show the note.","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    void setNote(Note note);","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"     * Check if there is note show.","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    boolean haveNote();","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"     * Reset content of the displayed note.","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    void resetNote();","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"     * Check if the UI is current on edit mode.","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    boolean onEditMode();","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get the current content on the textarea.","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    String getEditedContent();","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get the note shown on display.","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    Note getNote();","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":35}},{"path":"src/main/java/seedu/dictionote/ui/NoteContentPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.STANDARD_DATE_TIME_DISPLAY_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":" * An UI component that displays information of a {@code DisplayableContent}.","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"public class NoteContentPanel extends UiPart\u003cRegion\u003e implements NoteContentConfig {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String FXML \u003d \"NoteContentPanel.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    private Note note;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    private VBox contentPane;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    private TextArea notecontent;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label create;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label update;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label done;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    private DateTimeFormatter displayFormat;","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    private boolean onEditMode;","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates a {@code DictionaryContentPanel} for {@code DisplayableContent}.","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    public NoteContentPanel() {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        displayFormat \u003d DateTimeFormatter.ofPattern(STANDARD_DATE_TIME_DISPLAY_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        onEditMode \u003d false;","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"    public void setNote(Note note) {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        notecontent.setText(note.getNote());","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        create.setText(\"Created: \" + displayFormat.format(note.getCreateTime()));","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        update.setText(\" Updated: \" + displayFormat.format(note.getLastEditTime()));","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"        note.getTags().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"        if (note.isDone()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"            done.setText(\"✓\");","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"        notecontent.setFocusTraversable(true);","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean haveNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"        return !(note \u003d\u003d null);","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"    public void resetNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"        if (haveNote()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"            setNote(note);","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getEditedContent() {","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"        return haveNote() ? notecontent.getText() : \"\";","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"    public Note getNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"        return note;","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean onEditMode() {","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"        return onEditMode;","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"     * Enter edit mode, enable note content editable","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"    public void enterEditMode() {","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"        notecontent.setEditable(true);","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"        onEditMode \u003d true;","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"        requestFocus();","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"     * Exit edit mode, disable note content editable","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"    public void exitEditMode() {","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"        notecontent.setEditable(false);","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"        onEditMode \u003d false;","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"     * Request focus on text field box.","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"    public void requestFocus() {","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"        notecontent.requestFocus();;","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":131}},{"path":"src/main/java/seedu/dictionote/ui/NoteListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"public class NoteListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"    private static final String FXML \u003d \"NoteListPanel.fxml\";","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(NoteListPanel.class);","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    @FXML","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    private ListView\u003cNote\u003e noteListView;","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"     * Creates a {@code NoteListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    public NoteListPanel(ObservableList\u003cNote\u003e noteList) {","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        super(FXML);","lastModifiedDate":"2021-03-05"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"        noteListView.setItems(noteList);","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"        noteListView.setCellFactory(listView -\u003e new NoteListViewCell());","lastModifiedDate":"2021-03-05"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    /**r","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Note} using a {@code NoteCard}.","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"    class NoteListViewCell extends ListCell\u003cNote\u003e {","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"        protected void updateItem(Note note, boolean empty) {","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"            super.updateItem(note, empty);","lastModifiedDate":"2021-03-05"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"            if (empty || note \u003d\u003d null) {","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"                setText(null);","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"            } else {","lastModifiedDate":"2021-03-05"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"                setGraphic(new NoteCard(note, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-05"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"            }","lastModifiedDate":"2021-03-05"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"TeoHoeKeat":1,"jessen11":48}},{"path":"src/main/java/seedu/dictionote/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label resultDisplay;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"     * Sets feed back text with default style","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        setStyleToDefault();","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"     * Sets feed back text with error style","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    public void setErrorFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        setStyleToIndicateFailure();","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"     * Sets the result box style to indicate a failed command.","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    private void setStyleToIndicateFailure() {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"        ObservableList\u003cString\u003e styleClass \u003d resultDisplay.getStyleClass();","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"            return;","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"     * Sets the result box style to use the default style.","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        resultDisplay.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"TeoHoeKeat":37,"XindiTian":1,"-":25}},{"path":"src/main/java/seedu/dictionote/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XindiTian":1,"-":27}},{"path":"src/main/java/seedu/dictionote/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"XindiTian":1,"-":12}},{"path":"src/main/java/seedu/dictionote/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.MainApp;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.LogsCenter;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.StringUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.Logic;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"            //config window later","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"            Platform.runLater(() -\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"                mainWindow.handleShown();","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"            });","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"TeoHoeKeat":4,"XindiTian":5,"-":85}},{"path":"src/main/java/seedu/dictionote/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.MainApp;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"XindiTian":2,"-":86}},{"path":"src/main/resources/content/inputdraft.md","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"---","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"layout: page","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"title: Dictionary","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"---","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"* Table of Contents","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"  {:toc}","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"# Week 1","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"## OOP: Class and Objects","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"### W1.1a Paradigms → OOP → Introduction → What","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"_(definition):_","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"**Object-Oriented Programming (OOP)** is a programming paradigm.","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"_(definition):_","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"A **programming paradigm** guides programmers to analyze programming problems, and structure programming solutions, in a specific way.","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"\u003e Programming languages have traditionally divided the world into two parts—data and operations on data. Data is static and immutable, except as the operations may change it. The procedures and functions that operate on data have no lasting state of their own; they’re useful only in their ability to affect data.","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"\u003e This division is, of course, grounded in the way computers work, so it’s not one that you can easily ignore or push aside. Like the equally pervasive distinctions between matter and energy and between nouns and verbs, it forms the background against which you work. At some point, all programmers—even object-oriented programmers—must lay out the data structures that their programs will use and define the functions that will act on the data.","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"\u003e With a procedural programming language like C, that’s about all there is to it. The language may offer various kinds of support for organizing data and functions, but it won’t divide the world any differently. Functions and data structures are the basic elements of design.","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"\u003e Object-oriented programming doesn’t so much dispute this view of the world as restructure it at a higher level. It groups operations and data into modular units called objects and lets you combine objects into structured networks to form a complete program. In an object-oriented programming language, objects and object interactions are the basic elements of design.","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"\u003e \u003csmall\u003e-- Object-Oriented Programming with Objective-C, Apple\u003c/small\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"Some other examples of programming paradigms are:","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"**Paradigm** | **Programming Languages**","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"---------|----------------------------------------------","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"_Procedural Programming paradigm_ | C","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"_Functional Programming paradigm_ | F#, Haskell, Scala","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"_Logic Programming paradigm_ | Prolog","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"**Some programming languages support multiple paradigms.**","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"Java is primarily an OOP language but it supports limited forms of functional programming and it can be used to (although not recommended) write procedural code. e.g. se-edu/addressbook-level1","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"JavaScript and Python support functional, procedural, and OOP programming.","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"### W1.1a Paradigms → OOP → Objects → What","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"_(definition):_","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"**Object Oriented Programming (OOP)** views the world as a network of interacting objects.","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"\u003e Every object has both state (data) and behavior (operations on data). In that, they’re not much different from ordinary physical objects. It’s easy to see how a mechanical device, such as a pocket watch or a piano, embodies both state and behavior. But almost anything that’s designed to do a job does, too. Even simple things with no moving parts such as an ordinary bottle combine state (how full the bottle is, whether or not it’s open, how warm its contents are) with behavior (the ability to dispense its contents at various flow rates, to be opened or closed, to withstand high or low temperatures).","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"\u003e It’s this resemblance to real things that gives objects much of their power and appeal. They can not only model components of real systems, but equally as well fulfill assigned roles as components in software systems.","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"\u003e \u003csmall\u003e-- Object-Oriented Programming with Objective-C, Apple\u003c/small\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":":checkered_flag: A real world scenario viewed as a network of interacting objects:","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"You are asked to find out the average age of a group of people Adam, Beth, Charlie, and Daisy.","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"You take a piece of paper and pen, go to each person, ask for their age, and note it down.","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"After collecting the age of all four, you enter it into a calculator to find the total.","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"And then, use the same calculator to divide the total by four, to get the average age.","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"This can be viewed as the objects ```You```, ```Pen```, ```Paper```, ```Calculator```,```Adam```,```Beth```,","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":"```Charlie```, and ```Daisy``` interacting to accomplish the end result of calculating the average age of the four persons.","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"XindiTian"},"content":"These objects can be considered as connected in a certain network of certain structure.","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"XindiTian"},"content":"**OOP solutions try to create a similar object network inside the computer’s memory** –","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"XindiTian"},"content":"a sort of virtual simulation of the corresponding real world scenario – **so that a similar result can be achieved programmatically**.","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"XindiTian"},"content":"**OOP does not demand that the virtual world object network follow the real world exactly.**","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"XindiTian"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"XindiTian":75}},{"path":"src/main/resources/view/ContactListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003cLabel fx:id\u003d\"phone\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003cLabel fx:id\u003d\"email\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003cLabel fx:id\u003d\"address\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TeoHoeKeat":13,"jessen11":1,"-":21}},{"path":"src/main/resources/view/ContactListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"  \u003cListView fx:id\u003d\"contactListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TeoHoeKeat":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-text-fill: #f4f5f0;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":".label-normal {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-text-fill: #f4f5f0;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":".text-area {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-text-fill: #f4f5f0;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":".text-area .content{","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"   -fx-background-color: derive(#1d1d1d, 20%);;","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"TeoHoeKeat"},"content":".scroll-pane \u003e .viewport {","lastModifiedDate":"2021-03-16"},{"lineNumber":302,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-16"},{"lineNumber":303,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"},{"lineNumber":304,"author":{"gitId":"TeoHoeKeat"},"content":".scroll-pane {","lastModifiedDate":"2021-03-16"},{"lineNumber":305,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-16"},{"lineNumber":306,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-16"},{"lineNumber":307,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"},{"lineNumber":308,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"TeoHoeKeat":27,"-":350}},{"path":"src/main/resources/view/DictionaryContentCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cLabel fx:id\u003d\"week\" focusTraversable\u003d\"false\" styleClass\u003d\"label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"                                \u003cminWidth\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"                                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"                                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"                                \u003c/minWidth\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003cLabel fx:id\u003d\"header\" styleClass\u003d\"label-header\" wrapText\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cLabel fx:id\u003d\"content\" focusTraversable\u003d\"false\" styleClass\u003d\"label-normal\" wrapText\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":32}},{"path":"src/main/resources/view/DictionaryContentPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cVBox fx:id\u003d\"vBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\"  /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003c/content\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":12}},{"path":"src/main/resources/view/DictionaryListContentCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" maxHeight\u003d\"50.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003cGridPane maxHeight\u003d\"100.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cLabel fx:id\u003d\"week\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$content\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cLabel fx:id\u003d\"id\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cLabel fx:id\u003d\"header\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cLabel fx:id\u003d\"mainContent\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$content\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":33}},{"path":"src/main/resources/view/DictionaryListDefinitionCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" maxHeight\u003d\"100.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003cGridPane maxHeight\u003d\"100.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cLabel fx:id\u003d\"id\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cLabel fx:id\u003d\"header\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cLabel fx:id\u003d\"content\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$content\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":32}},{"path":"src/main/resources/view/DictionaryListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cVBox fx:id \u003d \"vBox\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003cListView fx:id\u003d\"dictionaryContentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003cListView fx:id\u003d\"dictionaryDefinitionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":9}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":".done {","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"    -fx-text-fill: #4BB543 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TeoHoeKeat":4,"-":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cfx:root minHeight\u003d\"200.0\" minWidth\u003d\"200.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Dictionote\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cSplitPane fx:id\u003d\"contactSplitPanel\" dividerPositions\u003d\"0.25\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"              \u003citems\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cAnchorPane fx:id\u003d\"contactDisplay\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" SplitPane.resizableWithParent\u003d\"false\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"                    \u003cVBox styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"                      \u003cStackPane fx:id\u003d\"contactListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"                       \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" /\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"                           \u003crotationAxis\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"                              \u003cPoint3D /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"                           \u003c/rotationAxis\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003cBorderPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"                           \u003cbottom\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"                          \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"                              \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"                          \u003c/StackPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"                           \u003c/bottom\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"                           \u003ccenter\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"                              \u003cBorderPane BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"                                 \u003ccenter\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"                                    \u003cSplitPane fx:id\u003d\"mainSplitPanel\" dividerPositions\u003d\"0.5\" prefHeight\u003d\"160.0\" prefWidth\u003d\"200.0\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"                                      \u003citems\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"                                        \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"160.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"                                             \u003cchildren\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"                                                \u003cSplitPane fx:id\u003d\"dictionarySplitPanel\" dividerPositions\u003d\"0.3\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"200.0\" prefWidth\u003d\"160.0\" AnchorPane.bottomAnchor\u003d\"0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"                                                  \u003citems\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"                                                    \u003cAnchorPane fx:id\u003d\"dictionaryListDisplay\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"100.0\" prefWidth\u003d\"160.0\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"                                                         \u003cchildren\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"                                                            \u003cStackPane fx:id\u003d\"dictionaryListPlaceholder\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" AnchorPane.bottomAnchor\u003d\"0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"                                                         \u003c/children\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"                                                      \u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"                                                    \u003cAnchorPane fx:id\u003d\"dictionaryContentDisplay\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"100.0\" prefWidth\u003d\"160.0\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"                                                         \u003cchildren\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"                                                            \u003cStackPane fx:id\u003d\"dictionaryContentPlaceholder\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" AnchorPane.bottomAnchor\u003d\"0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"                                                         \u003c/children\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"                                                      \u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"                                                  \u003c/items\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"                                                \u003c/SplitPane\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"                                             \u003c/children\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"                                          \u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"                                        \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"160.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"                                             \u003cchildren\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"                                                \u003cSplitPane fx:id\u003d\"noteSplitPanel\" dividerPositions\u003d\"0.3\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"200.0\" prefWidth\u003d\"160.0\" AnchorPane.bottomAnchor\u003d\"0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"                                                  \u003citems\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"                                                    \u003cAnchorPane fx:id\u003d\"noteListDisplay\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"100.0\" prefWidth\u003d\"160.0\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"                                                         \u003cchildren\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"                                                            \u003cStackPane fx:id\u003d\"noteListPlaceholder\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" AnchorPane.bottomAnchor\u003d\"0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"                                                         \u003c/children\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"                                                      \u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"                                                    \u003cAnchorPane fx:id\u003d\"noteContentDisplay\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"100.0\" prefWidth\u003d\"160.0\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"                                                         \u003cchildren\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"                                                            \u003cStackPane fx:id\u003d\"noteContentPlaceholder\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" AnchorPane.bottomAnchor\u003d\"0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"                                                         \u003c/children\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"                                                      \u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"                                                  \u003c/items\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"                                                \u003c/SplitPane\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"                                             \u003c/children\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"                                          \u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"                                      \u003c/items\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"                                    \u003c/SplitPane\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"                                 \u003c/center\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"                                 \u003cbottom\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"                                      \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" styleClass\u003d\"pane-with-border\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                                  \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"                                    \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                                  \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"                                \u003c/StackPane\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"                                 \u003c/bottom\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"                              \u003c/BorderPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"                           \u003c/center\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003c/BorderPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"              \u003c/items\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003c/SplitPane\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"TeoHoeKeat":88,"-":34}},{"path":"src/main/resources/view/NoteContentPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cVBox fx:id\u003d\"contentPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" minHeight\u003d\"20.0\" minWidth\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"     \u003cBorderPane minHeight\u003d\"42.0\" minWidth\u003d\"0.0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cright\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"           \u003cVBox alignment\u003d\"TOP_RIGHT\" BorderPane.alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"                    \u003cLabel fx:id\u003d\"create\" alignment\u003d\"CENTER_RIGHT\" styleClass\u003d\"label-normal\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"                    \u003cLabel fx:id\u003d\"update\" alignment\u003d\"CENTER_RIGHT\" styleClass\u003d\"label-normal\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"              \u003c/children\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"           \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003c/right\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cleft\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cVBox BorderPane.alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"                    \u003cLabel fx:id\u003d\"done\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"label-normal\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003c/children\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003c/left\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"     \u003c/BorderPane\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"     \u003cTextArea fx:id\u003d\"notecontent\" editable\u003d\"false\" focusTraversable\u003d\"false\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" wrapText\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":31}},{"path":"src/main/resources/view/NoteListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" maxHeight\u003d\"100.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003cGridPane maxHeight\u003d\"100.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cVBox alignment\u003d\"CENTER_RIGHT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cHBox alignment\u003d\"TOP_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cLabel fx:id\u003d\"notecontent\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"         \u003cBorderPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cright\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"               \u003cVBox alignment\u003d\"TOP_RIGHT\" BorderPane.alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003cLabel fx:id\u003d\"create\" alignment\u003d\"CENTER_RIGHT\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$createtimestamp\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003cLabel fx:id\u003d\"update\" alignment\u003d\"CENTER_RIGHT\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$updatetimestamp\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"               \u003c/VBox\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003c/right\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cleft\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"                  \u003cLabel fx:id\u003d\"done\" alignment\u003d\"CENTER_RIGHT\" focusTraversable\u003d\"false\" styleClass\u003d\"cell_small_label\" text\u003d\"\" BorderPane.alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003c/left\u003e\u003c/BorderPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"TeoHoeKeat":28,"jessen11":18}},{"path":"src/main/resources/view/NoteListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"    \u003cListView fx:id\u003d\"noteListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"jessen11":1,"-":7}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" alignment\u003d\"BOTTOM_LEFT\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"   \u003cLabel fx:id\u003d\"resultDisplay\" focusTraversable\u003d\"false\" styleClass\u003d\"label-normal\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"         \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"   \u003c/Label\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"TeoHoeKeat":9,"-":4}},{"path":"src/test/data/JsonContactsListStorageTest/invalidAndValidContactsList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"  \"contacts\": [ {","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"  } ],","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jessen11":2,"riyadh-h":1,"-":11}},{"path":"src/test/data/JsonContactsListStorageTest/invalidContactsList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"  \"contacts\": [ {","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"    \"name\": \"Contact with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"riyadh-h":2,"-":6}},{"path":"src/test/data/JsonSerializableContactsListTest/duplicateContactsList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"  \"contacts\": [ {","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"riyadh-h":1,"-":13}},{"path":"src/test/data/JsonSerializableContactsListTest/invalidContactsList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"  \"contacts\": [ {","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"riyadh-h":1,"-":7}},{"path":"src/test/data/JsonSerializableContactsListTest/typicalContactsList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"  \"contacts\" : [ {","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"    \"email\" : \"alice@aexample.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"    \"email\" : \"johnd@bexample.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"    \"email\" : \"heinz@aexample.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"    \"email\" : \"cornelia@aexample.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"    \"email\" : \"werner@bexample.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"    \"email\" : \"lydia@bexample.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"    \"email\" : \"anna@bexample.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"riyadh-h":9,"-":37}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"  \"addressBookFilePath\" : \"contactslist.json\"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"riyadh-h":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"  \"addressBookFilePath\" : \"contactslist.json\"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"riyadh-h":1,"-":10}},{"path":"src/test/java/seedu/dictionote/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"XindiTian":1,"-":57}},{"path":"src/test/java/seedu/dictionote/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.core;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"XindiTian":1,"-":26}},{"path":"src/test/java/seedu/dictionote/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.core;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XindiTian":2,"-":133}},{"path":"src/test/java/seedu/dictionote/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.core.index;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"XindiTian":2,"-":58}},{"path":"src/test/java/seedu/dictionote/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.util;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"XindiTian":2,"-":34}},{"path":"src/test/java/seedu/dictionote/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.util;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"XindiTian":3,"-":105}},{"path":"src/test/java/seedu/dictionote/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.util;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.Config;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"XindiTian":4,"-":112}},{"path":"src/test/java/seedu/dictionote/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.util;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XindiTian":2,"-":21}},{"path":"src/test/java/seedu/dictionote/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.util;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.testutil.SerializableTestClass;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.testutil.TestUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XindiTian":3,"-":42}},{"path":"src/test/java/seedu/dictionote/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.commons.util;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"XindiTian":2,"-":141}},{"path":"src/test/java/seedu/dictionote/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.AMY;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.AddContactCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.CommandResult;","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.ListContactCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.storage.JsonContactsListStorage;","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.JsonDefinitionBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.JsonDictionaryStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.JsonNoteBookStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.storage.StorageManager;","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.ContactBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"        JsonContactsListStorage addressBookStorage \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"                new JsonContactsListStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"        JsonNoteBookStorage noteBookStorage \u003d","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"                new JsonNoteBookStorage(temporaryFolder.resolve(\"notebook.json\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"        JsonDictionaryStorage dictionaryStorage \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"                new JsonDictionaryStorage(temporaryFolder.resolve(\"dictionary.json\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"        JsonDefinitionBookStorage definitionBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"                new JsonDefinitionBookStorage(temporaryFolder.resolve(\"definition.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage,","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"                noteBookStorage, dictionaryStorage, definitionBookStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"riyadh-h"},"content":"        String deleteContactCommand \u003d \"deletecontact 9\";","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"        assertCommandException(deleteContactCommand, MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"riyadh-h"},"content":"        String listCommand \u003d ListContactCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(listCommand, ListContactCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"riyadh-h"},"content":"        JsonContactsListStorage addressBookStorage \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"riyadh-h"},"content":"                new JsonContactsListIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"godjuansan"},"content":"        JsonNoteBookStorage noteBookStorage \u003d","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"godjuansan"},"content":"                new JsonNoteBookStorage(temporaryFolder.resolve(\"notebook.json\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"XindiTian"},"content":"        JsonDictionaryStorage dictionaryStorage \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"XindiTian"},"content":"                new JsonDictionaryStorage(temporaryFolder.resolve(\"dictionary.json\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"XindiTian"},"content":"        JsonDefinitionBookStorage definitionBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"XindiTian"},"content":"                new JsonDefinitionBookStorage(temporaryFolder.resolve(\"definition.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"XindiTian"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage,","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"XindiTian"},"content":"                noteBookStorage, dictionaryStorage, definitionBookStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"riyadh-h"},"content":"        String addCommand \u003d AddContactCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"riyadh-h"},"content":"        Contact expectedContact \u003d new ContactBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.addContact(expectedContact);","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"riyadh-h"},"content":"    public void getFilteredContactList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":110,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredContactList().remove(0));","lastModifiedDate":"2021-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"riyadh-h"},"content":"        Model expectedModel \u003d new ModelManager(model.getContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"XindiTian"},"content":"                model.getNoteBook(), model.getDictionary(), model.getDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"riyadh-h"},"content":"    private static class JsonContactsListIoExceptionThrowingStub extends JsonContactsListStorage {","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"riyadh-h"},"content":"        private JsonContactsListIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"riyadh-h"},"content":"        public void saveContactsList(ReadOnlyContactsList addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"godjuansan":4,"riyadh-h":25,"XindiTian":31,"-":120}},{"path":"src/test/java/seedu/dictionote/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.testutil.ContactBuilder;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"        model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"        Model expectedModel \u003d new ModelManager(model.getContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"        expectedModel.addContact(validContact);","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"        assertCommandSuccess(new AddContactCommand(validContact), model,","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"                String.format(AddContactCommand.MESSAGE_SUCCESS, validContact), expectedModel);","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"        Contact contactInList \u003d model.getContactsList().getContactList().get(0);","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"        assertCommandFailure(new AddContactCommand(contactInList), model, AddContactCommand.MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"godjuansan":7,"riyadh-h":4,"XindiTian":11,"-":28}},{"path":"src/test/java/seedu/dictionote/logic/commands/AddContactCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.DefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Dictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.NoteBook;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.ContactBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"public class AddContactCommandIntegrationTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"        model \u003d new ModelManager(getTypicalContactsList(),","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"                new UserPrefs(), new NoteBook(), new Dictionary(), new DefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"    public void execute_newContact_success() {","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"        Model expectedModel \u003d new ModelManager(model.getContactsList(),","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"                new UserPrefs(), new NoteBook(), new Dictionary(), new DefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.addContact(validContact);","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(new AddContactCommand(validContact), model,","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"                String.format(AddContactCommand.MESSAGE_SUCCESS, validContact), expectedModel);","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"    public void execute_duplicateContact_throwsCommandException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"        Contact contactInList \u003d model.getContactsList().getContactList().get(0);","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"        assertCommandFailure(new AddContactCommand(contactInList), model, AddContactCommand.MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"godjuansan":1,"riyadh-h":14,"XindiTian":10,"-":25}},{"path":"src/test/java/seedu/dictionote/logic/commands/AddContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.GuiSettings;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.ReadOnlyNoteBook;","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.DisplayableContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.ContactBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.ui.DictionaryContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.ui.NoteContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"public class AddContactCommandTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"    public void constructor_nullContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddContactCommand(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"    public void execute_contactAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"        ModelStubAcceptingContactAdded modelStub \u003d new ModelStubAcceptingContactAdded();","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"        CommandResult commandResult \u003d new AddContactCommand(validContact).execute(modelStub);","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(String.format(AddContactCommand.MESSAGE_SUCCESS, validContact), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(Arrays.asList(validContact), modelStub.contactsAdded);","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"    public void execute_duplicateContact_throwsCommandException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"        AddContactCommand addContactCommand \u003d new AddContactCommand(validContact);","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"        ModelStub modelStub \u003d new ModelStubWithContact(validContact);","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"riyadh-h"},"content":"                AddContactCommand.MESSAGE_DUPLICATE_CONTACT, () -\u003e addContactCommand.execute(modelStub));","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"riyadh-h"},"content":"        Contact alice \u003d new ContactBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"riyadh-h"},"content":"        Contact bob \u003d new ContactBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"        AddContactCommand addAliceCommand \u003d new AddContactCommand(alice);","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"        AddContactCommand addBobCommand \u003d new AddContactCommand(bob);","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"riyadh-h"},"content":"        AddContactCommand addAliceCommandCopy \u003d new AddContactCommand(alice);","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"riyadh-h"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"riyadh-h"},"content":"        public Path getContactsListFilePath() {","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"jessen11"},"content":"        public void setNote(Note oldNote, Note newNote) {","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"        public void setNoteContentConfig(NoteContentConfig noteContentConfig) {","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"riyadh-h"},"content":"        public void setContactsFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"riyadh-h"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2021-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"riyadh-h"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"riyadh-h"},"content":"        public void emailContact(Contact contact) {","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"riyadh-h"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"riyadh-h"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"riyadh-h"},"content":"        public void sortContactsByFrequencyCounter() {","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"riyadh-h"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"riyadh-h"},"content":"        public void setContactsList(ReadOnlyContactsList newData) {","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"riyadh-h"},"content":"        public ReadOnlyContactsList getContactsList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":157,"author":{"gitId":"jessen11"},"content":"        public Path getNoteBookFilePath() {","lastModifiedDate":"2021-03-06"},{"lineNumber":158,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":159,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":160,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":161,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"XindiTian"},"content":"        public Path getDictionaryFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"XindiTian"},"content":"        public Path getDefinitionBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"riyadh-h"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2021-03-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"riyadh-h"},"content":"        public void deleteContact(Contact target) {","lastModifiedDate":"2021-03-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"riyadh-h"},"content":"        public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2021-03-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":187,"author":{"gitId":"jessen11"},"content":"        public void setNoteBookFilePath(Path path) {","lastModifiedDate":"2021-03-06"},{"lineNumber":188,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":189,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":190,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":191,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"XindiTian"},"content":"        public void setDictionaryFilePath(Path path) {","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"XindiTian"},"content":"        public void setDefinitionBookFilePath(Path path) {","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"riyadh-h"},"content":"        public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2021-03-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"riyadh-h"},"content":"        public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2021-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":211,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":212,"author":{"gitId":"jessen11"},"content":"        public void updateFilteredNoteList(Predicate\u003cNote\u003e predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":213,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":214,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":215,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":216,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":217,"author":{"gitId":"XindiTian"},"content":"        public void updateFilteredContentList(Predicate\u003cContent\u003e predicate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":218,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"godjuansan"},"content":"        @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":222,"author":{"gitId":"XindiTian"},"content":"        public void updateFilteredDefinitionList(Predicate\u003cDefinition\u003e predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":223,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":224,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":225,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":226,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":227,"author":{"gitId":"XindiTian"},"content":"        public ReadOnlyDictionary getDictionary() {","lastModifiedDate":"2021-03-15"},{"lineNumber":228,"author":{"gitId":"godjuansan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-03"},{"lineNumber":229,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":230,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":231,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":232,"author":{"gitId":"XindiTian"},"content":"        public boolean hasContent(Content content) {","lastModifiedDate":"2021-03-14"},{"lineNumber":233,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":234,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":235,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":236,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":237,"author":{"gitId":"XindiTian"},"content":"        public void addContent(Content content) {","lastModifiedDate":"2021-03-15"},{"lineNumber":238,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":239,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":240,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":241,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":242,"author":{"gitId":"XindiTian"},"content":"        public ObservableList\u003cContent\u003e getFilteredContentList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":243,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":244,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":245,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":246,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":247,"author":{"gitId":"XindiTian"},"content":"        public ReadOnlyDefinitionBook getDefinitionBook() {","lastModifiedDate":"2021-03-15"},{"lineNumber":248,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":249,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":250,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":251,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":252,"author":{"gitId":"XindiTian"},"content":"        public boolean hasDefinition(Definition definition) {","lastModifiedDate":"2021-03-15"},{"lineNumber":253,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":254,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":255,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":256,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":257,"author":{"gitId":"XindiTian"},"content":"        public void addDefinition(Definition definition) {","lastModifiedDate":"2021-03-15"},{"lineNumber":258,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":259,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":260,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":261,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":262,"author":{"gitId":"TeoHoeKeat"},"content":"        public void showDictionaryContent(DisplayableContent content) {","lastModifiedDate":"2021-03-16"},{"lineNumber":263,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":264,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":265,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":266,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":267,"author":{"gitId":"TeoHoeKeat"},"content":"        public void setDictionaryContentConfig(DictionaryContentConfig dictionaryContentConfig) {","lastModifiedDate":"2021-03-16"},{"lineNumber":268,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":269,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":270,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":271,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":272,"author":{"gitId":"XindiTian"},"content":"        public ObservableList\u003cDefinition\u003e getFilteredDefinitionList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":273,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":274,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":275,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":276,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":277,"author":{"gitId":"TeoHoeKeat"},"content":"        public ObservableList\u003c? extends DisplayableContent\u003e getFilteredCurrentDictionaryList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":278,"author":{"gitId":"TeoHoeKeat"},"content":"            return null;","lastModifiedDate":"2021-03-16"},{"lineNumber":279,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":280,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":281,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":282,"author":{"gitId":"XindiTian"},"content":"        public ReadOnlyNoteBook getNoteBook() {","lastModifiedDate":"2021-03-15"},{"lineNumber":283,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":284,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":285,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":286,"author":{"gitId":"godjuansan"},"content":"        @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":287,"author":{"gitId":"godjuansan"},"content":"        public boolean hasNote(Note note) {","lastModifiedDate":"2021-03-03"},{"lineNumber":288,"author":{"gitId":"godjuansan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-03"},{"lineNumber":289,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":290,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":291,"author":{"gitId":"godjuansan"},"content":"        @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":292,"author":{"gitId":"godjuansan"},"content":"        public void addNote(Note note) {","lastModifiedDate":"2021-03-03"},{"lineNumber":293,"author":{"gitId":"godjuansan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-03"},{"lineNumber":294,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":295,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":296,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":297,"author":{"gitId":"jessen11"},"content":"        public void deleteNote(Note note) {","lastModifiedDate":"2021-03-12"},{"lineNumber":298,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":299,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":300,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":301,"author":{"gitId":"godjuansan"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":302,"author":{"gitId":"godjuansan"},"content":"        public void showNote(Note target) {","lastModifiedDate":"2021-03-15"},{"lineNumber":303,"author":{"gitId":"godjuansan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":304,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":305,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":306,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":307,"author":{"gitId":"TeoHoeKeat"},"content":"        public boolean hasNoteShown() {","lastModifiedDate":"2021-03-22"},{"lineNumber":308,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":309,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":310,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":311,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":312,"author":{"gitId":"TeoHoeKeat"},"content":"        public void resetNoteShown() {","lastModifiedDate":"2021-03-22"},{"lineNumber":313,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":314,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":315,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":316,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":317,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":318,"author":{"gitId":"TeoHoeKeat"},"content":"        public Note getNoteShown() {","lastModifiedDate":"2021-03-22"},{"lineNumber":319,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":320,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":321,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":322,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":323,"author":{"gitId":"TeoHoeKeat"},"content":"        public String getEditedNoteShownContent() {","lastModifiedDate":"2021-03-22"},{"lineNumber":324,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":325,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":326,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":327,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":328,"author":{"gitId":"TeoHoeKeat"},"content":"        public boolean onEditModeNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":329,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":330,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":331,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":332,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":333,"author":{"gitId":"jessen11"},"content":"        public ObservableList\u003cNote\u003e getFilteredNoteList() {","lastModifiedDate":"2021-03-06"},{"lineNumber":334,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":335,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":336,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":337,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":338,"author":{"gitId":"jessen11"},"content":"        public void sortNoteByTime() {","lastModifiedDate":"2021-03-28"},{"lineNumber":339,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":340,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":341,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":342,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":343,"author":{"gitId":"jessen11"},"content":"        public void sortNote() {","lastModifiedDate":"2021-03-23"},{"lineNumber":344,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-23"},{"lineNumber":345,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":346,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":347,"author":{"gitId":"godjuansan"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":348,"author":{"gitId":"godjuansan"},"content":"        public void mergeNote(Note firstNote, Note secondNote) {","lastModifiedDate":"2021-03-28"},{"lineNumber":349,"author":{"gitId":"godjuansan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":350,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":354,"author":{"gitId":"riyadh-h"},"content":"     * A Model stub that contains a single contact.","lastModifiedDate":"2021-03-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":356,"author":{"gitId":"riyadh-h"},"content":"    private class ModelStubWithContact extends ModelStub {","lastModifiedDate":"2021-03-07"},{"lineNumber":357,"author":{"gitId":"riyadh-h"},"content":"        private final Contact contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":359,"author":{"gitId":"riyadh-h"},"content":"        ModelStubWithContact(Contact contact) {","lastModifiedDate":"2021-03-07"},{"lineNumber":360,"author":{"gitId":"riyadh-h"},"content":"            requireNonNull(contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":361,"author":{"gitId":"riyadh-h"},"content":"            this.contact \u003d contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":365,"author":{"gitId":"riyadh-h"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2021-03-07"},{"lineNumber":366,"author":{"gitId":"riyadh-h"},"content":"            requireNonNull(contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":367,"author":{"gitId":"riyadh-h"},"content":"            return this.contact.isSameContact(contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":372,"author":{"gitId":"riyadh-h"},"content":"     * A Model stub that always accept the contact being added.","lastModifiedDate":"2021-03-07"},{"lineNumber":373,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":374,"author":{"gitId":"riyadh-h"},"content":"    private class ModelStubAcceptingContactAdded extends ModelStub {","lastModifiedDate":"2021-03-07"},{"lineNumber":375,"author":{"gitId":"riyadh-h"},"content":"        final ArrayList\u003cContact\u003e contactsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":378,"author":{"gitId":"riyadh-h"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2021-03-07"},{"lineNumber":379,"author":{"gitId":"riyadh-h"},"content":"            requireNonNull(contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":380,"author":{"gitId":"riyadh-h"},"content":"            return contactsAdded.stream().anyMatch(contact::isSameContact);","lastModifiedDate":"2021-03-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":384,"author":{"gitId":"riyadh-h"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2021-03-07"},{"lineNumber":385,"author":{"gitId":"riyadh-h"},"content":"            requireNonNull(contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":386,"author":{"gitId":"riyadh-h"},"content":"            contactsAdded.add(contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":390,"author":{"gitId":"riyadh-h"},"content":"        public ReadOnlyContactsList getContactsList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":391,"author":{"gitId":"riyadh-h"},"content":"            return new ContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":393,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":394,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":395,"author":{"gitId":"jessen11"},"content":"        public void sortNote() {","lastModifiedDate":"2021-03-23"},{"lineNumber":396,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-23"},{"lineNumber":397,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":400,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"TeoHoeKeat":49,"jessen11":44,"godjuansan":27,"riyadh-h":65,"XindiTian":81,"-":134}},{"path":"src/test/java/seedu/dictionote/logic/commands/AddNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.NoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyNoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.DisplayableContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.testutil.NoteBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.ui.DictionaryContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.ui.NoteContentConfig;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"public class AddNoteCommandTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddNoteCommand(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"    public void execute_noteAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"        ModelStubAcceptingNoteAdded modelStub \u003d new ModelStubAcceptingNoteAdded();","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"        Note validNote \u003d new NoteBuilder().build();","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"        CommandResult commandResult \u003d new AddNoteCommand(validNote).execute(modelStub);","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"        assertEquals(Arrays.asList(validNote), modelStub.noteAdded);","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"    public void execute_duplicateNote_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"        Note validNote \u003d new NoteBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(validNote);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"        AddNoteCommandTest.ModelStub modelStub \u003d new AddNoteCommandTest.ModelStubWithNote(validNote);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"                AddNoteCommand.MESSAGE_DUPLICATE_NOTE, () -\u003e addNoteCommand.execute(modelStub));","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"    public void equals() {","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"        Note note \u003d new NoteBuilder(new Note(\"2103\", tags)).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"        Note otherNote \u003d new NoteBuilder(new Note(\"cs2103T\", tags)).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(note);","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"        AddNoteCommand addOtherNoteCommand \u003d new AddNoteCommand(otherNote);","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"        assertTrue(addNoteCommand.equals(addNoteCommand));","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"        AddNoteCommand addNoteCommandCopy \u003d new AddNoteCommand(note);","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"        assertTrue(addNoteCommand.equals(addNoteCommandCopy));","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":"        assertFalse(addNoteCommand.equals(1));","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"        assertFalse(addNoteCommand.equals(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":"        assertFalse(addNoteCommand.equals(addOtherNoteCommand));","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":89,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":90,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":91,"author":{"gitId":"jessen11"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-03-06"},{"lineNumber":92,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":93,"author":{"gitId":"jessen11"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-03-06"},{"lineNumber":94,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":95,"author":{"gitId":"jessen11"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-06"},{"lineNumber":96,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":97,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":98,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":99,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":100,"author":{"gitId":"jessen11"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-06"},{"lineNumber":101,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":102,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":103,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":104,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":105,"author":{"gitId":"jessen11"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-06"},{"lineNumber":106,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":107,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":108,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":109,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":110,"author":{"gitId":"jessen11"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-06"},{"lineNumber":111,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":112,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":113,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":114,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":115,"author":{"gitId":"riyadh-h"},"content":"        public Path getContactsListFilePath() {","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":117,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":118,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":119,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"XindiTian"},"content":"        public void setNote(Note oldNote, Note newNote) {","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"        public void setNoteContentConfig(NoteContentConfig noteContentConfig) {","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":130,"author":{"gitId":"riyadh-h"},"content":"        public void setContactsFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":132,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":133,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":134,"author":{"gitId":"godjuansan"},"content":"        @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"godjuansan"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2021-03-09"},{"lineNumber":136,"author":{"gitId":"godjuansan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":139,"author":{"gitId":"riyadh-h"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"riyadh-h"},"content":"        public void emailContact(Contact contact) {","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"riyadh-h"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"riyadh-h"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"riyadh-h"},"content":"        public void sortContactsByFrequencyCounter() {","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"riyadh-h"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":150,"author":{"gitId":"riyadh-h"},"content":"        public void setContactsList(ReadOnlyContactsList newData) {","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":152,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":153,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":154,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":155,"author":{"gitId":"riyadh-h"},"content":"        public ReadOnlyContactsList getContactsList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":157,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":158,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":159,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":160,"author":{"gitId":"jessen11"},"content":"        public Path getNoteBookFilePath() {","lastModifiedDate":"2021-03-06"},{"lineNumber":161,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":162,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":163,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":164,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"XindiTian"},"content":"        public Path getDictionaryFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"XindiTian"},"content":"        public Path getDefinitionBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":175,"author":{"gitId":"godjuansan"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2021-03-09"},{"lineNumber":176,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":177,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":178,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":179,"author":{"gitId":"godjuansan"},"content":"        @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":180,"author":{"gitId":"riyadh-h"},"content":"        public void deleteContact(Contact target) {","lastModifiedDate":"2021-03-09"},{"lineNumber":181,"author":{"gitId":"godjuansan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-09"},{"lineNumber":182,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":183,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":184,"author":{"gitId":"godjuansan"},"content":"        @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":185,"author":{"gitId":"riyadh-h"},"content":"        public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2021-03-11"},{"lineNumber":186,"author":{"gitId":"godjuansan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-09"},{"lineNumber":187,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":188,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":189,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":190,"author":{"gitId":"jessen11"},"content":"        public void setNoteBookFilePath(Path path) {","lastModifiedDate":"2021-03-06"},{"lineNumber":191,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":192,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":193,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":194,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"XindiTian"},"content":"        public void setDictionaryFilePath(Path path) {","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"XindiTian"},"content":"        public void setDefinitionBookFilePath(Path path) {","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":202,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":203,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":204,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":205,"author":{"gitId":"riyadh-h"},"content":"        public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2021-03-11"},{"lineNumber":206,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":207,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":208,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":209,"author":{"gitId":"godjuansan"},"content":"        @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":210,"author":{"gitId":"riyadh-h"},"content":"        public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2021-03-11"},{"lineNumber":211,"author":{"gitId":"godjuansan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-09"},{"lineNumber":212,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":213,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":214,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":215,"author":{"gitId":"jessen11"},"content":"        public void updateFilteredNoteList(Predicate\u003cNote\u003e predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":216,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":217,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":218,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":219,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"XindiTian"},"content":"        public void updateFilteredContentList(Predicate\u003cContent\u003e predicate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":222,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":223,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":224,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":225,"author":{"gitId":"XindiTian"},"content":"        public void updateFilteredDefinitionList(Predicate\u003cDefinition\u003e predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":226,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":227,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":228,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":229,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":230,"author":{"gitId":"XindiTian"},"content":"        public ReadOnlyDictionary getDictionary() {","lastModifiedDate":"2021-03-15"},{"lineNumber":231,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":232,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":233,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":234,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":235,"author":{"gitId":"XindiTian"},"content":"        public boolean hasContent(Content content) {","lastModifiedDate":"2021-03-14"},{"lineNumber":236,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":237,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":238,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":239,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":240,"author":{"gitId":"XindiTian"},"content":"        public void addContent(Content content) {","lastModifiedDate":"2021-03-15"},{"lineNumber":241,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":242,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":243,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":244,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":245,"author":{"gitId":"XindiTian"},"content":"        public ObservableList\u003cContent\u003e getFilteredContentList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":246,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":247,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":248,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":249,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":250,"author":{"gitId":"XindiTian"},"content":"        public ReadOnlyDefinitionBook getDefinitionBook() {","lastModifiedDate":"2021-03-15"},{"lineNumber":251,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":252,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":253,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":254,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":255,"author":{"gitId":"XindiTian"},"content":"        public boolean hasDefinition(Definition definition) {","lastModifiedDate":"2021-03-15"},{"lineNumber":256,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":257,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":258,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":259,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":260,"author":{"gitId":"XindiTian"},"content":"        public void addDefinition(Definition definition) {","lastModifiedDate":"2021-03-15"},{"lineNumber":261,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":262,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":263,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":264,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":265,"author":{"gitId":"TeoHoeKeat"},"content":"        public void showDictionaryContent(DisplayableContent content) {","lastModifiedDate":"2021-03-16"},{"lineNumber":266,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":267,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":268,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":269,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":270,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":271,"author":{"gitId":"TeoHoeKeat"},"content":"        public void setDictionaryContentConfig(DictionaryContentConfig dictionaryContentConfig) {","lastModifiedDate":"2021-03-16"},{"lineNumber":272,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":273,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":274,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":275,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":276,"author":{"gitId":"XindiTian"},"content":"        public ObservableList\u003cDefinition\u003e getFilteredDefinitionList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":277,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":278,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":279,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":280,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":281,"author":{"gitId":"TeoHoeKeat"},"content":"        public ObservableList\u003c? extends DisplayableContent\u003e getFilteredCurrentDictionaryList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":282,"author":{"gitId":"TeoHoeKeat"},"content":"            return null;","lastModifiedDate":"2021-03-16"},{"lineNumber":283,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":284,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":285,"author":{"gitId":"XindiTian"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":286,"author":{"gitId":"XindiTian"},"content":"        public ReadOnlyNoteBook getNoteBook() {","lastModifiedDate":"2021-03-15"},{"lineNumber":287,"author":{"gitId":"XindiTian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":288,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":289,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":290,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":291,"author":{"gitId":"jessen11"},"content":"        public boolean hasNote(Note note) {","lastModifiedDate":"2021-03-06"},{"lineNumber":292,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":293,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":294,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":295,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":296,"author":{"gitId":"jessen11"},"content":"        public void addNote(Note note) {","lastModifiedDate":"2021-03-06"},{"lineNumber":297,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":298,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":299,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":300,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":301,"author":{"gitId":"jessen11"},"content":"        public void deleteNote(Note note) {","lastModifiedDate":"2021-03-12"},{"lineNumber":302,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":303,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":304,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":305,"author":{"gitId":"godjuansan"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":306,"author":{"gitId":"godjuansan"},"content":"        public void showNote(Note target) {","lastModifiedDate":"2021-03-15"},{"lineNumber":307,"author":{"gitId":"godjuansan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":308,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":309,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":310,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":311,"author":{"gitId":"TeoHoeKeat"},"content":"        public boolean hasNoteShown() {","lastModifiedDate":"2021-03-22"},{"lineNumber":312,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":313,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":314,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":315,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":316,"author":{"gitId":"TeoHoeKeat"},"content":"        public void resetNoteShown() {","lastModifiedDate":"2021-03-22"},{"lineNumber":317,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":318,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":319,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":320,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":321,"author":{"gitId":"TeoHoeKeat"},"content":"        public Note getNoteShown() {","lastModifiedDate":"2021-03-22"},{"lineNumber":322,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":323,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":324,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":325,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":326,"author":{"gitId":"TeoHoeKeat"},"content":"        public String getEditedNoteShownContent() {","lastModifiedDate":"2021-03-22"},{"lineNumber":327,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":328,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":329,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":330,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":331,"author":{"gitId":"TeoHoeKeat"},"content":"        public boolean onEditModeNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":332,"author":{"gitId":"TeoHoeKeat"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":333,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":334,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":335,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":336,"author":{"gitId":"jessen11"},"content":"        public ObservableList\u003cNote\u003e getFilteredNoteList() {","lastModifiedDate":"2021-03-06"},{"lineNumber":337,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":338,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":339,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":340,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":341,"author":{"gitId":"jessen11"},"content":"        public void sortNote() {","lastModifiedDate":"2021-03-23"},{"lineNumber":342,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-23"},{"lineNumber":343,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":344,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":345,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":346,"author":{"gitId":"jessen11"},"content":"        public void sortNoteByTime() {","lastModifiedDate":"2021-03-28"},{"lineNumber":347,"author":{"gitId":"jessen11"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":348,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":349,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":350,"author":{"gitId":"godjuansan"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":351,"author":{"gitId":"godjuansan"},"content":"        public void mergeNote(Note firstNote, Note secondNote) {","lastModifiedDate":"2021-03-28"},{"lineNumber":352,"author":{"gitId":"godjuansan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":353,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":354,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":355,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":356,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":357,"author":{"gitId":"jessen11"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2021-03-06"},{"lineNumber":358,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":359,"author":{"gitId":"jessen11"},"content":"    private class ModelStubWithNote extends ModelStub {","lastModifiedDate":"2021-03-06"},{"lineNumber":360,"author":{"gitId":"jessen11"},"content":"        private final Note note;","lastModifiedDate":"2021-03-06"},{"lineNumber":361,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":362,"author":{"gitId":"jessen11"},"content":"        ModelStubWithNote(Note note) {","lastModifiedDate":"2021-03-06"},{"lineNumber":363,"author":{"gitId":"jessen11"},"content":"            requireNonNull(note);","lastModifiedDate":"2021-03-06"},{"lineNumber":364,"author":{"gitId":"jessen11"},"content":"            this.note \u003d note;","lastModifiedDate":"2021-03-06"},{"lineNumber":365,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":366,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":367,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":368,"author":{"gitId":"jessen11"},"content":"        public boolean hasNote(Note note) {","lastModifiedDate":"2021-03-06"},{"lineNumber":369,"author":{"gitId":"jessen11"},"content":"            requireNonNull(note);","lastModifiedDate":"2021-03-06"},{"lineNumber":370,"author":{"gitId":"jessen11"},"content":"            return this.note.isSameNote(note);","lastModifiedDate":"2021-03-06"},{"lineNumber":371,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":372,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":373,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":374,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":375,"author":{"gitId":"jessen11"},"content":"     * A Model stub that always accept the note being added.","lastModifiedDate":"2021-03-06"},{"lineNumber":376,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":377,"author":{"gitId":"jessen11"},"content":"    private class ModelStubAcceptingNoteAdded extends ModelStub {","lastModifiedDate":"2021-03-06"},{"lineNumber":378,"author":{"gitId":"jessen11"},"content":"        final ArrayList\u003cNote\u003e noteAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-06"},{"lineNumber":379,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":380,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":381,"author":{"gitId":"jessen11"},"content":"        public boolean hasNote(Note note) {","lastModifiedDate":"2021-03-06"},{"lineNumber":382,"author":{"gitId":"jessen11"},"content":"            requireNonNull(note);","lastModifiedDate":"2021-03-06"},{"lineNumber":383,"author":{"gitId":"jessen11"},"content":"            return noteAdded.stream().anyMatch(note::isSameNote);","lastModifiedDate":"2021-03-06"},{"lineNumber":384,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":385,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":386,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":387,"author":{"gitId":"jessen11"},"content":"        public void addNote(Note note) {","lastModifiedDate":"2021-03-06"},{"lineNumber":388,"author":{"gitId":"jessen11"},"content":"            requireNonNull(note);","lastModifiedDate":"2021-03-06"},{"lineNumber":389,"author":{"gitId":"jessen11"},"content":"            noteAdded.add(note);","lastModifiedDate":"2021-03-06"},{"lineNumber":390,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":391,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":392,"author":{"gitId":"jessen11"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":393,"author":{"gitId":"jessen11"},"content":"        public ReadOnlyNoteBook getNoteBook() {","lastModifiedDate":"2021-03-06"},{"lineNumber":394,"author":{"gitId":"jessen11"},"content":"            return new NoteBook();","lastModifiedDate":"2021-03-06"},{"lineNumber":395,"author":{"gitId":"jessen11"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":396,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":397,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":398,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"TeoHoeKeat":50,"jessen11":215,"godjuansan":30,"riyadh-h":19,"XindiTian":84}},{"path":"src/test/java/seedu/dictionote/logic/commands/ClearContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"public class ClearContactCommandTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"    public void execute_emptyContactsList_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(new ClearContactCommand(), model, ClearContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    public void execute_nonEmptyContactsList_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"        Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.setContactsList(new ContactsList());","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(new ClearContactCommand(), model, ClearContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"riyadh-h":10,"XindiTian":10,"-":17}},{"path":"src/test/java/seedu/dictionote/logic/commands/CloseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CloseCommand.SHOWING_CLOSE_MESSAGE;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"public class CloseCommandTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_close_success() {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        for (UiActionOption uiActionOption : UiActionOption.values()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_CLOSE_MESSAGE,","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"                UiAction.CLOSE, uiActionOption);","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"            assertCommandSuccess(new CloseCommand(uiActionOption), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":25}},{"path":"src/test/java/seedu/dictionote/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", UiAction.NONE)));","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", UiAction.HELP).hashCode());","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", UiAction.EXIT).hashCode());","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"TeoHoeKeat":5,"XindiTian":1,"-":44}},{"path":"src/test/java/seedu/dictionote/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_CONTENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.EditContactDescriptorBuilder;","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.testutil.EditNoteDescriptorBuilder;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"    public static final String VALID_NOTE_CONTENT \u003d \"My love, I have been waiting for you\";","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"    public static final String VALID_REPLACED_NOTE_CONTENT \u003d \"I have changed this note\";","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"    public static final String NOTE_DESC \u003d \" \" + PREFIX_CONTENT + VALID_NOTE_CONTENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"    public static final String NOTE_REPLACE_DESC \u003d \" \" + PREFIX_CONTENT + VALID_REPLACED_NOTE_CONTENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"    public static final String PREAMBLE_NOTE \u003d \"c/\";","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"riyadh-h"},"content":"    public static final EditContactCommand.EditContactDescriptor DESC_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"    public static final EditContactCommand.EditContactDescriptor DESC_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"    public static final EditNoteCommand.EditNoteDescriptor DESC_NOTE;","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"    public static final EditNoteCommand.EditNoteDescriptor DESC_REPLACED_NOTE;","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"riyadh-h"},"content":"        DESC_AMY \u003d new EditContactDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"        DESC_BOB \u003d new EditContactDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":"        DESC_NOTE \u003d new EditNoteDescriptorBuilder().withNote(VALID_NOTE_CONTENT).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"        DESC_REPLACED_NOTE \u003d new EditNoteDescriptorBuilder().withNote(VALID_REPLACED_NOTE_CONTENT).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"XindiTian"},"content":"     * - the dictionote book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2021-02-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"riyadh-h"},"content":"        ContactsList expectedContactsList \u003d new ContactsList(actualModel.getContactsList());","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"riyadh-h"},"content":"        List\u003cContact\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredContactList());","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":126,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(expectedContactsList, actualModel.getContactsList());","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredContactList());","lastModifiedDate":"2021-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"riyadh-h"},"content":"     * Updates {@code model}\u0027s filtered list to show only the contact at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-09"},{"lineNumber":132,"author":{"gitId":"XindiTian"},"content":"     * {@code model}\u0027s dictionote book.","lastModifiedDate":"2021-02-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"riyadh-h"},"content":"    public static void showContactAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-11"},{"lineNumber":135,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredContactList().size());","lastModifiedDate":"2021-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"riyadh-h"},"content":"        Contact contact \u003d model.getFilteredContactList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-11"},{"lineNumber":138,"author":{"gitId":"riyadh-h"},"content":"        final String[] splitName \u003d contact.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"riyadh-h"},"content":"        model.updateFilteredContactList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(1, model.getFilteredContactList().size());","lastModifiedDate":"2021-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"godjuansan"},"content":"     * Updates {@code model}\u0027s filtered list to show only the note at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"godjuansan"},"content":"     * {@code model}\u0027s dictionote book.","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"godjuansan"},"content":"    public static void showNoteAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"godjuansan"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredNoteList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"godjuansan"},"content":"        Note note \u003d model.getFilteredNoteList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"godjuansan"},"content":"        Predicate\u003cNote\u003e showSelectedNotesPredicate \u003d x -\u003e x.equals(note);","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"godjuansan"},"content":"        model.updateFilteredNoteList(showSelectedNotesPredicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"godjuansan"},"content":"        assertEquals(1, model.getFilteredNoteList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"godjuansan"},"content":"     * Updates {@code model}\u0027s filtered list to show only the note at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"godjuansan"},"content":"     * {@code model}\u0027s dictionote book.","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"godjuansan"},"content":"    public static void showNoteAtTwoIndexes(Model model, Index firstTargetIndex, Index secondTargetIndex) {","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"godjuansan"},"content":"        assertTrue(firstTargetIndex.getZeroBased() \u003c model.getFilteredNoteList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"godjuansan"},"content":"        assertTrue(secondTargetIndex.getZeroBased() \u003c model.getFilteredNoteList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"godjuansan"},"content":"        Note firstNote \u003d model.getFilteredNoteList().get(firstTargetIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"godjuansan"},"content":"        Note secondNote \u003d model.getFilteredNoteList().get(secondTargetIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"godjuansan"},"content":"        Predicate\u003cNote\u003e showSelectedNotesPredicate \u003d x -\u003e (x.equals(firstNote) || x.equals(secondNote));","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"godjuansan"},"content":"        model.updateFilteredNoteList(showSelectedNotesPredicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"godjuansan"},"content":"        assertEquals(2, model.getFilteredNoteList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"TeoHoeKeat"},"content":"     * Updates {@code model}\u0027s filtered list to show only the content at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"TeoHoeKeat"},"content":"     * {@code model}\u0027s dictionote book.","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"TeoHoeKeat"},"content":"    public static void showContentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredContentList().size());","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"TeoHoeKeat"},"content":"        Content content \u003d model.getFilteredContentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"TeoHoeKeat"},"content":"        Predicate\u003cNote\u003e showSelectedContentsPredicate \u003d x -\u003e x.equals(content);","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"TeoHoeKeat"},"content":"        model.updateFilteredNoteList(showSelectedContentsPredicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":187,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(1, model.getFilteredContentList().size());","lastModifiedDate":"2021-03-16"},{"lineNumber":188,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"TeoHoeKeat":16,"jessen11":12,"godjuansan":34,"riyadh-h":19,"XindiTian":12,"-":97}},{"path":"src/test/java/seedu/dictionote/logic/commands/DeleteContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.showContactAtIndex;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_SECOND_CONTACT;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"public class DeleteContactCommandTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"            getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"        Contact contactToDelete \u003d model.getFilteredContactList().get(INDEX_FIRST_CONTACT.getZeroBased());","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_CONTACT_SUCCESS, contactToDelete);","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.deleteContact(contactToDelete);","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(deleteContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredContactList().size() + 1);","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"        showContactAtIndex(model, INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"        Contact contactToDelete \u003d model.getFilteredContactList().get(INDEX_FIRST_CONTACT.getZeroBased());","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"riyadh-h"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_CONTACT_SUCCESS, contactToDelete);","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"        Model expectedModel \u003d new ModelManager(model.getContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.deleteContact(contactToDelete);","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"        showNoContact(expectedModel);","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(deleteContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"riyadh-h"},"content":"        showContactAtIndex(model, INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"riyadh-h"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CONTACT;","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"XindiTian"},"content":"        // ensures that outOfBoundIndex is still in bounds of dictionote book list","lastModifiedDate":"2021-02-27"},{"lineNumber":78,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getContactsList().getContactList().size());","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"riyadh-h"},"content":"        DeleteContactCommand deleteFirstCommand \u003d new DeleteContactCommand(INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"riyadh-h"},"content":"        DeleteContactCommand deleteSecondCommand \u003d new DeleteContactCommand(INDEX_SECOND_CONTACT);","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"riyadh-h"},"content":"        DeleteContactCommand deleteFirstCommandCopy \u003d new DeleteContactCommand(INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"riyadh-h"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"riyadh-h"},"content":"    private void showNoContact(Model model) {","lastModifiedDate":"2021-03-09"},{"lineNumber":111,"author":{"gitId":"riyadh-h"},"content":"        model.updateFilteredContactList(p -\u003e false);","lastModifiedDate":"2021-03-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(model.getFilteredContactList().isEmpty());","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"godjuansan":1,"riyadh-h":36,"XindiTian":14,"-":64}},{"path":"src/test/java/seedu/dictionote/logic/commands/DeleteNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.showNoteAtIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_SECOND_NOTE;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.testutil.TypicalNoteContentConfig;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":" * {@code DeleteNoteCommand}.","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"public class DeleteNoteCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"            getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    public void init() {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigWithNote());","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_onEditMode_fail() {","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        Model editModeModel \u003d new ModelManager();","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        editModeModel.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigEditMode());","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandFailure(new DeleteNoteCommand(INDEX_FIRST_NOTE), editModeModel,","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"            Messages.MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"        Note noteToDelete \u003d model.getFilteredNoteList().get(INDEX_FIRST_NOTE.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"        String expectedMessage \u003d String.format(DeleteNoteCommand.MESSAGE_DELETE_NOTE_SUCCESS, noteToDelete);","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"        expectedModel.deleteNote(noteToDelete);","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"        assertCommandSuccess(deleteNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredNoteList().size() + 1);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"        assertCommandFailure(deleteNoteCommand, model, Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"godjuansan"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"godjuansan"},"content":"        showNoteAtIndex(model, INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"godjuansan"},"content":"        Note noteToDelete \u003d model.getFilteredNoteList().get(INDEX_FIRST_NOTE.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"godjuansan"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"godjuansan"},"content":"        String expectedMessage \u003d String.format(DeleteNoteCommand.MESSAGE_DELETE_NOTE_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"godjuansan"},"content":"                noteToDelete);","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"riyadh-h"},"content":"        Model expectedModel \u003d new ModelManager(model.getContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"godjuansan"},"content":"        expectedModel.deleteNote(noteToDelete);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"godjuansan"},"content":"        showNoNote(expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"godjuansan"},"content":"        assertCommandSuccess(deleteNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"godjuansan"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"godjuansan"},"content":"        showNoteAtIndex(model, INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"godjuansan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_NOTE;","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"godjuansan"},"content":"        // ensures that outOfBoundIndex is still in bounds of dictionote book list","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"godjuansan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getNoteBook().getNoteList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"jessen11"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"jessen11"},"content":"        assertCommandFailure(deleteNoteCommand, model, Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"jessen11"},"content":"    public void equals() {","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"godjuansan"},"content":"        DeleteNoteCommand deleteFirstCommand \u003d new DeleteNoteCommand(INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"godjuansan"},"content":"        DeleteNoteCommand deleteSecondCommand \u003d new DeleteNoteCommand(INDEX_SECOND_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"jessen11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"jessen11"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"jessen11"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"godjuansan"},"content":"        DeleteNoteCommand deleteFirstCommandCopy \u003d new DeleteNoteCommand(INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"jessen11"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"jessen11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"jessen11"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-03-12"},{"lineNumber":116,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"jessen11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"jessen11"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"godjuansan"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"jessen11"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":123,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"jessen11"},"content":"     * Updates {@code model}\u0027s filtered list to show no note.","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"jessen11"},"content":"    private void showNoNote(Model model) {","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"godjuansan"},"content":"        model.updateFilteredNoteList(p -\u003e false);","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"godjuansan"},"content":"        assertTrue(model.getFilteredNoteList().isEmpty());","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"TeoHoeKeat":15,"jessen11":69,"godjuansan":39,"riyadh-h":4,"XindiTian":5}},{"path":"src/test/java/seedu/dictionote/logic/commands/EditContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.showContactAtIndex;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_SECOND_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.ContactBuilder;","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.EditContactDescriptorBuilder;","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"public class EditContactCommandTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"            getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"        Contact editedContact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder(editedContact).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_CONTACT, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_CONTACT_SUCCESS, editedContact);","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"        Model expectedModel \u003d new ModelManager(new ContactsList(model.getContactsList()),","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"                new UserPrefs(), model.getNoteBook(), model.getDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.setContact(model.getFilteredContactList().get(0), editedContact);","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"riyadh-h"},"content":"        Index indexLastContact \u003d Index.fromOneBased(model.getFilteredContactList().size());","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"        Contact lastContact \u003d model.getFilteredContactList().get(indexLastContact.getZeroBased());","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"riyadh-h"},"content":"        ContactBuilder contactInList \u003d new ContactBuilder(lastContact);","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"riyadh-h"},"content":"        Contact editedContact \u003d contactInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"riyadh-h"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"riyadh-h"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(indexLastContact, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_CONTACT_SUCCESS, editedContact);","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"riyadh-h"},"content":"        Model expectedModel \u003d new ModelManager(new ContactsList(model.getContactsList()),","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":"                new UserPrefs(), model.getNoteBook(), model.getDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.setContact(lastContact, editedContact);","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"riyadh-h"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_CONTACT,","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"riyadh-h"},"content":"                new EditContactDescriptor());","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"        Contact editedContact \u003d model.getFilteredContactList().get(INDEX_FIRST_CONTACT.getZeroBased());","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_CONTACT_SUCCESS, editedContact);","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"riyadh-h"},"content":"        Model expectedModel \u003d new ModelManager(new ContactsList(model.getContactsList()),","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"XindiTian"},"content":"                new UserPrefs(), getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"riyadh-h"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"riyadh-h"},"content":"        showContactAtIndex(model, INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"riyadh-h"},"content":"        Contact contactInFilteredList \u003d model.getFilteredContactList().get(INDEX_FIRST_CONTACT.getZeroBased());","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"        Contact editedContact \u003d new ContactBuilder(contactInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_CONTACT,","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"riyadh-h"},"content":"                new EditContactDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_CONTACT_SUCCESS, editedContact);","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":103,"author":{"gitId":"riyadh-h"},"content":"        Model expectedModel \u003d new ModelManager(new ContactsList(model.getContactsList()),","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"XindiTian"},"content":"                new UserPrefs(), model.getNoteBook(), model.getDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.setContact(model.getFilteredContactList().get(0), editedContact);","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":110,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":111,"author":{"gitId":"riyadh-h"},"content":"    public void execute_duplicateContactUnfilteredList_failure() {","lastModifiedDate":"2021-03-11"},{"lineNumber":112,"author":{"gitId":"riyadh-h"},"content":"        Contact firstContact \u003d model.getFilteredContactList().get(INDEX_FIRST_CONTACT.getZeroBased());","lastModifiedDate":"2021-03-11"},{"lineNumber":113,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder(firstContact).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":114,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_SECOND_CONTACT, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"riyadh-h"},"content":"        assertCommandFailure(editContactCommand, model, EditContactCommand.MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"riyadh-h"},"content":"    public void execute_duplicateContactFilteredList_failure() {","lastModifiedDate":"2021-03-11"},{"lineNumber":121,"author":{"gitId":"riyadh-h"},"content":"        showContactAtIndex(model, INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-11"},{"lineNumber":122,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":123,"author":{"gitId":"riyadh-h"},"content":"        // edit contact in filtered list into a duplicate in contacts list.","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"riyadh-h"},"content":"        Contact contactInList \u003d model.getContactsList().getContactList().get(INDEX_SECOND_CONTACT.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_CONTACT,","lastModifiedDate":"2021-03-11"},{"lineNumber":126,"author":{"gitId":"riyadh-h"},"content":"                new EditContactDescriptorBuilder(contactInList).build());","lastModifiedDate":"2021-03-11"},{"lineNumber":127,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":128,"author":{"gitId":"riyadh-h"},"content":"        assertCommandFailure(editContactCommand, model, EditContactCommand.MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2021-03-11"},{"lineNumber":129,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":130,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":132,"author":{"gitId":"riyadh-h"},"content":"    public void execute_invalidContactIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-11"},{"lineNumber":133,"author":{"gitId":"riyadh-h"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredContactList().size() + 1);","lastModifiedDate":"2021-03-11"},{"lineNumber":134,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":135,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":136,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":137,"author":{"gitId":"riyadh-h"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-11"},{"lineNumber":138,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":139,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":140,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":141,"author":{"gitId":"riyadh-h"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-03-11"},{"lineNumber":142,"author":{"gitId":"riyadh-h"},"content":"     * but smaller than size of dictionote book","lastModifiedDate":"2021-03-11"},{"lineNumber":143,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":144,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":145,"author":{"gitId":"riyadh-h"},"content":"    public void execute_invalidContactIndexFilteredList_failure() {","lastModifiedDate":"2021-03-11"},{"lineNumber":146,"author":{"gitId":"riyadh-h"},"content":"        showContactAtIndex(model, INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-11"},{"lineNumber":147,"author":{"gitId":"riyadh-h"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":148,"author":{"gitId":"riyadh-h"},"content":"        // ensures that outOfBoundIndex is still in bounds of dictionote book list","lastModifiedDate":"2021-03-11"},{"lineNumber":149,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getContactsList().getContactList().size());","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":151,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex,","lastModifiedDate":"2021-03-11"},{"lineNumber":152,"author":{"gitId":"riyadh-h"},"content":"                new EditContactDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-11"},{"lineNumber":153,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":154,"author":{"gitId":"riyadh-h"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"riyadh-h"},"content":"    public void equals() {","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"riyadh-h"},"content":"        final EditContactCommand standardCommand \u003d new EditContactCommand(INDEX_FIRST_CONTACT, DESC_AMY);","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":161,"author":{"gitId":"riyadh-h"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-11"},{"lineNumber":162,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor copyDescriptor \u003d new EditContactDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-11"},{"lineNumber":163,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand commandWithSameValues \u003d new EditContactCommand(INDEX_FIRST_CONTACT, copyDescriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":164,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-11"},{"lineNumber":165,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":166,"author":{"gitId":"riyadh-h"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-11"},{"lineNumber":167,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-11"},{"lineNumber":168,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":169,"author":{"gitId":"riyadh-h"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":170,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":171,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"riyadh-h"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":173,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(standardCommand.equals(new ClearContactCommand()));","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":175,"author":{"gitId":"riyadh-h"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":176,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_SECOND_CONTACT, DESC_AMY)));","lastModifiedDate":"2021-03-11"},{"lineNumber":177,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":178,"author":{"gitId":"riyadh-h"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":179,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_FIRST_CONTACT, DESC_BOB)));","lastModifiedDate":"2021-03-11"},{"lineNumber":180,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":181,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":182,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"riyadh-h":175,"XindiTian":7}},{"path":"src/test/java/seedu/dictionote/logic/commands/EditContactDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.EditContactDescriptorBuilder;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"public class EditContactDescriptorTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor descriptorWithSameValues \u003d new EditContactDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor editedAmy \u003d new EditContactDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"        editedAmy \u003d new EditContactDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"        editedAmy \u003d new EditContactDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"        // different dictionote -\u003e returns false","lastModifiedDate":"2021-02-27"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"        editedAmy \u003d new EditContactDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"        editedAmy \u003d new EditContactDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"riyadh-h":9,"XindiTian":9,"-":40}},{"path":"src/test/java/seedu/dictionote/logic/commands/EditModeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.testutil.TypicalNoteContentConfig;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"public class EditModeCommandTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_editMode_failure() {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigWitouthNote());","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandFailure(new EditModeCommand(), model, EditModeCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigEditMode());","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandFailure(new EditModeCommand(), model, EditModeCommand.MESSAGE_ALREADY_IN_EDIT_MODE);","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_editMode_success() {","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigWithNote());","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        expectedModel.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigWithNote());","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(EditModeCommand.MESSAGE_EDIT_MODE_NOTE_SUCCESS,","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"            UiAction.EDITMODEENTER);","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandSuccess(new EditModeCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"TeoHoeKeat":35}},{"path":"src/test/java/seedu/dictionote/logic/commands/EditModeQuitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.testutil.TypicalNoteContentConfig;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"public class EditModeQuitCommandTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_quitEditMode_failure() {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigWithNote());","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandFailure(new EditModeQuitCommand(), model, EditModeQuitCommand.MESSAGE_NOT_IN_EDIT_MODE);","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigWitouthNote());","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandFailure(new EditModeQuitCommand(), model, EditModeQuitCommand.MESSAGE_NOT_IN_EDIT_MODE);","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_quitEditMode_success() {","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigEditMode());","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        expectedModel.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigEditMode());","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(EditModeQuitCommand.MESSAGE_EDIT_MODE_EXIT_SUCCESS,","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"            UiAction.EDITMODEEXIT);","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandSuccess(new EditModeQuitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"TeoHoeKeat":37}},{"path":"src/test/java/seedu/dictionote/logic/commands/EditModeSaveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.testutil.TypicalNoteContentConfig;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"public class EditModeSaveCommandTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_saveEditMode_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigWithNote());","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandFailure(new EditModeSaveCommand(), model, EditModeSaveCommand.MESSAGE_NOT_IN_EDIT_MODE);","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigWitouthNote());","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandFailure(new EditModeSaveCommand(), model, EditModeSaveCommand.MESSAGE_NOT_IN_EDIT_MODE);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"TeoHoeKeat":34,"riyadh-h":3}},{"path":"src/test/java/seedu/dictionote/logic/commands/EditNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.DESC_NOTE;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.DESC_REPLACED_NOTE;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_NOTE_CONTENT;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.showNoteAtIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_SECOND_NOTE;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.EditNoteCommand.EditNoteDescriptor;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.testutil.EditNoteDescriptorBuilder;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.testutil.TypicalNoteContentConfig;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"public class EditNoteCommandTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"            getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public void init() {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigWithNote());","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_onEditMode_fail() {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        Model editModeModel \u003d new ModelManager();","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"        editModeModel.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigEditMode());","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"        // edit contact in filtered list into a duplicate in contacts list.","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"        Note noteInList \u003d model.getNoteBook().getNoteList().get(INDEX_SECOND_NOTE.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        EditNoteCommand editNoteCommand \u003d new EditNoteCommand(INDEX_FIRST_NOTE,","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"            new EditNoteDescriptorBuilder(noteInList).build());","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandFailure(editNoteCommand, editModeModel, Messages.MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE);","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_noteNoteEdited_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"        showNoteAtIndex(model, INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"        // edit contact in filtered list into a duplicate in contacts list.","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"        Note noteInList \u003d model.getNoteBook().getNoteList().get(INDEX_SECOND_NOTE.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"        EditNoteCommand editNoteCommand \u003d new EditNoteCommand(INDEX_FIRST_NOTE,","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"                new EditNoteDescriptorBuilder(noteInList).build());","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandFailure(editNoteCommand, model, EditNoteCommand.MESSAGE_DUPLICATE_NOTE);","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_invalidNoteIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredNoteList().size() + 1);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"        EditNoteDescriptor descriptor \u003d new EditNoteDescriptorBuilder().withNote(VALID_NOTE_CONTENT).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"        EditNoteCommand editNoteCommand \u003d new EditNoteCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"        assertCommandFailure(editNoteCommand, model, Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"    public void equals() {","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"        final EditNoteCommand standardCommand \u003d new EditNoteCommand(INDEX_FIRST_NOTE, DESC_NOTE);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"        EditNoteCommand.EditNoteDescriptor copyDescriptor \u003d new EditNoteCommand.EditNoteDescriptor(DESC_NOTE);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":"        EditNoteCommand commandWithSameValues \u003d new EditNoteCommand(INDEX_FIRST_NOTE, copyDescriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"jessen11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"jessen11"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"jessen11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(standardCommand.equals(new ClearContactCommand()));","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"jessen11"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"jessen11"},"content":"        assertFalse(standardCommand.equals(new EditNoteCommand(INDEX_SECOND_NOTE, DESC_REPLACED_NOTE)));","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"jessen11"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"jessen11"},"content":"        assertFalse(standardCommand.equals(new EditNoteCommand(INDEX_FIRST_CONTACT, DESC_REPLACED_NOTE)));","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"TeoHoeKeat":23,"jessen11":74,"riyadh-h":3,"XindiTian":3}},{"path":"src/test/java/seedu/dictionote/logic/commands/EditNoteDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.DESC_NOTE;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.EditNoteCommand.EditNoteDescriptor;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"public class EditNoteDescriptorTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"    public void equals() {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"        EditNoteDescriptor descriptorWithSameValues \u003d new EditNoteDescriptor(DESC_NOTE);","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"        assertTrue(DESC_NOTE.equals(descriptorWithSameValues));","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"        assertTrue(DESC_NOTE.equals(DESC_NOTE));","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"        assertFalse(DESC_NOTE.equals(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"        assertFalse(DESC_NOTE.equals(100));","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jessen11":28}},{"path":"src/test/java/seedu/dictionote/logic/commands/EmailContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.showContactAtIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_SECOND_CONTACT;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ReadOnlyDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyNoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":" * {@code EmailContactCommand}.","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"public class EmailContactCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"    private Model model \u003d new ModelManagerStub(","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"            getTypicalContactsList(),","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"            new UserPrefs(),","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"            getTypicalNoteBook(),","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"            getTypicalDictionary(),","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"            getTypicalDefinitionBook()","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"    );","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        Contact contactToEmail \u003d model.getFilteredContactList().get(INDEX_FIRST_CONTACT.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"        EmailContactCommand emailContactCommand \u003d new EmailContactCommand(INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(EmailContactCommand.MESSAGE_EMAIL_CONTACT_SUCCESS, contactToEmail);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"        ModelManager expectedModel \u003d new ModelManagerStub(","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"                model.getContactsList(),","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"                new UserPrefs(),","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"                getTypicalNoteBook(),","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"                getTypicalDictionary(),","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"                getTypicalDefinitionBook()","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.emailContact(contactToEmail);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(emailContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"riyadh-h"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredContactList().size() + 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"riyadh-h"},"content":"        EmailContactCommand emailContactCommand \u003d new EmailContactCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"        assertCommandFailure(emailContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"riyadh-h"},"content":"        showContactAtIndex(model, INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"riyadh-h"},"content":"        Contact contactToEmail \u003d model.getFilteredContactList().get(INDEX_FIRST_CONTACT.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"riyadh-h"},"content":"        EmailContactCommand emailContactCommand \u003d new EmailContactCommand(INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(EmailContactCommand.MESSAGE_EMAIL_CONTACT_SUCCESS, contactToEmail);","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"        ModelManager expectedModel \u003d new ModelManagerStub(","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"riyadh-h"},"content":"                model.getContactsList(),","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"                new UserPrefs(),","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"riyadh-h"},"content":"                getTypicalNoteBook(),","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"XindiTian"},"content":"                getTypicalDictionary(),","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"XindiTian"},"content":"                getTypicalDefinitionBook()","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"riyadh-h"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.emailContact(contactToEmail);","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"riyadh-h"},"content":"        showContactAtIndex(expectedModel, INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(emailContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"riyadh-h"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"        showContactAtIndex(model, INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"riyadh-h"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CONTACT;","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"riyadh-h"},"content":"        // ensures that outOfBoundIndex is still in bounds of the contacts list","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getContactsList().getContactList().size());","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"riyadh-h"},"content":"        EmailContactCommand emailContactCommand \u003d new EmailContactCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"riyadh-h"},"content":"        assertCommandFailure(emailContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"riyadh-h"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"riyadh-h"},"content":"        EmailContactCommand emailFirstCommand \u003d new EmailContactCommand(INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"riyadh-h"},"content":"        EmailContactCommand emailSecondCommand \u003d new EmailContactCommand(INDEX_SECOND_CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"riyadh-h"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(emailFirstCommand.equals(emailFirstCommand));","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"riyadh-h"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"        EmailContactCommand emailFirstCommandCopy \u003d new EmailContactCommand(INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(emailFirstCommand.equals(emailFirstCommandCopy));","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"riyadh-h"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(emailFirstCommand.equals(1));","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"riyadh-h"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(emailFirstCommand.equals(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"riyadh-h"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(emailFirstCommand.equals(emailSecondCommand));","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"riyadh-h"},"content":"     * A stub ModelManager that does not invoke the OS\u0027s mail client.","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"riyadh-h"},"content":"    private static class ModelManagerStub extends ModelManager {","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"riyadh-h"},"content":"        public ModelManagerStub(ReadOnlyContactsList addressBook, ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"XindiTian"},"content":"                                ReadOnlyNoteBook noteBook, ReadOnlyDictionary dictionary,","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"XindiTian"},"content":"                                ReadOnlyDefinitionBook definitionBook) {","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"XindiTian"},"content":"            super(addressBook, userPrefs, noteBook, dictionary, definitionBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"riyadh-h"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"riyadh-h"},"content":"        public void emailContact(Contact contact) {","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"riyadh-h"},"content":"            // for the sake of unit testing, do not invoke the OS\u0027s mail client.","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"riyadh-h"},"content":"            return;","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"riyadh-h":135,"XindiTian":11}},{"path":"src/test/java/seedu/dictionote/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.testutil.TypicalNoteContentConfig;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    public void init() {","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigWithNote());","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        expectedModel.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigWithNote());","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_onEditMode_fail() {","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        Model editModeModel \u003d new ModelManager();","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        editModeModel.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigEditMode());","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandFailure(new DeleteNoteCommand(INDEX_FIRST_NOTE), editModeModel,","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"            Messages.MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE);","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, UiAction.EXIT);","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"TeoHoeKeat":20,"XindiTian":5,"-":14}},{"path":"src/test/java/seedu/dictionote/logic/commands/FindContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_CONTACTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.BENSON;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.CARL;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.DANIEL;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.ELLE;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.FIONA;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.TypicalContacts;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"public class FindContactCommandTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"            getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"            getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"        NameContainsKeywordsPredicate firstNamePredicate \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        NameContainsKeywordsPredicate secondNamePredicate \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"        EmailContainsKeywordsPredicate firstEmailPredicate \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"        EmailContainsKeywordsPredicate secondEmailPredicate \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"        TagsContainKeywordsPredicate firstTagsPredicate \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"                new TagsContainKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"        TagsContainKeywordsPredicate secondTagsPredicate \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"                new TagsContainKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"riyadh-h"},"content":"        FindContactCommand findFirstCommand \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"                new FindContactCommand(firstNamePredicate, firstEmailPredicate, firstTagsPredicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"riyadh-h"},"content":"        FindContactCommand findSecondCommand \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"riyadh-h"},"content":"                new FindContactCommand(secondNamePredicate, secondEmailPredicate, secondTagsPredicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"        FindContactCommand findFirstCommandCopy \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"                new FindContactCommand(firstNamePredicate, firstEmailPredicate, firstTagsPredicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"    public void execute_zeroKeywords_allContactsFound() {","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"riyadh-h"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"riyadh-h"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d prepareEmailPredicate(\" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"riyadh-h"},"content":"        TagsContainKeywordsPredicate tagsPredicate \u003d prepareTagsPredicate(\" \");","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"riyadh-h"},"content":"        FindContactCommand command \u003d new FindContactCommand(namePredicate, emailPredicate, tagsPredicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.updateFilteredContactList(namePredicate.and(emailPredicate).and(tagsPredicate));","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(TypicalContacts.getTypicalContacts(), model.getFilteredContactList());","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"    public void execute_nameKeywords_multipleContactsFound() {","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"riyadh-h"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"riyadh-h"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d prepareEmailPredicate(\" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"riyadh-h"},"content":"        TagsContainKeywordsPredicate tagsPredicate \u003d prepareTagsPredicate(\" \");","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"riyadh-h"},"content":"        FindContactCommand command \u003d new FindContactCommand(namePredicate, emailPredicate, tagsPredicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.updateFilteredContactList(namePredicate.and(tagsPredicate));","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredContactList());","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":111,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"riyadh-h"},"content":"    public void execute_emailKeywords_multipleContactsFound() {","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"riyadh-h"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"riyadh-h"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d prepareEmailPredicate(\"@aexample.com\");","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"        TagsContainKeywordsPredicate tagsPredicate \u003d prepareTagsPredicate(\" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"riyadh-h"},"content":"        FindContactCommand command \u003d new FindContactCommand(namePredicate, emailPredicate, tagsPredicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.updateFilteredContactList(namePredicate.and(emailPredicate).and(tagsPredicate));","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(Arrays.asList(ALICE, CARL, DANIEL), model.getFilteredContactList());","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"riyadh-h"},"content":"    public void execute_tagKeywords_multipleContactsFound() {","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"riyadh-h"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"riyadh-h"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d prepareEmailPredicate(\" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"riyadh-h"},"content":"        TagsContainKeywordsPredicate tagsPredicate \u003d prepareTagsPredicate(\"friends\");","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"riyadh-h"},"content":"        FindContactCommand command \u003d new FindContactCommand(namePredicate, emailPredicate, tagsPredicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.updateFilteredContactList(namePredicate.and(tagsPredicate));","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL, FIONA), model.getFilteredContactList());","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"riyadh-h"},"content":"    public void execute_nameAndEmailKeywords_multipleContactsFound() {","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"riyadh-h"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\"Meier\");","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"riyadh-h"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d prepareEmailPredicate(\"@aexample.com\");","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"riyadh-h"},"content":"        TagsContainKeywordsPredicate tagsPredicate \u003d prepareTagsPredicate(\" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"riyadh-h"},"content":"        FindContactCommand command \u003d new FindContactCommand(namePredicate, emailPredicate, tagsPredicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.updateFilteredContactList(namePredicate.and(emailPredicate).and(tagsPredicate));","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(Arrays.asList(DANIEL), model.getFilteredContactList());","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":156,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"riyadh-h"},"content":"    public void execute_nameAndTagKeywords_multipleContactsFound() {","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"riyadh-h"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\"Meier\");","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"riyadh-h"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d prepareEmailPredicate(\" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"riyadh-h"},"content":"        TagsContainKeywordsPredicate tagsPredicate \u003d prepareTagsPredicate(\"owesMoney\");","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":165,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"riyadh-h"},"content":"        FindContactCommand command \u003d new FindContactCommand(namePredicate, emailPredicate, tagsPredicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":167,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.updateFilteredContactList(namePredicate.and(emailPredicate).and(tagsPredicate));","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredContactList());","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"riyadh-h"},"content":"    public void execute_emailAndTagKeywords_multipleContactsFound() {","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"riyadh-h"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"riyadh-h"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d prepareEmailPredicate(\"@bexample.com\");","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"riyadh-h"},"content":"        TagsContainKeywordsPredicate tagsPredicate \u003d prepareTagsPredicate(\"friends\");","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"riyadh-h"},"content":"        FindContactCommand command \u003d new FindContactCommand(namePredicate, emailPredicate, tagsPredicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.updateFilteredContactList(namePredicate.and(emailPredicate).and(tagsPredicate));","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(Arrays.asList(BENSON, FIONA), model.getFilteredContactList());","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":190,"author":{"gitId":"riyadh-h"},"content":"    public void execute_nameAndEmailAndTagKeywords_multipleContactsFound() {","lastModifiedDate":"2021-03-25"},{"lineNumber":191,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-03-25"},{"lineNumber":192,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":193,"author":{"gitId":"riyadh-h"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\"Meier\");","lastModifiedDate":"2021-03-25"},{"lineNumber":194,"author":{"gitId":"riyadh-h"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d prepareEmailPredicate(\"@aexample.com\");","lastModifiedDate":"2021-03-25"},{"lineNumber":195,"author":{"gitId":"riyadh-h"},"content":"        TagsContainKeywordsPredicate tagsPredicate \u003d prepareTagsPredicate(\"friends\");","lastModifiedDate":"2021-03-25"},{"lineNumber":196,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":197,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":198,"author":{"gitId":"riyadh-h"},"content":"        FindContactCommand command \u003d new FindContactCommand(namePredicate, emailPredicate, tagsPredicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":199,"author":{"gitId":"riyadh-h"},"content":"        expectedModel.updateFilteredContactList(namePredicate.and(emailPredicate).and(tagsPredicate));","lastModifiedDate":"2021-03-25"},{"lineNumber":200,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":201,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-25"},{"lineNumber":202,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(Arrays.asList(DANIEL), model.getFilteredContactList());","lastModifiedDate":"2021-03-25"},{"lineNumber":203,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":204,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":208,"author":{"gitId":"riyadh-h"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2021-03-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":211,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":212,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":213,"author":{"gitId":"riyadh-h"},"content":"     * Parses {@code userInput} into a {@code EmailContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-25"},{"lineNumber":214,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":215,"author":{"gitId":"riyadh-h"},"content":"    private EmailContainsKeywordsPredicate prepareEmailPredicate(String userInput) {","lastModifiedDate":"2021-03-25"},{"lineNumber":216,"author":{"gitId":"riyadh-h"},"content":"        return new EmailContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-25"},{"lineNumber":217,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":218,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":219,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":220,"author":{"gitId":"riyadh-h"},"content":"     * Parses {@code userInput} into a {@code TagsContainKeywordsPredicate}.","lastModifiedDate":"2021-03-13"},{"lineNumber":221,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":222,"author":{"gitId":"riyadh-h"},"content":"    private TagsContainKeywordsPredicate prepareTagsPredicate(String userInput) {","lastModifiedDate":"2021-03-13"},{"lineNumber":223,"author":{"gitId":"riyadh-h"},"content":"        return new TagsContainKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-13"},{"lineNumber":224,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"riyadh-h":164,"XindiTian":10,"-":51}},{"path":"src/test/java/seedu/dictionote/logic/commands/FindNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_NOTES_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalNotes.MI_AMOR;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalNotes.MI_VIDA;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.NoteContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.TagNoteContainKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.testutil.TypicalNotes;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"public class FindNoteCommandTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"            getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"            getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"    public void equals() {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"        NoteContainsKeywordsPredicate firstNamePredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"                new NoteContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"        NoteContainsKeywordsPredicate secondNamePredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"                new NoteContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"        TagNoteContainKeywordsPredicate firstTagsPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"                new TagNoteContainKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        TagNoteContainKeywordsPredicate secondTagsPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"                new TagNoteContainKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"        FindNoteCommand findFirstCommand \u003d new FindNoteCommand(firstNamePredicate, firstTagsPredicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"        FindNoteCommand findSecondCommand \u003d new FindNoteCommand(secondNamePredicate, secondTagsPredicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"        FindNoteCommand findFirstCommandCopy \u003d new FindNoteCommand(firstNamePredicate, firstTagsPredicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"    public void execute_zeroKeywords_allContactsFound() {","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"        NoteContainsKeywordsPredicate namePredicate \u003d prepareNotePredicate(\" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"        TagNoteContainKeywordsPredicate tagsPredicate \u003d prepareTagNotePredicate(\" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"        expectedModel.updateFilteredNoteList(namePredicate.and(tagsPredicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"        assertEquals(TypicalNotes.getTypicalNotes(), model.getFilteredNoteList());","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"    public void execute_nameKeywords_multipleContactsFound() {","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NOTES_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"        NoteContainsKeywordsPredicate namePredicate \u003d prepareNotePredicate(\"been\");","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":"        TagNoteContainKeywordsPredicate tagsPredicate \u003d prepareTagNotePredicate(\" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"        FindNoteCommand command \u003d new FindNoteCommand(namePredicate, tagsPredicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"        expectedModel.updateFilteredNoteList(namePredicate.and(tagsPredicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"jessen11"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"jessen11"},"content":"        assertEquals(Arrays.asList(MI_AMOR, MI_VIDA), model.getFilteredNoteList());","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"jessen11"},"content":"     * Parses {@code userInput} into a {@code NoteContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"jessen11"},"content":"    private NoteContainsKeywordsPredicate prepareNotePredicate(String userInput) {","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"jessen11"},"content":"        return new NoteContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"jessen11"},"content":"     * Parses {@code userInput} into a {@code TagNoteContainKeywordsPredicate}.","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"jessen11"},"content":"    private TagNoteContainKeywordsPredicate prepareTagNotePredicate(String userInput) {","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"jessen11"},"content":"        return new TagNoteContainKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"jessen11":102,"riyadh-h":3}},{"path":"src/test/java/seedu/dictionote/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, UiAction.HELP);","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"TeoHoeKeat":2,"XindiTian":5,"-":14}},{"path":"src/test/java/seedu/dictionote/logic/commands/ListCommandCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.ListCommandCommand.SHOWING_LIST_COMMAND_MESSAGE;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"public class ListCommandCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_help_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_LIST_COMMAND_MESSAGE);","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandSuccess(new ListCommandCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"TeoHoeKeat":20}},{"path":"src/test/java/seedu/dictionote/logic/commands/ListContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.showContactAtIndex;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"public class ListContactCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"        model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"        expectedModel \u003d new ModelManager(model.getContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(new ListContactCommand(), model, ListContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"        showContactAtIndex(model, INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(new ListContactCommand(), model, ListContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"godjuansan":1,"riyadh-h":9,"XindiTian":9,"-":25}},{"path":"src/test/java/seedu/dictionote/logic/commands/ListNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"public class ListNoteCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"    private Model model;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"        model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"        expectedModel \u003d new ModelManager(model.getContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"        assertCommandSuccess(new ListNoteCommand(), model, ListNoteCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"        //showNoteAtIndex(model, INDEX_FIRST_NOTE); uncomment on v1.3 for search notes using keyword","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"        assertCommandSuccess(new ListNoteCommand(), model, ListNoteCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"godjuansan":32,"riyadh-h":3,"XindiTian":3}},{"path":"src/test/java/seedu/dictionote/logic/commands/MarkAllAsUndoneNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"public class MarkAllAsUndoneNoteCommandTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"            getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"    public void equals() {","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"        MarkAllAsUndoneNoteCommand markAllAsUndoneNoteCommand \u003d new MarkAllAsUndoneNoteCommand();","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"        MarkAllAsUndoneNoteCommand markAllAsUndoneNoteOtherCommand \u003d new MarkAllAsUndoneNoteCommand();","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"        assertTrue(markAllAsUndoneNoteCommand.equals(markAllAsUndoneNoteCommand));","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"        assertFalse(markAllAsUndoneNoteCommand.equals(1));","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"        assertFalse(markAllAsUndoneNoteCommand.equals(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"        assertTrue(markAllAsUndoneNoteCommand.equals(markAllAsUndoneNoteOtherCommand));","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"godjuansan":35,"riyadh-h":2}},{"path":"src/test/java/seedu/dictionote/logic/commands/MarkAsDoneNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_SECOND_CONTACT;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.testutil.TypicalNoteContentConfig;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":" * {@code DeleteNoteCommand}.","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"public class MarkAsDoneNoteCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"            getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    public void init() {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        model.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigWithNote());","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_onEditMode_fail() {","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        Model editModeModel \u003d new ModelManager();","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        editModeModel.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigEditMode());","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandFailure(new MarkAsDoneNoteCommand(INDEX_FIRST_NOTE), editModeModel,","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"            Messages.MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE);","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredContactList().size() + 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"        MarkAsDoneNoteCommand markAsDoneNoteCommand \u003d new MarkAsDoneNoteCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"        assertCommandFailure(markAsDoneNoteCommand, model, Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"godjuansan"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"        MarkAsDoneNoteCommand markAsDoneNoteCommand \u003d new MarkAsDoneNoteCommand(INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"        MarkAsDoneNoteCommand markAsDoneNoteOtherCommand \u003d new MarkAsDoneNoteCommand(INDEX_SECOND_CONTACT);","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"godjuansan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"        assertTrue(markAsDoneNoteCommand.equals(markAsDoneNoteCommand));","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"godjuansan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"godjuansan"},"content":"        assertFalse(markAsDoneNoteCommand.equals(1));","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"        assertFalse(markAsDoneNoteCommand.equals(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"        assertFalse(markAsDoneNoteCommand.equals(markAsDoneNoteOtherCommand));","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"TeoHoeKeat":16,"godjuansan":52,"riyadh-h":2,"XindiTian":2}},{"path":"src/test/java/seedu/dictionote/logic/commands/MarkAsUndoneNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_SECOND_CONTACT;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"public class MarkAsUndoneNoteCommandTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"            getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredContactList().size() + 1);","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"        MarkAsUndoneNoteCommand markAsUndoneNoteCommand \u003d new MarkAsUndoneNoteCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"        assertCommandFailure(markAsUndoneNoteCommand, model, Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"    public void equals() {","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"        MarkAsUndoneNoteCommand markAsUndoneNoteCommand \u003d new MarkAsUndoneNoteCommand(INDEX_FIRST_CONTACT);","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"        MarkAsUndoneNoteCommand markAsUndoneNoteOtherCommand \u003d new MarkAsUndoneNoteCommand(INDEX_SECOND_CONTACT);","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"        assertTrue(markAsUndoneNoteCommand.equals(markAsUndoneNoteCommand));","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"        assertFalse(markAsUndoneNoteCommand.equals(1));","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"        assertFalse(markAsUndoneNoteCommand.equals(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"        assertFalse(markAsUndoneNoteCommand.equals(markAsUndoneNoteOtherCommand));","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"godjuansan":48,"riyadh-h":2}},{"path":"src/test/java/seedu/dictionote/logic/commands/MergeNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.showNoteAtIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.showNoteAtTwoIndexes;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_SECOND_NOTE;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_THIRD_NOTE;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.testutil.TypicalNoteContentConfig;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"public class MergeNoteCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"            getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"    public void init() {","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"        model.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigWithNote());","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"    public void execute_onEditMode_fail() {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"        Model editModeModel \u003d new ModelManager();","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"        editModeModel.setNoteContentConfig(TypicalNoteContentConfig.getTypicalNoteContentConfigEditMode());","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"        assertCommandFailure(new MergeNoteCommand(INDEX_FIRST_NOTE, INDEX_SECOND_NOTE), editModeModel,","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"                Messages.MESSAGE_COMMAND_DISABLE_ON_EDIT_MODE);","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"        Note firstNoteToMerge \u003d model.getFilteredNoteList().get(INDEX_FIRST_NOTE.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"        Note secondNoteToMerge \u003d model.getFilteredNoteList().get(INDEX_SECOND_NOTE.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"        MergeNoteCommand mergeNoteCommand \u003d new MergeNoteCommand(INDEX_FIRST_NOTE, INDEX_SECOND_NOTE);","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"        String expectedMessage \u003d String.format(MergeNoteCommand.MESSAGE_MERGE_NOTE_SUCCESS,","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"                firstNoteToMerge, secondNoteToMerge);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"godjuansan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"        expectedModel.mergeNote(firstNoteToMerge, secondNoteToMerge);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"godjuansan"},"content":"        assertCommandSuccess(mergeNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"godjuansan"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"godjuansan"},"content":"        Index firstOutOfBoundIndex \u003d Index.fromOneBased(model.getFilteredNoteList().size() + 1);","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"        Index secondOutOfBoundIndex \u003d Index.fromOneBased(model.getFilteredNoteList().size() + 2);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"        MergeNoteCommand mergeNoteCommand \u003d new MergeNoteCommand(firstOutOfBoundIndex,","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"                secondOutOfBoundIndex);","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"        assertCommandFailure(mergeNoteCommand, model, Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"godjuansan"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"godjuansan"},"content":"        showNoteAtTwoIndexes(model, INDEX_FIRST_NOTE, INDEX_SECOND_NOTE);","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"godjuansan"},"content":"        Note firstNoteToMerge \u003d model.getFilteredNoteList().get(INDEX_FIRST_NOTE.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"godjuansan"},"content":"        Note secondNoteToMerge \u003d model.getFilteredNoteList().get(INDEX_SECOND_NOTE.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"godjuansan"},"content":"        MergeNoteCommand mergeNoteCommand \u003d new MergeNoteCommand(INDEX_FIRST_NOTE, INDEX_SECOND_NOTE);","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"godjuansan"},"content":"        String expectedMessage \u003d String.format(MergeNoteCommand.MESSAGE_MERGE_NOTE_SUCCESS,","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"godjuansan"},"content":"                firstNoteToMerge, secondNoteToMerge);","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"godjuansan"},"content":"        Model expectedModel \u003d new ModelManager(model.getContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"godjuansan"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"godjuansan"},"content":"        showNoteAtTwoIndexes(expectedModel, INDEX_FIRST_NOTE, INDEX_SECOND_NOTE);","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"godjuansan"},"content":"        expectedModel.mergeNote(firstNoteToMerge, secondNoteToMerge);","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"godjuansan"},"content":"        showNoteAtIndex(expectedModel, INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"godjuansan"},"content":"        assertCommandSuccess(mergeNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"godjuansan"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"godjuansan"},"content":"        showNoteAtIndex(model, INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"godjuansan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_NOTE;","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"godjuansan"},"content":"        Index anotherOutOfBoundIndex \u003d INDEX_THIRD_NOTE;","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"godjuansan"},"content":"        // ensures that outOfBoundIndex is still in bounds of dictionote book list","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"godjuansan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getNoteBook().getNoteList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"godjuansan"},"content":"        MergeNoteCommand mergeNoteCommand \u003d new MergeNoteCommand(outOfBoundIndex, anotherOutOfBoundIndex);","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"godjuansan"},"content":"        assertCommandFailure(mergeNoteCommand, model, Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"godjuansan"},"content":"    public void equals() {","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"godjuansan"},"content":"        MergeNoteCommand mergeFirstCommand \u003d new MergeNoteCommand(INDEX_FIRST_NOTE, INDEX_SECOND_NOTE);","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"godjuansan"},"content":"        MergeNoteCommand mergeSecondCommand \u003d new MergeNoteCommand(INDEX_SECOND_NOTE, INDEX_THIRD_NOTE);","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"godjuansan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"godjuansan"},"content":"        assertTrue(mergeFirstCommand.equals(mergeFirstCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"godjuansan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"godjuansan"},"content":"        MergeNoteCommand mergeFirstCommandCopy \u003d new MergeNoteCommand(INDEX_FIRST_NOTE, INDEX_SECOND_NOTE);","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"godjuansan"},"content":"        assertTrue(mergeFirstCommand.equals(mergeFirstCommandCopy));","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"godjuansan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"godjuansan"},"content":"        assertFalse(mergeFirstCommand.equals(1));","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"godjuansan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"godjuansan"},"content":"        assertFalse(mergeFirstCommand.equals(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"godjuansan"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"godjuansan"},"content":"        assertFalse(mergeFirstCommand.equals(mergeSecondCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"godjuansan":129}},{"path":"src/test/java/seedu/dictionote/logic/commands/MostFreqContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.BENSON;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.CARL;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.DANIEL;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.ELLE;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.FIONA;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.GEORGE;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyDefinitionBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyDictionary;","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyNoteBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.exceptions.InvalidContactMailtoLinkException;","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"public class MostFreqContactCommandTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"    private Model model;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        model \u003d new ModelManagerStub(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"    public void execute_zeroFrequencies_showsSameListAsListContactCommand() {","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"        expectedModel \u003d new ModelManagerStub(model.getContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(new MostFreqContactCommand(), model,","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"                MostFreqContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"    public void execute_differentFrequencies_showsSortedList() {","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"riyadh-h"},"content":"        ContactsList expectedContactsList \u003d new ContactsListStub();","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"riyadh-h"},"content":"        expectedContactsList.setContacts(Arrays.asList(ELLE, DANIEL, ALICE, FIONA, BENSON, CARL, GEORGE));","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"riyadh-h"},"content":"        expectedModel \u003d new ModelManagerStub(expectedContactsList, new UserPrefs(),","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"riyadh-h"},"content":"        emailContactManyTimes(model, 4, 6); // ELLE","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"        emailContactManyTimes(model, 3, 5); // DANIEL","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"        emailContactManyTimes(model, 0, 4); // ALICE","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"riyadh-h"},"content":"        emailContactManyTimes(model, 5, 3); // FIONA","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"riyadh-h"},"content":"        emailContactManyTimes(model, 1, 2); // BENSON","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"riyadh-h"},"content":"        emailContactManyTimes(model, 2, 1); // CARL","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"riyadh-h"},"content":"        assertCommandSuccess(new MostFreqContactCommand(), model,","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"riyadh-h"},"content":"                MostFreqContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"riyadh-h"},"content":"     * Attempts to email a given contact for a specific number of times using the given model.","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"    private void emailContactManyTimes(Model m, int contactIndexNumber, int numEmails) {","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"riyadh-h"},"content":"        Contact contact;","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"riyadh-h"},"content":"        for (int i \u003d 0; i \u003c numEmails; i++) {","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"riyadh-h"},"content":"            contact \u003d m.getFilteredContactList().get(contactIndexNumber);","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"riyadh-h"},"content":"            m.emailContact(contact);","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"riyadh-h"},"content":"     * A stub ModelManager that contains a stub ContactsList.","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"riyadh-h"},"content":"    private static class ModelManagerStub extends ModelManager {","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"riyadh-h"},"content":"        private final ContactsListStub contactsListStub;","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"riyadh-h"},"content":"        private final FilteredList\u003cContact\u003e filteredContacts;","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"riyadh-h"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"         * This constructor is present for compatibility reasons.","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"riyadh-h"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"riyadh-h"},"content":"        public ModelManagerStub(ReadOnlyContactsList contactsList, ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"riyadh-h"},"content":"                                ReadOnlyNoteBook noteBook, ReadOnlyDictionary dictionary,","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"riyadh-h"},"content":"                                ReadOnlyDefinitionBook definitionBook) {","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"riyadh-h"},"content":"            this(contactsList);","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"riyadh-h"},"content":"        public ModelManagerStub(ReadOnlyContactsList contactsList) {","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"riyadh-h"},"content":"            this.contactsListStub \u003d new ContactsListStub(contactsList);","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"riyadh-h"},"content":"            filteredContacts \u003d new FilteredList\u003c\u003e(this.contactsListStub.getContactList());","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"riyadh-h"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"riyadh-h"},"content":"        public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"riyadh-h"},"content":"            return filteredContacts;","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"riyadh-h"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"riyadh-h"},"content":"        public void emailContact(Contact contact) {","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"            contactsListStub.emailContact(contact);","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"riyadh-h"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"riyadh-h"},"content":"        public void sortContactsByFrequencyCounter() {","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"riyadh-h"},"content":"            contactsListStub.sortByFrequencyCounter();","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"riyadh-h"},"content":"     * A stub ContactsList that does not invoke the OS\u0027s mail client.","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"riyadh-h"},"content":"    private static class ContactsListStub extends ContactsList {","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"riyadh-h"},"content":"        public ContactsListStub() {","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"riyadh-h"},"content":"            super();","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"riyadh-h"},"content":"        public ContactsListStub(ReadOnlyContactsList toBeCopied) {","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"riyadh-h"},"content":"            super(toBeCopied);","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"riyadh-h"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"riyadh-h"},"content":"        public void emailContact(Contact contact) throws InvalidContactMailtoLinkException {","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"riyadh-h"},"content":"            setContact(contact, incrementContactFrequency(contact));","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"riyadh-h":144}},{"path":"src/test/java/seedu/dictionote/logic/commands/OpenCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.OpenCommand.SHOWING_OPEN_MESSAGE;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"public class OpenCommandTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_open_success() {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        for (UiActionOption uiActionOption : UiActionOption.values()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_OPEN_MESSAGE,","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"                UiAction.OPEN, uiActionOption);","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"            assertCommandSuccess(new OpenCommand(uiActionOption), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":25}},{"path":"src/test/java/seedu/dictionote/logic/commands/SetContactDividerPositionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.SetContactDividerPositionCommand.MESSAGE_SET_DIVIDER_SUCCESS;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.VALID_UI_POSITION;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"public class SetContactDividerPositionCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_setDividerPosition_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c VALID_UI_POSITION.length; i++) {","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"                MESSAGE_SET_DIVIDER_SUCCESS + VALID_UI_POSITION[i], UiAction.OPEN,","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"                UiActionOption.CONTACT);","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"            expectedModel.getGuiSettings().setContactSplitRatio(","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"                VALID_UI_POSITION[i] / SetDividerPositionCommand.NORMALIZE_RATIO);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"            assertCommandSuccess(new SetContactDividerPositionCommand(VALID_UI_POSITION[i]), model,","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"                expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"            assertEquals(model.getGuiSettings().getContactSplitRatio(),","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"                VALID_UI_POSITION[i] / SetDividerPositionCommand.NORMALIZE_RATIO);","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"TeoHoeKeat":42}},{"path":"src/test/java/seedu/dictionote/logic/commands/SetDictionaryDividerPositionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.SetDictionaryDividerPositionCommand.MESSAGE_SET_DIVIDER_SUCCESS;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.VALID_UI_POSITION;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"public class SetDictionaryDividerPositionCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_setDividerPosition_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c VALID_UI_POSITION.length; i++) {","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"                MESSAGE_SET_DIVIDER_SUCCESS + VALID_UI_POSITION[i], UiAction.OPEN,","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"                UiActionOption.LIST);","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"            expectedModel.getGuiSettings().setDictionarySplitRatio(","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"                VALID_UI_POSITION[i] / SetDividerPositionCommand.NORMALIZE_RATIO);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"            assertCommandSuccess(new SetDictionaryDividerPositionCommand(VALID_UI_POSITION[i]), model,","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"                expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"            assertEquals(model.getGuiSettings().getDictionarySplitRatio(),","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"                VALID_UI_POSITION[i] / SetDividerPositionCommand.NORMALIZE_RATIO);","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"TeoHoeKeat":42}},{"path":"src/test/java/seedu/dictionote/logic/commands/SetMainDividerPositionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.SetMainDividerPositionCommand.MESSAGE_SET_DIVIDER_SUCCESS;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.VALID_UI_POSITION;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"public class SetMainDividerPositionCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_setDividerPosition_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c VALID_UI_POSITION.length; i++) {","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"                MESSAGE_SET_DIVIDER_SUCCESS + VALID_UI_POSITION[i], UiAction.OPEN,","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"                UiActionOption.LIST);","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"            expectedModel.getGuiSettings().setMainSplitRatio(","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"                VALID_UI_POSITION[i] / SetDividerPositionCommand.NORMALIZE_RATIO);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"            assertCommandSuccess(new SetMainDividerPositionCommand(VALID_UI_POSITION[i]), model,","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"                expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"            assertEquals(model.getGuiSettings().getMainSplitRatio(),","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"                VALID_UI_POSITION[i] / SetDividerPositionCommand.NORMALIZE_RATIO);","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"TeoHoeKeat":42}},{"path":"src/test/java/seedu/dictionote/logic/commands/SetNoteDividerPositionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.SetNoteDividerPositionCommand.MESSAGE_SET_DIVIDER_SUCCESS;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.VALID_UI_POSITION;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"public class SetNoteDividerPositionCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_setDividerPosition_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c VALID_UI_POSITION.length; i++) {","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"                MESSAGE_SET_DIVIDER_SUCCESS + VALID_UI_POSITION[i], UiAction.OPEN,","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"                UiActionOption.LIST);","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"            expectedModel.getGuiSettings().setNoteSplitRatio(","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"                VALID_UI_POSITION[i] / SetDividerPositionCommand.NORMALIZE_RATIO);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"            assertCommandSuccess(new SetNoteDividerPositionCommand(VALID_UI_POSITION[i]), model,","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"                expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"            assertEquals(model.getGuiSettings().getNoteSplitRatio(),","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"                VALID_UI_POSITION[i] / SetDividerPositionCommand.NORMALIZE_RATIO);","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"TeoHoeKeat":42}},{"path":"src/test/java/seedu/dictionote/logic/commands/ShowNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":" * {@code ShowNoteCommand}.","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"public class ShowNoteCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"            getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    //Need to change test case","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    /*","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"        Note noteToShow \u003d model.getFilteredNoteList().get(INDEX_FIRST_NOTE.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"        ShowNoteCommand showNoteCommand \u003d new ShowNoteCommand(INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"        String expectedMessage \u003d String.format(ShowNoteCommand.MESSAGE_SHOW_NOTE_SUCCESS, noteToShow);","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"        expectedModel.showNote(noteToShow);","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"        assertCommandSuccess(showNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"godjuansan"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"godjuansan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredNoteList().size() + 1);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"godjuansan"},"content":"        ShowNoteCommand showNoteCommand \u003d new ShowNoteCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"        assertCommandFailure(showNoteCommand, model, Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"godjuansan"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"godjuansan"},"content":"        showNoteAtIndex(model, INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"godjuansan"},"content":"        Note noteToShow \u003d model.getFilteredNoteList().get(INDEX_FIRST_NOTE.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"godjuansan"},"content":"        ShowNoteCommand showNoteCommand \u003d new ShowNoteCommand(INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"godjuansan"},"content":"        String expectedMessage \u003d String.format(ShowNoteCommand.MESSAGE_SHOW_NOTE_SUCCESS, noteToShow);","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"godjuansan"},"content":"        expectedModel.showNote(noteToShow);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"godjuansan"},"content":"        showNoNote(expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"godjuansan"},"content":"        assertCommandSuccess(showNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"godjuansan"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"godjuansan"},"content":"        showNoteAtIndex(model, INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"godjuansan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_NOTE;","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"godjuansan"},"content":"        // ensures that outOfBoundIndex is still in bounds of dictionote book list","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"godjuansan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getNoteBook().getNoteList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"godjuansan"},"content":"        ShowNoteCommand showNoteCommand \u003d new ShowNoteCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"godjuansan"},"content":"        assertCommandFailure(showNoteCommand, model, Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"godjuansan"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"godjuansan"},"content":"        ShowNoteCommand showFirstCommand \u003d new ShowNoteCommand(INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"godjuansan"},"content":"        ShowNoteCommand showSecondCommand \u003d new ShowNoteCommand(INDEX_SECOND_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"godjuansan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"godjuansan"},"content":"        assertTrue(showFirstCommand.equals(showFirstCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"godjuansan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"godjuansan"},"content":"        ShowNoteCommand showFirstCommandCopy \u003d new ShowNoteCommand(INDEX_FIRST_NOTE);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"godjuansan"},"content":"        assertTrue(showFirstCommand.equals(showFirstCommandCopy));","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"godjuansan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"godjuansan"},"content":"        assertFalse(showFirstCommand.equals(1));","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"godjuansan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"godjuansan"},"content":"        assertFalse(showFirstCommand.equals(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"godjuansan"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"godjuansan"},"content":"        assertFalse(showFirstCommand.equals(showSecondCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"    */","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"godjuansan"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"godjuansan"},"content":"    private void showNoNote(Model model) {","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"godjuansan"},"content":"        model.updateFilteredNoteList(p -\u003e false);","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"godjuansan"},"content":"        assertTrue(model.getFilteredNoteList().isEmpty());","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"TeoHoeKeat":3,"godjuansan":96,"riyadh-h":2,"XindiTian":4}},{"path":"src/test/java/seedu/dictionote/logic/commands/SortNoteByTimeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"public class SortNoteByTimeCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    private Model model;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"        model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        expectedModel \u003d new ModelManager(model.getContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"        expectedModel.sortNoteByTime();","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"    public void execute_sort() {","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"        assertCommandSuccess(new SortNoteCommand(), model,","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"                SortNoteByTimeCommand.MESSAGE_SORT_NOTE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"    public void equals() {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"        SortNoteByTimeCommand sortNoteByTimeCommand \u003d new SortNoteByTimeCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"        SortNoteByTimeCommand sortNoteByTimeOtherCommand \u003d new SortNoteByTimeCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        assertTrue(sortNoteByTimeCommand.equals(sortNoteByTimeCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"        assertFalse(sortNoteByTimeCommand.equals(\"tree\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"        assertFalse(sortNoteByTimeCommand.equals(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"        // different object return false","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"        assertFalse(sortNoteByTimeCommand.equals(sortNoteByTimeOtherCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"jessen11":55}},{"path":"src/test/java/seedu/dictionote/logic/commands/SortNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalContent.getTypicalDictionary;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalDefinition.getTypicalDefinitionBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"public class SortNoteCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    private Model model;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"        model \u003d new ModelManager(getTypicalContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        expectedModel \u003d new ModelManager(model.getContactsList(), new UserPrefs(),","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"                getTypicalNoteBook(), getTypicalDictionary(), getTypicalDefinitionBook());","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"        expectedModel.sortNote();","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"    public void execute_sort() {","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"        assertCommandSuccess(new SortNoteCommand(), model,","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"                SortNoteCommand.MESSAGE_SORT_NOTE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"    public void equals() {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"        SortNoteCommand sortNoteCommand \u003d new SortNoteCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"        SortNoteCommand sortNoteOtherCommand \u003d new SortNoteCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        assertTrue(sortNoteCommand.equals(sortNoteCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"        assertFalse(sortNoteCommand.equals(22022001));","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"        assertFalse(sortNoteCommand.equals(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"        // different contact -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"        assertFalse(sortNoteCommand.equals(sortNoteOtherCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"jessen11":55}},{"path":"src/test/java/seedu/dictionote/logic/commands/ToggleDictionaryOrientationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.ToggleDictionaryOrientationCommand.MESSAGE_TOGGLE_SUCCESS;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"public class ToggleDictionaryOrientationCommandTest {","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_toggle_success() {","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_TOGGLE_SUCCESS, UiAction.OPEN,","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"            UiActionOption.DICTIONARY);","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandSuccess(new ToggleDictionaryOrientationCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        //value should not equal after toggle","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        assertNotEquals(model.getGuiSettings().getDictionaryPanelOrientation(), (","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"            new ModelManager()).getGuiSettings().getDictionaryPanelOrientation());","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandSuccess(new ToggleDictionaryOrientationCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        //value should be equal after toggle again","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(model.getGuiSettings().getDictionaryPanelOrientation(), (","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"            new ModelManager()).getGuiSettings().getDictionaryPanelOrientation());","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"TeoHoeKeat":33}},{"path":"src/test/java/seedu/dictionote/logic/commands/ToggleNoteOrientationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.commands.ToggleNoteOrientationCommand.MESSAGE_TOGGLE_SUCCESS;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiAction;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.ModelManager;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"public class ToggleNoteOrientationCommandTest {","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    public void execute_toggle_success() {","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_TOGGLE_SUCCESS, UiAction.OPEN,","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"            UiActionOption.NOTE_CONTENT);","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandSuccess(new ToggleNoteOrientationCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        //value should not equal after toggle","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        assertNotEquals(model.getGuiSettings().getNotePanelOrientation(), (","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"            new ModelManager()).getGuiSettings().getNotePanelOrientation());","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        assertCommandSuccess(new ToggleNoteOrientationCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        //value should be equal after toggle again","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(model.getGuiSettings().getNotePanelOrientation(), (","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"            new ModelManager()).getGuiSettings().getNotePanelOrientation());","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"TeoHoeKeat":33}},{"path":"src/test/java/seedu/dictionote/logic/commands/enums/UiActionOptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.commands.enums;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.EXPECTED_UI_OPTION;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.VALID_UI_OPTIONS;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"class UiActionOptionTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    void getUiActionOption_equal() {","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c VALID_UI_OPTIONS.length; i++) {","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"            assertEquals(UiActionOption.getUiActionOption(VALID_UI_OPTIONS[i]), EXPECTED_UI_OPTION[i]);","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    void isValidOption_success() {","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c VALID_UI_OPTIONS.length; i++) {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"            assertTrue(UiActionOption.isValidOption(VALID_UI_OPTIONS[i]));","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        assertFalse(UiActionOption.isValidOption(\"\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":27}},{"path":"src/test/java/seedu/dictionote/logic/parser/AddContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.AMY;","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.BOB;","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.AddContactCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Address;","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Email;","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.ContactBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"public class AddContactCommandParserTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"    private AddContactCommandParser parser \u003d new AddContactCommandParser();","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"        Contact expectedContact \u003d new ContactBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedContact));","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedContact));","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"riyadh-h"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedContact));","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedContact));","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"        // multiple addresses - last dictionote accepted","lastModifiedDate":"2021-02-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedContact));","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"riyadh-h"},"content":"        Contact expectedContactMultipleTags \u003d new ContactBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"riyadh-h"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddContactCommand(expectedContactMultipleTags));","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"        Contact expectedContact \u003d new ContactBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"                new AddContactCommand(expectedContact));","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"XindiTian"},"content":"        // missing dictionote prefix","lastModifiedDate":"2021-02-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"XindiTian"},"content":"        // invalid dictionote","lastModifiedDate":"2021-02-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"riyadh-h"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"riyadh-h":23,"XindiTian":32,"-":86}},{"path":"src/test/java/seedu/dictionote/logic/parser/AddNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_NOTE_CONTENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_CONTENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalNotes.MI_AMOR;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.AddNoteCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.testutil.NoteBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"public class AddNoteCommandParserTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"    private AddNoteCommandParser parser \u003d new AddNoteCommandParser();","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"    private String emptyString \u003d \" \";","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    public void parse_note_success() {","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"        Note expectedNote \u003d new NoteBuilder(MI_AMOR).build();","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"        assertParseSuccess(parser, emptyString","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"                + PREFIX_CONTENT + VALID_NOTE_CONTENT, new AddNoteCommand(expectedNote));","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"        // missing name prefix","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"        assertParseFailure(parser, VALID_NOTE_CONTENT, expectedMessage);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"jessen11":34}},{"path":"src/test/java/seedu/dictionote/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"XindiTian":1,"-":149}},{"path":"src/test/java/seedu/dictionote/logic/parser/CloseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.EXPECTED_UI_OPTION;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.VALID_UI_OPTIONS;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.CloseCommand;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":" * outside of the CloseCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"public class CloseCommandParserTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    private CloseCommandParser parser \u003d new CloseCommandParser();","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parse_validArgs_returnsCloseCommand() {","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c VALID_UI_OPTIONS.length; i++) {","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"            assertParseSuccess(parser, VALID_UI_OPTIONS[i], new CloseCommand(EXPECTED_UI_OPTION[i]));","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        assertParseFailure(parser, \"a123\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, CloseCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":37}},{"path":"src/test/java/seedu/dictionote/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.commands.Command;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"XindiTian":3,"-":35}},{"path":"src/test/java/seedu/dictionote/logic/parser/ConvertTxtNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.ConvertTxtNoteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":" * outside of the ConvertTxtNote code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":" * same path through the ConvertTxtNote, and therefore we test only one of them.","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"public class ConvertTxtNoteCommandParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"    private ConvertTxtNoteCommandParser parser \u003d new ConvertTxtNoteCommandParser();","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"        assertParseSuccess(parser, \"1\", new ConvertTxtNoteCommand(INDEX_FIRST_NOTE));","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"                ConvertTxtNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"godjuansan":32}},{"path":"src/test/java/seedu/dictionote/logic/parser/DeleteContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"public class DeleteContactCommandParserTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"    private DeleteContactCommandParser parser \u003d new DeleteContactCommandParser();","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"        assertParseSuccess(parser, \"1\", new DeleteContactCommand(INDEX_FIRST_CONTACT));","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"                DeleteContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"riyadh-h":7,"XindiTian":4,"-":22}},{"path":"src/test/java/seedu/dictionote/logic/parser/DeleteNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":" * outside of the DeleteNote code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":" * same path through the DeleteNote, and therefore we test only one of them.","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"public class DeleteNoteCommandParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    private DeleteNoteCommandParser parser \u003d new DeleteNoteCommandParser();","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"        assertParseSuccess(parser, \"1\", new DeleteNoteCommand(INDEX_FIRST_NOTE));","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"                DeleteNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"jessen11":33}},{"path":"src/test/java/seedu/dictionote/logic/parser/DictionoteParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_CONTENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.EXPECTED_UI_OPTION;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.VALID_UI_OPTIONS;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.AddContactCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.AddNoteCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.ClearContactCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.CloseCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EditContactCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.EditModeCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.EditModeQuitCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.EditModeSaveCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EmailContactCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.FindContactCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.ListCommandCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.ListContactCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.OpenCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.SetContactDividerPositionCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.SetDictionaryDividerPositionCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.SetMainDividerPositionCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.SetNoteDividerPositionCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.ShowDictionaryContentCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.ShowNoteCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.ToggleDictionaryOrientationCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.ToggleNoteOrientationCommand;","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.ContactBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.ContactUtil;","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.EditContactDescriptorBuilder;","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.testutil.NoteUtil;","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"public class DictionoteParserTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"    private final DictionoteParser parser \u003d new DictionoteParser();","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"riyadh-h"},"content":"    public void parseCommand_addContact() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"        AddContactCommand command \u003d (AddContactCommand) parser.parseCommand(ContactUtil.getAddCommand(contact));","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(new AddContactCommand(contact), command);","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"    public void parseCommand_addNote() throws Exception {","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"godjuansan"},"content":"        Note note \u003d new Note(\"this is a sample CS2103 note haha\", new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"        AddNoteCommand command \u003d (AddNoteCommand) parser.parseCommand(NoteUtil.getAddNoteCommand(note));","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"        assertEquals(new AddNoteCommand(note), command);","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(parser.parseCommand(ClearContactCommand.COMMAND_WORD) instanceof ClearContactCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(parser.parseCommand(ClearContactCommand.COMMAND_WORD + \" 3\") instanceof ClearContactCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"riyadh-h"},"content":"    public void parseCommand_deleteContact() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"riyadh-h"},"content":"        DeleteContactCommand command \u003d (DeleteContactCommand) parser.parseCommand(","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"riyadh-h"},"content":"            DeleteContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CONTACT.getOneBased());","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(new DeleteContactCommand(INDEX_FIRST_CONTACT), command);","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_editModeNote() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(EditModeCommand.COMMAND_WORD) instanceof EditModeCommand);","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(EditModeCommand.COMMAND_WORD + \" 3\") instanceof EditModeCommand);","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_editModeExit() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(EditModeQuitCommand.COMMAND_WORD) instanceof EditModeQuitCommand);","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(EditModeQuitCommand.COMMAND_WORD + \" 3\") instanceof EditModeQuitCommand);","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_editModeSave() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(EditModeSaveCommand.COMMAND_WORD) instanceof EditModeSaveCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(EditModeSaveCommand.COMMAND_WORD + \" 3\") instanceof EditModeSaveCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"riyadh-h"},"content":"    public void parseCommand_editContact() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"riyadh-h"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":114,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder(contact).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand command \u003d (EditContactCommand) parser.parseCommand(EditContactCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"riyadh-h"},"content":"            + INDEX_FIRST_CONTACT.getOneBased() + \" \" + ContactUtil.getEditContactDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(new EditContactCommand(INDEX_FIRST_CONTACT, descriptor), command);","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"riyadh-h"},"content":"    public void parseCommand_emailContact() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"riyadh-h"},"content":"        EmailContactCommand command \u003d (EmailContactCommand) parser.parseCommand(","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"riyadh-h"},"content":"            EmailContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CONTACT.getOneBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(new EmailContactCommand(INDEX_FIRST_CONTACT), command);","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_listContact() throws Exception {","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD) instanceof ListContactCommand);","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD + \" 3\") instanceof ListContactCommand);","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_listCommand() throws Exception {","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(ListCommandCommand.COMMAND_WORD) instanceof ListCommandCommand);","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(ListCommandCommand.COMMAND_WORD + \" 3\") instanceof ListCommandCommand);","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"riyadh-h"},"content":"    public void parseCommand_findContact() throws Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"riyadh-h"},"content":"        List\u003cString\u003e nameKeywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"riyadh-h"},"content":"        List\u003cString\u003e tagKeywords \u003d Arrays.asList(\"friends\", \"family\", \"tutors\");","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"riyadh-h"},"content":"        List\u003cString\u003e emailKeywords \u003d Arrays.asList(\"@aexample.com\", \"@bexample.com\", \"@cexample.net\");","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"riyadh-h"},"content":"        FindContactCommand command \u003d (FindContactCommand) parser.parseCommand(","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"riyadh-h"},"content":"            FindContactCommand.COMMAND_WORD","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"riyadh-h"},"content":"                + \" \"","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"riyadh-h"},"content":"                + nameKeywords.stream().map(nk -\u003e PREFIX_NAME + nk).collect(Collectors.joining(\" \"))","lastModifiedDate":"2021-03-13"},{"lineNumber":155,"author":{"gitId":"riyadh-h"},"content":"                + \" \"","lastModifiedDate":"2021-03-13"},{"lineNumber":156,"author":{"gitId":"riyadh-h"},"content":"                + emailKeywords.stream().map(ek -\u003e PREFIX_EMAIL + ek).collect(Collectors.joining(\" \"))","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"riyadh-h"},"content":"                + \" \"","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"riyadh-h"},"content":"                + tagKeywords.stream().map(tk -\u003e PREFIX_TAG + tk).collect(Collectors.joining(\" \"))","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"riyadh-h"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(new FindContactCommand(","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"riyadh-h"},"content":"            new NameContainsKeywordsPredicate(nameKeywords),","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"riyadh-h"},"content":"            new EmailContainsKeywordsPredicate(emailKeywords),","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"riyadh-h"},"content":"            new TagsContainKeywordsPredicate(tagKeywords)), command);","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_showNote() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"TeoHoeKeat"},"content":"        ShowNoteCommand command \u003d (ShowNoteCommand) parser.parseCommand(","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"TeoHoeKeat"},"content":"            ShowNoteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_NOTE.getOneBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(new ShowNoteCommand(INDEX_FIRST_NOTE), command);","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":174,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_showDictionaryContent() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"TeoHoeKeat"},"content":"        ShowDictionaryContentCommand command \u003d (ShowDictionaryContentCommand) parser.parseCommand(","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"TeoHoeKeat"},"content":"            ShowDictionaryContentCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CONTENT.getOneBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(new ShowDictionaryContentCommand(INDEX_FIRST_CONTENT), command);","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":189,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":190,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_open() throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":191,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c VALID_UI_OPTIONS.length; i++) {","lastModifiedDate":"2021-03-03"},{"lineNumber":192,"author":{"gitId":"TeoHoeKeat"},"content":"            OpenCommand command \u003d (OpenCommand) parser.parseCommand(","lastModifiedDate":"2021-03-03"},{"lineNumber":193,"author":{"gitId":"TeoHoeKeat"},"content":"                OpenCommand.COMMAND_WORD + \" \" + VALID_UI_OPTIONS[i]);","lastModifiedDate":"2021-03-03"},{"lineNumber":194,"author":{"gitId":"TeoHoeKeat"},"content":"            assertEquals(new OpenCommand(EXPECTED_UI_OPTION[i]), command);","lastModifiedDate":"2021-03-03"},{"lineNumber":195,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":196,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":197,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":198,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":199,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_close() throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":200,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c VALID_UI_OPTIONS.length; i++) {","lastModifiedDate":"2021-03-03"},{"lineNumber":201,"author":{"gitId":"TeoHoeKeat"},"content":"            CloseCommand command \u003d (CloseCommand) parser.parseCommand(","lastModifiedDate":"2021-03-03"},{"lineNumber":202,"author":{"gitId":"TeoHoeKeat"},"content":"                CloseCommand.COMMAND_WORD + \" \" + VALID_UI_OPTIONS[i]);","lastModifiedDate":"2021-03-03"},{"lineNumber":203,"author":{"gitId":"TeoHoeKeat"},"content":"            assertEquals(new CloseCommand(EXPECTED_UI_OPTION[i]), command);","lastModifiedDate":"2021-03-03"},{"lineNumber":204,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":205,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":206,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":207,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_setContactDividerPosition() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":209,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(SetContactDividerPositionCommand.COMMAND_WORD + \" 6\")","lastModifiedDate":"2021-03-28"},{"lineNumber":210,"author":{"gitId":"TeoHoeKeat"},"content":"            instanceof SetContactDividerPositionCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":211,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":212,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":213,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":214,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_setDictionaryDividerPosition() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":215,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(SetDictionaryDividerPositionCommand.COMMAND_WORD + \" 6\")","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"TeoHoeKeat"},"content":"            instanceof SetDictionaryDividerPositionCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":218,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_setNoteDividerPosition() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(SetNoteDividerPositionCommand.COMMAND_WORD + \" 6\")","lastModifiedDate":"2021-03-28"},{"lineNumber":222,"author":{"gitId":"TeoHoeKeat"},"content":"            instanceof SetNoteDividerPositionCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_setMainDividerPosition() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":227,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(SetMainDividerPositionCommand.COMMAND_WORD + \" 6\")","lastModifiedDate":"2021-03-28"},{"lineNumber":228,"author":{"gitId":"TeoHoeKeat"},"content":"            instanceof SetMainDividerPositionCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":229,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":230,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":231,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":232,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_toggleNotePanel() throws Exception {","lastModifiedDate":"2021-03-26"},{"lineNumber":233,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2021-03-26"},{"lineNumber":234,"author":{"gitId":"TeoHoeKeat"},"content":"            ToggleNoteOrientationCommand.COMMAND_WORD) instanceof ToggleNoteOrientationCommand);","lastModifiedDate":"2021-03-26"},{"lineNumber":235,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2021-03-26"},{"lineNumber":236,"author":{"gitId":"TeoHoeKeat"},"content":"            ToggleNoteOrientationCommand.COMMAND_WORD + \" 3\") instanceof ToggleNoteOrientationCommand);","lastModifiedDate":"2021-03-26"},{"lineNumber":237,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":238,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":239,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":240,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseCommand_toggleDictionaryPanel() throws Exception {","lastModifiedDate":"2021-03-26"},{"lineNumber":241,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2021-03-26"},{"lineNumber":242,"author":{"gitId":"TeoHoeKeat"},"content":"            ToggleDictionaryOrientationCommand.COMMAND_WORD) instanceof ToggleDictionaryOrientationCommand);","lastModifiedDate":"2021-03-26"},{"lineNumber":243,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2021-03-26"},{"lineNumber":244,"author":{"gitId":"TeoHoeKeat"},"content":"            ToggleDictionaryOrientationCommand.COMMAND_WORD + \" 3\") instanceof ToggleDictionaryOrientationCommand);","lastModifiedDate":"2021-03-26"},{"lineNumber":245,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":246,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"TeoHoeKeat":121,"jessen11":6,"godjuansan":5,"riyadh-h":67,"XindiTian":5,"-":53}},{"path":"src/test/java/seedu/dictionote/logic/parser/EditContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_SECOND_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_THIRD_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EditContactCommand;","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Address;","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Email;","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.EditContactDescriptorBuilder;","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"public class EditContactCommandParserTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"    private EditContactCommandParser parser \u003d new EditContactCommandParser();","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"riyadh-h"},"content":"        assertParseFailure(parser, \"1\", EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"XindiTian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid dictionote","lastModifiedDate":"2021-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Contact} being edited,","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"riyadh-h"},"content":"        Index targetIndex \u003d INDEX_SECOND_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"riyadh-h"},"content":"        Index targetIndex \u003d INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"riyadh-h"},"content":"        Index targetIndex \u003d INDEX_THIRD_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":140,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"riyadh-h"},"content":"        descriptor \u003d new EditContactDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":146,"author":{"gitId":"riyadh-h"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"riyadh-h"},"content":"        descriptor \u003d new EditContactDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":152,"author":{"gitId":"riyadh-h"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"XindiTian"},"content":"        // dictionote","lastModifiedDate":"2021-02-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"riyadh-h"},"content":"        descriptor \u003d new EditContactDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"riyadh-h"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"riyadh-h"},"content":"        descriptor \u003d new EditContactDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":164,"author":{"gitId":"riyadh-h"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"riyadh-h"},"content":"        Index targetIndex \u003d INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"riyadh-h"},"content":"        Index targetIndex \u003d INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":189,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"riyadh-h"},"content":"        descriptor \u003d new EditContactDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"riyadh-h"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"riyadh-h"},"content":"        Index targetIndex \u003d INDEX_THIRD_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"riyadh-h"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-11"},{"lineNumber":207,"author":{"gitId":"riyadh-h"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"riyadh-h":43,"XindiTian":33,"-":135}},{"path":"src/test/java/seedu/dictionote/logic/parser/EditNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.NOTE_DESC;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_NOTE_CONTENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.EditNoteCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.EditNoteCommand.EditNoteDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.testutil.EditNoteDescriptorBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"public class EditNoteCommandParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"    private EditNoteCommandParser parser \u003d new EditNoteCommandParser();","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"        // no index specified","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"        assertParseFailure(parser, VALID_NOTE_CONTENT, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"        // no field specified","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"        assertParseFailure(parser, \"1\", EditNoteCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"        // no index and no field specified","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"        // negative index","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"        assertParseFailure(parser, \"-5\" + VALID_NOTE_CONTENT, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        // zero index","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"        assertParseFailure(parser, \"0\" + VALID_NOTE_CONTENT, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"        Index targetIndex \u003d INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"        String userInput \u003d targetIndex.getOneBased() + NOTE_DESC;","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"        EditNoteCommand.EditNoteDescriptor descriptor \u003d new EditNoteDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"                .withNote(VALID_NOTE_CONTENT).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"        EditNoteCommand expectedCommand \u003d new EditNoteCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"        Index targetIndex \u003d INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"        EditNoteDescriptor descriptor \u003d new EditNoteDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"        EditNoteCommand expectedCommand \u003d new EditNoteCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"jessen11":75}},{"path":"src/test/java/seedu/dictionote/logic/parser/EmailContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EmailContactCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"public class EmailContactCommandParserTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"    private EmailContactCommandParser parser \u003d new EmailContactCommandParser();","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"    public void parse_validArgs_returnsEmailContactCommand() {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"        assertParseSuccess(parser, \"1\", new EmailContactCommand(INDEX_FIRST_CONTACT));","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"                EmailContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"riyadh-h":33}},{"path":"src/test/java/seedu/dictionote/logic/parser/FindContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.FindContactCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"public class FindContactCommandParserTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"    private FindContactCommandParser parser \u003d new FindContactCommandParser();","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"                FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    public void parse_validArgs_returnsFindContactCommand() {","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"        FindContactCommand expectedFindContactCommand \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"                new FindContactCommand(","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"                        new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")),","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"                        new EmailContainsKeywordsPredicate(Arrays.asList(\"@a.com\", \"@b.net\")),","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"                        new TagsContainKeywordsPredicate(Arrays.asList(\"A\", \"B\"))","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"                        );","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"        assertParseSuccess(parser, \" n/Alice n/Bob e/@a.com e/@b.net t/A t/B\", expectedFindContactCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"        assertParseSuccess(","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"                parser,","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"                \" \\n n/Alice \\n \\t n/Bob e/@a.com  \\t e/@b.net \\n t/A \\t t/B\",","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"                expectedFindContactCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"riyadh-h":21,"XindiTian":4,"-":20}},{"path":"src/test/java/seedu/dictionote/logic/parser/FindNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.FindNoteCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.NoteContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.TagNoteContainKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"public class FindNoteCommandParserTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"    private FindNoteCommandParser parser \u003d new FindNoteCommandParser();","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"                FindNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    public void parse_validArgs_returnsFindContactCommand() {","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"        FindNoteCommand expectedFindNoteCommand \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"                new FindNoteCommand(","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"                        new NoteContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")),","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"                        new TagNoteContainKeywordsPredicate(Arrays.asList(\"A\", \"B\")));","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"        assertParseSuccess(parser, \" c/Alice c/Bob t/A t/B\", expectedFindNoteCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"        assertParseSuccess(parser, \" \\n c/Alice \\n \\t c/Bob t/A  \\t t/B\", expectedFindNoteCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"jessen11":38}},{"path":"src/test/java/seedu/dictionote/logic/parser/MarkAsDoneNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.MarkAsDoneNoteCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":" * outside of the MarkAsDoneNote code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":" * same path through the MarkAsDoneNote, and therefore we test only one of them.","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"public class MarkAsDoneNoteCommandParserTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"    private MarkAsDoneNoteCommandParser parser \u003d new MarkAsDoneNoteCommandParser();","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"    public void parse_validArgs_returnsMarkAsDoneCommand() {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"        assertParseSuccess(parser, \"1\", new MarkAsDoneNoteCommand(INDEX_FIRST_NOTE));","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"                MarkAsDoneNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"godjuansan":32}},{"path":"src/test/java/seedu/dictionote/logic/parser/MarkAsUndoneNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.MarkAsUndoneNoteCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"public class MarkAsUndoneNoteCommandParserTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"    private MarkAsUndoneNoteCommandParser parser \u003d new MarkAsUndoneNoteCommandParser();","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"    public void parse_validArgs_returnsMarkAsDoneCommand() {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"        assertParseSuccess(parser, \"1\", new MarkAsUndoneNoteCommand(INDEX_FIRST_NOTE));","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"                MarkAsUndoneNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"godjuansan":25}},{"path":"src/test/java/seedu/dictionote/logic/parser/MergeNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_SECOND_NOTE;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.MergeNoteCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":"public class MergeNoteCommandParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":"    private MergeNoteCommandParser parser \u003d new MergeNoteCommandParser();","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"    public void parse_validArgs_returnsMergeCommand() {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"        assertParseSuccess(parser, \" 1 2\", new MergeNoteCommand(INDEX_FIRST_NOTE, INDEX_SECOND_NOTE));","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"        assertParseFailure(parser, \" a b\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"                MergeNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"godjuansan":26}},{"path":"src/test/java/seedu/dictionote/logic/parser/OpenCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.EXPECTED_UI_OPTION;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.VALID_UI_OPTIONS;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.OpenCommand;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":" * outside of the OpenCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"public class OpenCommandParserTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    private OpenCommandParser parser \u003d new OpenCommandParser();","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parse_validArgs_returnsOpenCommand() {","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c VALID_UI_OPTIONS.length; i++) {","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"            assertParseSuccess(parser, VALID_UI_OPTIONS[i], new OpenCommand(EXPECTED_UI_OPTION[i]));","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        assertParseFailure(parser, \"a123\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, OpenCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":37}},{"path":"src/test/java/seedu/dictionote/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.ParserUtil.MESSAGE_INVALID_POSITION;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_CONTACT;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.EXPECTED_UI_OPTION;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalUiActions.VALID_UI_OPTIONS;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Address;","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Email;","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String INVALID_UI_OPTION \u003d \"0123\";","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(INDEX_FIRST_CONTACT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(INDEX_FIRST_CONTACT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":201,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":202,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseUiActionOption_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":203,"author":{"gitId":"TeoHoeKeat"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseUiActionOption(null));","lastModifiedDate":"2021-03-03"},{"lineNumber":204,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":205,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":206,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":207,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseUiActionOption_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":208,"author":{"gitId":"TeoHoeKeat"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseUiActionOption(INVALID_UI_OPTION));","lastModifiedDate":"2021-03-03"},{"lineNumber":209,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":210,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":211,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":212,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseUiActionOption_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":213,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c VALID_UI_OPTIONS.length; i++) {","lastModifiedDate":"2021-03-03"},{"lineNumber":214,"author":{"gitId":"TeoHoeKeat"},"content":"            assertEquals(EXPECTED_UI_OPTION[i], ParserUtil.parseUiActionOption(VALID_UI_OPTIONS[i]));","lastModifiedDate":"2021-03-03"},{"lineNumber":215,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":216,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":217,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":218,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":219,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseUiActionOption_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":220,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c VALID_UI_OPTIONS.length; i++) {","lastModifiedDate":"2021-03-03"},{"lineNumber":221,"author":{"gitId":"TeoHoeKeat"},"content":"            String optionWithWhitespace \u003d WHITESPACE + VALID_UI_OPTIONS[i] + WHITESPACE;","lastModifiedDate":"2021-03-03"},{"lineNumber":222,"author":{"gitId":"TeoHoeKeat"},"content":"            assertEquals(EXPECTED_UI_OPTION[i], ParserUtil.parseUiActionOption(optionWithWhitespace));","lastModifiedDate":"2021-03-03"},{"lineNumber":223,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":224,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":225,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":226,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":227,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parsePosition_invalidInput_throwsParseException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":228,"author":{"gitId":"TeoHoeKeat"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePosition(\"10 a\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":229,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":230,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":231,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":232,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parsePosition_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":233,"author":{"gitId":"TeoHoeKeat"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_POSITION, ()","lastModifiedDate":"2021-03-28"},{"lineNumber":234,"author":{"gitId":"TeoHoeKeat"},"content":"            -\u003e ParserUtil.parsePosition(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-03-28"},{"lineNumber":235,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":236,"author":{"gitId":"TeoHoeKeat"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_POSITION, ()","lastModifiedDate":"2021-03-28"},{"lineNumber":237,"author":{"gitId":"TeoHoeKeat"},"content":"            -\u003e ParserUtil.parsePosition(Long.toString(10)));","lastModifiedDate":"2021-03-28"},{"lineNumber":238,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":239,"author":{"gitId":"TeoHoeKeat"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_POSITION, ()","lastModifiedDate":"2021-03-28"},{"lineNumber":240,"author":{"gitId":"TeoHoeKeat"},"content":"            -\u003e ParserUtil.parsePosition(Long.toString(0)));","lastModifiedDate":"2021-03-28"},{"lineNumber":241,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":242,"author":{"gitId":"TeoHoeKeat"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_POSITION, ()","lastModifiedDate":"2021-03-28"},{"lineNumber":243,"author":{"gitId":"TeoHoeKeat"},"content":"            -\u003e ParserUtil.parsePosition(Long.toString(-1)));","lastModifiedDate":"2021-03-28"},{"lineNumber":244,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":245,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":246,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":247,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parsePosition_validInput_success() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":248,"author":{"gitId":"TeoHoeKeat"},"content":"        // No whitespaces","lastModifiedDate":"2021-03-28"},{"lineNumber":249,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(1, ParserUtil.parsePosition(\"1\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":250,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(2, ParserUtil.parsePosition(\"2\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":251,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(3, ParserUtil.parsePosition(\"3\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":252,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(4, ParserUtil.parsePosition(\"4\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":253,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(5, ParserUtil.parsePosition(\"5\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":254,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(6, ParserUtil.parsePosition(\"6\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":255,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(7, ParserUtil.parsePosition(\"7\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":256,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(8, ParserUtil.parsePosition(\"8\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":257,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(9, ParserUtil.parsePosition(\"9\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":258,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":259,"author":{"gitId":"TeoHoeKeat"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2021-03-28"},{"lineNumber":260,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(1, ParserUtil.parsePosition(\"  1  \"));","lastModifiedDate":"2021-03-28"},{"lineNumber":261,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(5, ParserUtil.parsePosition(\"  5  \"));","lastModifiedDate":"2021-03-28"},{"lineNumber":262,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(9, ParserUtil.parsePosition(\"  9  \"));","lastModifiedDate":"2021-03-28"},{"lineNumber":263,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":264,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"TeoHoeKeat":69,"riyadh-h":7,"XindiTian":5,"-":184}},{"path":"src/test/java/seedu/dictionote/logic/parser/ShowDictionaryContentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.ShowDictionaryContentCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"public class ShowDictionaryContentCommandParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    private ShowDictionaryContentCommandParser parser \u003d new ShowDictionaryContentCommandParser();","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parse_validArgs_returnsShowCommand() {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        assertParseSuccess(parser, \"1\", new ShowDictionaryContentCommand(INDEX_FIRST_NOTE));","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"            ShowDictionaryContentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"TeoHoeKeat":31}},{"path":"src/test/java/seedu/dictionote/logic/parser/ShowNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.logic.commands.ShowNoteCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"public class ShowNoteCommandParserTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"    private ShowNoteCommandParser parser \u003d new ShowNoteCommandParser();","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"    public void parse_validArgs_returnsShowCommand() {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"        assertParseSuccess(parser, \"1\", new ShowNoteCommand(INDEX_FIRST_NOTE));","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"                ShowNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"godjuansan":31}},{"path":"src/test/java/seedu/dictionote/model/ContactsListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.ContactBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"public class ContactsListTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    private final ContactsList contactsList \u003d new ContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(Collections.emptyList(), contactsList.getContactList());","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e contactsList.resetData(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"    public void resetData_withValidReadOnlyContactsList_replacesData() {","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"        ContactsList newData \u003d getTypicalContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"        contactsList.resetData(newData);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(newData, contactsList);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"    public void resetData_withDuplicateContacts_throwsDuplicateContactException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"        List\u003cContact\u003e newContacts \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"        ContactsListStub newData \u003d new ContactsListStub(newContacts);","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e contactsList.resetData(newData));","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"riyadh-h"},"content":"    public void hasContact_nullContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e contactsList.hasContact(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"riyadh-h"},"content":"    public void hasContact_contactNotInContactsList_returnsFalse() {","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(contactsList.hasContact(ALICE));","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"    public void hasContact_contactInContactsList_returnsTrue() {","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"riyadh-h"},"content":"        contactsList.addContact(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(contactsList.hasContact(ALICE));","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"riyadh-h"},"content":"    public void hasContact_contactWithSameIdentityFieldsInContactsList_returnsTrue() {","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"riyadh-h"},"content":"        contactsList.addContact(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"riyadh-h"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(contactsList.hasContact(editedAlice));","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"    public void getContactList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e contactsList.getContactList().remove(0));","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"riyadh-h"},"content":"    private static class ContactsListStub implements ReadOnlyContactsList {","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"riyadh-h"},"content":"        private final ObservableList\u003cContact\u003e contacts \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"riyadh-h"},"content":"        ContactsListStub(Collection\u003cContact\u003e contacts) {","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"riyadh-h"},"content":"            this.contacts.setAll(contacts);","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"        public ObservableList\u003cContact\u003e getContactList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"riyadh-h"},"content":"            return contacts;","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"jessen11":1,"riyadh-h":37,"XindiTian":4,"-":61}},{"path":"src/test/java/seedu/dictionote/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.model.Model.PREDICATE_SHOW_ALL_CONTACTS;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.BENSON;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.GuiSettings;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.ContactsListBuilder;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(new ContactsList(), new ContactsList(modelManager.getContactsList()));","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"        userPrefs.setContactsListFilePath(Paths.get(\"dictionote/book/file/path\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4, 5,","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"            6, 7, 8, true, false,","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"            true, false, true, true, true));","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"        userPrefs.setContactsListFilePath(Paths.get(\"new/dictionote/book/file/path\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4, 5,","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"            6, 7, 8, true, false,","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"            true, false, true, true, true);","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"    public void setContactsListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setContactsFilePath(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"riyadh-h"},"content":"    public void setContactsListFilePath_validPath_setsContactsListFilePath() {","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"        Path path \u003d Paths.get(\"dictionote/book/file/path\");","lastModifiedDate":"2021-02-27"},{"lineNumber":75,"author":{"gitId":"riyadh-h"},"content":"        modelManager.setContactsFilePath(path);","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(path, modelManager.getContactsListFilePath());","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"    public void hasContact_nullContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasContact(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"riyadh-h"},"content":"    public void hasContact_contactNotInContactsList_returnsFalse() {","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(modelManager.hasContact(ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"riyadh-h"},"content":"    public void hasContact_contactInContactsList_returnsTrue() {","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"riyadh-h"},"content":"        modelManager.addContact(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(modelManager.hasContact(ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"riyadh-h"},"content":"    public void getFilteredContactList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredContactList().remove(0));","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"riyadh-h"},"content":"        ContactsList contactsList \u003d new ContactsListBuilder().withContact(ALICE).withContact(BENSON).build();","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"riyadh-h"},"content":"        ContactsList differentContactsList \u003d new ContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"godjuansan"},"content":"        NoteBook noteBook \u003d new NoteBook();","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"XindiTian"},"content":"        Dictionary dictionary \u003d new Dictionary();","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"XindiTian"},"content":"        DefinitionBook definitionBook \u003d new DefinitionBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"riyadh-h"},"content":"        modelManager \u003d new ModelManager(contactsList, userPrefs, noteBook, dictionary, definitionBook);","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"riyadh-h"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(contactsList, userPrefs, noteBook, dictionary, definitionBook);","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentContactsList, userPrefs, noteBook,","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"XindiTian"},"content":"                dictionary, definitionBook)));","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":129,"author":{"gitId":"riyadh-h"},"content":"        modelManager.updateFilteredContactList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(modelManager.equals(new ModelManager(contactsList, userPrefs, noteBook,","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"XindiTian"},"content":"                dictionary, definitionBook)));","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"riyadh-h"},"content":"        modelManager.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"riyadh-h"},"content":"        differentUserPrefs.setContactsListFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(modelManager.equals(new ModelManager(contactsList, differentUserPrefs, noteBook,","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"XindiTian"},"content":"                dictionary, definitionBook)));","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"TeoHoeKeat":6,"godjuansan":1,"riyadh-h":32,"XindiTian":9,"-":94}},{"path":"src/test/java/seedu/dictionote/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"    public void setContactsListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setContactsListFilePath(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"riyadh-h":2,"XindiTian":2,"-":17}},{"path":"src/test/java/seedu/dictionote/model/contact/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"        // null dictionote","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"        // long dictionote","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"riyadh-h":1,"XindiTian":5,"-":32}},{"path":"src/test/java/seedu/dictionote/model/contact/ContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.BOB;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.ContactBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"public class ContactTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e contact.getTags().remove(0));","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    public void isSameContact() {","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(ALICE.isSameContact(ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(ALICE.isSameContact(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(ALICE.isSameContact(editedAlice));","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(ALICE.isSameContact(editedAlice));","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"        Contact editedBob \u003d new ContactBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(BOB.isSameContact(editedBob));","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"        editedBob \u003d new ContactBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(BOB.isSameContact(editedBob));","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"        Contact aliceCopy \u003d new ContactBuilder(ALICE).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"riyadh-h"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"XindiTian"},"content":"        // different dictionote -\u003e returns false","lastModifiedDate":"2021-02-27"},{"lineNumber":84,"author":{"gitId":"riyadh-h"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"riyadh-h"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"riyadh-h":24,"XindiTian":7,"-":60}},{"path":"src/test/java/seedu/dictionote/model/contact/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\"));","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\")); // special characters local part","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be!@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"riyadh-h":1,"XindiTian":1,"-":59}},{"path":"src/test/java/seedu/dictionote/model/contact/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.ContactBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(predicate.test(new ContactBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(predicate.test(new ContactBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(predicate.test(new ContactBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(predicate.test(new ContactBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(predicate.test(new ContactBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(predicate.test(new ContactBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(predicate.test(new ContactBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"riyadh-h":14,"-":61}},{"path":"src/test/java/seedu/dictionote/model/contact/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"riyadh-h":1,"XindiTian":1,"-":38}},{"path":"src/test/java/seedu/dictionote/model/contact/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"riyadh-h":1,"XindiTian":1,"-":38}},{"path":"src/test/java/seedu/dictionote/model/contact/UniqueContactListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.model.contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.BOB;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.exceptions.ContactNotFoundException;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.ContactBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"public class UniqueContactListTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"    private final UniqueContactList uniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    public void contains_nullContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.contains(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"    public void contains_contactNotInList_returnsFalse() {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(uniqueContactList.contains(ALICE));","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"    public void contains_contactInList_returnsTrue() {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(uniqueContactList.contains(ALICE));","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"    public void contains_contactWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"        assertTrue(uniqueContactList.contains(editedAlice));","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"    public void add_nullContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.add(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"    public void add_duplicateContact_throwsDuplicateContactException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.add(ALICE));","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"riyadh-h"},"content":"    public void setContact_nullTargetContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContact(null, ALICE));","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"    public void setContact_nullEditedContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContact(ALICE, null));","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"    public void setContact_targetContactNotInList_throwsContactNotFoundException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(ContactNotFoundException.class, () -\u003e uniqueContactList.setContact(ALICE, ALICE));","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"riyadh-h"},"content":"    public void setContact_editedContactIsSameContact_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.setContact(ALICE, ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"riyadh-h"},"content":"        expectedUniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"riyadh-h"},"content":"    public void setContact_editedContactHasSameIdentity_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"riyadh-h"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.setContact(ALICE, editedAlice);","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"riyadh-h"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"riyadh-h"},"content":"        expectedUniqueContactList.add(editedAlice);","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"    public void setContact_editedContactHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.setContact(ALICE, BOB);","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"riyadh-h"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"riyadh-h"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"riyadh-h"},"content":"    public void setContact_editedContactHasNonUniqueIdentity_throwsDuplicateContactException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.add(BOB);","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.setContact(ALICE, BOB));","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"riyadh-h"},"content":"    public void remove_nullContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.remove(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"riyadh-h"},"content":"    public void remove_contactDoesNotExist_throwsContactNotFoundException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(ContactNotFoundException.class, () -\u003e uniqueContactList.remove(ALICE));","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"riyadh-h"},"content":"    public void remove_existingContact_removesContact() {","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.remove(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"riyadh-h"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"riyadh-h"},"content":"    public void setContacts_nullUniqueContactList_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContacts((UniqueContactList) null));","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"riyadh-h"},"content":"    public void setContacts_uniqueContactList_replacesOwnListWithProvidedUniqueContactList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"riyadh-h"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"riyadh-h"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.setContacts(expectedUniqueContactList);","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"riyadh-h"},"content":"    public void setContacts_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContacts((List\u003cContact\u003e) null));","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"riyadh-h"},"content":"    public void setContacts_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"riyadh-h"},"content":"        List\u003cContact\u003e contactList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-03-07"},{"lineNumber":153,"author":{"gitId":"riyadh-h"},"content":"        uniqueContactList.setContacts(contactList);","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"riyadh-h"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"riyadh-h"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"riyadh-h"},"content":"    public void setContacts_listWithDuplicateContacts_throwsDuplicateContactException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"riyadh-h"},"content":"        List\u003cContact\u003e listWithDuplicateContacts \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":162,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.setContacts(listWithDuplicateContacts));","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"riyadh-h"},"content":"            -\u003e uniqueContactList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"riyadh-h":83,"XindiTian":3,"-":84}},{"path":"src/test/java/seedu/dictionote/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.model.tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"XindiTian":2,"-":24}},{"path":"src/test/java/seedu/dictionote/storage/JsonAdaptedContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.storage.JsonAdaptedContact.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.BENSON;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Address;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Email;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.FrequencyCounter;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Phone;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"public class JsonAdaptedContactTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"    private static final int INVALID_FREQUENCY \u003d -1;","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"    private static final int VALID_FREQUENCY \u003d BENSON.getFrequencyCounter().value;","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"    public void toModelType_validContactDetails_returnsContact() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"        JsonAdaptedContact person \u003d new JsonAdaptedContact(BENSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"        JsonAdaptedContact person \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"                new JsonAdaptedContact(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"                        VALID_FREQUENCY);","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"        JsonAdaptedContact person \u003d new JsonAdaptedContact(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"                VALID_FREQUENCY);","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"riyadh-h"},"content":"        JsonAdaptedContact person \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"                new JsonAdaptedContact(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"riyadh-h"},"content":"                        VALID_FREQUENCY);","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"        JsonAdaptedContact person \u003d new JsonAdaptedContact(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"riyadh-h"},"content":"                VALID_FREQUENCY);","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"        JsonAdaptedContact person \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"riyadh-h"},"content":"                new JsonAdaptedContact(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"                        VALID_FREQUENCY);","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"riyadh-h"},"content":"        JsonAdaptedContact person \u003d new JsonAdaptedContact(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"riyadh-h"},"content":"                VALID_FREQUENCY);","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"        JsonAdaptedContact person \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"riyadh-h"},"content":"                new JsonAdaptedContact(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"riyadh-h"},"content":"                        VALID_FREQUENCY);","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"riyadh-h"},"content":"        JsonAdaptedContact person \u003d new JsonAdaptedContact(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"riyadh-h"},"content":"                VALID_FREQUENCY);","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"riyadh-h"},"content":"        JsonAdaptedContact person \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"riyadh-h"},"content":"                new JsonAdaptedContact(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags,","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"riyadh-h"},"content":"                        VALID_FREQUENCY);","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"riyadh-h"},"content":"    public void toModelType_invalidFrequency_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"riyadh-h"},"content":"        JsonAdaptedContact person \u003d new JsonAdaptedContact(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"riyadh-h"},"content":"                VALID_TAGS, INVALID_FREQUENCY);","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"riyadh-h"},"content":"        String expectedMessage \u003d FrequencyCounter.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"riyadh-h":43,"XindiTian":3,"-":84}},{"path":"src/test/java/seedu/dictionote/storage/JsonContactsListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.HOON;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.IDA;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"public class JsonContactsListStorageTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonContactsListStorageTest\");","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"    @TempDir","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"    public void readContactsList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e readContactsList(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"    private java.util.Optional\u003cReadOnlyContactsList\u003e readContactsList(String filePath) throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"        return new JsonContactsListStorage(Paths.get(filePath)).readContactsList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"                : null;","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        assertFalse(readContactsList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactsList(\"notJsonFormatContactsList.json\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"    public void readContactsList_invalidContactsList_throwDataConversionException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactsList(\"invalidContactsList.json\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"    public void readContactsList_invalidAndValidContactsList_throwDataConversionException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactsList(\"invalidAndValidContactsList.json\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"riyadh-h"},"content":"    public void readAndSaveContactsList_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"riyadh-h"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"riyadh-h"},"content":"        ContactsList original \u003d getTypicalContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"        JsonContactsListStorage jsonContactsListStorage \u003d new JsonContactsListStorage(filePath);","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"riyadh-h"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"riyadh-h"},"content":"        jsonContactsListStorage.saveContactsList(original, filePath);","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"riyadh-h"},"content":"        ReadOnlyContactsList readBack \u003d jsonContactsListStorage.readContactsList(filePath).get();","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(original, new ContactsList(readBack));","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"riyadh-h"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"riyadh-h"},"content":"        original.addContact(HOON);","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"riyadh-h"},"content":"        original.removeContact(ALICE);","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"riyadh-h"},"content":"        jsonContactsListStorage.saveContactsList(original, filePath);","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"riyadh-h"},"content":"        readBack \u003d jsonContactsListStorage.readContactsList(filePath).get();","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(original, new ContactsList(readBack));","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"riyadh-h"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"riyadh-h"},"content":"        original.addContact(IDA);","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"riyadh-h"},"content":"        jsonContactsListStorage.saveContactsList(original); // file path not specified","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"riyadh-h"},"content":"        readBack \u003d jsonContactsListStorage.readContactsList().get(); // file path not specified","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(original, new ContactsList(readBack));","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"riyadh-h"},"content":"    public void saveContactsList_nullContactsList_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveContactsList(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"riyadh-h"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"riyadh-h"},"content":"    private void saveContactsList(ReadOnlyContactsList addressBook, String filePath) {","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"riyadh-h"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"riyadh-h"},"content":"            new JsonContactsListStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"riyadh-h"},"content":"                    .saveContactsList(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"riyadh-h"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"riyadh-h"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"riyadh-h"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"riyadh-h"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"riyadh-h"},"content":"    public void saveContactsList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveContactsList(new ContactsList(), null));","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"riyadh-h":110}},{"path":"src/test/java/seedu/dictionote/storage/JsonSerializableContactsListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.util.JsonUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.testutil.TypicalContacts;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"public class JsonSerializableContactsListTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableContactsListTest\");","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"    private static final Path TYPICAL_CONTACT_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalContactsList.json\");","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"    private static final Path INVALID_CONTACT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidContactsList.json\");","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"    private static final Path DUPLICATE_CONTACT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateContactsList.json\");","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"    public void toModelType_typicalContactsFile_success() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"        JsonSerializableContactsList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CONTACT_FILE,","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"                JsonSerializableContactsList.class).get();","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"        ContactsList contactsListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"        ContactsList typicalPersonsContactsList \u003d TypicalContacts.getTypicalContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(contactsListFromFile, typicalPersonsContactsList);","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"    public void toModelType_invalidContactsFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"        JsonSerializableContactsList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CONTACT_FILE,","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"                JsonSerializableContactsList.class).get();","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"    public void toModelType_duplicateContacts_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"        JsonSerializableContactsList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CONTACT_FILE,","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"                JsonSerializableContactsList.class).get();","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableContactsList.MESSAGE_DUPLICATE_CONTACT,","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"riyadh-h":20,"XindiTian":4,"-":23}},{"path":"src/test/java/seedu/dictionote/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.GuiSettings;","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100, 0.25f, 0.3f, 0.3f, 0.5f,","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"            true, true, true, true, true, true, true));","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"riyadh-h"},"content":"        userPrefs.setContactsListFilePath(Paths.get(\"data\", \"contactslist.json\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2, 0.5f, 0.4f, 0.3f, 0.2f,","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"            true, true, true, true, true, true, true));","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5, 0.5f, 0.4f, 0.3f, 0.2f,","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"            true, true, true, true, true, true, true));","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"TeoHoeKeat":8,"riyadh-h":1,"XindiTian":5,"-":114}},{"path":"src/test/java/seedu/dictionote/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.storage;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"import static seedu.dictionote.testutil.TypicalContacts.getTypicalContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import static seedu.dictionote.testutil.TypicalNotes.getTypicalNoteBook;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.GuiSettings;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.NoteBook;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ReadOnlyContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"import seedu.dictionote.model.ReadOnlyNoteBook;","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.UserPrefs;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"        JsonContactsListStorage addressBookStorage \u003d new JsonContactsListStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"        JsonNoteBookStorage noteBookStorage \u003d new JsonNoteBookStorage(getTempFilePath(\"nb\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"        JsonDictionaryStorage dictionaryStorage \u003d new JsonDictionaryStorage(getTempFilePath(\"dc\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"        JsonDefinitionBookStorage definitionBookStorage \u003d new JsonDefinitionBookStorage(getTempFilePath(\"dbs\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, noteBookStorage,","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"                dictionaryStorage, definitionBookStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6,","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"            0.5, 0.5, 0.5, 0.5, false, true, false, true, false, true, true));","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"riyadh-h"},"content":"    public void contactsListReadSave() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"riyadh-h"},"content":"        ContactsList original \u003d getTypicalContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"riyadh-h"},"content":"        storageManager.saveContactsList(original);","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"        ReadOnlyContactsList retrieved \u003d storageManager.readContactsList().get();","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"        assertEquals(original, new ContactsList(retrieved));","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"    public void getContactsListFilePath() {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"riyadh-h"},"content":"        assertNotNull(storageManager.getContactsListFilePath());","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"godjuansan"},"content":"    public void noteBookReadSave() throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"godjuansan"},"content":"        /*","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"godjuansan"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"godjuansan"},"content":"         * {@link JsonNoteBookStorage} class.","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"godjuansan"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonNoteBookStorageTest} class.","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"godjuansan"},"content":"         */","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"godjuansan"},"content":"        NoteBook original \u003d getTypicalNoteBook();","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"godjuansan"},"content":"        storageManager.saveNoteBook(original);","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"godjuansan"},"content":"        ReadOnlyNoteBook retrieved \u003d storageManager.readNoteBook().get();","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"godjuansan"},"content":"        assertEquals(original, new NoteBook(retrieved));","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"godjuansan"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"godjuansan"},"content":"    public void getNoteBookFilePath() {","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"godjuansan"},"content":"        assertNotNull(storageManager.getNoteBookFilePath());","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TeoHoeKeat":2,"godjuansan":23,"riyadh-h":11,"XindiTian":8,"-":51}},{"path":"src/test/java/seedu/dictionote/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"XindiTian":1,"-":33}},{"path":"src/test/java/seedu/dictionote/testutil/ContactBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Address;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Email;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.util.SampleDataUtil;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":" * A utility class to help with building Contact objects.","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"public class ContactBuilder {","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"     * Creates a {@code ContactBuilder} with the default details.","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"    public ContactBuilder() {","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"     * Initializes the ContactBuilder with the data of {@code contactToCopy}.","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"    public ContactBuilder(Contact contactToCopy) {","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        name \u003d contactToCopy.getName();","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"        phone \u003d contactToCopy.getPhone();","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"        email \u003d contactToCopy.getEmail();","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"        address \u003d contactToCopy.getAddress();","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"        tags \u003d new HashSet\u003c\u003e(contactToCopy.getTags());","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Contact} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"    public ContactBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"     * Sets the {@code Address} of the {@code Contact} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"    public ContactBuilder withName(String name) {","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"riyadh-h"},"content":"     * Sets the {@code Address} of the {@code Contact} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"riyadh-h"},"content":"    public ContactBuilder withAddress(String address) {","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"riyadh-h"},"content":"     * Sets the {@code Phone} of the {@code Contact} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"riyadh-h"},"content":"    public ContactBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"riyadh-h"},"content":"     * Sets the {@code Email} of the {@code Contact} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"riyadh-h"},"content":"    public ContactBuilder withEmail(String email) {","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"riyadh-h"},"content":"    public Contact build() {","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"riyadh-h"},"content":"        return new Contact(name, phone, email, address, tags);","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jessen11":7,"riyadh-h":24,"XindiTian":3,"-":63}},{"path":"src/test/java/seedu/dictionote/testutil/ContactUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.AddContactCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":" * A utility class for Contact.","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"public class ContactUtil {","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"     * Returns an add command string for adding the {@code contact}.","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"    public static String getAddCommand(Contact contact) {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"        return AddContactCommand.COMMAND_WORD + \" \" + getContactDetails(contact);","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"     * Returns the part of command string for the given {@code contact}\u0027s details.","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"    public static String getContactDetails(Contact contact) {","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"        sb.append(PREFIX_NAME + contact.getName().fullName + \" \");","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"        sb.append(PREFIX_PHONE + contact.getPhone().value + \" \");","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"        sb.append(PREFIX_EMAIL + contact.getEmail().value + \" \");","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"        sb.append(PREFIX_ADDRESS + contact.getAddress().value + \" \");","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"        contact.getTags().stream().forEach(","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"riyadh-h"},"content":"     * Returns the part of command string for the given {@code EditContactDescriptor}\u0027s details.","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"    public static String getEditContactDescriptorDetails(EditContactDescriptor descriptor) {","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"riyadh-h":17,"XindiTian":7,"-":38}},{"path":"src/test/java/seedu/dictionote/testutil/ContactsListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"riyadh-h"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"riyadh-h"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"public class ContactsListBuilder {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"riyadh-h"},"content":"    private ContactsList contactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"riyadh-h"},"content":"    public ContactsListBuilder() {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"riyadh-h"},"content":"        contactsList \u003d new ContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"    public ContactsListBuilder(ContactsList contactsList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"        this.contactsList \u003d contactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"riyadh-h"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"    public ContactsListBuilder withContact(Contact contact) {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"        contactsList.addContact(contact);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"riyadh-h"},"content":"        return this;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"riyadh-h"},"content":"    public ContactsList build() {","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"        return contactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"riyadh-h":34}},{"path":"src/test/java/seedu/dictionote/testutil/EditContactDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Address;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Email;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"public class EditContactDescriptorBuilder {","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"riyadh-h"},"content":"    private EditContactDescriptor descriptor;","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":"    public EditContactDescriptorBuilder() {","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"riyadh-h"},"content":"        descriptor \u003d new EditContactDescriptor();","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"    public EditContactDescriptorBuilder(EditContactDescriptor descriptor) {","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"        this.descriptor \u003d new EditContactDescriptor(descriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"riyadh-h"},"content":"    public EditContactDescriptorBuilder(Contact contact) {","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"        descriptor \u003d new EditContactDescriptor();","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"        descriptor.setName(contact.getName());","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"        descriptor.setPhone(contact.getPhone());","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"        descriptor.setEmail(contact.getEmail());","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"        descriptor.setAddress(contact.getAddress());","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"        descriptor.setTags(contact.getTags());","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"    public EditContactDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"riyadh-h"},"content":"    public EditContactDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"riyadh-h"},"content":"    public EditContactDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"riyadh-h"},"content":"    public EditContactDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"riyadh-h"},"content":"    public EditContactDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"riyadh-h"},"content":"    public EditContactDescriptor build() {","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"riyadh-h":25,"XindiTian":2,"-":60}},{"path":"src/test/java/seedu/dictionote/testutil/EditNoteDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.EditNoteCommand.EditNoteDescriptor;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":" * A utility class to help with building EditNoteDescriptor objects.","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"public class EditNoteDescriptorBuilder {","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"    private EditNoteDescriptor descriptor;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"    public EditNoteDescriptorBuilder() {","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"        descriptor \u003d new EditNoteDescriptor();","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    public EditNoteDescriptorBuilder(EditNoteDescriptor descriptor) {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"        this.descriptor \u003d new EditNoteDescriptor(descriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"    public EditNoteDescriptorBuilder(Note note) {","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"        descriptor \u003d new EditNoteDescriptor();","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"        descriptor.setNote(note);","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"     * Sets the {@code Note} of the {@code EditNoteDescriptor} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"    public EditNoteDescriptorBuilder withNote(String note) {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"        descriptor.setNote(new Note(note));","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditNoteDescriptor}","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"     * that we are building.","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"    public EditNoteDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"    public EditNoteDescriptor build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"        return descriptor;","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jessen11":54,"godjuansan":1}},{"path":"src/test/java/seedu/dictionote/testutil/NoteBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_REPLACED_NOTE_CONTENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":" * A utility class to help with building Note objects.","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"public class NoteBuilder {","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"    public static final String DEFAULT_CONTENT \u003d VALID_REPLACED_NOTE_CONTENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"    private String note;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"     * Creates a {@code NoteBuilder} with the default details.","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    public NoteBuilder() {","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"        note \u003d DEFAULT_CONTENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"     * Initializes the NoteBuilder with the data of {@code noteToCopy}.","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"    public NoteBuilder(Note noteToCopy) {","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"        note \u003d noteToCopy.getNote();","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"     * Sets the {@code Note} of the {@code Note} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    public NoteBuilder withNote(String name) {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"        this.note \u003d name;","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"    public Note build() {","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"godjuansan"},"content":"        return new Note(note, new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"jessen11":42,"godjuansan":3}},{"path":"src/test/java/seedu/dictionote/testutil/NoteUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.PREFIX_CONTENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.logic.commands.AddNoteCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":" * A utility class for Note.","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"public class NoteUtil {","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"     * Returns an addNote command string for adding the {@code note}.","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"     * @param note Note to be added.","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"    public static String getAddNoteCommand(Note note) {","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"        return AddNoteCommand.COMMAND_WORD + \" \" + getNoteDetails(note);","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    public static String getNoteDetails(Note note) {","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"        sb.append(PREFIX_CONTENT + note.getNote());","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"jessen11":26}},{"path":"src/test/java/seedu/dictionote/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XindiTian":1,"-":71}},{"path":"src/test/java/seedu/dictionote/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Model;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"     * Returns the middle index of the contact in the {@code model}\u0027s contacts list.","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"        return Index.fromOneBased(model.getFilteredContactList().size() / 2);","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"     * Returns the last index of the contact in the {@code model}\u0027s contacts list.","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"riyadh-h"},"content":"        return Index.fromOneBased(model.getFilteredContactList().size());","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"     * Returns the contact in the {@code model}\u0027s contacts list at {@code index}.","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"riyadh-h"},"content":"    public static Contact getContact(Model model, Index index) {","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"        return model.getFilteredContactList().get(index.getZeroBased());","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"riyadh-h":8,"XindiTian":3,"-":43}},{"path":"src/test/java/seedu/dictionote/testutil/TypicalContacts.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.ContactsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"riyadh-h"},"content":"import seedu.dictionote.model.contact.Contact;","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"riyadh-h"},"content":" * A utility class containing a list of {@code Contact} objects to be used in tests.","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"riyadh-h"},"content":"public class TypicalContacts {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"riyadh-h"},"content":"    public static final Contact ALICE \u003d new ContactBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"riyadh-h"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@aexample.com\")","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"riyadh-h"},"content":"    public static final Contact BENSON \u003d new ContactBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"riyadh-h"},"content":"            .withEmail(\"johnd@bexample.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"riyadh-h"},"content":"    public static final Contact CARL \u003d new ContactBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"riyadh-h"},"content":"            .withEmail(\"heinz@aexample.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"riyadh-h"},"content":"    public static final Contact DANIEL \u003d new ContactBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"riyadh-h"},"content":"            .withEmail(\"cornelia@aexample.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"riyadh-h"},"content":"    public static final Contact ELLE \u003d new ContactBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"riyadh-h"},"content":"            .withEmail(\"werner@bexample.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"riyadh-h"},"content":"    public static final Contact FIONA \u003d new ContactBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"riyadh-h"},"content":"            .withEmail(\"lydia@bexample.com\").withAddress(\"little tokyo\").withTags(\"friends\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"riyadh-h"},"content":"    public static final Contact GEORGE \u003d new ContactBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"riyadh-h"},"content":"            .withEmail(\"anna@bexample.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"riyadh-h"},"content":"    public static final Contact HOON \u003d new ContactBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"riyadh-h"},"content":"            .withEmail(\"stefan@aexample.com\").withAddress(\"little india\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"riyadh-h"},"content":"    public static final Contact IDA \u003d new ContactBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"riyadh-h"},"content":"            .withEmail(\"hans@bexample.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"riyadh-h"},"content":"    public static final Contact AMY \u003d new ContactBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"riyadh-h"},"content":"    public static final Contact BOB \u003d new ContactBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"riyadh-h"},"content":"    private TypicalContacts() {} // prevents instantiation","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"riyadh-h"},"content":"    public static ContactsList getTypicalContactsList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"riyadh-h"},"content":"        ContactsList ab \u003d new ContactsList();","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"riyadh-h"},"content":"        for (Contact contact : getTypicalContacts()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"riyadh-h"},"content":"            ab.addContact(contact);","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"riyadh-h"},"content":"    public static List\u003cContact\u003e getTypicalContacts() {","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"riyadh-h":30,"XindiTian":11,"-":35}},{"path":"src/test/java/seedu/dictionote/testutil/TypicalContent.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.Dictionary;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Content;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"public class TypicalContent {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    public static final Content WEEK_1 \u003d new Content(\"Week 1\\n\", \"OOP\\n\", \"some content\\n\");","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    public static final Content WEEK_14 \u003d new Content(\"Week 14\\n\", \"Reading week!\\n\",","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"            \"revision\\n\");","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"    public static final Content WEEK_16 \u003d new Content(\"Week 16\\n\", \"Exams week\\n\",","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"            \"Congrats you\u0027re done with the module!\\n\");","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    private TypicalContent() {} // prevents instantiation","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"     * Returns an {@code NoteBook} with all the typical notes.","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"    public static Dictionary getTypicalDictionary() {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"        Dictionary dc \u003d new Dictionary();","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"        for (Content content : getTypicalContent()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"            dc.addContent(content);","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"        return dc;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"    public static List\u003cContent\u003e getTypicalContent() {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(WEEK_1, WEEK_14, WEEK_16));","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"XindiTian":38}},{"path":"src/test/java/seedu/dictionote/testutil/TypicalDefinition.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.DefinitionBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.model.dictionary.Definition;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"public class TypicalDefinition {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    public static final Definition OOP \u003d new Definition(\"OOP\\n\", \"Object Orientated Programming\\n\");","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    public static final Definition INTEGER \u003d new Definition(\"Integer\\n\", \"A data type, involving numbers.\\n\");","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    public static final Definition JAVA \u003d new Definition(\"Java\\n\", \"A programming language.\\n\");","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"    private TypicalDefinition() {} // prevents instantiation","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"     * Returns an {@code NoteBook} with all the typical notes.","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"    public static DefinitionBook getTypicalDefinitionBook() {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"        DefinitionBook dfb \u003d new DefinitionBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"        for (Definition definition : getTypicalDefinition()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"            dfb.addDefinition(definition);","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"        return dfb;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"    public static List\u003cDefinition\u003e getTypicalDefinition() {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(OOP, INTEGER, JAVA));","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"XindiTian":36}},{"path":"src/test/java/seedu/dictionote/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.commons.core.index.Index;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"riyadh-h"},"content":"    public static final Index INDEX_FIRST_CONTACT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"riyadh-h"},"content":"    public static final Index INDEX_SECOND_CONTACT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"riyadh-h"},"content":"    public static final Index INDEX_THIRD_CONTACT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"    public static final Index INDEX_FIRST_NOTE \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"    public static final Index INDEX_SECOND_NOTE \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"    public static final Index INDEX_THIRD_NOTE \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final Index INDEX_FIRST_CONTENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final Index INDEX_SECOND_CONTENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"TeoHoeKeat":2,"jessen11":4,"riyadh-h":3,"XindiTian":2,"-":7}},{"path":"src/test/java/seedu/dictionote/testutil/TypicalNoteContentConfig.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.ui.NoteContentConfig;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":" * A utility class containing a arrau of {@code UiActionOption} objects to be used in tests.","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"public class TypicalNoteContentConfig {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    public static NoteContentConfig getTypicalNoteContentConfigWitouthNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"        return new NoteContentConfigStubWithoutNote();","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    public static NoteContentConfig getTypicalNoteContentConfigWithNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"        return new NoteContentConfigStubWithNote();","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    public static NoteContentConfig getTypicalNoteContentConfigEditMode() {","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        return new NoteContentConfigStubEditMode();","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"     * A stub for note content config for failure test","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    private static class NoteContentConfigStubWithoutNote implements NoteContentConfig {","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        public boolean haveNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"            return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"        public void resetNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        public String getEditedContent() {","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"            return null;","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"        public Note getNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"            return null;","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        public boolean onEditMode() {","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"            return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"     * A stub for note content config for success test","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"    private static class NoteContentConfigStubWithNote implements NoteContentConfig {","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        public boolean haveNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"            return true;","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"        public void resetNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"        public String getEditedContent() {","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"            return null;","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"        public Note getNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"            return null;","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"        public boolean onEditMode() {","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"            return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"     * A stub for note content config for success test","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"    private static class NoteContentConfigStubEditMode implements NoteContentConfig {","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"        private Note note;","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"            this.note \u003d note;","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"        public boolean haveNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"            return true;","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"        public void resetNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"        public String getEditedContent() {","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"            return \"edited\";","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"        public Note getNote() {","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"            return note;","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"        public boolean onEditMode() {","lastModifiedDate":"2021-03-22"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"            return true;","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"TeoHoeKeat":129}},{"path":"src/test/java/seedu/dictionote/testutil/TypicalNotes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"godjuansan"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"godjuansan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"godjuansan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"godjuansan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"godjuansan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.NoteBook;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import seedu.dictionote.model.note.Note;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"godjuansan"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"godjuansan"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"godjuansan"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"godjuansan"},"content":"public class TypicalNotes {","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"godjuansan"},"content":"    public static final Note MI_AMOR \u003d new Note(\"My love, I have been waiting for you\", new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"godjuansan"},"content":"    public static final Note MI_VIDA \u003d new Note(\"Life has been great\", new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"godjuansan"},"content":"    public static final Note CS2103T_EXAM \u003d new Note(\"CS2103T Exam will be on Monday\", new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"godjuansan"},"content":"    private TypicalNotes() {} // prevents instantiation","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"godjuansan"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"godjuansan"},"content":"     * Returns an {@code NoteBook} with all the typical notes.","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"godjuansan"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"godjuansan"},"content":"    public static NoteBook getTypicalNoteBook() {","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"godjuansan"},"content":"        NoteBook nb \u003d new NoteBook();","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"godjuansan"},"content":"        for (Note note : getTypicalNotes()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"godjuansan"},"content":"            nb.addNote(note);","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"godjuansan"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"godjuansan"},"content":"        return nb;","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"godjuansan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"godjuansan"},"content":"    public static List\u003cNote\u003e getTypicalNotes() {","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"godjuansan"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MI_AMOR, MI_VIDA, CS2103T_EXAM));","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"godjuansan"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"godjuansan"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"jessen11":3,"godjuansan":34}},{"path":"src/test/java/seedu/dictionote/testutil/TypicalUiActions.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package seedu.dictionote.testutil;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_ALL_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_CONTACT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_DICTIONARY_CONTENT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_DICTIONARY_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_DICTIONARY_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_NOTE_CONTENT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_NOTE_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import static seedu.dictionote.logic.parser.CliSyntax.OPTION_NOTE_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import seedu.dictionote.logic.commands.enums.UiActionOption;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":" * A utility class containing a arrau of {@code UiActionOption} objects to be used in tests.","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"public class TypicalUiActions {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final int[] VALID_UI_POSITION \u003d {1, 2, 3, 4, 5, 6, 7, 8, 9};","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String VALID_OPTION_1 \u003d OPTION_ALL_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final UiActionOption EXCEPTION_OPTION_1 \u003d UiActionOption.ALL;","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String VALID_OPTION_2 \u003d OPTION_CONTACT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final UiActionOption EXCEPTION_OPTION_2 \u003d UiActionOption.CONTACT;","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String VALID_OPTION_3 \u003d OPTION_DICTIONARY_CONTENT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final UiActionOption EXCEPTION_OPTION_3 \u003d UiActionOption.DICTIONARY_CONTENT;","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String VALID_OPTION_4 \u003d OPTION_DICTIONARY_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final UiActionOption EXCEPTION_OPTION_4 \u003d UiActionOption.DICTIONARY_LIST;","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String VALID_OPTION_5 \u003d OPTION_DICTIONARY_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final UiActionOption EXCEPTION_OPTION_5 \u003d UiActionOption.DICTIONARY;","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String VALID_OPTION_6 \u003d OPTION_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final UiActionOption EXCEPTION_OPTION_6 \u003d UiActionOption.LIST;","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String VALID_OPTION_7 \u003d OPTION_NOTE_CONTENT_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final UiActionOption EXCEPTION_OPTION_7 \u003d UiActionOption.NOTE_CONTENT;","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String VALID_OPTION_8 \u003d OPTION_NOTE_LIST_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final UiActionOption EXCEPTION_OPTION_8 \u003d UiActionOption.NOTE_LIST;","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String VALID_OPTION_9 \u003d OPTION_NOTE_PANEL;","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final UiActionOption EXCEPTION_OPTION_9 \u003d UiActionOption.NOTE;","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final String[] VALID_UI_OPTIONS \u003d {","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        VALID_OPTION_1, VALID_OPTION_2, VALID_OPTION_3,","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        VALID_OPTION_4, VALID_OPTION_5, VALID_OPTION_6,","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        VALID_OPTION_7, VALID_OPTION_8, VALID_OPTION_9","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"    };","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"    public static final UiActionOption[] EXPECTED_UI_OPTION \u003d {","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        EXCEPTION_OPTION_1, EXCEPTION_OPTION_2, EXCEPTION_OPTION_3,","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        EXCEPTION_OPTION_4, EXCEPTION_OPTION_5, EXCEPTION_OPTION_6,","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"        EXCEPTION_OPTION_7, EXCEPTION_OPTION_8, EXCEPTION_OPTION_9","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"    };","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"TeoHoeKeat":62}},{"path":"src/test/java/seedu/dictionote/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"XindiTian":1,"-":34}},{"path":"src/test/java/seedu/dictionote/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"package seedu.dictionote.ui;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static seedu.dictionote.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"import seedu.dictionote.MainApp;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"XindiTian":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"\u003c?import seedu.dictionote.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"XindiTian":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"\u003cfx:root type\u003d\"seedu.dictionote.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"XindiTian":1,"-":5}}]
